{"version":3,"sources":["../src/index.ts","../node_modules/@rxdi/core/dist/helpers/sha256.js","../node_modules/@rxdi/core/dist/helpers/create-unique-hash.js","../node_modules/@rxdi/core/dist/container/error/MissingProvidedServiceTypeError.js","../node_modules/@rxdi/core/dist/container/Token.js","../node_modules/@rxdi/core/dist/container/error/ServiceNotFoundError.js","../node_modules/@rxdi/core/dist/services/constructor-watcher/constructor-watcher.js","../node_modules/@rxdi/core/dist/services/constructor-watcher/index.js","../node_modules/@rxdi/core/dist/container/ContainerInstance.js","../node_modules/@rxdi/core/dist/container/Container.js","../node_modules/@rxdi/core/dist/helpers/reflect.decorator.js","../node_modules/@rxdi/core/dist/decorators/service/Service.js","../node_modules/@rxdi/core/dist/container/types/hooks/on-before.js","../node_modules/@rxdi/core/dist/container/types/hooks/on-init.js","../node_modules/@rxdi/core/dist/container/types/hooks/index.js","../node_modules/@rxdi/core/dist/container/index.js","../node_modules/rxjs/node_modules/tslib/tslib.es6.js","../../../src/internal/util/isFunction.ts","../../src/internal/config.ts","../../../src/internal/util/hostReportError.ts","../../src/internal/Observer.ts","../../../src/internal/util/isArray.ts","../../../src/internal/util/isObject.ts","../../../src/internal/util/UnsubscriptionError.ts","../../src/internal/Subscription.ts","../../../src/internal/symbol/rxSubscriber.ts","../../src/internal/Subscriber.ts","../../../src/internal/util/canReportError.ts","../../../src/internal/util/toSubscriber.ts","../../../src/internal/symbol/observable.ts","../../../src/internal/util/identity.ts","../../../src/internal/util/pipe.ts","../../src/internal/Observable.ts","../../../src/internal/util/ObjectUnsubscribedError.ts","../../src/internal/SubjectSubscription.ts","../../src/internal/Subject.ts","../../../src/internal/operators/refCount.ts","../../../src/internal/observable/ConnectableObservable.ts","../../../src/internal/operators/groupBy.ts","../../src/internal/BehaviorSubject.ts","../../../src/internal/scheduler/Action.ts","../../../src/internal/scheduler/AsyncAction.ts","../../../src/internal/scheduler/QueueAction.ts","../../src/internal/Scheduler.ts","../../../src/internal/scheduler/AsyncScheduler.ts","../../../src/internal/scheduler/QueueScheduler.ts","../../../src/internal/scheduler/queue.ts","../../../src/internal/observable/empty.ts","../../../src/internal/util/isScheduler.ts","../../../src/internal/util/subscribeToArray.ts","../../../src/internal/scheduled/scheduleArray.ts","../../../src/internal/observable/fromArray.ts","../../../src/internal/observable/of.ts","../../../src/internal/observable/throwError.ts","../../src/internal/Notification.ts","../../../src/internal/operators/observeOn.ts","../../src/internal/ReplaySubject.ts","../../src/internal/AsyncSubject.ts","../../../src/internal/util/Immediate.ts","../../../src/internal/scheduler/AsapAction.ts","../../../src/internal/scheduler/AsapScheduler.ts","../../../src/internal/scheduler/asap.ts","../../../src/internal/scheduler/async.ts","../../../src/internal/scheduler/AnimationFrameAction.ts","../../../src/internal/scheduler/AnimationFrameScheduler.ts","../../../src/internal/scheduler/animationFrame.ts","../../../src/internal/scheduler/VirtualTimeScheduler.ts","../../../src/internal/util/noop.ts","../../../src/internal/util/isObservable.ts","../../../src/internal/util/ArgumentOutOfRangeError.ts","../../../src/internal/util/EmptyError.ts","../../../src/internal/util/TimeoutError.ts","../../../src/internal/operators/map.ts","../../../src/internal/observable/bindCallback.ts","../../../src/internal/observable/bindNodeCallback.ts","../../src/internal/OuterSubscriber.ts","../../src/internal/InnerSubscriber.ts","../../../src/internal/util/subscribeToPromise.ts","../../../src/internal/symbol/iterator.ts","../../../src/internal/util/subscribeToIterable.ts","../../../src/internal/util/subscribeToObservable.ts","../../../src/internal/util/isArrayLike.ts","../../../src/internal/util/isPromise.ts","../../../src/internal/util/subscribeTo.ts","../../../src/internal/util/subscribeToResult.ts","../../../src/internal/observable/combineLatest.ts","../../../src/internal/scheduled/scheduleObservable.ts","../../../src/internal/scheduled/schedulePromise.ts","../../../src/internal/scheduled/scheduleIterable.ts","../../../src/internal/util/isInteropObservable.ts","../../../src/internal/util/isIterable.ts","../../../src/internal/scheduled/scheduled.ts","../../../src/internal/observable/from.ts","../../src/internal/innerSubscribe.ts","../../../src/internal/operators/mergeMap.ts","../../../src/internal/operators/mergeAll.ts","../../../src/internal/operators/concatAll.ts","../../../src/internal/observable/concat.ts","../../../src/internal/observable/defer.ts","../../../src/internal/observable/forkJoin.ts","../../../src/internal/observable/fromEvent.ts","../../../src/internal/observable/fromEventPattern.ts","../../../src/internal/observable/generate.ts","../../../src/internal/observable/iif.ts","../../../src/internal/util/isNumeric.ts","../../../src/internal/observable/interval.ts","../../../src/internal/observable/merge.ts","../../../src/internal/observable/never.ts","../../../src/internal/observable/onErrorResumeNext.ts","../../../src/internal/observable/pairs.ts","../../../src/internal/util/not.ts","../../../src/internal/operators/filter.ts","../../../src/internal/observable/partition.ts","../../../src/internal/observable/race.ts","../../../src/internal/observable/range.ts","../../../src/internal/observable/timer.ts","../../../src/internal/observable/using.ts","../../../src/internal/observable/zip.ts","../../../src/internal/operators/audit.ts","../../../src/internal/operators/auditTime.ts","../../../src/internal/operators/buffer.ts","../../../src/internal/operators/bufferCount.ts","../../../src/internal/operators/bufferTime.ts","../../../src/internal/operators/bufferToggle.ts","../../../src/internal/operators/bufferWhen.ts","../../../src/internal/operators/catchError.ts","../../../src/internal/operators/combineAll.ts","../../../src/internal/operators/combineLatest.ts","../../../src/internal/operators/concat.ts","../../../src/internal/operators/concatMap.ts","../../../src/internal/operators/concatMapTo.ts","../../../src/internal/operators/count.ts","../../../src/internal/operators/debounce.ts","../../../src/internal/operators/debounceTime.ts","../../../src/internal/operators/defaultIfEmpty.ts","../../../src/internal/util/isDate.ts","../../../src/internal/operators/delay.ts","../../../src/internal/operators/delayWhen.ts","../../../src/internal/operators/dematerialize.ts","../../../src/internal/operators/distinct.ts","../../../src/internal/operators/distinctUntilChanged.ts","../../../src/internal/operators/distinctUntilKeyChanged.ts","../../../src/internal/operators/throwIfEmpty.ts","../../../src/internal/operators/take.ts","../../../src/internal/operators/elementAt.ts","../../../src/internal/operators/endWith.ts","../../../src/internal/operators/every.ts","../../../src/internal/operators/exhaust.ts","../../../src/internal/operators/exhaustMap.ts","../../../src/internal/operators/expand.ts","../../../src/internal/operators/finalize.ts","../../../src/internal/operators/find.ts","../../../src/internal/operators/findIndex.ts","../../../src/internal/operators/first.ts","../../../src/internal/operators/ignoreElements.ts","../../../src/internal/operators/isEmpty.ts","../../../src/internal/operators/takeLast.ts","../../../src/internal/operators/last.ts","../../../src/internal/operators/mapTo.ts","../../../src/internal/operators/materialize.ts","../../../src/internal/operators/scan.ts","../../../src/internal/operators/reduce.ts","../../../src/internal/operators/max.ts","../../../src/internal/operators/merge.ts","../../../src/internal/operators/mergeMapTo.ts","../../../src/internal/operators/mergeScan.ts","../../../src/internal/operators/min.ts","../../../src/internal/operators/multicast.ts","../../../src/internal/operators/onErrorResumeNext.ts","../../../src/internal/operators/pairwise.ts","../../../src/internal/operators/partition.ts","../../../src/internal/operators/pluck.ts","../../../src/internal/operators/publish.ts","../../../src/internal/operators/publishBehavior.ts","../../../src/internal/operators/publishLast.ts","../../../src/internal/operators/publishReplay.ts","../../../src/internal/operators/race.ts","../../../src/internal/operators/repeat.ts","../../../src/internal/operators/repeatWhen.ts","../../../src/internal/operators/retry.ts","../../../src/internal/operators/retryWhen.ts","../../../src/internal/operators/sample.ts","../../../src/internal/operators/sampleTime.ts","../../../src/internal/operators/sequenceEqual.ts","../../../src/internal/operators/share.ts","../../../src/internal/operators/shareReplay.ts","../../../src/internal/operators/single.ts","../../../src/internal/operators/skip.ts","../../../src/internal/operators/skipLast.ts","../../../src/internal/operators/skipUntil.ts","../../../src/internal/operators/skipWhile.ts","../../../src/internal/operators/startWith.ts","../../../src/internal/observable/SubscribeOnObservable.ts","../../../src/internal/operators/subscribeOn.ts","../../../src/internal/operators/switchMap.ts","../../../src/internal/operators/switchAll.ts","../../../src/internal/operators/switchMapTo.ts","../../../src/internal/operators/takeUntil.ts","../../../src/internal/operators/takeWhile.ts","../../../src/internal/operators/tap.ts","../../../src/internal/operators/throttle.ts","../../../src/internal/operators/throttleTime.ts","../../../src/internal/operators/timeInterval.ts","../../../src/internal/operators/timeoutWith.ts","../../../src/internal/operators/timeout.ts","../../../src/internal/operators/timestamp.ts","../../../src/internal/operators/toArray.ts","../../../src/internal/operators/window.ts","../../../src/internal/operators/windowCount.ts","../../../src/internal/operators/windowTime.ts","../../../src/internal/operators/windowToggle.ts","../../../src/internal/operators/windowWhen.ts","../../../src/internal/operators/withLatestFrom.ts","../../../src/internal/operators/zip.ts","../../../src/internal/operators/zipAll.ts","../../src/operators/index.ts","../node_modules/@rxdi/core/dist/services/cache/cache-layer.js","../node_modules/@rxdi/core/dist/helpers/events.js","../node_modules/@rxdi/core/dist/services/config/config.model.js","../node_modules/@rxdi/core/dist/services/config/config.service.js","../node_modules/@rxdi/core/dist/services/config/index.js","../node_modules/@rxdi/core/dist/decorators/injector/injector.decorator.js","../node_modules/@rxdi/core/dist/services/bootstrap-logger/bootstrap-logger.js","../node_modules/@rxdi/core/dist/services/bootstrap-logger/index.js","../node_modules/@rxdi/core/dist/services/cache/cache-layer.service.js","../node_modules/@rxdi/core/dist/services/cache/cache-layer.interfaces.js","../node_modules/@rxdi/core/dist/services/cache/index.js","../node_modules/@rxdi/core/dist/services/plugin/plugin.service.js","../../../../../../.nvm/versions/node/v14.19.1/lib/node_modules/parcel/node_modules/process/browser.js","../node_modules/@rxdi/core/dist/services/exit-handler/exit-handler.service.js","../node_modules/@rxdi/core/dist/services/exit-handler/index.js","../node_modules/@rxdi/core/dist/services/lazy-factory/lazy-factory.service.js","../node_modules/@rxdi/core/dist/services/module/helpers/validators.js","../node_modules/@rxdi/core/dist/services/controllers/controllers.service.js","../node_modules/@rxdi/core/dist/services/effect/effect.service.js","../node_modules/@rxdi/core/dist/services/components/components.service.js","../node_modules/@rxdi/core/dist/services/bootstraps/bootstraps.service.js","../node_modules/@rxdi/core/dist/services/services/services.service.js","../node_modules/@rxdi/core/dist/services/module/module.service.js","../node_modules/@rxdi/core/dist/services/module/index.js","../node_modules/@rxdi/core/dist/services/resolver/resolver.service.js","../node_modules/@rxdi/core/dist/services/resolver/index.js","../node_modules/@rxdi/core/dist/services/after-starter/after-starter.service.js","../node_modules/@rxdi/core/dist/helpers/log.js","../node_modules/@rxdi/core/dist/services/bootstrap/bootstrap.service.js","../node_modules/@rxdi/core/dist/helpers/exit-handler.js","../node_modules/@rxdi/core/dist/helpers/bootstrap.js","../node_modules/@rxdi/core/dist/helpers/index.js","../node_modules/@rxdi/core/dist/services/metadata/metadata.service.js","../node_modules/@rxdi/core/dist/services/metadata/index.js","../node_modules/@rxdi/core/dist/services/compression/compression.service.js","../node_modules/@rxdi/core/dist/services/compression/index.js","../node_modules/@rxdi/core/dist/services/effect/index.js","../node_modules/@rxdi/core/dist/services/controllers/index.js","../node_modules/@rxdi/core/dist/services/components/index.js","../node_modules/@rxdi/core/dist/services/bootstraps/index.js","../node_modules/@rxdi/core/dist/services/services/index.js","../node_modules/@rxdi/core/dist/services/plugin-manager/plugin-manager.js","../node_modules/@rxdi/core/dist/services/index.js","../node_modules/@rxdi/core/dist/helpers/generic-constructor.js","../node_modules/@rxdi/core/dist/decorators/module/module.decorator.js","../node_modules/@rxdi/core/dist/decorators/module/module.interfaces.js","../node_modules/@rxdi/core/dist/decorators/module/index.js","../node_modules/@rxdi/core/dist/decorators/injector/index.js","../node_modules/@rxdi/core/dist/decorators/inject-soft/inject-soft.decorator.js","../node_modules/@rxdi/core/dist/decorators/inject-soft/index.js","../node_modules/@rxdi/core/dist/container/error/CannotInjectError.js","../node_modules/@rxdi/core/dist/helpers/get-identifier.js","../node_modules/@rxdi/core/dist/decorators/inject/Inject.js","../node_modules/@rxdi/core/dist/decorators/controller/controller.decorator.js","../node_modules/@rxdi/core/dist/decorators/controller/index.js","../node_modules/@rxdi/core/dist/decorators/effect/effect.decorator.js","../node_modules/@rxdi/core/dist/decorators/effect/index.js","../node_modules/@rxdi/core/dist/decorators/plugin/Plugin.js","../node_modules/@rxdi/core/dist/decorators/component/component.decorator.js","../node_modules/@rxdi/core/dist/decorators/component/index.js","../node_modules/@rxdi/core/dist/decorators/inject-many/InjectMany.js","../node_modules/@rxdi/core/dist/decorators/index.js","../node_modules/@rxdi/core/dist/index.js","app/core/api/providers.ts","app/core/api/api.service.ts","app/core/core.module.ts","src/css-tag.ts","src/reactive-element.ts","src/lit-html.ts","src/lit-element.ts","src/is-server.ts","../node_modules/@rxdi/lit-html/dist/decorators/component.decorator.js","../node_modules/@rxdi/lit-html/dist/decorators/hooks/on-destroy.js","../node_modules/@rxdi/lit-html/dist/decorators/hooks/on-init.js","../node_modules/@rxdi/lit-html/dist/decorators/hooks/on-update.js","../node_modules/@rxdi/lit-html/dist/decorators/hooks/on-update-first.js","../node_modules/@rxdi/lit-html/dist/decorators/hooks/index.js","../node_modules/@rxdi/lit-html/dist/decorators/index.js","src/directive.ts","src/directive-helpers.ts","src/async-directive.ts","../node_modules/@rxdi/lit-html/dist/async.js","src/experimental-hydrate.ts","src/experimental-hydrate-support.ts","../lit-element/src/polyfill-support.ts","../reactive-element/src/polyfill-support.ts","../lit-html/src/polyfill-support.ts","../src/decorators/base.ts","../src/decorators/custom-element.ts","../src/decorators/property.ts","../src/decorators/state.ts","../src/decorators/event-options.ts","../src/decorators/query.ts","../src/decorators/query-all.ts","../src/decorators/query-async.ts","../src/decorators/query-assigned-elements.ts","../src/decorators/query-assigned-nodes.ts","src/index.ts","../src/directives/class-map.ts","../src/directives/private-async-helpers.ts","../src/directives/async-replace.ts","../src/directives/async-append.ts","../src/directives/cache.ts","../src/directives/guard.ts","../src/directives/if-defined.ts","../src/directives/live.ts","../src/directives/ref.ts","../src/directives/repeat.ts","../src/directives/style-map.ts","../src/directives/template-content.ts","../src/directives/unsafe-html.ts","../src/directives/unsafe-svg.ts","../src/directives/until.ts","../src/directives/choose.ts","../src/directives/join.ts","../src/directives/keyed.ts","../src/directives/map.ts","../src/directives/range.ts","../src/directives/when.ts","../node_modules/@rxdi/lit-html/dist/index.js","../node_modules/credit-card-type/dist/lib/card-types.js","../node_modules/credit-card-type/dist/lib/clone.js","../node_modules/credit-card-type/dist/lib/matches.js","../node_modules/credit-card-type/dist/lib/add-matching-cards-to-results.js","../node_modules/credit-card-type/dist/lib/is-valid-input-type.js","../node_modules/credit-card-type/dist/lib/find-best-match.js","../node_modules/credit-card-type/dist/index.js","../node_modules/@rxdi/credit-card-form/dist/credit-card/images/american-express.js","../node_modules/@rxdi/credit-card-form/dist/credit-card/images/diners.js","../node_modules/@rxdi/credit-card-form/dist/credit-card/images/discover.js","../node_modules/@rxdi/credit-card-form/dist/credit-card/images/jcb.js","../node_modules/@rxdi/credit-card-form/dist/credit-card/images/maestrocard.js","../node_modules/@rxdi/credit-card-form/dist/credit-card/images/mastercard.js","../node_modules/@rxdi/credit-card-form/dist/credit-card/images/union-pay.js","../node_modules/@rxdi/credit-card-form/dist/credit-card/images/visa.js","../node_modules/@rxdi/credit-card-form/dist/credit-card/images/index.js","../node_modules/@rxdi/credit-card-form/dist/helpers/index.js","../node_modules/@rxdi/credit-card-form/dist/credit-card/credit-card-component.css.js","../node_modules/@rxdi/credit-card-form/dist/credit-card/credit-card-component.js","../node_modules/@rxdi/credit-card-form/dist/credit-card/index.js","../node_modules/@rxdi/credit-card-form/dist/form/error-template.js","../node_modules/@rxdi/forms/dist/form.tokens.js","../node_modules/@rxdi/forms/dist/rx-fake.js","../node_modules/@rxdi/forms/dist/form.group.js","../node_modules/@rxdi/forms/dist/form.decorator.js","../node_modules/@rxdi/forms/dist/index.js","../../../src/styles/form/input.ts","../node_modules/@rxdi/credit-card-form/dist/validators/index.js","../node_modules/@rxdi/credit-card-form/dist/form/form.component.js","../node_modules/@rxdi/credit-card-form/dist/form/model.js","../node_modules/@rxdi/credit-card-form/dist/form/index.js","../node_modules/@rxdi/credit-card-form/dist/index.js","../../src/helpers/str-enum.ts","../../src/settings/index.ts","../../../../src/styles/chunks/palettes/default.ts","../../../../src/styles/chunks/palettes/primary.ts","../../../../src/styles/chunks/palettes/danger.ts","../../../../src/styles/chunks/palettes/secondary.ts","../../../src/services/dynamic-css/dynamic-css.ts","../../../src/services/responsive/responsive.service.ts","../../src/services/index.ts","../../../../src/styles/chunks/palettes/warning.ts","../../../../src/styles/chunks/palettes/root.ts","../../src/reactive-element/index.ts","../src/reactive-ui.module.ts","../../../src/styles/chunks/flex.ts","../../../src/styles/chunks/pointer.ts","../../../src/styles/chunks/center.ts","../../../src/styles/chunks/spacer.ts","../../src/styles/main.ts","../../src/styles/transitions.ts","../../src/styles/index.ts","../node_modules/tslib/tslib.es6.js","../node_modules/graphql/version.mjs","../node_modules/graphql/jsutils/isPromise.mjs","../node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs","../node_modules/graphql/jsutils/inspect.mjs","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/jsutils/defineToJSON.mjs","../node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/graphql/language/location.mjs","../node_modules/graphql/language/printLocation.mjs","../node_modules/graphql/error/GraphQLError.mjs","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/language/kinds.mjs","../node_modules/graphql/jsutils/defineToStringTag.mjs","../node_modules/graphql/language/source.mjs","../node_modules/graphql/language/blockString.js","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/parser.mjs","../node_modules/graphql/language/visitor.mjs","../node_modules/graphql/polyfills/find.mjs","../node_modules/graphql/polyfills/flatMap.mjs","../node_modules/graphql/polyfills/objectValues.mjs","../node_modules/graphql/polyfills/objectEntries.mjs","../node_modules/graphql/utilities/assertValidName.mjs","../node_modules/graphql/jsutils/keyMap.mjs","../node_modules/graphql/jsutils/mapValue.mjs","../node_modules/graphql/jsutils/toObjMap.mjs","../node_modules/graphql/jsutils/keyValMap.mjs","../node_modules/graphql/jsutils/instanceOf.mjs","../node_modules/graphql/jsutils/identityFunc.mjs","../node_modules/graphql/jsutils/invariant.mjs","../node_modules/graphql/jsutils/isInvalid.mjs","../node_modules/graphql/utilities/valueFromASTUntyped.mjs","../node_modules/graphql/type/definition.mjs","../node_modules/graphql/utilities/typeComparators.mjs","../node_modules/graphql/polyfills/isFinite.mjs","../node_modules/graphql/polyfills/isInteger.mjs","../node_modules/graphql/type/scalars.mjs","../node_modules/graphql/type/directives.mjs","../node_modules/graphql/language/printer.mjs","../node_modules/iterall/index.mjs","../node_modules/graphql/jsutils/isNullish.mjs","../node_modules/graphql/utilities/astFromValue.mjs","../node_modules/graphql/type/introspection.mjs","../node_modules/graphql/type/schema.mjs","../node_modules/graphql/type/validate.mjs","../node_modules/graphql/utilities/typeFromAST.mjs","../node_modules/graphql/utilities/TypeInfo.mjs","../node_modules/graphql/language/predicates.mjs","../node_modules/graphql/validation/rules/ExecutableDefinitions.mjs","../node_modules/graphql/validation/rules/UniqueOperationNames.mjs","../node_modules/graphql/validation/rules/LoneAnonymousOperation.mjs","../node_modules/graphql/validation/rules/SingleFieldSubscriptions.mjs","../node_modules/graphql/jsutils/didYouMean.mjs","../node_modules/graphql/jsutils/suggestionList.mjs","../node_modules/graphql/validation/rules/KnownTypeNames.mjs","../node_modules/graphql/validation/rules/FragmentsOnCompositeTypes.mjs","../node_modules/graphql/validation/rules/VariablesAreInputTypes.mjs","../node_modules/graphql/validation/rules/ScalarLeafs.mjs","../node_modules/graphql/validation/rules/FieldsOnCorrectType.mjs","../node_modules/graphql/validation/rules/UniqueFragmentNames.mjs","../node_modules/graphql/validation/rules/KnownFragmentNames.mjs","../node_modules/graphql/validation/rules/NoUnusedFragments.mjs","../node_modules/graphql/validation/rules/PossibleFragmentSpreads.mjs","../node_modules/graphql/validation/rules/NoFragmentCycles.mjs","../node_modules/graphql/validation/rules/UniqueVariableNames.mjs","../node_modules/graphql/validation/rules/NoUndefinedVariables.mjs","../node_modules/graphql/validation/rules/NoUnusedVariables.mjs","../node_modules/graphql/validation/rules/KnownDirectives.mjs","../node_modules/graphql/validation/rules/UniqueDirectivesPerLocation.mjs","../node_modules/graphql/validation/rules/KnownArgumentNames.mjs","../node_modules/graphql/validation/rules/UniqueArgumentNames.mjs","../node_modules/graphql/validation/rules/ValuesOfCorrectType.mjs","../node_modules/graphql/validation/rules/ProvidedRequiredArguments.mjs","../node_modules/graphql/validation/rules/VariablesInAllowedPosition.mjs","../node_modules/graphql/validation/rules/OverlappingFieldsCanBeMerged.mjs","../node_modules/graphql/validation/rules/UniqueInputFieldNames.mjs","../node_modules/graphql/validation/rules/LoneSchemaDefinition.mjs","../node_modules/graphql/validation/rules/UniqueOperationTypes.mjs","../node_modules/graphql/validation/rules/UniqueTypeNames.mjs","../node_modules/graphql/validation/rules/UniqueEnumValueNames.mjs","../node_modules/graphql/validation/rules/UniqueFieldDefinitionNames.mjs","../node_modules/graphql/validation/rules/UniqueDirectiveNames.mjs","../node_modules/graphql/validation/rules/PossibleTypeExtensions.mjs","../node_modules/graphql/validation/specifiedRules.mjs","../node_modules/graphql/validation/ValidationContext.mjs","../node_modules/graphql/validation/validate.mjs","../node_modules/graphql/jsutils/memoize3.mjs","../node_modules/graphql/jsutils/promiseReduce.mjs","../node_modules/graphql/jsutils/promiseForObject.mjs","../node_modules/graphql/jsutils/Path.mjs","../node_modules/graphql/error/locatedError.mjs","../node_modules/graphql/utilities/getOperationRootType.mjs","../node_modules/graphql/jsutils/printPathArray.mjs","../node_modules/graphql/utilities/valueFromAST.mjs","../node_modules/graphql/utilities/coerceInputValue.mjs","../node_modules/graphql/execution/values.mjs","../node_modules/graphql/execution/execute.mjs","../node_modules/graphql/graphql.mjs","../node_modules/graphql/type/index.mjs","../node_modules/graphql/language/index.mjs","../node_modules/graphql/execution/index.mjs","../node_modules/graphql/subscription/mapAsyncIterator.mjs","../node_modules/graphql/subscription/subscribe.mjs","../node_modules/graphql/subscription/index.mjs","../node_modules/graphql/validation/index.mjs","../node_modules/graphql/error/formatError.mjs","../node_modules/graphql/error/index.mjs","../node_modules/graphql/utilities/introspectionQuery.mjs","../node_modules/graphql/utilities/getOperationAST.mjs","../node_modules/graphql/utilities/introspectionFromSchema.mjs","../node_modules/graphql/utilities/buildClientSchema.mjs","../node_modules/graphql/language/blockString.mjs","../node_modules/graphql/utilities/buildASTSchema.mjs","../node_modules/graphql/utilities/extendSchema.mjs","../node_modules/graphql/utilities/lexicographicSortSchema.mjs","../node_modules/graphql/utilities/schemaPrinter.mjs","../node_modules/graphql/utilities/coerceValue.mjs","../node_modules/graphql/utilities/isValidJSValue.mjs","../node_modules/graphql/utilities/isValidLiteralValue.mjs","../node_modules/graphql/utilities/concatAST.mjs","../node_modules/graphql/utilities/separateOperations.mjs","../node_modules/graphql/utilities/stripIgnoredCharacters.mjs","../node_modules/graphql/utilities/findBreakingChanges.mjs","../node_modules/graphql/utilities/findDeprecatedUsages.mjs","../node_modules/graphql/utilities/index.mjs","../node_modules/graphql/index.mjs","../src/invariant.ts","../../../src/utilities/globals/maybe.ts","../../../src/utilities/globals/global.ts","../../../src/utilities/globals/DEV.ts","../node_modules/ts-invariant/process/index.js","../../../src/utilities/globals/fix-graphql.ts","../../../src/utilities/globals/index.ts","../src/trie.ts","../src/context.ts","../src/slot.ts","../src/cache.ts","../src/helpers.ts","../src/entry.ts","../src/dep.ts","../../../src/utilities/graphql/directives.ts","../../../src/utilities/graphql/fragments.ts","../../../src/utilities/common/objects.ts","../../../src/utilities/graphql/storeUtils.ts","../../../src/utilities/graphql/getFromAST.ts","../../../src/utilities/common/filterInPlace.ts","../../../src/utilities/graphql/transform.ts","../../../src/utilities/common/mergeDeep.ts","../../../src/utilities/policies/pagination.ts","../node_modules/zen-observable-ts/module.js","../node_modules/symbol-observable/es/ponyfill.js","../node_modules/symbol-observable/es/index.js","../../../src/utilities/observables/Observable.ts","../../../src/utilities/common/cloneDeep.ts","../../../src/utilities/common/maybeDeepFreeze.ts","../../../src/utilities/observables/iteration.ts","../../../src/utilities/observables/asyncMap.ts","../../../src/utilities/common/canUse.ts","../../../src/utilities/observables/subclassing.ts","../../../src/utilities/observables/Concast.ts","../../../src/utilities/common/arrays.ts","../../../src/utilities/common/incrementalResult.ts","../../../src/utilities/common/errorHandling.ts","../../../src/utilities/common/compact.ts","../../../src/utilities/common/makeUniqueId.ts","../../../src/utilities/common/stringifyForDisplay.ts","../../../src/utilities/common/mergeOptions.ts","../../src/utilities/index.ts","../../../src/cache/core/cache.ts","../../../../src/cache/core/types/Cache.ts","../../../../src/cache/core/types/common.ts","../src/equality.ts","../../../src/cache/inmemory/helpers.ts","../../../src/cache/inmemory/entityStore.ts","../../../src/cache/inmemory/object-canon.ts","../../../src/cache/inmemory/readFromStore.ts","../../../src/cache/inmemory/reactiveVars.ts","../../../src/cache/inmemory/key-extractor.ts","../../../src/cache/inmemory/policies.ts","../../../src/cache/inmemory/writeToStore.ts","../../../src/cache/inmemory/inMemoryCache.ts","../../../src/cache/inmemory/fragmentRegistry.ts","../../../src/cache/inmemory/types.ts","../../src/cache/index.ts","../node_modules/@rxdi/graphql-client/dist/graphql.injection.js","../../../src/link/utils/fromError.ts","../../../src/link/utils/toPromise.ts","../../../src/link/utils/fromPromise.ts","../../../src/link/utils/throwServerError.ts","../../../src/link/utils/validateOperation.ts","../../../src/link/utils/createOperation.ts","../../../src/link/utils/transformOperation.ts","../../../src/link/utils/index.ts","../../../src/link/core/ApolloLink.ts","../../../src/link/core/empty.ts","../../../src/link/core/from.ts","../../../src/link/core/split.ts","../../../src/link/core/concat.ts","../../../src/link/core/execute.ts","../../../src/link/core/index.ts","../src/version.ts","../../../src/utilities/common/responseIterator.ts","../../../../src/link/http/iterators/async.ts","../../../../src/link/http/iterators/nodeStream.ts","../../../../src/link/http/iterators/promise.ts","../../../../src/link/http/iterators/reader.ts","../../../src/link/http/responseIterator.ts","../../../src/link/http/parseAndCheckHttpResponse.ts","../../../src/link/http/serializeFetchParameter.ts","../../../src/link/http/selectHttpOptionsAndBody.ts","../../../src/link/http/checkFetcher.ts","../../../src/link/http/createSignalIfSupported.ts","../../../src/link/http/selectURI.ts","../../../src/link/http/rewriteURIForGET.ts","../../../src/link/http/createHttpLink.ts","../../../src/link/http/HttpLink.ts","../../../src/link/http/index.ts","../../src/errors/index.ts","../../src/core/networkStatus.ts","../../src/core/ObservableQuery.ts","../../src/core/LocalState.ts","../../src/core/QueryInfo.ts","../../src/core/QueryManager.ts","../../src/core/ApolloClient.ts","../../src/core/types.ts","../../src/core/index.ts","../node_modules/backo2/index.js","../node_modules/eventemitter3/index.js","../../src/utils/is-string.ts","../../src/utils/is-object.ts","../node_modules/graphql/language/printer.js","../node_modules/graphql/utilities/getOperationAST.js","../node_modules/subscriptions-transport-ws/node_modules/symbol-observable/es/ponyfill.js","../node_modules/subscriptions-transport-ws/node_modules/symbol-observable/es/index.js","../src/protocol.ts","../src/defaults.ts","../src/message-types.ts","../src/client.ts","../../../src/link/ws/index.ts","../../../src/link/context/index.ts","../node_modules/@rxdi/graphql-client/dist/graphq.helpers.js","../node_modules/@rxdi/graphql-client/dist/index.js","../../src/graph/base.service.ts","../../src/graph/tokens.ts","../../src/graph/fetch.component.ts","../../src/graph/render.component.ts","../node_modules/shades/lib/bundle.es.js","../../src/graph/monad.component.ts","../../src/graph/lens.component.ts","../../src/graph/options.component.ts","../../src/graph/state.component.ts","../../src/graph/style.component.ts","../../src/graph/graph.component.ts","../../src/component/index.ts","../../src/button/button.component.ts","../../src/button/index.ts","app/shared/sprite/sprite.component.ts","app/shared/sprite/index.ts","../src/renderer.ts","../src/attribute.ts","../../src/helpers/index.ts","../src/custom-registry.ts","../../src/decorators/index.ts","../src/media-attribute.ts","../../src/angular/if.ts","../../src/angular/registry.ts","../../src/angular/index.ts","../../src/layout/flex.ts","../../src/layout/flex-align.ts","../../src/layout/flex-fill.ts","../../src/layout/flex-offset.ts","../../src/layout/flex-order.ts","../../src/layout/layout.ts","../../src/layout/layout-align.ts","../../src/layout/layout-gap.ts","../../src/layout/registry.ts","../../src/layout/index.ts","../../src/animation/animate.css.ts","../../src/animation/animation.ts","../../src/animation/index.ts","app/app.component.ts","app/app.module.ts","main.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","adopt","done","then","__generator","body","_","f","y","g","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","__createBinding","o","m","k","k2","undefined","__exportStar","exports","__values","__read","ar","error","__spread","concat","__spreadArrays","il","a","j","jl","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__esModule","default","__importDefault","__classPrivateFieldGet","receiver","privateMap","has","get","__classPrivateFieldSet","set","ConfigModel","InitOptionsConfig","ExperimentalFeatures","PrivateCryptoModel","LoggerConfig","logging","hashes","date","exitHandler","init","initOptions","experimental","logger","cachedSetTimeout","cachedClearTimeout","process","module","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","global","window","supportsAdoptingStyleSheets","ShadowRoot","ShadyCSS","nativeShadow","Document","CSSStyleSheet","constructionToken","cssTagCache","WeakMap","CSSResult","cssText","strings","safeToken","this","_strings","styleSheet","_styleSheet","cacheable","replaceSync","toString","unsafeCSS","String","css","values","reduce","acc","idx","adoptStyles","renderRoot","styles","adoptedStyleSheets","map","forEach","style","document","createElement","nonce","setAttribute","textContent","appendChild","getCompatibleStyle","sheet","rule","cssRules","ReactiveElement","trustedTypes","emptyStringForBooleanAttribute","emptyScript","polyfillSupport","reactiveElementPolyfillSupport","defaultConverter","toAttribute","type","Boolean","JSON","stringify","fromAttribute","fromValue","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","HTMLElement","__instanceProperties","Map","isUpdatePending","hasUpdated","__reflectingProperty","_initialize","static","initializer","finalize","_a","_initializers","observedAttributes","attributes","elementProperties","attr","__attributeNameForProperty","__attributeToPropertyMap","options","state","noAccessor","descriptor","getPropertyDescriptor","oldValue","requestUpdate","configurable","enumerable","superCtor","getPrototypeOf","props","properties","propKeys","getOwnPropertyNames","createProperty","elementStyles","finalizeStyles","isArray","Set","flat","Infinity","reverse","unshift","toLowerCase","__updatePromise","res","enableUpdating","_$changedProperties","__saveInstanceProperties","addController","controller","__controllers","isConnected","_b","hostConnected","removeController","splice","_v","createRenderRoot","shadowRoot","attachShadow","shadowRootOptions","connectedCallback","_requestedUpdate","disconnectedCallback","hostDisconnected","attributeChangedCallback","_old","_$attributeToProperty","__propertyToAttribute","attrValue","removeAttribute","ctor","propName","getPropertyOptions","shouldRequestUpdate","__reflectingProperties","__enqueueUpdate","async","scheduleUpdate","performUpdate","shouldUpdate","changedProperties","willUpdate","hostUpdate","update","__markUpdated","_$didUpdate","_changedProperties","hostUpdated","firstUpdated","updated","updateComplete","getUpdateComplete","mode","_d","reactiveElementVersions","policy","createPolicy","createHTML","Math","random","slice","markerMatch","nodeMarker","createMarker","createComment","isPrimitive","isIterable","textEndRegex","commentEndRegex","comment2EndRegex","tagEndRegex","RegExp","singleQuoteAttrEndRegex","doubleQuoteAttrEndRegex","rawTextElement","tag","_$litType$","html","svg","noChange","for","nothing","templateCache","walker","createTreeWalker","getTemplateHtml","l","attrNames","rawTextEndRegex","regex","attrName","match","attrNameEndIndex","lastIndex","exec","test","end","startsWith","htmlResult","Template","node","parts","nodeIndex","attrNameIndex","partCount","el","currentNode","content","svgElement","firstChild","remove","append","childNodes","nextNode","nodeType","hasAttributes","attrsToRemove","getAttributeNames","endsWith","realName","statics","getAttribute","split","index","PropertyPart","BooleanAttributePart","EventPart","AttributePart","tagName","data","_options","innerHTML","resolveDirective","part","parent","attributeIndex","currentDirective","__directives","__directive","nextDirectiveConstructor","_$initialize","_c","_$resolve","TemplateInstance","template","_parts","_$disconnectableChildren","_$template","_$parent","parentNode","_$isConnected","_clone","fragment","creationScope","importNode","partIndex","templatePart","ChildPart","nextSibling","ElementPart","_update","_$setValue","startNode","endNode","_$committedValue","_$startNode","_$endNode","__isConnected","directiveParent","_$clear","_commitText","_commitTemplateResult","_commitNode","_commitIterable","_insert","ref","insertBefore","createTextNode","_$getTemplate","h","instance","itemParts","itemPart","item","start","from","_$notifyConnectionChanged","setConnected","element","fill","valueIndex","noCommit","change","_commitValue","newListener","oldListener","shouldRemoveListener","capture","passive","shouldAddListener","removeEventListener","addEventListener","handleEvent","event","host","_$LH","_boundAttributeSuffix","_marker","_markerMatch","_HTML_RESULT","_getTemplateHtml","_TemplateInstance","_isIterable","_resolveDirective","_ChildPart","_AttributePart","_BooleanAttributePart","_EventPart","_PropertyPart","_ElementPart","litHtmlPolyfillSupport","litHtmlVersions","render","container","partOwnerNode","renderBefore","UpdatingElement","LitElement","renderOptions","__childPart","super","globalThis","litElementHydrateSupport","litElementPolyfillSupport","_$LE","litElementVersions","isServer","Directive","PartType","ATTRIBUTE","CHILD","PROPERTY","BOOLEAN_ATTRIBUTE","EVENT","ELEMENT","directive","_$litDirective$","_partInfo","__part","__attributeIndex","_part","TemplateResultType","HTML","SVG","isTemplateResult","isDirectiveResult","getDirectiveClass","isSingleExpression","insertPart","containerPart","refPart","refNode","oldParent","parentChanged","newConnectionState","_$reparentDisconnectables","setChildPartValue","RESET_VALUE","setCommittedValue","getCommittedValue","removePart","clearPart","notifyChildrenConnectedChanged","children","obj","removeDisconnectableFromParent","delete","size","addDisconnectableToParent","add","installDisconnectAPI","reparentDisconnectables","newParent","notifyChildPartConnectedChanged","isClearingValue","fromPartIndex","AsyncDirective","_$AO","isClearingDirective","reconnected","disconnected","setValue","newValues","hydrate","rootValue","rootPart","currentChildPart","stack","NodeFilter","SHOW_COMMENT","markerText","openChildPart","createAttributeParts","closeChildPart","console","assert","instancePartIndex","templatePartIndex","markerWithDigest","digestForTemplateResult","currentState","comment","parseInt","previousElementSibling","parentElement","instancePart","templateResult","Uint32Array","charCodeAt","str","fromCharCode","Uint8Array","buffer","btoa","hasAttribute","_$needsHydration","SCOPED","ApplyShim","elementProto","ShadyDOM","inUse","noPatch","patchElementProto","localName","ScopingShim","prepareAdoptedCssText","_$handlesPrepareStyles","prepareTemplateStyles","styleElement","didUpdate","styledScopes","scopeCssStore","needsPrepareStyles","cssForScope","scopeCss","scopedTemplateCache","originalCreateElement","scope","prepareTemplateDom","querySelectorAll","removeChild","renderContainer","createDocumentFragment","renderContainerMarker","childPartProto","hasScopeCss","join","querySelector","cloneNode","litElementProto","legacyPrototypeMethod","proto","standardPrototypeMethod","kind","placement","decorateProperty","finisher","protoOrDescriptor","originalKey","info","customElement","classOrDescriptor","clazz","customElements","define","elements","standardProperty","property","eventOptions","query","selector","cache","queryAll","_name","queryAsync","slotAssignedElements","HTMLSlotElement","assignedElements","slot","opts","assignedNodes","filter","Node","ELEMENT_NODE","queryAssignedElements","slotSelector","slotEl","matches","queryAssignedNodes","slotOrOptions","flatten","assignedNodesOptions","warn","classMap","partInfo","classInfo","keys","_previousClasses","_staticClasses","classList","Pauser","forAwaitOf","iterable","callback","PseudoWeakRef","_ref","disconnect","reconnect","deref","_promise","_resolve","pause","AsyncReplaceDirective","__weakThis","__pauser","_mapper","mapper","__value","weakThis","pauser","_this","commitValue","_index","asyncReplace","asyncAppend","params","newPart","_templateCache","_value","childPart","cachedContainerPart","cachedPart","initialValue","guard","_previousValue","every","ifDefined","live","createRef","Ref","lastElementForContextAndCallback","refChanged","_updateRefValue","_lastElementForRef","_element","_context","context","lastElementForCallback","generateMap","list","repeat","_getValuesAndKeys","items","keyFnOrTemplate","keyFn","oldParts","newKeys","_itemKeys","oldKeys","newParts","newKeyToIndexMap","oldKeyToIndexMap","oldHead","oldTail","newHead","newTail","oldIndex","oldPart","styleMap","styleInfo","prop","replace","_previousStyleProperties","includes","removeProperty","setProperty","templateContent","_previousTemplate","UnsafeHTMLDirective","directiveName","_templateResult","resultType","unsafeHTML","UnsafeSVGDirective","unsafeSVG","isPromise","x","UntilDirective","__lastRenderedIndex","find","previousValues","previousLength","until","choose","cases","defaultCase","joiner","isFunction","keyed","range","startOrEnd","when","condition","trueCase","falseCase","__esDecorate","descriptorIn","contextIn","initializers","extraInitializers","accept","access","addInitializer","__runInitializers","useValue","__propKey","__setFunctionName","prefix","description","writable","__spreadArray","to","pack","__setModuleDefault","__classPrivateFieldIn","versionInfo","freeze","major","minor","patch","preReleaseTag","nodejsCustomInspectSymbol","_typeof","MAX_ARRAY_LENGTH","MAX_RECURSIVE_DEPTH","inspect","formatValue","seenValues","formatObjectValue","previouslySeenValues","customInspectFn","getCustomFn","customValue","formatArray","formatObject","object","getObjectTag","min","remaining","devAssert","message","defineToJSON","classObject","fn","toJSON","isObjectLike","getLocation","source","position","lineRegexp","line","column","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","lines","locationLine","sublineIndex","floor","sublineColumnNum","sublines","printPrefixedLines","subline","existingLines","padLen","max","_ref2","_ref3","lpad","GraphQLError","nodes","positions","path","originalError","extensions","_nodes","_source","loc","_positions","_locations","pos","_extensions","originalExtensions","defineProperties","locations","captureStackTrace","printError","output","_i2","_error$nodes2","_i4","_error$locations2","syntaxError","Kind","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","defineToStringTag","toStringTag","Source","dedentBlockStringValue","rawString","commonIndent","getBlockStringIndentation","isBlank","indent","leadingWhitespace","printBlockString","indentation","preferMultipleLines","isSingleLine","hasLeadingSpace","hasTrailingQuote","printAsMultipleLines","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","BLOCK_STRING","COMMENT","createLexer","startOfFileToken","Tok","lexer","lastToken","token","lineStart","advance","advanceLexer","lookahead","readToken","isPunctuatorToken","prev","printCharCode","code","isNaN","toUpperCase","bodyLength","positionAfterWhitespace","col","readComment","readName","readNumber","readBlockString","readString","unexpectedCharacterMessage","startPosition","firstCode","isFloat","readDigits","chunkStart","charCode","uniCharCode","invalidSequence","rawValue","char2hex","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","parser","Parser","parseDocument","parseValue","expectToken","parseValueLiteral","parseType","parseTypeReference","sourceObj","_lexer","_proto","parseName","definitions","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","operation","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","defaultValue","expectOptionalToken","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","block","any","_this2","fields","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","types","allowLegacySDLImplementsInterfaces","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","startToken","noLocation","Loc","getTokenDesc","atToken","openKind","parseFn","closeKind","endToken","QueryDocumentKeys","Name","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","BREAK","visit","root","visitor","visitorKeys","inArray","edits","ancestors","newRoot","isLeaving","isEdited","clone","_Object$keys2","editOffset","ii","editKey","editValue","isNode","visitFn","getVisitFn","maybeNode","visitInParallel","visitors","skipping","enter","leave","visitWithTypeInfo","typeInfo","kindVisitor","kindSpecificVisitor","specificVisitor","specificKindVisitor","predicate","flatMap","flatMapMethod","_item","objectValues","objectEntries","entries","NAME_RX","assertValidName","isValidNameError","keyMap","mapValue","_objectEntries2","_key","toObjMap","keyValMap","valFn","identityFunc","invariant","isInvalid","valueFromASTUntyped","valueNode","variables","parseFloat","field","variableName","ownKeys","enumerableOnly","symbols","sym","_objectSpread","_defineProperty","getOwnPropertyDescriptors","isType","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","isListType","isNonNullType","assertType","GraphQLScalarType","assertScalarType","GraphQLObjectType","assertObjectType","GraphQLInterfaceType","assertInterfaceType","GraphQLUnionType","assertUnionType","GraphQLEnumType","assertEnumType","GraphQLInputObjectType","assertInputObjectType","GraphQLList","assertListType","GraphQLNonNull","assertNonNullType","isInputType","isWrappingType","ofType","assertInputType","isOutputType","assertOutputType","isLeafType","assertLeafType","isCompositeType","assertCompositeType","isAbstractType","assertAbstractType","assertNullableType","assertWrappingType","isNullableType","getNullableType","isNamedType","assertNamedType","getNamedType","unwrappedType","resolveThunk","thunk","undefineIfEmpty","arr","config","serialize","parseLiteral","astNode","extensionASTNodes","toConfig","isTypeOf","_fields","defineFieldMap","bind","_interfaces","defineInterfaces","_proto2","getFields","getInterfaces","fieldsToFieldsConfig","fieldMap","isPlainObj","fieldConfig","fieldName","argsConfig","argName","arg","subscribe","isDeprecated","deprecationReason","argsToArgsConfig","isRequiredArgument","resolveType","_proto3","_types","defineTypes","_proto4","getTypes","_values","defineEnumValues","_valueLookup","enumValue","_nameLookup","_proto5","getValues","getValue","_variables","typeName","valueMap","valueName","defineInputFieldMap","_proto6","isRequiredInputField","isEqualType","typeA","typeB","isTypeSubTypeOf","schema","maybeSubType","superType","isPossibleType","doTypesOverlap","getPossibleTypes","some","isFinitePolyfill","isFinite","isInteger","MAX_INT","MIN_INT","serializeInt","num","coerceInt","GraphQLInt","ast","serializeFloat","coerceFloat","GraphQLFloat","serializeObject","valueOf","valueOfResult","serializeString","coerceString","GraphQLString","serializeBoolean","coerceBoolean","GraphQLBoolean","serializeID","coerceID","GraphQLID","specifiedScalarTypes","isSpecifiedScalarType","isDirective","GraphQLDirective","assertDirective","isRepeatable","GraphQLIncludeDirective","if","GraphQLSkipDirective","DEFAULT_DEPRECATION_REASON","GraphQLDeprecatedDirective","reason","specifiedDirectives","isSpecifiedDirective","print","printDocASTReducer","varDefs","wrap","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","isBlockString","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","addDescription","_ref22","_ref23","_ref24","hasMultilineItems","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","cb","maybeArray","separator","maybeString","isMultiline","string","SYMBOL","SYMBOL_ITERATOR","$$iterator","getIteratorMethod","isArrayLike","isCollection","getIterator","method","createIterator","collection","ArrayLikeIterator","_o","_i","SYMBOL_ASYNC_ITERATOR","$$asyncIterator","isAsyncIterable","getAsyncIteratorMethod","getAsyncIterator","asyncIterable","createAsyncIterator","AsyncFromSyncIterator","unwrapAsyncFromSync","forAwaitEach","catch","return","throw","isNullish","astFromValue","astValue","itemType","valuesNodes","itemNode","fieldNodes","_objectValues2","fieldValue","serialized","stringNum","integerStringRegExp","__Schema","__Type","getTypeMap","queryType","getQueryType","mutationType","getMutationType","subscriptionType","getSubscriptionType","__Directive","getDirectives","__DirectiveLocation","__InputValue","__TypeKind","TypeKind","NON_NULL","__Field","includeDeprecated","possibleTypes","enumValues","__EnumValue","inputFields","inputVal","valueAST","SchemaMetaFieldDef","TypeMetaFieldDef","getType","TypeNameMetaFieldDef","parentType","introspectionTypes","isIntrospectionType","isSchema","GraphQLSchema","assertSchema","assumeValid","__validationErrors","allowedLegacyNames","__allowedLegacyNames","_queryType","_mutationType","mutation","_subscriptionType","subscription","_directives","initialTypes","typeMap","typeMapReducer","typeMapDirectiveReducer","_typeMap","_possibleTypeMap","_implementations","_type$getInterfaces2","iface","impls","abstractType","possibleType","_i6","_this$getPossibleType2","getDirective","namedType","seenType","reducedMap","_i8","_objectValues4","_i10","_objectValues6","_map","validateSchema","SchemaValidationContext","validateRootTypes","validateDirectives","validateTypes","errors","getErrors","assertValidSchema","_errors","reportError","addError","getOperationTypeNode","operationNodes","getAllSubNodes","_context$schema$getDi2","validateName","argNames","_loop","_directive$args2","validateInputObjectCircularRefs","createInputObjectCircularRefsValidator","validateFields","validateObjectInterfaces","validateUnionMembers","validateEnumValues","validateInputFields","getAllNodes","_loop2","_i12","_field$args2","implementedTypeNames","_i14","_object$getInterfaces2","getAllImplementsInterfaceNodes","validateObjectImplementsInterface","objectFieldMap","ifaceFieldMap","_i16","ifaceField","objectField","_loop3","_i18","_ifaceField$args2","ifaceArg","objectArg","_loop4","_i20","_objectField$args2","union","memberTypes","includedTypeNames","_i22","memberType","getUnionMemberTypeNodes","enumType","_i24","inputObj","_i26","visitedTypes","fieldPath","fieldPathIndexByTypeName","detectCycleRecursive","_i28","fieldType","cycleIndex","cyclePath","pathStr","fieldObj","getter","typeNode","ifaceNode","unionNode","typeFromAST","innerType","TypeInfo","getFieldDefFn","initialType","_schema","_typeStack","_parentTypeStack","_inputTypeStack","_fieldDefStack","_defaultValueStack","_directive","_argument","_enumValue","_getFieldDef","getFieldDef","getParentType","getInputType","getParentInputType","getDefaultValue","getArgument","getEnumValue","fieldDef","typeConditionAST","outputType","inputType","argDef","argType","fieldOrDirective","listType","objectType","inputFieldType","inputField","fieldNode","isDefinitionNode","isExecutableDefinitionNode","isTypeSystemDefinitionNode","isTypeSystemExtensionNode","isSelectionNode","isValueNode","isTypeNode","isTypeDefinitionNode","isTypeExtensionNode","nonExecutableDefinitionMessage","defName","ExecutableDefinitions","_node$definitions2","definition","duplicateOperationNameMessage","operationName","UniqueOperationNames","knownOperationNames","anonOperationNotAloneMessage","LoneAnonymousOperation","operationCount","singleFieldOnlyMessage","SingleFieldSubscriptions","MAX_SUGGESTIONS","didYouMean","firstArg","secondArg","subMessage","suggestions","selected","lastItem","suggestionList","input","optionsByDistance","inputThreshold","option","distance","lexicalDistance","sort","aStr","bStr","aLength","bLength","_i3","_j","cost","unknownTypeMessage","suggestedTypes","KnownTypeNames","getSchema","existingTypesMap","definedTypes","_context$getDocument$2","getDocument","def","typeNames","_1","_2","definitionNode","isSDL","isSDLNode","isSpecifiedScalarName","specifiedScalarsNames","inlineFragmentOnNonCompositeErrorMessage","fragmentOnNonCompositeErrorMessage","fragName","FragmentsOnCompositeTypes","nonInputTypeOnVarMessage","VariablesAreInputTypes","noSubselectionAllowedMessage","requiredSubselectionMessage","ScalarLeafs","undefinedFieldMessage","suggestedTypeNames","suggestedFieldNames","quotedTypeNames","quotedFieldNames","FieldsOnCorrectType","getSuggestedTypeNames","getSuggestedFieldNames","suggestedObjectTypes","interfaceUsageCount","_schema$getPossibleTy2","_possibleType$getInte2","possibleInterface","suggestedInterfaceTypes","possibleFieldNames","duplicateFragmentNameMessage","UniqueFragmentNames","knownFragmentNames","fragmentName","unknownFragmentMessage","KnownFragmentNames","getFragment","unusedFragMessage","NoUnusedFragments","operationDefs","fragmentDefs","fragmentNameUsed","_context$getRecursive2","getRecursivelyReferencedFragments","fragmentDef","typeIncompatibleSpreadMessage","fragType","typeIncompatibleAnonSpreadMessage","PossibleFragmentSpreads","getFragmentType","frag","cycleErrorMessage","spreadNames","via","NoFragmentCycles","visitedFrags","spreadPath","spreadPathIndexByName","spreadNodes","getFragmentSpreads","spreadNode","spreadName","spreadFragment","fragmentNames","duplicateVariableMessage","UniqueVariableNames","knownVariableNames","undefinedVarMessage","varName","opName","NoUndefinedVariables","variableNameDefined","usages","getRecursiveVariableUsages","unusedVariableMessage","NoUnusedVariables","variableDefs","variableNameUsed","_variableDefs2","variableDef","unknownDirectiveMessage","misplacedDirectiveMessage","KnownDirectives","locationsMap","definedDirectives","astDefinitions","candidateLocation","getDirectiveLocationForASTPath","appliedTo","duplicateDirectiveMessage","UniqueDirectivesPerLocation","uniqueDirectiveMap","knownDirectives","unknownArgMessage","suggestedArgs","unknownDirectiveArgMessage","KnownArgumentNames","KnownArgumentNamesOnDirectives","argNode","knownArgsNames","directiveArgs","directiveNode","knownArgs","_directiveNode$argume2","duplicateArgMessage","UniqueArgumentNames","knownArgNames","badValueMessage","badEnumValueMessage","suggestedValues","requiredFieldMessage","fieldTypeName","unknownFieldMessage","suggestedFields","ValuesOfCorrectType","isValidScalar","fieldNodeMap","typeStr","enumTypeSuggestion","locationType","parseResult","allNames","missingFieldArgMessage","missingDirectiveArgMessage","ProvidedRequiredArguments","ProvidedRequiredArgumentsOnDirectives","argNodes","argNodeMap","_fieldDef$args2","requiredArgsMap","isRequiredArgumentNode","requiredArgs","badVarPosMessage","varType","expectedType","VariablesInAllowedPosition","varDefMap","varDef","allowedVariableUsage","varDefaultValue","locationDefaultValue","nullableLocationType","fieldsConflictMessage","responseName","reasonMessage","subreason","OverlappingFieldsCanBeMerged","comparedFragmentPairs","PairSet","cachedFieldsAndFragmentNames","conflicts","findConflictsWithinSelectionSet","_ref2$","fields1","fields2","_getFieldsAndFragment","getFieldsAndFragmentNames","collectConflictsWithin","comparedFragments","collectConflictsBetweenFieldsAndFragment","collectConflictsBetweenFragments","areMutuallyExclusive","_getReferencedFieldsA","getReferencedFieldsAndFragmentNames","fieldMap2","fragmentNames2","collectConflictsBetween","fragmentName1","fragmentName2","fragment1","fragment2","_getReferencedFieldsA2","fieldMap1","fragmentNames1","_getReferencedFieldsA3","findConflictsBetweenSubSelectionSets","parentType1","selectionSet1","parentType2","selectionSet2","_getFieldsAndFragment2","_getFieldsAndFragment3","_comparedFragments","_i5","conflict","findConflict","parentFieldsAreMutuallyExclusive","_i7","field1","field2","node1","def1","node2","def2","type1","type2","name1","name2","sameArguments","doTypesConflict","subfieldConflicts","arguments1","arguments2","argument1","argument2","argument","sameValue","value1","value2","cached","nodeAndDefs","_collectFieldsAndFragmentNames","fragmentType","_i9","_selectionSet$selecti2","selection","inlineFragmentType","allFields","_data","first","_pairSetAdd","duplicateInputFieldMessage","UniqueInputFieldNames","knownNameStack","knownNames","schemaDefinitionNotAloneMessage","canNotDefineSchemaWithinExtensionMessage","LoneSchemaDefinition","oldSchema","alreadyDefined","schemaDefinitionsCount","duplicateOperationTypeMessage","existedOperationTypeMessage","UniqueOperationTypes","definedOperationTypes","existingOperationTypes","checkOperationTypes","operationType","alreadyDefinedOperationType","duplicateTypeNameMessage","existedTypeNameMessage","UniqueTypeNames","knownTypeNames","checkTypeName","duplicateEnumValueNameMessage","existedEnumValueNameMessage","UniqueEnumValueNames","existingTypeMap","knownValueNames","checkValueUniqueness","valueNames","_node$values2","valueDef","existingType","duplicateFieldDefinitionNameMessage","existedFieldDefinitionNameMessage","UniqueFieldDefinitionNames","knownFieldNames","checkFieldUniqueness","fieldNames","_node$fields2","hasField","duplicateDirectiveNameMessage","existedDirectiveNameMessage","UniqueDirectiveNames","knownDirectiveNames","_defKindToExtKind","extendingUnknownTypeMessage","extendingDifferentTypeKindMessage","PossibleTypeExtensions","checkExtension","defNode","expectedKind","defKindToExtKind","extensionKindToTypeName","_expectedKind","typeToExtKind","allTypeNames","specifiedRules","specifiedSDLRules","_inheritsLoose","subClass","superClass","ASTValidationContext","onError","_ast","_fragments","_fragmentSpreads","_recursivelyReferencedFragments","_onError","fragments","frags","statement","spreads","setsToVisit","_set$selections2","nodesToVisit","collectedNames","_this$getFragmentSpre2","spread","SDLValidationContext","_ASTValidationContext","ValidationContext","_ASTValidationContext2","_typeInfo","_variableUsages","_recursiveVariableUsages","getVariableUsages","newUsages","_this$getRecursivelyR2","ABORT_VALIDATION","validate","documentAST","rules","abortObj","maxErrors","validateSDL","schemaToExtend","assertValidSDL","assertValidSDLExtension","memoize3","cache0","memoized","a1","a2","a3","cache1","cache2","cachedValue","newValue","promiseReduce","previous","resolved","promiseForObject","valuesAndPromises","all","resolvedObject","addPath","pathToArray","curr","flattened","locatedError","getOperationRootType","printPathArray","valueFromAST","variableValue","coercedValues","_valueNode$values2","isMissingVariable","itemValue","coercedValue","coercedObj","_error","coerceInputValue","inputValue","coerceInputValueImpl","defaultOnError","invalidValue","errorPrefix","_coercedValue","fieldDefs","_suggestions","getVariableValues","varDefNodes","inputs","coerced","coerceVariableValues","varDefNode","varTypeStr","_varTypeStr","_varTypeStr2","getArgumentValues","variableValues","_def$args2","argumentNode","isNull","getDirectiveValues","directiveDef","execute","argsOrSchema","contextValue","fieldResolver","typeResolver","executeImpl","assertValidExecutionArguments","exeContext","buildExecutionContext","buildResponse","executeOperation","rawVariableValues","hasMultipleAssumedOperations","_document$definitions2","coercedVariableValues","defaultFieldResolver","defaultTypeResolver","collectFields","executeFieldsSerially","executeFields","sourceValue","results","resolveField","resolvedResult","containsPromise","runtimeType","visitedFragmentNames","shouldIncludeNode","getFieldEntryKey","doesFragmentConditionMatch","skip","include","typeConditionNode","conditionalType","resolveFn","buildResolveInfo","resolveFieldValueOrError","completeValueCatchingError","returnType","asErrorInstance","completed","completeValue","handleFieldError","rawError","completeListValue","completeLeafValue","completeAbstractValue","completeObjectValue","completedResults","completedItem","serializedResult","resolveTypeFn","resolvedRuntimeType","ensureValidRuntimeType","runtimeTypeOrName","resolvedIsTypeOf","invalidReturnTypeError","collectAndExecuteSubfields","collectSubfields","_collectSubfields","subFieldNodes","__typename","promisedIsTypeOfResults","isTypeOfResult","isTypeOfResults","graphql","graphqlImpl","graphqlSync","schemaValidationErrors","validationErrors","mapAsyncIterator","rejectCallback","$return","abruptClose","mapReject","mapResult","asyncMapValue","iteratorResult","rethrow","subscribeFieldResolver","subscribeImpl","reportGraphQLError","sourcePromise","createSourceEventStream","mapSourceToResponse","payload","resultOrStream","eventStream","formatError","getIntrospectionQuery","descriptions","introspectionQuery","getOperationAST","_documentAST$definiti2","introspectionFromSchema","queryAST","buildClientSchema","introspection","__schema","schemaIntrospection","typeIntrospection","buildType","buildScalarDef","scalarIntrospection","buildObjectDef","objectIntrospection","getInterfaceType","buildFieldDefMap","buildInterfaceDef","interfaceIntrospection","buildUnionDef","unionIntrospection","getObjectType","buildEnumDef","enumIntrospection","valueIntrospection","buildInputObjectDef","inputObjectIntrospection","buildInputValueDefMap","stdType","buildDirective","directiveIntrospection","typeRef","itemRef","nullableRef","nullableType","getOutputType","fieldIntrospection","inputValueIntrospections","buildInputValue","inputValueIntrospection","buildASTSchema","schemaDef","assumeValidSDL","typeDefs","directiveDefs","astBuilder","ASTDefinitionBuilder","keyByNameNode","getOperationTypes","opTypes","_schema$operationType2","stdTypeMap","_resolveType","getWrappedType","getDescription","buildArg","buildField","getDeprecationReason","buildInputField","buildEnumValue","_makeTypeDef","_makeInterfaceDef","_makeEnumDef","_makeUnionDef","_makeScalarDef","_makeInputObjectDef","_this3","interfaceNodes","_this4","_this5","valueNodes","_this6","typeNodes","_this7","deprecated","commentDescriptions","getLeadingCommentBlock","comments","buildSchema","extendSchema","typeExtsMap","schemaExts","extendedTypeName","existingTypeExts","schemaConfig","_schemaConfig$types2","extendNamedType","_schemaDef$operationT2","schemaExt","_schemaExt$operationT2","_operation","_type","existingDirectives","getMaybeTypeByName","extendDirective","replaceType","replaceNamedType","extendScalarType","extendObjectType","extendField","extendInterfaceType","extendUnionType","extendEnumType","extendInputObjectType","extendArg","lexicographicSortSchema","sortByName","sortNamedType","sortTypes","sortFields","_config","_config2","_config3","sortObjMap","_config4","sortInputFields","sortDirective","sortBy","sortArgs","replaceMaybeType","maybeType","fieldsMap","sortValueFn","sortedMap","sortedKeys","mapToKey","obj1","obj2","key1","key2","localeCompare","printSchema","printFilteredSchema","isDefinedType","printIntrospectionSchema","directiveFilter","typeFilter","printSchemaDefinition","printDirective","printType","isSchemaOfCommonNames","printScalar","printObject","printInterface","printUnion","printEnum","printInputObject","printDescription","implementedInterfaces","printFields","printDeprecated","printBlock","printInputValue","printArgs","defaultAST","argDecl","fieldOrEnumVal","reasonAST","firstInBlock","descriptionLines","printDescriptionWithComments","text","maxLen","rawLines","breakLine","coerceValue","blameNode","errorPath","pathArray","isValidJSValue","isValidLiteralValue","emptySchema","emptyDoc","concatAST","asts","separateOperations","operations","fromName","depGraph","toName","separatedDocumentASTs","dependencies","collectTransitiveDependencies","n1","n2","collected","immediateDeps","_Object$keys4","stripIgnoredCharacters","strippedBody","wasLastAddedTokenNonPunctuator","currentToken","tokenKind","isNonPunctuator","tokenBody","dedentBlockString","blockStr","rawStr","lastChar","BreakingChangeType","TYPE_REMOVED","TYPE_CHANGED_KIND","TYPE_REMOVED_FROM_UNION","VALUE_REMOVED_FROM_ENUM","REQUIRED_INPUT_FIELD_ADDED","INTERFACE_REMOVED_FROM_OBJECT","FIELD_REMOVED","FIELD_CHANGED_KIND","REQUIRED_ARG_ADDED","ARG_REMOVED","ARG_CHANGED_KIND","DIRECTIVE_REMOVED","DIRECTIVE_ARG_REMOVED","REQUIRED_DIRECTIVE_ARG_ADDED","DIRECTIVE_LOCATION_REMOVED","DangerousChangeType","VALUE_ADDED_TO_ENUM","TYPE_ADDED_TO_UNION","OPTIONAL_INPUT_FIELD_ADDED","OPTIONAL_ARG_ADDED","INTERFACE_ADDED_TO_OBJECT","ARG_DEFAULT_VALUE_CHANGE","findBreakingChanges","newSchema","breakingChanges","findSchemaChanges","findDangerousChanges","dangerousChanges","findTypeChanges","findDirectiveChanges","schemaChanges","directivesDiff","diff","_directivesDiff$remov2","removed","oldDirective","_directivesDiff$persi2","persisted","_oldDirective","newDirective","argsDiff","_argsDiff$added2","added","newArg","_argsDiff$removed2","oldArg","_oldDirective$locatio2","typesDiff","_typesDiff$removed2","oldType","_typesDiff$persisted2","_oldType","newType","findEnumTypeChanges","findUnionTypeChanges","findInputObjectTypeChanges","findObjectTypeChanges","findFieldChanges","typeKindName","fieldsDiff","_fieldsDiff$added2","newField","_fieldsDiff$removed2","oldField","_fieldsDiff$persisted2","_oldField","_newField","isChangeSafeForInputObjectFieldOrFieldArg","possibleTypesDiff","_possibleTypesDiff$ad2","newPossibleType","_possibleTypesDiff$re2","oldPossibleType","valuesDiff","_valuesDiff$added2","_valuesDiff$removed2","interfacesDiff","_i30","_interfacesDiff$added2","newInterface","_i32","_interfacesDiff$remov2","oldInterface","_i34","_fieldsDiff$removed4","_i36","_fieldsDiff$persisted4","_oldField2","findArgChanges","isChangeSafeForObjectOrInterfaceField","_i38","_argsDiff$removed4","_i40","_argsDiff$persisted2","_oldArg","oldValueStr","stringifyValue","newValueStr","_i42","_argsDiff$added4","_newArg","sortedAST","objectNode","fieldA","fieldB","oldArray","newArray","oldMap","newMap","_i44","oldItem","newItem","_i46","_newItem","findDeprecatedUsages","enumVal","maybe","safeGlobal","self","needToRemove","install","NODE_ENV","_createForOfIteratorHelperLoose","allowArrayLike","it","_unsupportedIterableToArray","minLen","_arrayLikeToArray","arr2","_defineProperties","_createClass","Constructor","protoProps","staticProps","hasSymbols","hasSymbol","getSymbol","observable","SymbolIterator","SymbolObservable","SymbolSpecies","getMethod","getSpecies","Observable","isObservable","hostReportError","log","enqueue","cleanupSubscription","cleanup","_cleanup","unsubscribe","closeSubscription","_observer","_queue","_state","flushSubscription","notifySubscription","observer","onNotify","Subscription","subscriber","subscriptionObserver","SubscriptionObserver","_subscription","complete","_subscriber","C","hasSeed","hasValue","_len","sources","startNext","subscriptions","outer","inner","completeIfDone","closed","_step","_iterator","of","_len2","_key2","symbol","symbolObservablePonyfill","err","Function","_visitor","require","_blockString","_kinds","_objectSpread2","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_toArray","_iterableToArray","_toConsumableArray","_arrayWithoutHoles","_nonIterableSpread","iter","_arr","_s","_e","_n","_createForOfIteratorHelper","F","normalCompletion","didErr","traversal","setter","toFP","_native","overrides","fixedArgs","coll","fxn","into","override","_overrides","iteratorFilter","pred","_overrides2","iteratorMap","_step2","_iterator2","promise","_overrides3","iteratorFind","_iterator3","_step3","_overrides4","iteratorSome","_iterator4","_step4","_overrides5","iteratorReduce","base","_step5","_iterator5","_iterator6","_step6","cons","xs","rest","ys","prepend","compile","lens","optional","compose","lenses","traverser","shortCircuited","nextState","aux","_lenses","pattern","bindingGet","greaterThan","lessThan","greaterThanEq","lessThanEq","toggle","bool","returns","val","isObject","isValue","identity","flip","always","not","and","fs","or","_len3","_key3","_len4","_key4","curry","_curry","sub","inc","dec","snippet","includesi","foldOf","maxOf","minOf","findOf","sumOf","productOf","matching","predFxn","all$1","unless","updateAll","updaters","currState","transformer","withOf","foldBy","reducer","findBy","maxBy","minBy","valueOr","filling","out"],"mappings":"A6jBkJC,A0CnI6D,A1lBf9D,AwPAA,A2BAA,ACAA,AEAA,ADAA,AoN8FC,AuH9FD,ACAA,ajDkJC,A0CnI6D,A1lBd9D,AwPAA,A2BAA,ACAA,AEAA,ADAA,AoNKO,AuHJPG,ACAAA,OjDgJC,A0CnI6D,A1lBd9D,AwPAA,A2BAA,ACAA,AEAA,ADAA,A2UCOoC,ACAAA,ExHISg6B,EAAuBC,GAEjCtF,IAAAA,EAAQsF,EuE0Ib,A0CnI6D,A1lBd9D,AwPAA,A2BAA,ACAA,AEAA,ADAA,AoNOwBriB,AuHNF1U,ACAAA,MxHMQ,EuE0I7B,A0CnI6D,A1lBd9D,AwPAA,A2BAA,ACAA,AEAA,ADAA,A2UC+B,ACAA,ajDgJ9B,A0CnI6D,A1lBd9D,AwPAA,A2BAA,ACAA,AEAA,ADAA,A2UC6C,ACAA,CjDgJ5C,A0CnI6D,A1lBd9D,AwPAA,A2BAA,ACAA,AEAA,ADAA,AoNSMg3B,AuHPJj5B,ACAAA,ExHOmBk5B,EAA0BxF,GuEwI9C,A0CnI6D,A1lBd9D,AwPAA,A2BAA,ACAA,AEAA,ADAA,AoNWMuF,AuHTG,ACAA,GxHSc,CuHPvBh3B,ACAAA,GxHOMg3B,EACG,GuHRD0b,ACAAkxB,CxHQC,IAAInoE,CuHRGi3C,CvHQC,CuHNjB,CvHMoBj3C,EAAIg2B,CuHNpBqqD,CvHM0BlgF,CuHNfmgF,ECFWnY,EAE1B,ExHMsCnoE,EuHNf,ACAnBwgF,ExHOExqD,AwHPOsqD,ExHODtgF,GAAKg2B,EAAMh2B,CwHPF,ExHOKmV,CuHLtBorE,EAAeD,GvHKa/kD,GAKvBvF,EuHVkB,GvHUlBA,EAAM71B,GwHLf,IxHKwB,GAAKs7B,EAAQzF,AuHJrC,ACDSmyC,ExHKkC,AwHLlB9J,EAAalW,GxHMlCnyB,AwHHG,ExHGGtwB,AuHLDuxC,EAAM9B,ACATvT,GDCG,CCDHA,ExHQG5L,AwHRS,IDCT,CvHOAA,AwHNEiC,CDDEooD,CvHOElgF,AwHNE,CDDKypC,CCCFw+B,EAAyB/J,EAAYn9B,CxHMjC,CuHPKiU,EvHOA1Z,AuHPK,CAC9B2P,CvHMiCpV,EAAMA,EAAM71B,CuHNtC+2C,CCA2Djf,EAAMmwC,CDK5E,CCLmGjoE,CxHMzC,EuHDtD+2C,EAAqB,CvHErBlhB,AuHDFkR,CCNyGjP,CxHOjGn0B,GuHDF,ACN0G,CAC1GmkD,ExHUCjyB,EwHVDiyB,EAAamgB,EDKCzwD,ACLsBsgB,CxHUnCjC,EAAMrO,AuHJJhQ,ACJHswC,GAAAA,ExHQY,AwHRD//B,EDIRvQ,EAAKrV,EvHOT,CwHXqBk+E,EAAOloD,EDMjC+O,GCNsC5O,CxHWxB+C,EAA0BxF,GAGnC,AuHRK,IvHMNuF,IAAAA,CuHNwB5jB,CvHMT,EuHLV,GvHOA3X,AwHbD,ExHaK,CuHPJ,ACNAmoD,CxHaOnoD,EAAIg2B,AwHJT,CDHIre,CvHOWxX,CuHPNgK,ACGL89C,EAAW99C,IxHIQnK,AuHJlC+K,ECAkCk9C,ExHIK,AwHJM99C,CxHKvC8qB,IAAAA,AuHLI,ACAwC3yB,ExHKrC0zB,EAAMh2B,GACb07B,CwHNsDysB,CxHM7CxsB,AuHNahkB,CCCfswC,CxHKoBhzB,CuHLxBtN,EvHOH+T,GAAAA,AwHPOusB,EDAJtgC,EvHOQsN,AuHPHtd,EvHOQxX,AuHPH+gC,ACVK,CAIdU,GAAAA,EACK,IxHgBQ,EuHXS,CCLjB,IxHgBTrG,CwHbAqG,ExHayBlG,AuHXW,ACFxBusB,ExHasB1sB,CwHNjCqG,GxHSkB,AuHZzBuF,ICGOvF,CxHOHrG,EAAeG,IAGb,MAKCH,GuHlBc,IvHkBG,KuHlB0B5jB,EvHkB3C4jB,CuHjBD33B,CvHiByB,EAAI23B,CuHjB7B33B,CvHoBR,CuHpBa+T,EAAKiqB,MvHoBTjG,EAAkBrW,EuHnBnBnb,CvHsBCnK,CuHtBM2X,EAAKxN,CvHoBdnK,IAAAA,AuHnBEm3C,EvHmBE,AuHnBQC,EvHqBTp3C,AuHrBc,EvHqBVslB,EAAInlB,AuHrBWwnB,EAAKhQ,EAAKkqB,KvHqBC,MAAXvc,EAAItlB,IAAyB,GuHrBE,IvHqBbslB,EAAItlB,AuHrBgB,KvHsB9DA,AuHrBI8hC,EAAana,EvHwBZ3nB,AuHxBiB2X,EAAKmqB,KvHwBtB9hC,EAGT,IuH3B2C,KvH2BlCy7B,AuH1BDsG,EvH0BSzc,AuH1BM3N,EAAKoqB,CvH2BnBpG,OAAAA,EAAkBrW,GuHxBhB,EvHwByBA,EAAInlB,GuHxB5BgK,GAAS23B,CvHiCd,EuHjC6BqV,GAAkB,IvHiCtCvb,EAAiBt5B,GAC3Bu5B,CuHlCyCj4B,EAAgC+jB,CvHkCzEkU,CuHlC8E,CvHkChE37B,AuHlCiE0D,EAAI+jB,EAAK,CAACxd,EAAMgtC,GvHkCvEh3C,CuHlCkF2hC,EAAYC,GAAe,CvHkCpG,IuHlCyBA,GAE9DqF,CvHgC2D/iC,IAAjBnE,UAAU,GAAmBA,CuHhCnD,SvHgC6D,AuHhCjCorB,GvHgCsC,AuH/BhFiX,GvHgCFzG,CuHhCEyG,CvHgCoBriC,CuHhCTorB,EAAKiX,OvHgCcpiC,EuH/B9B4N,EAAOud,EAAKvd,CvH+B2B,IuH9BvC00B,EAAenX,EvH8B8CjnB,AuH9BzCo+B,IvH8BwBviC,SuH7B5C4hC,CvH6BsD,CuH7BzCxW,EAAKwW,CvH6BuD5hC,UAAU,AuH5BhFqiC,GvH6BLxG,GAAwC,CuH7BnCwG,EAAW,CvH6BDjgC,EAAM9B,EuH7BEuN,EAAOqpC,EAAK,EvH6BN,IuH7Ba3U,EvH8B1CzG,CuH9B0Dob,CvH8B3B,CuH9BgC,IAAKzvB,CvH8BlDrlB,CuH9BuDw/B,CvH8BjD,CuH9B6D,GvH8BlC,IuH5BvDwF,GvH4B0ChlC,EAAM,GAC5C25B,EAA+C,GuH7BrC,GvH6BS35B,EAAMA,EAAMnC,EuH7BCw2B,GAE3BoN,EvH2BmC,GACxC7H,EuH5BK6H,CvH4BmBhI,CuH7BTpF,EvH6ByBsF,AuH7BnB0G,GvH6BuC7G,EAC5Dp5B,EAAS,GAYN,GuHvCP6kC,IvH6BIrL,EuH7BG,CvH6BuBH,GAAgBC,IAC5Ct5B,CuH9BoBk0B,EvH8BV,CuH7BNmM,IvH6BalH,AuH7BbkH,EAAQnM,CvHgCdl0B,CuHhCoBqgC,EvHgCVlH,EAAcv5B,EAAMktB,AuH/BxBrlB,EAAOysB,EAAMzsB,IvH+BmB,CuH9BhChB,EAAOytB,EAAM12B,CvH8B0B,KAAO27B,GAAev5B,CuH7B7Dw/B,CvH+BF5F,CuH/BetF,EAAMkL,CvHgCvBp/B,GAAU,MAGL,CuHlCDq/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","file":"payment-widget-winbet.js","sourceRoot":"../src","sourcesContent":["export type Decorator = ClassDecorator | MemberDecorator;\nexport type MemberDecorator = <T>(\n  target: Target,\n  propertyKey: PropertyKey,\n  descriptor?: TypedPropertyDescriptor<T>,\n) => TypedPropertyDescriptor<T> | void;\nexport type MetadataKey = string | symbol;\nexport type PropertyKey = string | symbol;\nexport type Target = object | Function;\n\nconst Metadata = new WeakMap();\n\nfunction decorateProperty(\n  decorators: MemberDecorator[],\n  target: Target,\n  propertyKey: PropertyKey,\n  descriptor?: PropertyDescriptor,\n): PropertyDescriptor | undefined {\n  decorators.reverse().forEach((decorator: MemberDecorator) => {\n    descriptor = decorator(target, propertyKey, descriptor) || descriptor;\n  });\n  return descriptor;\n}\n\nfunction decorateConstructor(\n  decorators: ClassDecorator[],\n  target: Function,\n): Function {\n  decorators.reverse().forEach((decorator: ClassDecorator) => {\n    const decorated = decorator(target);\n    if (decorated) {\n      target = decorated;\n    }\n  });\n  return target;\n}\n\nexport function decorate(\n  decorators: ClassDecorator[],\n  target: Function,\n): Function;\nexport function decorate(\n  decorators: MemberDecorator[],\n  target: object,\n  propertyKey?: PropertyKey,\n  attributes?: PropertyDescriptor,\n): PropertyDescriptor | undefined;\nexport function decorate(\n  decorators: Decorator[],\n  target: Target,\n  propertyKey?: PropertyKey,\n  attributes?: PropertyDescriptor,\n): Function | PropertyDescriptor | undefined {\n  if (!Array.isArray(decorators) || decorators.length === 0) {\n    throw new TypeError();\n  }\n\n  if (propertyKey !== undefined) {\n    return decorateProperty(\n      decorators as MemberDecorator[],\n      target,\n      propertyKey,\n      attributes,\n    );\n  }\n\n  if (typeof target === 'function') {\n    return decorateConstructor(decorators as ClassDecorator[], target);\n  }\n\n  return;\n}\n\nfunction getMetadataMap<MetadataValue>(\n  target: Target,\n  propertyKey?: PropertyKey,\n): Map<MetadataKey, MetadataValue> | undefined {\n  return Metadata.get(target) && Metadata.get(target).get(propertyKey);\n}\n\nfunction ordinaryGetOwnMetadata<MetadataValue>(\n  metadataKey: MetadataKey,\n  target: Target,\n  propertyKey?: PropertyKey,\n): MetadataValue | undefined {\n  if (target === undefined) {\n    throw new TypeError();\n  }\n  const metadataMap = getMetadataMap<MetadataValue>(target, propertyKey);\n  return metadataMap && metadataMap.get(metadataKey);\n}\n\nfunction createMetadataMap<MetadataValue>(\n  target: Target,\n  propertyKey?: PropertyKey,\n): Map<MetadataKey, MetadataValue> {\n  const targetMetadata =\n    Metadata.get(target) ||\n    new Map<PropertyKey | undefined, Map<MetadataKey, MetadataValue>>();\n  Metadata.set(target, targetMetadata);\n  const metadataMap =\n    targetMetadata.get(propertyKey) || new Map<MetadataKey, MetadataValue>();\n  targetMetadata.set(propertyKey, metadataMap);\n  return metadataMap;\n}\n\nfunction ordinaryDefineOwnMetadata<MetadataValue>(\n  metadataKey: MetadataKey,\n  metadataValue: MetadataValue,\n  target: Target,\n  propertyKey?: PropertyKey,\n): void {\n  if (propertyKey && !['string', 'symbol'].includes(typeof propertyKey)) {\n    throw new TypeError();\n  }\n\n  (\n    getMetadataMap<MetadataValue>(target, propertyKey) ||\n    createMetadataMap<MetadataValue>(target, propertyKey)\n  ).set(metadataKey, metadataValue);\n}\n\nfunction ordinaryGetMetadata<MetadataValue>(\n  metadataKey: MetadataKey,\n  target: Target,\n  propertyKey?: PropertyKey,\n): MetadataValue | undefined {\n  return ordinaryGetOwnMetadata<MetadataValue>(metadataKey, target, propertyKey)\n    ? ordinaryGetOwnMetadata<MetadataValue>(metadataKey, target, propertyKey)\n    : Object.getPrototypeOf(target)\n    ? ordinaryGetMetadata(\n        metadataKey,\n        Object.getPrototypeOf(target),\n        propertyKey,\n      )\n    : undefined;\n}\n\nexport function metadata<MetadataValue>(\n  metadataKey: MetadataKey,\n  metadataValue: MetadataValue,\n) {\n  return function decorator(target: Target, propertyKey?: PropertyKey): void {\n    ordinaryDefineOwnMetadata<MetadataValue>(\n      metadataKey,\n      metadataValue,\n      target,\n      propertyKey,\n    );\n  };\n}\n\nexport function getMetadata<MetadataValue>(\n  metadataKey: MetadataKey,\n  target: Target,\n  propertyKey?: PropertyKey,\n): MetadataValue | undefined {\n  return ordinaryGetMetadata<MetadataValue>(metadataKey, target, propertyKey);\n}\n\nexport function getOwnMetadata<MetadataValue>(\n  metadataKey: MetadataKey,\n  target: Target,\n  propertyKey?: PropertyKey,\n): MetadataValue | undefined {\n  return ordinaryGetOwnMetadata<MetadataValue>(\n    metadataKey,\n    target,\n    propertyKey,\n  );\n}\n\nexport function hasOwnMetadata(\n  metadataKey: MetadataKey,\n  target: Target,\n  propertyKey?: PropertyKey,\n): boolean {\n  return !!ordinaryGetOwnMetadata(metadataKey, target, propertyKey);\n}\n\nexport function hasMetadata(\n  metadataKey: MetadataKey,\n  target: Target,\n  propertyKey?: PropertyKey,\n): boolean {\n  return !!ordinaryGetMetadata(metadataKey, target, propertyKey);\n}\n\nexport function defineMetadata<MetadataValue>(\n  metadataKey: MetadataKey,\n  metadataValue: MetadataValue,\n  target: Target,\n  propertyKey?: PropertyKey,\n): void {\n  ordinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n}\n\nexport const Reflection = {\n  decorate,\n  defineMetadata,\n  getMetadata,\n  getOwnMetadata,\n  hasMetadata,\n  hasOwnMetadata,\n  metadata,\n};\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace Reflect {\n    let decorate: typeof Reflection.decorate;\n    let defineMetadata: typeof Reflection.defineMetadata;\n    let getMetadata: typeof Reflection.getMetadata;\n    let getOwnMetadata: typeof Reflection.getOwnMetadata;\n    let hasOwnMetadata: typeof Reflection.hasOwnMetadata;\n    let hasMetadata: typeof Reflection.hasMetadata;\n    let metadata: typeof Reflection.metadata;\n  }\n}\n\nObject.assign(Reflect, Reflection);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = exports.Sha256 = void 0;\nclass Sha256 {\n    /**\n     * Generates SHA-256 hash of string.\n     *\n     * @param   {string} msg - (Unicode) string to be hashed.\n     * @param   {Object} [options]\n     * @param   {string} [options.msgFormat=string] - Message format: 'string' for JavaScript string\n     *   (gets converted to UTF-8 for hashing); 'hex-bytes' for string of hex bytes ('616263' ≡ 'abc') .\n     * @param   {string} [options.outFormat=hex] - Output format: 'hex' for string of contiguous\n     *   hex bytes; 'hex-w' for grouping hex bytes into groups of (4 byte / 8 character) words.\n     * @returns {string} Hash of msg as hex character string.\n     */\n    hash(msg, options) {\n        const defaults = { msgFormat: 'string', outFormat: 'hex' };\n        const opt = Object.assign(defaults, options);\n        // note use throughout this routine of 'n >>> 0' to coerce Number 'n' to unsigned 32-bit integer\n        msg = utf8Encode(msg);\n        switch (opt.msgFormat) {\n            default: // default is to convert string to UTF-8, as SHA only deals with byte-streams\n            case 'string':\n                msg = utf8Encode(msg);\n                break;\n            case 'hex-bytes':\n                msg = hexBytesToString(msg);\n                break; // mostly for running tests\n        }\n        // constants [§4.2.2]\n        const K = [\n            0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n            0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n            0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n            0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n            0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n            0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n            0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n            0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n        ];\n        // initial hash value [§5.3.3]\n        const H = [\n            0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n        ];\n        // PREPROCESSING [§6.2.1]\n        msg += String.fromCharCode(0x80); // add trailing '1' bit (+ 0's padding) to string [§5.1.1]\n        // convert string msg into 512-bit blocks (array of 16 32-bit integers) [§5.2.1]\n        const l = msg.length / 4 + 2; // length (in 32-bit integers) of msg + ‘1’ + appended length\n        const N = Math.ceil(l / 16); // number of 16-integer (512-bit) blocks required to hold 'l' ints\n        const M = new Array(N); // message M is N×16 array of 32-bit integers\n        for (let i = 0; i < N; i++) {\n            M[i] = new Array(16);\n            for (let j = 0; j < 16; j++) { // encode 4 chars per integer (64 per block), big-endian encoding\n                M[i][j] = (msg.charCodeAt(i * 64 + j * 4 + 0) << 24) | (msg.charCodeAt(i * 64 + j * 4 + 1) << 16)\n                    | (msg.charCodeAt(i * 64 + j * 4 + 2) << 8) | (msg.charCodeAt(i * 64 + j * 4 + 3) << 0);\n            } // note running off the end of msg is ok 'cos bitwise ops on NaN return 0\n        }\n        // add length (in bits) into final pair of 32-bit integers (big-endian) [§5.1.1]\n        // note: most significant word would be (len-1)*8 >>> 32, but since JS converts\n        // bitwise-op args to 32 bits, we need to simulate this by arithmetic operators\n        const lenHi = ((msg.length - 1) * 8) / Math.pow(2, 32);\n        const lenLo = ((msg.length - 1) * 8) >>> 0;\n        M[N - 1][14] = Math.floor(lenHi);\n        M[N - 1][15] = lenLo;\n        // HASH COMPUTATION [§6.2.2]\n        for (let i = 0; i < N; i++) {\n            const W = new Array(64);\n            // 1 - prepare message schedule 'W'\n            for (let t = 0; t < 16; t++)\n                W[t] = M[i][t];\n            for (let t = 16; t < 64; t++) {\n                W[t] = (this.σ1(W[t - 2]) + W[t - 7] + this.σ0(W[t - 15]) + W[t - 16]) >>> 0;\n            }\n            // 2 - initialise working variables a, b, c, d, e, f, g, h with previous hash value\n            let a = H[0], b = H[1], c = H[2], d = H[3], e = H[4], f = H[5], g = H[6], h = H[7];\n            // 3 - main loop (note '>>> 0' for 'addition modulo 2^32')\n            for (let t = 0; t < 64; t++) {\n                const T1 = h + this.Σ1(e) + this.Ch(e, f, g) + K[t] + W[t];\n                const T2 = this.Σ0(a) + this.Maj(a, b, c);\n                h = g;\n                g = f;\n                f = e;\n                e = (d + T1) >>> 0;\n                d = c;\n                c = b;\n                b = a;\n                a = (T1 + T2) >>> 0;\n            }\n            // 4 - compute the new intermediate hash value (note '>>> 0' for 'addition modulo 2^32')\n            H[0] = (H[0] + a) >>> 0;\n            H[1] = (H[1] + b) >>> 0;\n            H[2] = (H[2] + c) >>> 0;\n            H[3] = (H[3] + d) >>> 0;\n            H[4] = (H[4] + e) >>> 0;\n            H[5] = (H[5] + f) >>> 0;\n            H[6] = (H[6] + g) >>> 0;\n            H[7] = (H[7] + h) >>> 0;\n        }\n        // convert H0..H7 to hex strings (with leading zeros)\n        for (let h = 0; h < H.length; h++)\n            H[h] = ('00000000' + H[h].toString(16)).slice(-8);\n        // concatenate H0..H7, with separator if required\n        const separator = opt.outFormat == 'hex-w' ? ' ' : '';\n        return H.join(separator);\n        /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n        function utf8Encode(str) {\n            try {\n                return new TextEncoder().encode(str).reduce((prev, curr) => prev + String.fromCharCode(curr), '');\n            }\n            catch (e) { // no TextEncoder available?\n                return unescape(encodeURIComponent(str)); // monsur.hossa.in/2012/07/20/utf-8-in-javascript.html\n            }\n        }\n        function hexBytesToString(hexStr) {\n            const str = hexStr.replace(' ', ''); // allow space-separated groups\n            return str == '' ? '' : str.match(/.{2}/g).map(byte => String.fromCharCode(parseInt(byte, 16))).join('');\n        }\n    }\n    /**\n     * Rotates right (circular right shift) value x by n positions [§3.2.4].\n     * @private\n     */\n    ROTR(n, x) {\n        return (x >>> n) | (x << (32 - n));\n    }\n    /**\n     * Logical functions [§4.1.2].\n     * @private\n     */\n    Σ0(x) { return this.ROTR(2, x) ^ this.ROTR(13, x) ^ this.ROTR(22, x); }\n    Σ1(x) { return this.ROTR(6, x) ^ this.ROTR(11, x) ^ this.ROTR(25, x); }\n    σ0(x) { return this.ROTR(7, x) ^ this.ROTR(18, x) ^ (x >>> 3); }\n    σ1(x) { return this.ROTR(17, x) ^ this.ROTR(19, x) ^ (x >>> 10); }\n    Ch(x, y, z) { return (x & y) ^ (~x & z); } // 'choice'\n    Maj(x, y, z) { return (x & y) ^ (x & z) ^ (y & z); } // 'majority'\n}\nexports.Sha256 = Sha256;\nexports.sha256 = new Sha256();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createUniqueHash = void 0;\nconst sha256_1 = require(\"./sha256\");\nfunction createUniqueHash(key) {\n    return sha256_1.sha256.hash(key);\n}\nexports.createUniqueHash = createUniqueHash;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MissingProvidedServiceTypeError = void 0;\n/**\n * Thrown when service is registered without type.\n */\nclass MissingProvidedServiceTypeError extends Error {\n    constructor(identifier) {\n        super(`Cannot determine a class of the requesting service '${JSON.stringify(identifier)}'`);\n        this.name = 'ServiceNotFoundError';\n        Object.setPrototypeOf(this, MissingProvidedServiceTypeError.prototype);\n    }\n}\nexports.MissingProvidedServiceTypeError = MissingProvidedServiceTypeError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectionToken = exports.Token = void 0;\n/**\n * Used to create unique typed service identifier.\n * Useful when service has only interface, but don't have a class.\n */\nclass Token {\n    /**\n     * @param name Token name, optional and only used for debugging purposes.\n     */\n    constructor(name) {\n        this.name = name;\n    }\n}\nexports.Token = Token;\nclass InjectionToken extends Token {\n}\nexports.InjectionToken = InjectionToken;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServiceNotFoundError = void 0;\nconst Token_1 = require(\"../Token\");\n/**\n * Thrown when requested service was not found.\n */\nclass ServiceNotFoundError extends Error {\n    constructor(identifier) {\n        super();\n        this.name = 'ServiceNotFoundError';\n        if (typeof identifier === 'string') {\n            this.message =\n                `Service '${identifier}' was not found, looks like it was not registered in the container. ` +\n                    `Register it by calling Container.set('${JSON.stringify(identifier)}', ...) before using service.`;\n        }\n        else if (identifier instanceof Token_1.Token && identifier.name) {\n            this.message =\n                `Service '${identifier.name}' was not found, looks like it was not registered in the container. ` +\n                    `Register it by calling Container.set before using service.`;\n        }\n        else if (identifier instanceof Token_1.Token) {\n            this.message =\n                `Service with a given token was not found, looks like it was not registered in the container. ` +\n                    `Register it by calling Container.set before using service.`;\n        }\n        Object.setPrototypeOf(this, ServiceNotFoundError.prototype);\n    }\n}\nexports.ServiceNotFoundError = ServiceNotFoundError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.constructorWatcherService = exports.ConstructorWatcherService = void 0;\nclass ConstructorWatcherService {\n    constructor() {\n        this._constructors = new Map();\n    }\n    getConstructor(name) {\n        return this._constructors.get(name);\n    }\n    getByClass(currentClass) {\n        return this._constructors.get(currentClass.name)['value'];\n    }\n    createConstructor(name, value) {\n        if (this._constructors.has(name)) {\n            return this.getConstructor(name);\n        }\n        this._constructors.set(name, value);\n        return this.getConstructor(name);\n    }\n    triggerOnInit(currentClass) {\n        const currentConstructor = this._constructors.get(currentClass.name);\n        if (currentConstructor['value'] && currentConstructor['value'].OnInit) {\n            currentConstructor['value'].OnInit.bind(currentConstructor['value'])();\n        }\n    }\n}\nexports.ConstructorWatcherService = ConstructorWatcherService;\nexports.constructorWatcherService = new ConstructorWatcherService();\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./constructor-watcher\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerInstance = void 0;\nconst Container_1 = require(\"./Container\");\nconst MissingProvidedServiceTypeError_1 = require(\"./error/MissingProvidedServiceTypeError\");\nconst ServiceNotFoundError_1 = require(\"./error/ServiceNotFoundError\");\nconst Token_1 = require(\"./Token\");\nconst constructor_watcher_1 = require(\"../services/constructor-watcher\");\n/**\n * TypeDI can have multiple containers.\n * One container is ContainerInstance.\n */\nclass ContainerInstance {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(id) {\n        // -------------------------------------------------------------------------\n        // Private Properties\n        // -------------------------------------------------------------------------\n        /**\n         * All registered services.\n         */\n        this.services = new Map();\n        this.id = id;\n    }\n    /**\n     * Checks if the service with given name or type is registered service container.\n     * Optionally, parameters can be passed in case if instance is initialized in the container for the first time.\n     */\n    has(identifier) {\n        return !!this.findService(identifier);\n    }\n    /**\n     * Retrieves the service with given name or type from the service container.\n     * Optionally, parameters can be passed in case if instance is initialized in the container for the first time.\n     */\n    get(identifier) {\n        const globalContainer = Container_1.Container.of(undefined);\n        const service = globalContainer.findService(identifier);\n        const scopedService = this.findService(identifier);\n        if (service && service.global === true) {\n            return this.getServiceValue(identifier, service);\n        }\n        if (scopedService) {\n            return this.getServiceValue(identifier, scopedService);\n        }\n        if (service && this !== globalContainer) {\n            const clonedService = Object.assign({}, service);\n            clonedService.value = undefined;\n            const value = this.getServiceValue(identifier, clonedService);\n            this.set(identifier, value);\n            return value;\n        }\n        return this.getServiceValue(identifier, service);\n    }\n    /**\n     * Gets all instances registered in the container of the given service identifier.\n     * Used when service defined with multiple: true flag.\n     */\n    getMany(id) {\n        return this.filterServices(id).map(service => this.getServiceValue(id, service));\n    }\n    /**\n     * Sets a value for the given type or service name in the container.\n     */\n    set(identifierOrServiceMetadata, value) {\n        if (identifierOrServiceMetadata instanceof Array) {\n            identifierOrServiceMetadata.forEach((v) => this.set(v));\n            return this;\n        }\n        if (typeof identifierOrServiceMetadata === 'string' ||\n            identifierOrServiceMetadata instanceof Token_1.Token) {\n            return this.set({ id: identifierOrServiceMetadata, value: value });\n        }\n        if (typeof identifierOrServiceMetadata === 'object' &&\n            identifierOrServiceMetadata.service) {\n            return this.set({\n                id: identifierOrServiceMetadata.service,\n                value: value\n            });\n        }\n        if (identifierOrServiceMetadata instanceof Function) {\n            return this.set({\n                type: identifierOrServiceMetadata,\n                id: identifierOrServiceMetadata,\n                value: value\n            });\n        }\n        // const newService: ServiceMetadata<any, any> = arguments.length === 1 && typeof identifierOrServiceMetadata === 'object'  && !(identifierOrServiceMetadata instanceof Token) ? identifierOrServiceMetadata : undefined;\n        const newService = identifierOrServiceMetadata;\n        const service = this.services.get(newService);\n        if (service && service.multiple !== true) {\n            Object.assign(service, newService);\n        }\n        else {\n            this.services.set(newService, newService);\n        }\n        return this;\n    }\n    /**\n     * Removes services with a given service identifiers (tokens or types).\n     */\n    remove(...ids) {\n        ids.forEach(id => {\n            this.filterServices(id).forEach(service => {\n                this.services.delete(service);\n            });\n        });\n        return this;\n    }\n    /**\n     * Completely resets the container by removing all previously registered services from it.\n     */\n    reset() {\n        this.services.clear();\n        return this;\n    }\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Filters registered service in the with a given service identifier.\n     */\n    filterServices(identifier) {\n        return Array.from(this.services.values()).filter(service => {\n            if (service.id) {\n                return service.id === identifier;\n            }\n            if (service.type && identifier instanceof Function) {\n                return (service.type === identifier ||\n                    identifier.prototype instanceof service.type);\n            }\n            return false;\n        });\n    }\n    /**\n     * Finds registered service in the with a given service identifier.\n     */\n    findService(identifier) {\n        return Array.from(this.services.values()).find(service => {\n            if (service.id) {\n                if (identifier instanceof Object &&\n                    service.id instanceof Token_1.Token &&\n                    identifier.service instanceof Token_1.Token) {\n                    return service.id === identifier.service;\n                }\n                return service.id === identifier;\n            }\n            if (service.type && identifier instanceof Function) {\n                return service.type === identifier; // todo: not sure why it was here || identifier.prototype instanceof service.type;\n            }\n            return false;\n        });\n    }\n    /**\n     * Gets service value.\n     */\n    getServiceValue(identifier, service) {\n        // find if instance of this object already initialized in the container and return it if it is\n        if (service && service.value !== undefined) {\n            return service.value;\n        }\n        // if named service was requested and its instance was not found plus there is not type to know what to initialize,\n        // this means service was not pre-registered and we throw an exception\n        if ((!service || !service.type) &&\n            (!service || !service.factory) &&\n            (typeof identifier === 'string' || identifier instanceof Token_1.Token)) {\n            throw new ServiceNotFoundError_1.ServiceNotFoundError(identifier);\n        }\n        // at this point we either have type in service registered, either identifier is a target type\n        let type = undefined;\n        if (service && service.type) {\n            type = service.type;\n        }\n        else if (service && service.id instanceof Function) {\n            type = service.id;\n        }\n        else if (identifier instanceof Function) {\n            type = identifier;\n            // } else if (identifier instanceof Object && (identifier as { service: Token<any> }).service instanceof Token) {\n            //     type = (identifier as { service: Token<any> }).service;\n        }\n        // if service was not found then create a new one and register it\n        if (!service) {\n            if (!type) {\n                throw new MissingProvidedServiceTypeError_1.MissingProvidedServiceTypeError(identifier);\n            }\n            service = { type: type };\n            this.services.set(service, service);\n        }\n        // setup constructor parameters for a newly initialized service\n        const paramTypes = type && Reflect && Reflect.getMetadata\n            ? Reflect.getMetadata('design:paramtypes', type)\n            : undefined;\n        let params = paramTypes\n            ? this.initializeParams(type, paramTypes)\n            : [];\n        // if factory is set then use it to create service instance\n        let value;\n        if (service.factory) {\n            // filter out non-service parameters from created service constructor\n            // non-service parameters can be, lets say Car(name: string, isNew: boolean, engine: Engine)\n            // where name and isNew are non-service parameters and engine is a service parameter\n            params = params.filter(param => param !== undefined);\n            if (service.factory instanceof Array) {\n                // use special [Type, 'create'] syntax to allow factory services\n                // in this case Type instance will be obtained from Container and its method 'create' will be called\n                value = this.get(service.factory[0])[service.factory[1]](...params);\n            }\n            else {\n                // regular factory function\n                value = service.factory(...params, this);\n            }\n        }\n        else {\n            // otherwise simply create a new object instance\n            if (!type) {\n                throw new MissingProvidedServiceTypeError_1.MissingProvidedServiceTypeError(identifier);\n            }\n            params.unshift(null);\n            // 'extra feature' - always pass container instance as the last argument to the service function\n            // this allows us to support javascript where we don't have decorators and emitted metadata about dependencies\n            // need to be injected, and user can use provided container to get instances he needs\n            params.push(this);\n            if (type.prototype.OnBefore) {\n                type.prototype.OnBefore.bind(type)();\n            }\n            value = new (type.bind.apply(type, params))();\n            constructor_watcher_1.constructorWatcherService.createConstructor(type['name'], {\n                type,\n                value\n            });\n            // if (value.render) {\n            //     debugger\n            // //    const test = new value['__proto__'].constructor()\n            // Extend React class Correctly\n            //    Object.assign(value['__proto__'].constructor.prototype, value);\n            //    console.log(value['__proto__'].constructor.prototype);\n            //     console.log(type['metadata']['moduleName'], value);\n            //     console.log(value['__proto__'].constructor)\n            // }\n            if (value.OnInit) {\n                value.OnInit.bind(value)();\n            }\n        }\n        if (service && !service.transient && value) {\n            service.value = value;\n        }\n        if (type) {\n            this.applyPropertyHandlers(type, value);\n        }\n        return value;\n    }\n    /**\n     * Initializes all parameter types for a given target service class.\n     */\n    initializeParams(type, paramTypes) {\n        return paramTypes.map((paramType, index) => {\n            const paramHandler = Array.from(Container_1.Container.handlers.values()).find(handler => handler.object === type && handler.index === index);\n            if (paramHandler) {\n                return paramHandler.value(this);\n            }\n            if (paramType &&\n                paramType.name &&\n                !this.isTypePrimitive(paramType.name)) {\n                return this.get(paramType);\n            }\n            return undefined;\n        });\n    }\n    /**\n     * Checks if given type is primitive (e.g. string, boolean, number, object).\n     */\n    isTypePrimitive(param) {\n        return (['string', 'boolean', 'number', 'object'].indexOf(param.toLowerCase()) !== -1);\n    }\n    /**\n     * Applies all registered handlers on a given target class.\n     */\n    applyPropertyHandlers(target, instance) {\n        Container_1.Container.handlers.forEach(handler => {\n            if (typeof handler.index === 'number') {\n                return;\n            }\n            if (handler.object.constructor !== target &&\n                !(target.prototype instanceof handler.object.constructor)) {\n                return;\n            }\n            instance[handler.propertyName] = handler.value(this);\n        });\n    }\n}\nexports.ContainerInstance = ContainerInstance;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Container = void 0;\nconst ContainerInstance_1 = require(\"./ContainerInstance\");\n/**\n * Service container.\n */\nclass Container {\n    // -------------------------------------------------------------------------\n    // Public Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets a separate container instance for the given instance id.\n     */\n    static of(instanceId) {\n        if (instanceId === undefined)\n            return this.globalInstance;\n        let container = this.instances.get(instanceId);\n        if (!container) {\n            container = new ContainerInstance_1.ContainerInstance(instanceId);\n            this.instances.set(instanceId, container);\n        }\n        return container;\n    }\n    /**\n     * Checks if the service with given name or type is registered service container.\n     * Optionally, parameters can be passed in case if instance is initialized in the container for the first time.\n     */\n    static has(identifier) {\n        return this.globalInstance.has(identifier);\n    }\n    /**\n     * Retrieves the service with given name or type from the service container.\n     * Optionally, parameters can be passed in case if instance is initialized in the container for the first time.\n     */\n    static get(identifier) {\n        return this.globalInstance.get(identifier);\n    }\n    /**\n     * Gets all instances registered in the container of the given service identifier.\n     * Used when service defined with multiple: true flag.\n     */\n    static getMany(id) {\n        return this.globalInstance.getMany(id);\n    }\n    /**\n     * Sets a value for the given type or service name in the container.\n     */\n    static set(identifierOrServiceMetadata, value) {\n        this.globalInstance.set(identifierOrServiceMetadata, value);\n        return this;\n    }\n    /**\n     * Removes services with a given service identifiers (tokens or types).\n     */\n    static remove(...ids) {\n        this.globalInstance.remove(...ids);\n        return this;\n    }\n    /**\n     * Completely resets the container by removing all previously registered services and handlers from it.\n     */\n    static reset(containerId) {\n        if (containerId) {\n            const instance = this.instances.get(containerId);\n            if (instance) {\n                instance.reset();\n                this.instances.delete(containerId);\n            }\n        }\n        else {\n            this.globalInstance.reset();\n            Array.from(this.instances.values()).forEach(i => i.reset());\n        }\n        return this;\n    }\n    /**\n     * Registers a new handler.\n     */\n    static registerHandler(handler) {\n        this.handlers.set(handler, handler);\n        return this;\n    }\n    /**\n     * Helper method that imports given services.\n     */\n    static import(services) {\n        return this;\n    }\n}\nexports.Container = Container;\n// -------------------------------------------------------------------------\n// Private Static Properties\n// -------------------------------------------------------------------------\n/**\n * Global container instance.\n */\nContainer.globalInstance = new ContainerInstance_1.ContainerInstance(undefined);\n/**\n * Other containers created using Container.of method.\n */\nContainer.instances = new Map();\n/**\n * All registered handlers.\n */\nContainer.handlers = new Map();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReflectDecorator = void 0;\nconst create_unique_hash_1 = require(\"./create-unique-hash\");\nconst Container_1 = require(\"../container/Container\");\nconst Token_1 = require(\"../container/Token\");\nfunction ReflectDecorator(options, metaOptions) {\n    return (target) => {\n        const uniqueHashForClass = (0, create_unique_hash_1.createUniqueHash)(`${target}${JSON.stringify(options, null, 4)}`);\n        Object.defineProperty(target, 'originalName', {\n            value: target.name || target.constructor.name,\n            writable: false\n        });\n        Object.defineProperty(target, 'name', {\n            value: uniqueHashForClass,\n            writable: true\n        });\n        const nameCapitalized = (name) => name.charAt(0).toUpperCase() + name.slice(1);\n        target['metadata'] = {\n            moduleName: target['originalName'],\n            moduleHash: uniqueHashForClass,\n            options: options || null,\n            type: metaOptions.type,\n            raw: `\n        ---- @${nameCapitalized(metaOptions.type)} '${target.name}' metadata----\n        @${nameCapitalized(metaOptions.type)}(${JSON.stringify(options, null, 4)})\n        ${target['originalName']}\n        `\n        };\n        const service = {\n            type: target\n        };\n        if (typeof options === 'string' || options instanceof Token_1.Token) {\n            service.id = options;\n            service.multiple = options.multiple;\n            service.global = options.global || false;\n            service.transient = options.transient;\n        }\n        else if (options) { // ServiceOptions\n            service.id = options.id;\n            service.factory = options.factory;\n            service.multiple = options.multiple;\n            service.global = options.global || false;\n            service.transient = options.transient;\n        }\n        Container_1.Container.set(service);\n    };\n}\nexports.ReflectDecorator = ReflectDecorator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Service = void 0;\nconst reflect_decorator_1 = require(\"../../helpers/reflect.decorator\");\n/**\n * Marks class as a service that can be injected using container.\n */\nfunction Service(options) {\n    return (0, reflect_decorator_1.ReflectDecorator)(options, { type: 'service' });\n}\nexports.Service = Service;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./on-before\"), exports);\n__exportStar(require(\"./on-init\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectionToken = exports.ContainerInstance = exports.Container = exports.Injectable = void 0;\nvar Service_1 = require(\"../decorators/service/Service\");\nObject.defineProperty(exports, \"Injectable\", { enumerable: true, get: function () { return Service_1.Service; } });\nvar Container_1 = require(\"./Container\");\nObject.defineProperty(exports, \"Container\", { enumerable: true, get: function () { return Container_1.Container; } });\nvar ContainerInstance_1 = require(\"./ContainerInstance\");\nObject.defineProperty(exports, \"ContainerInstance\", { enumerable: true, get: function () { return ContainerInstance_1.ContainerInstance; } });\nvar Token_1 = require(\"./Token\");\nObject.defineProperty(exports, \"InjectionToken\", { enumerable: true, get: function () { return Token_1.Token; } });\n__exportStar(require(\"./types/hooks/index\"), exports);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; }, 0);\n}","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export const isArray = (() => Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number'))();\n","export function isObject(x: any): x is Object {\n  return x !== null && typeof x === 'object';\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parentOrParents: Subscription | Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (this as any)._ctorUnsubscribe = true;\n      (this as any)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parentOrParents, _ctorUnsubscribe, _unsubscribe, _subscriptions } = (this as any);\n\n    this.closed = true;\n    this._parentOrParents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (let index = 0; index < _parentOrParents.length; ++index) {\n        const parent = _parentOrParents[index];\n        parent.remove(this);\n      }\n    }\n\n    if (isFunction(_unsubscribe)) {\n      // It's only possible to null _unsubscribe - to release the reference to\n      // any teardown function passed in the constructor - if the property was\n      // actually assigned in the constructor, as there are some classes that\n      // are derived from Subscriber (which derives from Subscription) that\n      // implement an _unsubscribe method as a mechanism for obtaining\n      // unsubscription notifications and some of those subscribers are\n      // recycled. Also, in some of those subscribers, _unsubscribe switches\n      // from a prototype method to an instance property - see notifyNext in\n      // RetryWhenSubscriber.\n      if (_ctorUnsubscribe) {\n        (this as any)._unsubscribe = undefined;\n      }\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      let index = -1;\n      let len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription. Can also be used to add a child subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * When a parent subscription is unsubscribed, any child subscriptions that were added to it are also unsubscribed.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    let subscription = (<Subscription>teardown);\n\n    if (!teardown) {\n      return Subscription.EMPTY;\n    }\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void)>teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          // This also covers the case where `subscription` is `Subscription.EMPTY`, which is always in `closed` state.\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default: {\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n    }\n\n    // Add `this` as parent of `subscription` if that's not already the case.\n    let { _parentOrParents } = subscription;\n    if (_parentOrParents === null) {\n      // If we don't have a parent, then set `subscription._parents` to\n      // the `this`, which is the common case that we optimize for.\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        // The `subscription` already has `this` as a parent.\n        return subscription;\n      }\n      // If there's already one parent, but not multiple, allocate an\n      // Array to store the rest of the parent Subscriptions.\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      // Only add `this` to the _parentOrParents list if it's not already there.\n      _parentOrParents.push(this);\n    } else {\n      // The `subscription` already has `this` as a parent.\n      return subscription;\n    }\n\n    // Optimize for the common case when adding the first subscription.\n    const subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber = (() =>\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { noop } from './noop';\nimport { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nconst ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ObjectUnsubscribedErrorImpl;\n})();\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse\n   * @deprecated use new Subject() instead\n  */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the *publish* operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval } from 'rxjs';\n * import { tap, publish, refCount } from 'rxjs/operators';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap((num) => console.log(`refCount ${num}`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap((num) => console.log(`publish ${num}`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the publish operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  } as MonoTypeOperatorFunction<T>;\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // )\n    // .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  /** @internal */\n  _isComplete = false;\n\n  constructor(public source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = (() => {\n  const connectableProto = <any>ConnectableObservable.prototype;\n  return {\n    operator: { value: null as null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null as null, writable: true },\n    _connection: { value: null as null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n  };\n})();\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // ).subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the keySelector function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Elsewhere, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the key field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the elementSelector function.\n *\n * ## Examples\n *\n * ### Group objects by id and return as array\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { mergeMap, groupBy, reduce } from 'rxjs/operators';\n *\n * of(\n *   {id: 1, name: 'JavaScript'},\n *   {id: 2, name: 'Parcel'},\n *   {id: 2, name: 'webpack'},\n *   {id: 1, name: 'TypeScript'},\n *   {id: 3, name: 'TSLint'}\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap((group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], []))),\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'JavaScript'},\n * //   { id: 1, name: 'TypeScript'} ]\n * //\n * // [ { id: 2, name: 'Parcel'},\n * //   { id: 2, name: 'webpack'} ]\n * //\n * // [ { id: 3, name: 'TSLint'} ]\n * ```\n *\n * ### Pivot data on the id field\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { groupBy, map, mergeMap, reduce } from 'rxjs/operators';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * )\n *   .pipe(\n *     groupBy(p => p.id, p => p.name),\n *     mergeMap(group$ =>\n *       group$.pipe(reduce((acc, cur) => [...acc, cur], [`${group$.key}`]))\n *     ),\n *     map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n *  )\n *  .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T | R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = new Map<K, Subject<T | R>>();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = (this.subjectSelector ? this.subjectSelector() : new Subject<R>()) as Subject<T | R>;\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T | any>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  /** @deprecated Do not construct this type. Internal use only */\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const { refCountSubscription, groupSubject } = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\nexport const queueScheduler = new QueueScheduler(QueueAction);\n\n/**\n * @deprecated renamed. Use {@link queueScheduler}\n */\nexport const queue = queueScheduler;\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```ts\n * import { empty } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```ts\n * import { empty, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return An \"empty\" Observable: emits only the complete\n * notification.\n * @deprecated Deprecated in favor of using {@link EMPTY} constant, or {@link scheduled} (e.g. `scheduled([], scheduler)`)\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  subscriber.complete();\n};\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let i = 0;\n    sub.add(scheduler.schedule(function () {\n      if (i === input.length) {\n        subscriber.complete();\n        return;\n      }\n      subscriber.next(input[i++]);\n      if (!subscriber.closed) {\n        sub.add(this.schedule());\n      }\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return scheduleArray(input, scheduler);\n  }\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { Observable } from '../Observable';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T>(a: T, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2>(a: T, b: T2, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: (T | SchedulerLike)[]): Observable<T>;\n\n// TODO(benlesh): Update the typings for this when we can switch to TS 3.x\nexport function of<T>(a: T): Observable<T>;\nexport function of<T, T2>(a: T, b: T2): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: T[]): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: 10'\n * // 'next: 20'\n * // 'next: 30'\n *\n * ```\n *\n * Emit the array `[1,2,3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1,2,3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: [1,2,3]'\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n * @method of\n * @owner Observable\n */\n\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n    return scheduleArray(args as T[], scheduler);\n  } else {\n    return fromArray(args as T[]);\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * ![](throw.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then emit an error\n * ```ts\n * import { throwError, concat, of } from 'rxjs';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // 7\n * // Error: oops!\n * ```\n *\n * ---\n *\n * ### Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 2\n * ```ts\n * import { throwError, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 2\n *     ? throwError('Twos are bad')\n *     : of('a', 'b', 'c')\n *   ),\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // a\n * // b\n * // c\n * // a\n * // b\n * // c\n * // Twos are bad\n * ```\n *\n * @see {@link Observable}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throwError\n * @owner Observable\n */\nexport function throwError(error: any, scheduler?: SchedulerLike): Observable<never> {\n  if (!scheduler) {\n    return new Observable(subscriber => subscriber.error(error));\n  } else {\n    return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n  }\n}\n\ninterface DispatchArg {\n  error: any;\n  subscriber: Subscriber<any>;\n}\n\nfunction dispatch({ error, subscriber }: DispatchArg) {\n  subscriber.error(error);\n}\n","import { PartialObserver } from './types';\nimport { Observable } from './Observable';\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { deprecate } from 'util';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated NotificationKind is deprecated as const enums are not compatible with isolated modules. Use a string literal instead.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: 'N' | 'E' | 'C', public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return of(this.value);\n      case 'E':\n        return throwError(this.error);\n      case 'C':\n        return empty();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n * Ensure values in subscribe are called just before browser repaint.\n * ```ts\n * import { interval } from 'rxjs';\n * import { observeOn } from 'rxjs/operators';\n *\n * const intervals = interval(10);                // Intervals are scheduled\n *                                                // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler),          // ...but we will observe on animationFrame\n * )                                              // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  /** @nocollapse */\n  static dispatch(this: SchedulerAction<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: SchedulerLike,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    const destination = this.destination as Subscription;\n    destination.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Subject } from './Subject';\nimport { SchedulerLike } from './types';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * A variant of Subject that \"replays\" or emits old values to new subscribers.\n * It buffers a set number of values and will emit those values immediately to\n * any new subscribers in addition to emitting new values to existing subscribers.\n *\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: (ReplayEvent<T> | T)[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n  private _infiniteTimeWindow: boolean = false;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: SchedulerLike) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n\n    if (windowTime === Number.POSITIVE_INFINITY) {\n      this._infiniteTimeWindow = true;\n      this.next = this.nextInfiniteTimeWindow;\n    } else {\n      this.next = this.nextTimeWindow;\n    }\n  }\n\n  private nextInfiniteTimeWindow(value: T): void {\n    if (!this.isStopped) {\n      const _events = this._events;\n      _events.push(value);\n      // Since this method is invoked in every next() call than the buffer\n      // can overgrow the max size only by one item\n      if (_events.length > this._bufferSize) {\n        _events.shift();\n      }\n    }\n    super.next(value);\n  }\n\n  private nextTimeWindow(value: T): void {\n    if (!this.isStopped) {\n      this._events.push(new ReplayEvent(this._getNow(), value));\n      this._trimBufferThenGetEvents();\n    }\n    super.next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n    const _infiniteTimeWindow = this._infiniteTimeWindow;\n    const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    const len = _events.length;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.isStopped || this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    if (_infiniteTimeWindow) {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next(<T>_events[i]);\n      }\n    } else {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next((<ReplayEvent<T>>_events[i]).value);\n      }\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = <ReplayEvent<T>[]>this._events;\n\n    const eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","let nextHandle = 1;\nconst RESOLVED = (() => Promise.resolve())();\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    RESOLVED.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\nexport const asapScheduler = new AsapScheduler(AsapAction);\n\n/**\n * @deprecated renamed. Use {@link asapScheduler}\n */\nexport const asap = asapScheduler;\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated renamed. Use {@link asyncScheduler}\n */\nexport const async = asyncScheduler;","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n\n/**\n * @deprecated renamed. Use {@link animationFrameScheduler}\n */\nexport const animationFrame = animationFrameScheduler;\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction as any,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @nodoc\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable<T>(obj: any): obj is Observable<T> {\n  return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n","export interface ArgumentOutOfRangeError extends Error {\n}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  new(): ArgumentOutOfRangeError;\n}\n\nconst ArgumentOutOfRangeErrorImpl = (() => {\n  function ArgumentOutOfRangeErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n  }\n\n  ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ArgumentOutOfRangeErrorImpl;\n})();\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = ArgumentOutOfRangeErrorImpl as any;","export interface EmptyError extends Error {\n}\n\nexport interface EmptyErrorCtor {\n  new(): EmptyError;\n}\n\nconst EmptyErrorImpl = (() => {\n  function EmptyErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'no elements in sequence';\n    this.name = 'EmptyError';\n    return this;\n  }\n\n  EmptyErrorImpl.prototype = Object.create(Error.prototype);\n\n  return EmptyErrorImpl;\n})();\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = EmptyErrorImpl as any;","export interface TimeoutError extends Error {\n}\n\nexport interface TimeoutErrorCtor {\n  new(): TimeoutError;\n}\n\nconst TimeoutErrorImpl = (() => {\n  function TimeoutErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    return this;\n  }\n\n  TimeoutErrorImpl.prototype = Object.create(Error.prototype);\n\n  return TimeoutErrorImpl;\n})();\n\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link operators/timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = TimeoutErrorImpl as any;\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: R;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n\n// tslint:disable:max-line-length\n/** @deprecated resultSelector is no longer supported, use a mapping function. */\nexport function bindCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindCallback<R1, R2, R3, R4>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): () => Observable<any[]>;\nexport function bindCallback<R1, R2, R3>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindCallback<R1, R2>(callbackFunc: (callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindCallback<R1>(callbackFunc: (callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindCallback(callbackFunc: (callback: () => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<any[]>;\nexport function bindCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindCallback<A1>(callbackFunc: (arg1: A1, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<any[]>;\nexport function bindCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>;\n\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((result: R) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R>;\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((...results: R[]) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R[]>;\n\nexport function bindCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\n// tslint:enable:max-line-length\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback<T>(\n  callbackFunc: Function,\n  resultSelector?: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindCallback(callbackFunc, scheduler)(...args).pipe(\n        map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)),\n      );\n    }\n  }\n\n  return function (this: any, ...args: any[]): Observable<T> {\n    const context = this;\n    let subject: AsyncSubject<T>;\n    const params = {\n      context,\n      subject,\n      callbackFunc,\n      scheduler,\n    };\n    return new Observable<T>(subscriber => {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        const state: DispatchState<T> = {\n          args, subscriber, params,\n        };\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, state);\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  args: any[];\n  subscriber: Subscriber<T>;\n  params: ParamsContext<T>;\n}\n\ninterface ParamsContext<T> {\n  callbackFunc: Function;\n  scheduler: SchedulerLike;\n  context: any;\n  subject: AsyncSubject<T>;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const self = this;\n  const { args, subscriber, params } = state;\n  const { callbackFunc, context, scheduler } = params;\n  let { subject } = params;\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n      this.add(scheduler.schedule<NextState<T>>(dispatchNext, 0, { value, subject }));\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface NextState<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(this: SchedulerAction<NextState<T>>, state: NextState<T>) {\n  const { value, subject } = state;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface ErrorState<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(this: SchedulerAction<ErrorState<T>>, state: ErrorState<T>) {\n  const { err, subject } = state;\n  subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function bindNodeCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindNodeCallback<R1, R2, R3, R4>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<R1, R2, R3>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<R1, R2>(callbackFunc: (callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindNodeCallback<R1>(callbackFunc: (callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindNodeCallback(callbackFunc: (callback: (err: any) => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindNodeCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindNodeCallback<A1>(callbackFunc: (arg1: A1, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindNodeCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>; /* tslint:enable:max-line-length */\n\nexport function bindNodeCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback<T>(\n  callbackFunc: Function,\n  resultSelector: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(\n        map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n      );\n    }\n  }\n\n  return function(this: any, ...args: any[]): Observable<T> {\n    const params: ParamsState<T> = {\n      subject: undefined,\n      args,\n      callbackFunc,\n      scheduler,\n      context: this,\n    };\n    return new Observable<T>(subscriber => {\n      const { context } = params;\n      let { subject } = params;\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            const err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, { params, subscriber, context });\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  subscriber: Subscriber<T>;\n  context: any;\n  params: ParamsState<T>;\n}\n\ninterface ParamsState<T> {\n  callbackFunc: Function;\n  args: any[];\n  scheduler: SchedulerLike;\n  subject: AsyncSubject<T>;\n  context: any;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const { params, subscriber, context } = state;\n  const { callbackFunc, args, scheduler } = params;\n  let subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const err = innerArgs.shift();\n      if (err) {\n        this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n      } else {\n        const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        this.add(scheduler.schedule<DispatchNextArg<T>>(dispatchNext, 0, { value, subject }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = (iterable as any)[Symbol_iterator]();\n\n  do {\n    let item: IteratorResult<T>;\n    try {\n      item = iterator.next();\n    } catch (err) {\n      subscriber.error(err);\n      return subscriber;\n    }\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","/**\n * Tests to see if the object is an ES2015 (ES6) Promise\n * @see {@link https://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects}\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return !!value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>): (subscriber: Subscriber<T>) => Subscription | void => {\n  if (!!result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (!!result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","import { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { subscribeTo } from './subscribeTo';\nimport { Observable } from '../Observable';\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue: undefined,\n  outerIndex: undefined,\n  innerSubscriber: InnerSubscriber<T, R>\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  innerSubscriber: Subscriber<R> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)\n): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  return subscribeTo(result)(innerSubscriber) as Subscription;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler  } from '../util/isScheduler';\nimport { isArray  } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Operator } from '../Operator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\n\nconst NONE = {};\n\n/* tslint:disable:max-line-length */\n\n// If called with a single array, it \"auto-spreads\" the array, with result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(sources: [O1], resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(sources: [O1, O2], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(sources: [O1, O2, O3], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5, O6], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(sources: O[], resultSelector: (...args: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// standard call, but with a result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// With a scheduler (deprecated)\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[], scheduler: SchedulerLike): Observable<ObservedValueOf<O>[]>;\n\n// Best case\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1]): Observable<[ObservedValueOf<O1>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[]): Observable<ObservedValueOf<O>[]>;\n\n// Standard calls\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>>(v1: O1, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: O[]): Observable<any[]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: Array<O | SchedulerLike>): Observable<any[]>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike>): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | SchedulerLike>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n * ## Examples\n * ### Combine two timer Observables\n * ```ts\n * import { combineLatest, timer } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * ### Combine an array of Observables\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { delay, starWith } from 'rxjs/operators';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000),   // emit 0 and then emit n after n seconds\n *     startWith(0),\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n *\n * ### Use project function to dynamically calculate the Body-Mass Index\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest(weight, height).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(\n  ...observables: (O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike)[]\n): Observable<R> {\n  let resultSelector: ((...values: Array<any>) => R) | undefined =  undefined;\n  let scheduler: SchedulerLike|undefined = undefined;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = observables.pop() as SchedulerLike;\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = observables.pop() as (...values: Array<any>) => R;\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0] as any;\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private resultSelector?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond?: number;\n\n  constructor(destination: Subscriber<R>, private resultSelector?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete!();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, undefined, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete!();\n    }\n  }\n\n  notifyNext(_outerValue: T, innerValue: R,\n             outerIndex: number): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next!(values.slice());\n      }\n    }\n  }\n\n  private _tryResultSelector(values: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector!.apply(this, values);\n    } catch (err) {\n      this.destination.error!(err);\n      return;\n    }\n    this.destination.next!(result);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => {\n      const observable: Subscribable<T> = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n        error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n        complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => input.then(\n      value => {\n        sub.add(scheduler.schedule(() => {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(() => subscriber.complete()));\n        }));\n      },\n      err => {\n        sub.add(scheduler.schedule(() => subscriber.error(err)));\n      }\n    )));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let iterator: Iterator<T>;\n    sub.add(() => {\n      // Finalize generators\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(() => {\n      iterator = input[Symbol_iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n        let value: T;\n        let done: boolean;\n        try {\n          const result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { ObservableInput, SchedulerLike, Observable } from 'rxjs';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see from\n * @see of\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated use {@link scheduled} instead. */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * ### Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * ---\n *\n * ### With async scheduler\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start\n * // end\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  } else {\n    return scheduled(input, scheduler);\n  }\n}\n","/** @prettier */\nimport { Subscription } from './Subscription';\nimport { Subscriber } from './Subscriber';\nimport { Observable } from './Observable';\nimport { subscribeTo } from './util/subscribeTo';\n\ninterface SimpleOuterSubscriberLike<T> {\n  /**\n   * A handler for inner next notifications from the inner subscription\n   * @param innerValue the value nexted by the inner producer\n   */\n  notifyNext(innerValue: T): void;\n  /**\n   * A handler for inner error notifications from the inner subscription\n   * @param err the error from the inner producer\n   */\n  notifyError(err: any): void;\n  /**\n   * A handler for inner complete notifications from the inner subscription.\n   */\n  notifyComplete(): void;\n}\n\nexport class SimpleInnerSubscriber<T> extends Subscriber<T> {\n  constructor(private parent: SimpleOuterSubscriberLike<any>) {\n    super();\n  }\n\n  protected _next(value: T): void {\n    this.parent.notifyNext(value);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete();\n    this.unsubscribe();\n  }\n}\n\nexport class ComplexInnerSubscriber<T, R> extends Subscriber<R> {\n  constructor(private parent: ComplexOuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n\nexport class SimpleOuterSubscriber<T, R> extends Subscriber<T> implements SimpleOuterSubscriberLike<R> {\n  notifyNext(innerValue: R): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(): void {\n    this.destination.complete();\n  }\n}\n\n/**\n * DO NOT USE (formerly \"OuterSubscriber\")\n * TODO: We want to refactor this and remove it. It is retaining values it shouldn't for long\n * periods of time.\n */\nexport class ComplexOuterSubscriber<T, R> extends Subscriber<T> {\n  /**\n   * @param _outerValue Used by: bufferToggle, delayWhen, windowToggle\n   * @param innerValue Used by: subclass default, combineLatest, race, bufferToggle, windowToggle, withLatestFrom\n   * @param _outerIndex Used by: combineLatest, race, withLatestFrom\n   * @param _innerSub Used by: delayWhen\n   */\n  notifyNext(_outerValue: T, innerValue: R, _outerIndex: number, _innerSub: ComplexInnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any): void {\n    this.destination.error(error);\n  }\n\n  /**\n   * @param _innerSub Used by: race, bufferToggle, delayWhen, windowToggle, windowWhen\n   */\n  notifyComplete(_innerSub: ComplexInnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n\nexport function innerSubscribe(result: any, innerSubscriber: Subscriber<any>): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  let subscription: Subscription;\n  try {\n    subscription = subscribeTo(result)(innerSubscriber) as Subscription;\n  } catch (error) {\n    innerSubscriber.error(error);\n  }\n  return subscription;\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```ts\n * import { of, interval } from 'rxjs';\n * import { mergeMap, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and merging the results of the Observables\n * obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: number) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error!(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result);\n  }\n\n  private _innerSub(ish: ObservableInput<R>): void {\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = innerSubscribe(ish, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete!();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(innerValue: R): void {\n    this.destination.next!(innerValue);\n  }\n\n  notifyComplete(): void {\n    const buffer = this.buffer;\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift()!);\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete!();\n    }\n  }\n}\n\n/**\n * @deprecated renamed. Use {@link mergeMap}\n */\nexport const flatMap = mergeMap;","\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map((ev) => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { take, map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(10))),\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<ObservableInput<T>, T> {\n  return mergeMap(identity, concurrent);\n}\n","\nimport { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function concatAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.png)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, take, concatAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev => interval(1000).pipe(take(4))),\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return mergeAll<T>(1);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>>(v1: O1, scheduler: SchedulerLike): Observable<ObservedValueOf<O1>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\n\nexport function concat<O1 extends ObservableInput<any>>(v1: O1): Observable<ObservedValueOf<O1>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\nexport function concat<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O extends ObservableInput<any>>(...observables: (O | SchedulerLike)[]): Observable<ObservedValueOf<O>>;\nexport function concat<R>(...observables: ObservableInput<any>[]): Observable<R>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<R>(...observables: (ObservableInput<any> | SchedulerLike)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n * ### Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n * ```ts\n * import { concat, interval, range } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * ### Concatenate 3 Observables\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * ### Concatenate the same Observable to repeat it\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {SchedulerLike} [scheduler=null] An optional {@link SchedulerLike} to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<O extends ObservableInput<any>, R>(...observables: Array<O | SchedulerLike>): Observable<ObservedValueOf<O> | R> {\n  return concatAll<R>()(of(...observables));\n}\n","import { Observable } from '../Observable';\nimport { SubscribableOrPromise, ObservedValueOf, ObservableInput } from '../types';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * ## Example\n * ### Subscribe to either an Observable of clicks or an Observable of interval, at random\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(function () {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer<R extends ObservableInput<any> | void>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>(subscriber => {\n    let input: R | void;\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    const source = input ? from(input as ObservableInput<ObservedValueOf<R>>) : empty();\n    return source.subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, ObservedValuesFromArray, ObservedValueOf, SubscribableOrPromise } from '../types';\nimport { isArray } from '../util/isArray';\nimport { map } from '../operators/map';\nimport { isObject } from '../util/isObject';\nimport { isObservable } from '../util/isObservable';\nimport { from } from './from';\n\n/* tslint:disable:max-line-length */\n\n// forkJoin(a$, b$, c$)\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(v1: SubscribableOrPromise<T>): Observable<[T]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n// forkJoin([a$, b$, c$]);\n// TODO(benlesh): Uncomment for TS 3.0\n// export function forkJoin(sources: []): Observable<never>;\nexport function forkJoin<A>(sources: [ObservableInput<A>]): Observable<[A]>;\nexport function forkJoin<A, B>(sources: [ObservableInput<A>, ObservableInput<B>]): Observable<[A, B]>;\nexport function forkJoin<A, B, C>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<[A, B, C]>;\nexport function forkJoin<A, B, C, D>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<[A, B, C, D]>;\nexport function forkJoin<A, B, C, D, E>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<[A, B, C, D, E]>;\nexport function forkJoin<A, B, C, D, E, F>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>, ObservableInput<F>]): Observable<[A, B, C, D, E, F]>;\nexport function forkJoin<A extends ObservableInput<any>[]>(sources: A): Observable<ObservedValuesFromArray<A>[]>;\n\n// forkJoin({})\nexport function forkJoin(sourcesObject: {}): Observable<never>;\nexport function forkJoin<T, K extends keyof T>(sourcesObject: T): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function forkJoin(...args: Array<ObservableInput<any>|Function>): Observable<any>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(...sources: ObservableInput<T>[]): Observable<T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed observables to complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first observable,\n * second value is the last thing emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, resulting\n * objects will have the same keys as the dictionary passed, with their last values they've emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input observables, whenever any of\n * that observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input observable errors at some point, `forkJoin` will error as well and all other observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output observable is supposed to emit a result.\n *\n * ## Examples\n *\n * ### Use forkJoin with a dictionary of observable inputs\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000),\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * ### Use forkJoin with an array of observable inputs\n * ```ts\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000),\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(\n  ...sources: any[]\n): Observable<any> {\n  if (sources.length === 1) {\n    const first = sources[0];\n    if (isArray(first)) {\n      return forkJoinInternal(first, null);\n    }\n    // TODO(benlesh): isObservable check will not be necessary when deprecated path is removed.\n    if (isObject(first) && Object.getPrototypeOf(first) === Object.prototype) {\n      const keys = Object.keys(first);\n      return forkJoinInternal(keys.map(key => first[key]), keys);\n    }\n  }\n\n  // DEPRECATED PATHS BELOW HERE\n  if (typeof sources[sources.length - 1] === 'function') {\n    const resultSelector = sources.pop() as Function;\n    sources = (sources.length === 1 && isArray(sources[0])) ? sources[0] : sources;\n    return forkJoinInternal(sources, null).pipe(\n      map((args: any[]) => resultSelector(...args))\n    );\n  }\n\n  return forkJoinInternal(sources, null);\n}\n\nfunction forkJoinInternal(sources: ObservableInput<any>[], keys: string[] | null): Observable<any> {\n  return new Observable(subscriber => {\n    const len = sources.length;\n    if (len === 0) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(len);\n    let completed = 0;\n    let emitted = 0;\n    for (let i = 0; i < len; i++) {\n      const source = from(sources[i]);\n      let hasValue = false;\n      subscriber.add(source.subscribe({\n        next: value => {\n          if (!hasValue) {\n            hasValue = true;\n            emitted++;\n          }\n          values[i] = value;\n        },\n        error: err => subscriber.error(err),\n        complete: () => {\n          completed++;\n          if (completed === len || !hasValue) {\n            if (emitted === len) {\n              subscriber.next(keys ?\n                keys.reduce((result, key, i) => (result[key] = values[i], result), {}) :\n                values);\n            }\n            subscriber.complete();\n          }\n        }\n      }));\n    }\n  });\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\nconst toString: Function = (() => Object.prototype.toString)();\n\nexport interface NodeStyleEventEmitter {\n  addListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n  removeListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener: (eventName: string, handler: NodeEventHandler) => void | {};\n  removeListener: (eventName: string, handler: NodeEventHandler) => void | {};\n}\n\nexport interface JQueryStyleEventEmitter {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(type: string, listener: ((evt: E) => void) | null, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener(type: string, listener?: ((evt: E) => void) | null, options?: EventListenerOptions | boolean): void;\n}\n\nexport type EventTargetLike<T> = HasEventTargetAddRemove<T> | NodeStyleEventEmitter | NodeCompatibleEventEmitter | JQueryStyleEventEmitter;\n\nexport type FromEventTarget<T> = EventTargetLike<T> | ArrayLike<EventTargetLike<T>>;\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\n/* tslint:disable:max-line-length */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, resultSelector: (...args: any[]) => T): Observable<T>;\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions, resultSelector: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n * ### Emits clicks happening on the DOM document\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * ### Use addEventListener with capture option\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: ((...args: any[]) => T)\n): Observable<T> {\n\n  if (isFunction(options)) {\n    // DEPRECATED PATH\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEvent<T>(target, eventName, <EventListenerOptions | undefined>options).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T>(subscriber => {\n    function handler(e: T) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(target, eventName, handler, subscriber, options as EventListenerOptions);\n  });\n}\n\nfunction setupSubscription<T>(sourceObj: FromEventTarget<T>, eventName: string,\n                              handler: (...args: any[]) => void, subscriber: Subscriber<T>,\n                              options?: EventListenerOptions) {\n  let unsubscribe: () => void;\n  if (isEventTarget(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n    unsubscribe = () => source.removeEventListener(eventName, handler, options);\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = () => source.off(eventName, handler);\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addListener(eventName, handler as NodeEventHandler);\n    unsubscribe = () => source.removeListener(eventName, handler as NodeEventHandler);\n  } else if (sourceObj && (sourceObj as any).length) {\n    for (let i = 0, len = (sourceObj as any).length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is HasEventTargetAddRemove<any> {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * then one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Example\n * ### Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * ## Example\n * ### Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * ## Example\n * ### Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs \"EVENT_TYPE\" \"EVENT_MESSAGE\" to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + \" --- \" + eventMessage // without that function only \"EVENT_TYPE\"\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"EVENT_TYPE --- EVENT_MESSAGE\"\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n * @static true\n * @name fromEventPattern\n * @owner Observable\n */\n\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any,\n                                    removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n                                    resultSelector?: (...args: any[]) => T): Observable<T | T[]> {\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T | T[]>(subscriber => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n\n    let retValue: any;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return () => removeHandler(handler, retValue) ;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { identity } from '../util/identity';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate(0, x => x < 10, x => x + 1, x => x);\n *\n * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n * const res = generate(1, x => x < 5, x => x * 2, x => x + 1, asap);\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n */\n  export function generate<T, S>(initialState: S,\n                                 condition: ConditionFunc<S>,\n                                 iterate: IterateFunc<S>,\n                                 resultSelector: ResultFunc<S, T>,\n                                 scheduler?: SchedulerLike): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * <img src=\"./img/generate.png\" width=\"100%\">\n *\n * `generate` allows you to create stream of values generated with a loop very similar to\n * traditional for loop. First argument of `generate` is a beginning value. Second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * loop continues, if not, it stops. Third value is a function which takes previously defined\n * value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in regular for loop: first expression\n * initializes some state (for example numeric index), second tests if loop can make next\n * iteration (for example if index is lower than 10) and third states how defined value\n * will be modified on every step (index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First, condition function is ran. If it returned true, Observable\n * emits currently stored value (initial value at the first iteration) and then updates\n * that value with iterate function. If at some point condition returned false, Observable\n * completes at that moment.\n *\n * Optionally you can pass fourth parameter to `generate` - a result selector function which allows you\n * to immediately map value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * single object to the operator instead. That object has properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, so output Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is resultSelector\n * function or not). In case of single-parameter call, you can provide it as a\n * `scheduler` property on object passed to the operator. In both cases scheduler decides when\n * next iteration of the loop will happen and therefore when next value will be emitted\n * by the Observable. For example to ensure that each value is pushed to the observer\n * on separate task in event loop, you could use `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * @example <caption>Use with condition and iterate functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with condition, iterate and resultSelector functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with options object.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n * @example <caption>Use options object without condition function.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!') // This will never run.\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n *\n *\n * @see {@link from}\n * @see {@link index/Observable.create}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n */\nexport function generate<S>(initialState: S,\n                            condition: ConditionFunc<S>,\n                            iterate: IterateFunc<S>,\n                            scheduler?: SchedulerLike): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n *   resultSelector: x => x,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                               condition?: ConditionFunc<S>,\n                               iterate?: IterateFunc<S>,\n                               resultSelectorOrObservable?: (ResultFunc<S, T>) | SchedulerLike,\n                               scheduler?: SchedulerLike): Observable<T> {\n\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  if (arguments.length == 1) {\n    const options = initialStateOrOptions as GenerateOptions<T, S>;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity as ResultFunc<S, T>;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions as S;\n    resultSelector = identity as ResultFunc<S, T>;\n    scheduler = resultSelectorOrObservable as SchedulerLike;\n  } else {\n    initialState = initialStateOrOptions as S;\n    resultSelector = resultSelectorOrObservable as ResultFunc<S, T>;\n  }\n\n  return new Observable<T>(subscriber => {\n    let state = initialState;\n    if (scheduler) {\n      return scheduler.schedule<SchedulerState<T, S>>(dispatch, 0, {\n        subscriber,\n        iterate,\n        condition,\n        resultSelector,\n        state\n      });\n    }\n\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n\n    return undefined;\n  });\n}\n\nfunction dispatch<T, S>(this: SchedulerAction<SchedulerState<T, S>>, state: SchedulerState<T, S>) {\n  const { subscriber, condition } = state;\n  if (subscriber.closed) {\n    return undefined;\n  }\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n  if (condition) {\n    let conditionResult: boolean;\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n  let value: T;\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n  if (subscriber.closed) {\n    return undefined;\n  }\n  subscriber.next(value);\n  if (subscriber.closed) {\n    return undefined;\n  }\n  return this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\nimport { SubscribableOrPromise } from '../types';\n\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `iif` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * than controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `iif` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * ## Examples\n * ### Change at runtime which Observable will be subscribed\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second'),\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n * ```\n *\n * ### Control an access to an Observable\n * ```ts\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'), // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"The end\"\n * ```\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n*/\nexport function iif<T = never, F = never>(\n  condition: () => boolean,\n  trueResult: SubscribableOrPromise<T> = EMPTY,\n  falseResult: SubscribableOrPromise<F> = EMPTY\n): Observable<T|F> {\n  return defer(() => condition() ? trueResult : falseResult);\n}\n","import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isNumeric } from '../util/isNumeric';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0,\n                         scheduler: SchedulerLike = async): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable<number>(subscriber => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, concurrent: number, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n\nexport function merge<T>(v1: ObservableInput<T>): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | number)[]): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | number)[]): Observable<R>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```ts\n * import { merge, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n * ### Emit the number 7, then never emit anything else (not even complete)\n * ```ts\n * import { NEVER } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * function info() {\n *   console.log('Will not be called');\n * }\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe(x => console.log(x), info, info);\n *\n * ```\n *\n * @see {@link Observable}\n * @see {@link index/EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Deprecated in favor of using {@link NEVER} constant.\n */\nexport function never () {\n  return NEVER;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNext<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNext<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link index/EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n * Subscribe to the next Observable after map fails</caption>\n * ```ts\n * import { onErrorResumeNext, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done'),\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<T, R>(...sources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  const [ first, ...remainder ] = sources;\n\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext(...first);\n  }\n\n  return new Observable(subscriber => {\n    const subNext = () => subscriber.add(\n      onErrorResumeNext(...remainder).subscribe(subscriber)\n    );\n\n    return from(first).subscribe({\n      next(value) { subscriber.next(value); },\n      error: subNext,\n      complete: subNext,\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * <img src=\"./img/pairs.png\" width=\"100%\">\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj)\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('the end!')\n * );\n *\n * // Logs:\n * // [\"foo\", 42],\n * // [\"bar\", 56],\n * // [\"baz\", 78],\n * // \"the end!\"\n * ```\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs<T>(obj: Object, scheduler?: SchedulerLike): Observable<[string, T]> {\n  if (!scheduler) {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n        const key = keys[i];\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n      subscriber.complete();\n    });\n  } else {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      const subscription = new Subscription();\n      subscription.add(\n        scheduler.schedule<{ keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }>\n          (dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n      return subscription;\n    });\n  }\n}\n\n/** @internal */\nexport function dispatch<T>(this: SchedulerAction<any>,\n                            state: { keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }) {\n  const { keys, index, subscriber, subscription, obj } = state;\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      const key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","export function not(pred: Function, thisArg: any): Function {\n  function notPred(): any {\n    return !((<any> notPred).pred.apply((<any> notPred).thisArg, arguments));\n  }\n  (<any> notPred).pred = pred;\n  (<any> notPred).thisArg = thisArg;\n  return notPred;\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n * Emit only click events whose target was a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { filter } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => ev.target.tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","import { not } from '../util/not';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition a set of numbers into odds and evens observables\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, (value, index) => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [\n    filter(predicate, thisArg)(new Observable<T>(subscribeTo(source))),\n    filter(not(predicate, thisArg) as any)(new Observable<T>(subscribeTo(source)))\n  ] as [Observable<T>, Observable<T>];\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic, ObservableInput } from '../types';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n// tslint:disable:max-line-length\nexport function race<A>(arg: [ObservableInput<A>]): Observable<A>;\nexport function race<A, B>(arg: [ObservableInput<A>, ObservableInput<B>]): Observable<A | B>;\nexport function race<A, B, C>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<A | B | C>;\nexport function race<A, B, C, D>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<A | B | C | D | E>;\nexport function race<T>(arg: ObservableInput<T>[]): Observable<T>;\nexport function race(arg: ObservableInput<any>[]): Observable<{}>;\n\nexport function race<A>(a: ObservableInput<A>): Observable<A>;\nexport function race<A, B>(a: ObservableInput<A>, b: ObservableInput<B>): Observable<A | B>;\nexport function race<A, B, C>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>): Observable<A | B | C>;\nexport function race<A, B, C, D>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>, e: ObservableInput<E>): Observable<A | B | C | D | E>;\n// tslint:enable:max-line-length\n\nexport function race<T>(observables: ObservableInput<T>[]): Observable<T>;\nexport function race(observables: ObservableInput<any>[]): Observable<{}>;\nexport function race<T>(...observables: ObservableInput<T>[]): Observable<T>;\nexport function race(...observables: ObservableInput<any>[]): Observable<{}>;\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n *\n * ## Example\n * ### Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { race, interval } from 'rxjs';\n * import { mapTo } from 'rxjs/operators';\n *\n * const obs1 = interval(1000).pipe(mapTo('fast one'));\n * const obs2 = interval(3000).pipe(mapTo('medium one'));\n * const obs3 = interval(5000).pipe(mapTo('slow one'));\n *\n * race(obs3, obs1, obs2)\n * .subscribe(\n *   winner => console.log(winner)\n * );\n *\n * // result:\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(...observables: ObservableInput<any>[]): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = observables[0] as Observable<any>[];\n    } else {\n      return observables[0] as Observable<T>;\n    }\n  }\n\n  return fromArray(observables, undefined).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete!();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        const observable = observables[i];\n        const subscription = subscribeToResult(this, observable, undefined, i)!;\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null!;\n    }\n  }\n\n  notifyNext(_outerValue: T, innerValue: T,\n             outerIndex: number): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null!;\n    }\n\n    this.destination.next!(innerValue);\n  }\n}\n","import { SchedulerAction, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n * Emits the numbers 1 to 10</caption>\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 10);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link timer}\n * @see {@link index/interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start: number = 0,\n                      count?: number,\n                      scheduler?: SchedulerLike): Observable<number> {\n  return new Observable<number>(subscriber => {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n\n    let index = 0;\n    let current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(current++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\n\n/** @internal */\nexport function dispatch(this: SchedulerAction<any>, state: any) {\n  const { start, index, count, subscriber } = state;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n\n  this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that starts emitting after an `dueTime` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link index/interval}, but you can specify when\n * should the emissions start.</span>\n *\n * ![](timer.png)\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `dueTime`. The initial delay may be a `Date`. By default, this\n * operator uses the {@link asyncScheduler} {@link SchedulerLike} to provide a notion of time, but you\n * may pass any {@link SchedulerLike} to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * ## Examples\n * ### Emits ascending numbers, one every second (1000ms), starting after 3 seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * ### Emits one number after five seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(5000);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link index/interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time specified as a Date object or as an integer denoting\n * milliseconds to wait before emitting the first value of 0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `dueTime` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime: number | Date = 0,\n                      periodOrScheduler?: number | SchedulerLike,\n                      scheduler?: SchedulerLike): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(subscriber => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : (+dueTime - scheduler.now());\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0, period, subscriber\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput } from '../types';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T>(resourceFactory: () => Unsubscribable | void,\n                         observableFactory: (resource: Unsubscribable | void) => ObservableInput<T> | void): Observable<T> {\n  return new Observable<T>(subscriber => {\n    let resource: Unsubscribable | void;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    let result: ObservableInput<T> | void;\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    const source = result ? from(result) : EMPTY;\n    const subscription = source.subscribe(subscriber);\n    return () => {\n      subscription.unsubscribe();\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { ObservableInput, PartialObserver, ObservedValueOf } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R): Observable<R>;\n\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\nexport function zip<O extends ObservableInput<any>>(array: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<R>(array: ObservableInput<any>[]): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<R>(array: ObservableInput<any>[], resultSelector: (...values: any[]) => R): Observable<R>;\n\nexport function zip<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>): Observable<R>;\nexport function zip<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the last parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n * Combine age and name from different sources\n * ```ts\n * import { zip, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * let age$ = of<number>(27, 25, 29);\n * let name$ = of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = of<boolean>(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map(([age, name, isDev]) => ({ age, name, isDev })),\n * )\n * .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip<O extends ObservableInput<any>, R>(\n  ...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>\n): Observable<ObservedValueOf<O>[]|R> {\n  const resultSelector = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  resultSelector?: (...values: Array<any>) => R;\n\n  constructor(resultSelector?: (...values: Array<any>) => R) {\n    this.resultSelector = resultSelector;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              private resultSelector?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : undefined;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    this.unsubscribe();\n\n    if (len === 0) {\n      this.destination.complete!();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        const destination = this.destination as Subscription;\n        destination.add(iterator.subscribe());\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete!();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete!();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next!(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete!();\n    }\n  }\n\n  protected _tryresultSelector(args: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector!.apply(this, args);\n    } catch (err) {\n      this.destination.error!(err);\n      return;\n    }\n    this.destination.next!(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted(): boolean {\n    const nextResult = this.nextResult;\n    return Boolean(nextResult && nextResult.done);\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends SimpleOuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift()!, done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete!();\n    }\n  }\n\n  notifyNext(innerValue: any): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe() {\n    return innerSubscribe(this.observable, new SimpleInnerSubscriber(this));\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](audit.png)\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { audit } from 'rxjs/operators'\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(audit(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return function auditOperatorFunction(source: Observable<T>) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n\n  private value?: T;\n  private hasValue: boolean = false;\n  private throttled?: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      let duration;\n      try {\n        const { durationSelector } = this;\n        duration = durationSelector(value);\n      } catch (err) {\n        return this.destination.error!(err);\n      }\n      const innerSubscription = innerSubscribe(duration, new SimpleInnerSubscriber(this));\n      if (!innerSubscription || innerSubscription.closed) {\n        this.clearThrottle();\n      } else {\n        this.add(this.throttled = innerSubscription);\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = undefined;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = undefined;\n      this.hasValue = false;\n      this.destination.next!(value);\n    }\n  }\n\n  notifyNext(): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source value, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * ![](auditTime.png)\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link SchedulerLike} for managing timers.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { auditTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(auditTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime<T>(duration: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * ![](buffer.png)\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * ## Example\n *\n * On every click, emit array of most recent interval events\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { buffer } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const intervalEvents = interval(1000);\n * const buffered = intervalEvents.pipe(buffer(clicks));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return function bufferOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferOperator<T>(closingNotifier));\n  };\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends SimpleOuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next!(buffer);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * ![](bufferCount.png)\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * ## Examples\n *\n * Emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferCount } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * On every click, emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferCount } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2, 1));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): OperatorFunction<T, T[]> {\n  return function bufferCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  private subscriberClass: any;\n\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): TeardownLogic {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const buffer = this.buffer;\n\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  protected _complete(): void {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const { bufferSize, startBufferEvery, buffers, count } = this;\n\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--; ) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  protected _complete(): void {\n    const { buffers, destination } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction, SchedulerAction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number | null | undefined, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number | null | undefined, maxBufferSize: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * ![](bufferTime.png)\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * ## Examples\n *\n * Every second, emit an array of the recent click events\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(1000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds, emit the click events from the next 2 seconds\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(2000, 5000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): OperatorFunction<T, T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: SchedulerLike = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return function bufferTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n  };\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ninterface DispatchCreateArg<T> {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number;\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: SchedulerLike;\n}\n\ninterface DispatchCloseArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: DispatchCreateArg<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule<DispatchCloseArg<T>>(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule<DispatchCreateArg<T>>(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (!this.closed && this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(this: SchedulerAction<any>, state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n  }\n}\n\nfunction dispatchBufferCreation<T>(this: SchedulerAction<DispatchCreateArg<T>>, state: DispatchCreateArg<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <SchedulerAction<DispatchCreateArg<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchCloseArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchCloseArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction, SubscribableOrPromise } from '../types';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * ![](bufferToggle.png)\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, EMPTY } from 'rxjs';\n * import { bufferToggle } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const buffered = clicks.pipe(bufferToggle(openings, i =>\n *   i % 2 ? interval(500) : EMPTY\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(\n  openings: SubscribableOrPromise<O>,\n  closingSelector: (value: O) => SubscribableOrPromise<any>\n): OperatorFunction<T, T[]> {\n  return function bufferToggleOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift()!;\n      context.subscription.unsubscribe();\n      context.buffer = null!;\n      context.subscription = null!;\n    }\n    this.contexts = null!;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift()!;\n      this.destination.next!(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null!;\n      context.subscription = null!;\n    }\n    this.contexts = null!;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next!(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, context as any);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (innerSubscription as any).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { OperatorFunction } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * ![](bufferWhen.png)\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * ## Example\n *\n * Emit an array of the last clicks every [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { bufferWhen } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferWhen(() =>\n *   interval(1000 + Math.random() * 4000)\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, T[]> {\n  return function (source: Observable<T>) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends SimpleOuterSubscriber<T, any> {\n  private buffer?: T[];\n  private subscribing: boolean = false;\n  private closingSubscription?: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer!.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next!(buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.buffer = undefined;\n    this.subscribing = false;\n  }\n\n  notifyNext(): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next!(buffer);\n    }\n\n    this.buffer = [];\n\n    let closingNotifier;\n    try {\n      const { closingSelector } = this;\n      closingNotifier = closingSelector();\n    } catch (err) {\n      return this.error(err);\n    }\n    closingSubscription = new Subscription();\n    this.closingSubscription = closingSubscription;\n    this.add(closingSubscription);\n    this.subscribing = true;\n    closingSubscription.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n    this.subscribing = false;\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(selector: (err: any, caught: Observable<T>) => O): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * ![](catch.png)\n *\n * ## Examples\n * Continues with a different Observable when there's an error\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *   \t   if (n === 4) {\n * \t       throw 'four!';\n *       }\n *\t     return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V')),\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retries the caught source Observable again in case of error, similar to retry() operator\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError, take } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *   \t   if (n === 4) {\n *   \t     throw 'four!';\n *       }\n * \t     return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30),\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throws a new error when the source Observable throws an error\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     }),\n *   )\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n *  @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | ObservedValueOf<O>> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends SimpleOuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      const innerSubscriber = new SimpleInnerSubscriber(this);\n      this.add(innerSubscriber);\n      const innerSubscription = innerSubscribe(result, innerSubscriber);\n      // The returned subscription will usually be the subscriber that was\n      // passed. However, interop subscribers will be wrapped and for\n      // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n      if (innerSubscription !== innerSubscriber) {\n        this.add(innerSubscription);\n      }\n    }\n  }\n}\n","import { CombineLatestOperator } from '../observable/combineLatest';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function combineAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function combineAll<T>(): OperatorFunction<any, T[]>;\nexport function combineAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function combineAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n/**\n * Flattens an Observable-of-Observables by applying {@link combineLatest} when the Observable-of-Observables completes.\n *\n * ![](combineAll.png)\n *\n * `combineAll` takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\n * it subscribes to all collected Observables and combines their values using the {@link combineLatest}</a> strategy, such that:\n *\n * * Every time an inner Observable emits, the output Observable emits\n * * When the returned observable emits, it emits all of the latest values by:\n *    * If a `project` function is provided, it is called with each recent value from each inner Observable in whatever order they\n *      arrived, and the result of the `project` function is what is emitted by the output Observable.\n *    * If there is no `project` function, an array of all the most recent values is emitted by the output Observable.\n *\n * ---\n *\n * ## Examples\n *\n * ### Map two click events to a finite interval Observable, then apply `combineAll`\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, combineAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev =>\n *      interval(Math.random() * 2000).pipe(take(3))\n *   ),\n *   take(2)\n * );\n * const result = higherOrder.pipe(\n *   combineAll()\n * );\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function(...values: Array<any>)} An optional function to map the most recent values from each inner Observable into a new result.\n * Takes each of the most recent values from each collected inner Observable as arguments, in order.\n * @return {Observable<T>}\n * @name combineAll\n */\nexport function combineAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new CombineLatestOperator(project));\n}\n","\nimport { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\n\nconst none = {};\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(array: ObservableInput<T>[]): OperatorFunction<T, Array<T>>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link combineLatest}.\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  return (source: Observable<T>) => source.lift.call(from([source, ...observables]), new CombineLatestOperator(project));\n}\n","import {  concat as concatStatic } from '../observable/concat';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2>(v2: ObservableInput<T2>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T>(...observables: Array<ObservableInput<T> | SchedulerLike>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link concat}.\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(concatStatic(source, ...observables));\n}\n","import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) =>  O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function concatMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function concatMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) =>  O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { concatMap, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  return mergeMap(project, resultSelector, 1);\n}\n","import { concatMap } from './concatMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function concatMapTo<T, O extends ObservableInput<any>>(observable: O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated */\nexport function concatMapTo<T, O extends ObservableInput<any>>(observable: O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated */\nexport function concatMapTo<T, R, O extends ObservableInput<any>>(observable: O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](concatMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * ## Example\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { concatMapTo, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMapTo(interval(1000).pipe(take(4))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo<T, R, O extends ObservableInput<any>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  return concatMap(() => innerObservable, resultSelector);\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer, OperatorFunction } from '../types';\nimport { Subscriber } from '../Subscriber';\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * ![](count.png)\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * ## Examples\n *\n * Counts how many seconds have passed before the first click happened\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { count, takeUntil } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const secondsBeforeClick = seconds.pipe(takeUntil(clicks));\n * const result = secondsBeforeClick.pipe(count());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Counts how many odd numbers are there between 1 and 7\n * ```ts\n * import { range } from 'rxjs';\n * import { count } from 'rxjs/operators';\n *\n * const numbers = range(1, 7);\n * const result = numbers.pipe(count(i => i % 2 === 1));\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // 4\n * ```\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\n\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * ![](debounce.png)\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * ## Example\n * Emit the most recent click after a burst of clicks\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { debounce } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounce(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private value?: T;\n  private hasValue = false;\n  private durationSubscription?: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error!(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete!();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<any>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = innerSubscribe(duration, new SimpleInnerSubscriber(this));\n    if (subscription && !subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = undefined;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      // This must be done *before* passing the value\n      // along to the destination because it's possible for\n      // the value to synchronously re-enter this operator\n      // recursively if the duration selector Observable\n      // emits synchronously\n      this.value = undefined;\n      this.hasValue = false;\n      super._next(value!);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n * Emit the most recent click after a burst of clicks\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { debounceTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      const { lastValue } = this;\n      // This must be done *before* passing the value\n      // along to the destination because it's possible for\n      // the value to synchronously re-enter this operator\n      // recursively when scheduled with things like\n      // VirtualScheduler/TestScheduler.\n      this.lastValue = null;\n      this.hasValue = false;\n      this.destination.next(lastValue);\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n * If no clicks happen in 5 seconds, then emit \"no clicks\"\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { defaultIfEmpty, takeUntil } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}\n","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.png)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n * Delay each click by one second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { delay } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { delay } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: SchedulerLike;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: SchedulerAction<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: SchedulerLike): void {\n    this.active = true;\n    const destination = this.destination as Subscription;\n    destination.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated In future versions, empty notifiers will no longer re-emit the source value on the output observable. */\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<never>, subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>, subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T>;\n/* tslint:disable:max-line-length */\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n * The completion of the notifier triggering the emission of the source value\n * is deprecated behavior and will be removed in future versions.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n * Delay each click by a random amount of time, between 0 and 5 seconds\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { delayWhen } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(event => interval(Math.random() * 5000)),\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {function(value: T, index: number): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    return (source: Observable<T>) =>\n      new SubscriptionDelayObservable(source, subscriptionDelay)\n        .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return (source: Observable<T>) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T, index: number) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T, index: number) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, _innerValue: any,\n             _outerIndex: number, _innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next!(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next!(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    try {\n      const delayNotifier = this.delayDurationSelector(value, index);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error!(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n    this.unsubscribe();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    if (subscriptionIdx !== -1) {\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n    }\n\n    return subscription.outerValue;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      const destination = this.destination as Subscription;\n      destination.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete!();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(public source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.unsubscribe();\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../types';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * ![](dematerialize.png)\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * ## Example\n * Convert an Observable of Notifications to an actual Observable\n * ```ts\n * import { of, Notification } from 'rxjs';\n * import { dematerialize } from 'rxjs/operators';\n *\n * const notifA = new Notification('N', 'A');\n * const notifB = new Notification('N', 'B');\n * const notifE = new Notification('E', undefined,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * const materialized = of(notifA, notifB, notifE);\n * const upperCase = materialized.pipe(dematerialize());\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n * ```\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): OperatorFunction<Notification<T>, T> {\n  return function dematerializeOperatorFunction(source: Observable<Notification<T>>) {\n    return source.lift(new DeMaterializeOperator());\n  };\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source.subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * ## Examples\n * A simple example with numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { distinct } from 'rxjs/operators';\n *\n * of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1).pipe(\n *     distinct(),\n *   )\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n * ```\n *\n * An example using a keySelector function\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinct } from 'rxjs/operators';\n *\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *   ).pipe(\n *     distinct((p: Person) => p.name),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * ```\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator<T, K> implements Operator<T, T> {\n  constructor(private keySelector?: (value: T) => K, private flushes?: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T, K> extends SimpleOuterSubscriber<T, T> {\n  private values = new Set<K>();\n\n  constructor(destination: Subscriber<T>, private keySelector?: (value: T) => K, flushes?: Observable<any>) {\n    super(destination);\n\n    if (flushes) {\n      this.add(innerSubscribe(flushes, new SimpleInnerSubscriber(this)));\n    }\n  }\n\n  notifyNext(): void {\n    this.values.clear();\n  }\n\n  notifyError(error: any): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  private _useKeySelector(value: T): void {\n    let key: K;\n    const { destination } = this;\n    try {\n      key = this.keySelector!(value);\n    } catch (err) {\n      destination.error!(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n\n  private _finalizeNext(key: K|T, value: T) {\n    const { values } = this;\n    if (!values.has(<K>key)) {\n      values.add(<K>key);\n      this.destination.next!(value);\n    }\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Example\n * A simple example with numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { distinctUntilChanged } from 'rxjs/operators';\n *\n * of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4).pipe(\n *     distinctUntilChanged(),\n *   )\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n * ```\n *\n * An example using a compare function\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilChanged } from 'rxjs/operators';\n *\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'},\n *   ).pipe(\n *     distinctUntilChanged((p: Person, q: Person) => p.name === q.name),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n    let key: any;\n    try {\n      const { keySelector } = this;\n      key = keySelector ? keySelector(value) : value;\n    } catch (err) {\n      return this.destination.error(err);\n    }\n    let result = false;\n    if (this.hasKey) {\n      try {\n        const { compare } = this;\n        result = compare(this.key, key);\n      } catch (err) {\n        return this.destination.error(err);\n      }\n    } else {\n      this.hasKey = true;\n    }\n    if (!result) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n * An example comparing the name of persons\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilKeyChanged } from 'rxjs/operators';\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'},\n *   ).pipe(\n *     distinctUntilKeyChanged('name'),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilKeyChanged } from 'rxjs/operators';\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'},\n *   ).pipe(\n *     distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3)),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n","import { EmptyError } from '../util/EmptyError';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic, MonoTypeOperatorFunction } from '../types';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n * ```ts\n * import { fromEvent, timer } from 'rxjs';\n * import { throwIfEmpty, takeUntil } from 'rxjs/operators';\n *\n * const click$ = fromEvent(document, 'click');\n *\n * click$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(\n *     () => new Error('the document was not clicked within 1 second')\n *   ),\n * )\n * .subscribe({\n *   next() { console.log('The button was clicked'); },\n *   error(err) { console.error(err); }\n * });\n * ```\n *\n * @param errorFactory A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n */\nexport function throwIfEmpty <T>(errorFactory: (() => any) = defaultErrorFactory): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    return source.lift(new ThrowIfEmptyOperator(errorFactory));\n  };\n}\n\nclass ThrowIfEmptyOperator<T> implements Operator<T, T> {\n  constructor(private errorFactory: () => any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));\n  }\n}\n\nclass ThrowIfEmptySubscriber<T> extends Subscriber<T> {\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>, private errorFactory: () => any) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.hasValue = true;\n    this.destination.next(value);\n  }\n\n  protected _complete() {\n    if (!this.hasValue) {\n      let err: any;\n      try {\n        err = this.errorFactory();\n      } catch (e) {\n        err = e;\n      }\n      this.destination.error(err);\n    } else {\n        return this.destination.complete();\n    }\n  }\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n * Take the first 5 seconds of an infinite 1-second interval Observable\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * ![](elementAt.png)\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * ## Example\n * Emit only the third click event\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { elementAt } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(elementAt(2));\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n * ```\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): MonoTypeOperatorFunction<T> {\n  if (index < 0) { throw new ArgumentOutOfRangeError(); }\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    filter((v, i) => i === index),\n    take(1),\n    hasDefaultValue\n      ? defaultIfEmpty(defaultValue)\n      : throwIfEmpty(() => new ArgumentOutOfRangeError()),\n  );\n}\n","import { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A>(v1: A, scheduler: SchedulerLike): OperatorFunction<T, T | A>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B>(v1: A, v2: B, scheduler: SchedulerLike): OperatorFunction<T, T | A | B>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C>(v1: A, v2: B, v3: C, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C, D>(v1: A, v2: B, v3: C, v4: D, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C, D, E>(v1: A, v2: B, v3: C, v4: D, v5: E, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D | E>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C, D, E, F>(v1: A, v2: B, v3: C, v4: D, v5: E, v6: F, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D | E | F>;\n\nexport function endWith<T, A>(v1: A): OperatorFunction<T, T | A>;\nexport function endWith<T, A, B>(v1: A, v2: B): OperatorFunction<T, T | A | B>;\nexport function endWith<T, A, B, C>(v1: A, v2: B, v3: C): OperatorFunction<T, T | A | B | C>;\nexport function endWith<T, A, B, C, D>(v1: A, v2: B, v3: C, v4: D): OperatorFunction<T, T | A | B | C | D>;\nexport function endWith<T, A, B, C, D, E>(v1: A, v2: B, v3: C, v4: D, v5: E): OperatorFunction<T, T | A | B | C | D | E>;\nexport function endWith<T, A, B, C, D, E, F>(v1: A, v2: B, v3: C, v4: D, v5: E, v6: F): OperatorFunction<T, T | A | B | C | D | E | F>;\nexport function endWith<T, Z = T>(...array: Z[]): OperatorFunction<T, T | Z>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, Z = T>(...array: Array<Z | SchedulerLike>): OperatorFunction<T, T | Z>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments after it finishes emitting\n * items emitted by the source Observable.\n *\n * ![](endWith.png)\n *\n * ## Example\n * ### After the source observable completes, appends an emission and then completes too.\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { endWith } from 'rxjs/operators';\n *\n * of('hi', 'how are you?', 'sorry, I have to go now').pipe(\n *   endWith('goodbye!'),\n * )\n * .subscribe(word => console.log(word));\n * // result:\n * // 'hi'\n * // 'how are you?'\n * // 'sorry, I have to go now'\n * // 'goodbye!'\n * ```\n *\n * @param {...T} values - Items you want the modified Observable to emit last.\n * @param {SchedulerLike} [scheduler] - A {@link SchedulerLike} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items emitted by the source Observable\n *  and then emits the items in the specified Iterable.\n * @method endWith\n * @owner Observable\n */\nexport function endWith<T>(...array: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => concat(source, of(...array)) as Observable<T>;\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Observer, OperatorFunction } from '../types';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * ## Example\n * A simple example emitting true if all elements are less than 5, false otherwise\n * ```ts\n * import { of } from 'rxjs';\n * import { every } from 'rxjs/operators';\n *\n *  of(1, 2, 3, 4, 5, 6).pipe(\n *     every(x => x < 5),\n * )\n * .subscribe(x => console.log(x)); // -> false\n * ```\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\nexport function exhaust<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function exhaust<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * ![](exhaust.png)\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * ## Example\n * Run a finite timer for each click, only if there is no currently active timer\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { exhaust, map, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(5))),\n * );\n * const result = higherOrder.pipe(exhaust());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): OperatorFunction<any, T> {\n  return (source: Observable<T>) => source.lift(new SwitchFirstOperator<T>());\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends SimpleOuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(innerSubscribe(value, new SimpleInnerSubscriber(this)));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete!();\n    }\n  }\n\n  notifyComplete(): void {\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete!();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported. Use inner map instead. */\nexport function exhaustMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported. Use inner map instead. */\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * ![](exhaustMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * ## Example\n * Run a finite timer for each click, only if there is no currently active timer\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { exhaustMap, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   exhaustMap(ev => interval(1000).pipe(take(5)))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      exhaustMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: any) => resultSelector(a, b, i, ii)),\n      )),\n    );\n  }\n  return (source: Observable<T>) =>\n    source.lift(new ExhaustMapOperator(project));\n}\n\nclass ExhaustMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ExhaustMapSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private hasSubscription = false;\n  private hasCompleted = false;\n  private index = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error!(err);\n      return;\n    }\n    this.hasSubscription = true;\n    this._innerSub(result);\n  }\n\n  private _innerSub(result: ObservableInput<R>): void {\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = innerSubscribe(result, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete!();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(innerValue: R): void {\n    this.destination.next!(innerValue);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error!(err);\n  }\n\n  notifyComplete(): void {\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete!();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, OperatorFunction, ObservableInput, SchedulerLike } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function expand<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, R>;\nexport function expand<T>(project: (value: T, index: number) => ObservableInput<T>, concurrent?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * ![](expand.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * ## Example\n * Start emitting the powers of two on every click, at most 10 of them\n * ```ts\n * import { fromEvent, of } from 'rxjs';\n * import { expand, mapTo, delay, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const powersOfTwo = clicks.pipe(\n *   mapTo(1),\n *   expand(x => of(2 * x).pipe(delay(1000))),\n *   take(10),\n * );\n * powersOfTwo.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => ObservableInput<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler?: SchedulerLike): OperatorFunction<T, R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return (source: Observable<T>) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number,\n              private scheduler?: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: ObservableInput<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer?: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number,\n              private scheduler?: SchedulerLike) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next!(value);\n      try {\n        const { project } = this;\n        const result = project(value, index);\n        if (!this.scheduler) {\n          this.subscribeToProjection(result, value, index);\n        } else {\n          const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n          const destination = this.destination as Subscription;\n          destination.add(this.scheduler.schedule<DispatchArg<T, R>>(ExpandSubscriber.dispatch as any, 0, state));\n        }\n      } catch (e) {\n        destination.error!(e);\n      }\n    } else {\n      this.buffer!.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscribe(result, new SimpleInnerSubscriber(this)));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete!();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(innerValue: R): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(): void {\n    const buffer = this.buffer;\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete!();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","import {Observable} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {OperatorFunction} from '../types';\n\nexport function find<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S | undefined>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): OperatorFunction<T, T | undefined>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * ![](find.png)\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * ## Example\n * Find and emit the first click that happens on a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { find } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(find(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): OperatorFunction<T, T | undefined> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, false, thisArg)) as Observable<T | undefined>;\n}\n\nexport class FindValueOperator<T> implements Operator<T, T | number | undefined> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n    this.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    const {predicate, thisArg} = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","import { Observable } from '../Observable';\nimport { FindValueOperator } from '../operators/find';\nimport { OperatorFunction } from '../types';\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * ![](findIndex.png)\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * ## Example\n * Emit the index of first click that happens on a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { findIndex } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(findIndex(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                             thisArg?: any): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, true, thisArg)) as Observable<any>;\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction } from '../../internal/types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\n/* tslint:disable:max-line-length */\nexport function first<T, D = T>(\n  predicate?: null,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a deprecated `resultSelector` function to produce the output\n * value from the input value, and a `defaultValue` to emit in case the source\n * completes before it is able to emit a valid value. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n * Emit only the first click that happens on the DOM\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { first } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { first } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n    take(1),\n    hasDefaultValue ? defaultIfEmpty<T | D>(defaultValue) : throwIfEmpty(() => new EmptyError()),\n  );\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * ## Examples\n * ### Ignores emitted values, reacts to observable's completion.\n * ```ts\n * import { of } from 'rxjs';\n * import { ignoreElements } from 'rxjs/operators';\n *\n * of('you', 'talking', 'to', 'me').pipe(\n *   ignoreElements(),\n * )\n * .subscribe(\n *   word => console.log(word),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'the end'\n * ```\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements(): OperatorFunction<any, never> {\n  return function ignoreElementsOperatorFunction(source: Observable<any>) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    // Do nothing\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Emits false if the input observable emits any values, or emits true if the\n * input observable completes without emitting any values.\n *\n * <span class=\"informal\">Tells whether any values are emitted by an observable</span>\n *\n * ![](isEmpty.png)\n *\n * `isEmpty` transforms an Observable that emits values into an Observable that\n * emits a single boolean value representing whether or not any values were\n * emitted by the source Observable. As soon as the source Observable emits a\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\n * completes having not emitted anything, `isEmpty` will emit a `true` and\n * complete.\n *\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\n * a `false` value sooner.\n *\n * ## Examples\n *\n * Emit `false` for a non-empty Observable\n * ```javascript\n * import { Subject } from 'rxjs';\n * import { isEmpty } from 'rxjs/operators';\n *\n * const source = new Subject<string>();\n * const result = source.pipe(isEmpty());\n * source.subscribe(x => console.log(x));\n * result.subscribe(x => console.log(x));\n * source.next('a');\n * source.next('b');\n * source.next('c');\n * source.complete();\n *\n * // Results in:\n * // a\n * // false\n * // b\n * // c\n * ```\n *\n * Emit `true` for an empty Observable\n * ```javascript\n * import { EMPTY } from 'rxjs';\n * import { isEmpty } from 'rxjs/operators';\n *\n * const result = EMPTY.pipe(isEmpty());\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // true\n * ```\n *\n * @see {@link count}\n * @see {@link EMPTY}\n *\n * @return {OperatorFunction<T, boolean>} An Observable of a boolean value indicating whether observable was empty or not\n * @method isEmpty\n * @owner Observable\n */\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * ![](takeLast.png)\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * ## Example\n * Take the last 3 values of an Observable with many values\n * ```ts\n * import { range } from 'rxjs';\n * import { takeLast } from 'rxjs/operators';\n *\n * const many = range(1, 100);\n * const lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction } from '../../internal/types';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n\n/* tslint:disable:max-line-length */\nexport function last<T, D = T>(\n  predicate?: null,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\nexport function last<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function last<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * ![](last.png)\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n    takeLast(1),\n    hasDefaultValue ? defaultIfEmpty<T | D>(defaultValue) : throwIfEmpty(() => new EmptyError()),\n  );\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n * Map every click to the string 'Hi'\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { mapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MapToOperator(value));\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../types';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * ![](materialize.png)\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * ## Example\n * Convert a faulty Observable to an Observable of Notifications\n * ```ts\n * import { of } from 'rxjs';\n * import { materialize, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 13, 'd');\n * const upperCase = letters.pipe(map(x => x.toUpperCase()));\n * const materialized = upperCase.pipe(materialize());\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n * ```\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T>> {\n  return function materializeOperatorFunction(source: Observable<T>) {\n    return source.lift(new MaterializeOperator());\n  };\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed: R): OperatorFunction<T, R>;\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * ![](scan.png)\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n * Count the number of click events\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { scan, mapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const ones = clicks.pipe(mapTo(1));\n * const seed = 0;\n * const count = ones.pipe(scan((acc, one) => acc + one, seed));\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","import { Observable } from '../Observable';\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\nimport { pipe } from '../util/pipe';\n\n/* tslint:disable:max-line-length */\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed: R): OperatorFunction<T, R>;\nexport function reduce<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * ![](reduce.png)\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n * Count the number of click events that happened in 5 seconds\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { reduce, takeUntil, mapTo } from 'rxjs/operators';\n *\n * const clicksInFiveSeconds = fromEvent(document, 'click').pipe(\n *   takeUntil(interval(5000)),\n * );\n * const ones = clicksInFiveSeconds.pipe(mapTo(1));\n * const seed = 0;\n * const count = ones.pipe(reduce((acc, one) => acc + one, seed));\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce<T, R>(accumulator: (acc: T | R, value: T, index?: number) => T | R, seed?: T | R): OperatorFunction<T, T | R> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    return function reduceOperatorFunctionWithSeed(source: Observable<T>): Observable<T | R> {\n      return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n    };\n  }\n  return function reduceOperatorFunction(source: Observable<T>): Observable<T | R> {\n    return pipe(\n      scan<T, T | R>((acc, value, index) => accumulator(acc, value, index + 1)),\n      takeLast(1),\n    )(source);\n  };\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * ![](max.png)\n *\n * ## Examples\n * Get the maximal value of a series of numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { max } from 'rxjs/operators';\n *\n * of(5, 4, 7, 2, 8).pipe(\n *   max(),\n * )\n * .subscribe(x => console.log(x)); // -> 8\n * ```\n *\n * Use a comparer function to get the maximal item\n * ```typescript\n * import { of } from 'rxjs';\n * import { max } from 'rxjs/operators';\n *\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * of<Person>(\n *   {age: 7, name: 'Foo'},\n *   {age: 5, name: 'Bar'},\n *   {age: 9, name: 'Beer'},\n * ).pipe(\n *   max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1),\n * )\n * .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * ```\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const max: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) > 0 ? x : y\n    : (x, y) => x > y ? x : y;\n\n  return reduce(max);\n}\n","import { merge as mergeStatic } from '../observable/merge';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(concurrent?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2>(v2: ObservableInput<T2>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2>(v2: ObservableInput<T2>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(...observables: Array<ObservableInput<T> | SchedulerLike | number>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link merge}.\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(mergeStatic(source, ...observables));\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction, ObservedValueOf } from '../../internal/types';\nimport { mergeMap } from './mergeMap';\nimport { ObservableInput } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T, O extends ObservableInput<any>>(innerObservable: O, concurrent?: number): OperatorFunction<any, ObservedValueOf<O>>;\n/** @deprecated */\nexport function mergeMapTo<T, R, O extends ObservableInput<any>>(innerObservable: O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * ![](mergeMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * ## Example\n * For each click event, start an interval Observable ticking every 1 second\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { mergeMapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable`\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<any>>(\n  innerObservable: O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * ## Example\n * Count the number of click events\n * ```ts\n * import { fromEvent, of } from 'rxjs';\n * import { mapTo, mergeScan } from 'rxjs/operators';\n *\n * const click$ = fromEvent(document, 'click');\n * const one$ = click$.pipe(mapTo(1));\n * const seed = 0;\n * const count$ = one$.pipe(\n *   mergeScan((acc, one) => of(acc + one), seed),\n * );\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * // 1\n * // 2\n * // 3\n * // 4\n * // ...and so on for each click\n * ```\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeScanSubscriber(\n      subscriber, this.accumulator, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const destination = this.destination;\n      let ish;\n      try {\n        const { accumulator } = this;\n        ish = accumulator(this.acc, value, index);\n      } catch (e) {\n        return destination.error!(e);\n      }\n      this.active++;\n      this._innerSub(ish);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any): void {\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = innerSubscribe(ish, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next!(this.acc);\n      }\n      this.destination.complete!();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(innerValue: R): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next!(innerValue);\n  }\n\n  notifyComplete(): void {\n    const buffer = this.buffer;\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next!(this.acc);\n      }\n      this.destination.complete!();\n    }\n  }\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * ![](min.png)\n *\n * ## Examples\n * Get the minimal value of a series of numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { min } from 'rxjs/operators';\n *\n * of(5, 4, 7, 2, 8).pipe(\n *   min(),\n * )\n * .subscribe(x => console.log(x)); // -> 2\n * ```\n *\n * Use a comparer function to get the minimal item\n * ```typescript\n * import { of } from 'rxjs';\n * import { min } from 'rxjs/operators';\n *\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * of<Person>(\n *   {age: 7, name: 'Foo'},\n *   {age: 5, name: 'Bar'},\n *   {age: 9, name: 'Beer'},\n * ).pipe(\n *   min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1),\n * )\n * .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * ```\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const min: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) < 0 ? x : y\n    : (x, y) => x < y ? x : y;\n  return reduce(min);\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservedValueOf, ObservableInput } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(subject: Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T, O extends ObservableInput<any>>(subject: Subject<T>, selector: (shared: Observable<T>) => O): UnaryFunction<Observable<T>, ConnectableObservable<ObservedValueOf<O>>>;\nexport function multicast<T>(subjectFactory: (this: Observable<T>) => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T, O extends ObservableInput<any>>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * ![](multicast.png)\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): OperatorFunction<T, R> {\n  return function multicastOperatorFunction(source: Observable<T>): Observable<R> {\n    let subjectFactory: () => Subject<T>;\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return <Subject<T>>subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    const connectable: any = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n\n    return <ConnectableObservable<R>> connectable;\n  };\n}\n\nexport class MulticastOperator<T, R> implements Operator<T, R> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<R>) {\n  }\n  call(subscriber: Subscriber<R>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n","import { Observable } from '../Observable';\nimport { from } from '../observable/from';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isArray } from '../util/isArray';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T>(): OperatorFunction<T, T>;\nexport function onErrorResumeNext<T, T2>(v: ObservableInput<T2>): OperatorFunction<T, T | T2>;\nexport function onErrorResumeNext<T, T2, T3>(v: ObservableInput<T2>, v2: ObservableInput<T3>): OperatorFunction<T, T | T2 | T3>;\nexport function onErrorResumeNext<T, T2, T3, T4>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>): OperatorFunction<T, T | T2 | T3 | T4>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>, v4: ObservableInput<T5>): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>, v4: ObservableInput<T5>, v5: ObservableInput<T6>): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, T7>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>, v4: ObservableInput<T5>, v5: ObservableInput<T6>, v6: ObservableInput<T7>): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function onErrorResumeNext<T, R>(...observables: Array<ObservableInput<any>>): OperatorFunction<T, T | R>;\nexport function onErrorResumeNext<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link Observable#subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catchError} instead.\n *\n *\n * ## Example\n * Subscribe to the next Observable after map fails\n * ```ts\n * import { of } from 'rxjs';\n * import { onErrorResumeNext, map } from 'rxjs/operators';\n *\n * of(1, 2, 3, 0).pipe(\n *   map(x => {\n *       if (x === 0) { throw Error(); }\n *        return 10 / x;\n *   }),\n *   onErrorResumeNext(of(1, 2, 3)),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('that\\'s it!')\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>>>): OperatorFunction<T, R> {\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<Observable<any>>>nextSources[0];\n  }\n\n  return (source: Observable<T>) => source.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\n  Array<ObservableInput<any>> |\n  ((...values: Array<any>) => R)>): Observable<R> {\n  let source: ObservableInput<any>|undefined = undefined;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = nextSources[0] as ObservableInput<any>[];\n  }\n  // TODO: resolve issue with passing no arguments.\n  source = nextSources.shift()!;\n\n  return from(source).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\n  constructor(private nextSources: Array<ObservableInput<any>>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  }\n}\n\nclass OnErrorResumeNextSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  constructor(protected destination: Subscriber<T>,\n              private nextSources: Array<ObservableInput<any>>) {\n    super(destination);\n  }\n\n  notifyError(): void {\n    this.subscribeToNextSource();\n  }\n\n  notifyComplete(): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _error(err: any): void {\n    this.subscribeToNextSource();\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.subscribeToNextSource();\n    this.unsubscribe();\n  }\n\n  private subscribeToNextSource(): void {\n    const next = this.nextSources.shift();\n    if (!!next) {\n      const innerSubscriber = new SimpleInnerSubscriber(this);\n      const destination = this.destination as Subscription;\n      destination.add(innerSubscriber);\n      const innerSubscription = innerSubscribe(next, innerSubscriber);\n      // The returned subscription will usually be the subscriber that was\n      // passed. However, interop subscribers will be wrapped and for\n      // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n      if (innerSubscription !== innerSubscriber) {\n        destination.add(innerSubscription);\n      }\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n * On every click (starting from the second), emit the relative distance to the previous click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { pairwise, map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(pair => {\n *     const x0 = pair[0].clientX;\n *     const y0 = pair[0].clientY;\n *     const x1 = pair[1].clientX;\n *     const y1 = pair[1].clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   }),\n * );\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    let pair: [T, T] | undefined;\n\n    if (this.hasPrev) {\n      pair = [this.prev, value];\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n\n    if (pair) {\n      this.destination.next(pair);\n    }\n  }\n}\n","import { not } from '../util/not';\nimport { filter } from './filter';\nimport { Observable } from '../Observable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition click events into those on DIV elements and those elsewhere\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { partition } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const parts = clicks.pipe(partition(ev => ev.target.tagName === 'DIV'));\n * const clicksOnDivs = parts[0];\n * const clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n * @deprecated use `partition` static creation function instead\n */\nexport function partition<T>(predicate: (value: T, index: number) => boolean,\n                             thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]> {\n  return (source: Observable<T>) => [\n    filter(predicate, thisArg)(source),\n    filter(not(predicate, thisArg) as any)(source)\n  ] as [Observable<T>, Observable<T>];\n}\n","import { Observable } from '../Observable';\nimport { map } from './map';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pluck<T, K1 extends keyof T>(k1: K1): OperatorFunction<T, T[K1]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): OperatorFunction<T, T[K1][K2]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(k1: K1, k2: K2, k3: K3): OperatorFunction<T, T[K1][K2][K3]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3]>(k1: K1, k2: K2, k3: K3, k4: K4): OperatorFunction<T, T[K1][K2][K3][K4]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3], K5 extends keyof T[K1][K2][K3][K4]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3], K5 extends keyof T[K1][K2][K3][K4], K6 extends keyof T[K1][K2][K3][K4][K5]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\nexport function pluck<T, R>(...properties: string[]): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * ![](pluck.png)\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * ## Example\n * Map every click to the tagName of the clicked target element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { pluck } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const tagNames = clicks.pipe(pluck('target', 'tagName'));\n * tagNames.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck<T, R>(...properties: string[]): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return (source: Observable<T>) => map(plucker(properties, length))(source as any);\n}\n\nfunction plucker(props: string[], length: number): (x: string) => any {\n  const mapper = (x: string) => {\n    let currentProp = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp != null ? currentProp[props[i]] : undefined;\n      if (p !== void 0) {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  };\n\n  return mapper;\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function publish<T, O extends ObservableInput<any>>(selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\nexport function publish<T>(selector: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <span class=\"informal\">Makes a cold Observable hot</span>\n *\n * ![](publish.png)\n *\n * ## Examples\n * Make source$ hot by applying publish operator, then merge each inner observable into a single one\n * and subscribe.\n * ```ts\n * import { of, zip, interval, merge } from \"rxjs\";\n * import { map, publish, tap } from \"rxjs/operators\";\n *\n * const source$ = zip(interval(2000), of(1, 2, 3, 4, 5, 6, 7, 8, 9)).pipe(\n *   map(values => values[1])\n * );\n *\n * source$\n *   .pipe(\n *     publish(multicasted$ =>\n *       merge(\n *         multicasted$.pipe(tap(x => console.log('Stream 1:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 2:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 3:', x))),\n *       )\n *     )\n *   )\n *   .subscribe();\n *\n * // Results every two seconds\n * // Stream 1: 1\n * // Stream 2: 1\n * // Stream 3: 1\n * // ...\n * // Stream 1: 9\n * // Stream 2: 9\n * // Stream 3: 9\n * ```\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n *\n *\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ?\n    multicast(() => new Subject<T>(), selector) :\n    multicast(new Subject<T>());\n}\n","import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior<T>(value: T):  UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new BehaviorSubject<T>(value))(source) as ConnectableObservable<T>;\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Returns a connectable observable sequence that shares a single subscription to the\n * underlying sequence containing only the last notification.\n *\n * ![](publishLast.png)\n *\n * Similar to {@link publish}, but it waits until the source observable completes and stores\n * the last emitted value.\n * Similarly to {@link publishReplay} and {@link publishBehavior}, this keeps storing the last\n * value even if it has no more subscribers. If subsequent subscriptions happen, they will\n * immediately get that last stored value and complete.\n *\n * ## Example\n *\n * ```ts\n * import { interval } from 'rxjs';\n * import { publishLast, tap, take } from 'rxjs/operators';\n *\n * const connectable =\n *   interval(1000)\n *     .pipe(\n *       tap(x => console.log(\"side effect\", x)),\n *       take(3),\n *       publishLast());\n *\n * connectable.subscribe(\n *   x => console.log(  \"Sub. A\", x),\n *   err => console.log(\"Sub. A Error\", err),\n *   () => console.log( \"Sub. A Complete\"));\n *\n * connectable.subscribe(\n *   x => console.log(  \"Sub. B\", x),\n *   err => console.log(\"Sub. B Error\", err),\n *   () => console.log( \"Sub. B Complete\"));\n *\n * connectable.connect();\n *\n * // Results:\n * //    \"side effect 0\"\n * //    \"side effect 1\"\n * //    \"side effect 2\"\n * //    \"Sub. A 2\"\n * //    \"Sub. B 2\"\n * //    \"Sub. A Complete\"\n * //    \"Sub. B Complete\"\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link publish}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @return {ConnectableObservable} An observable sequence that contains the elements of a\n * sequence produced by multicasting the source sequence.\n * @method publishLast\n * @owner Observable\n */\n\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new AsyncSubject<T>())(source);\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction, MonoTypeOperatorFunction, OperatorFunction, SchedulerLike, ObservableInput, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function publishReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function publishReplay<T, O extends ObservableInput<any>>(bufferSize?: number, windowTime?: number, selector?: (shared: Observable<T>) => O, scheduler?: SchedulerLike): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\nexport function publishReplay<T, R>(bufferSize?: number,\n                                    windowTime?: number,\n                                    selectorOrScheduler?: SchedulerLike | OperatorFunction<T, R>,\n                                    scheduler?: SchedulerLike): UnaryFunction<Observable<T>, ConnectableObservable<R>> {\n\n  if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n    scheduler = selectorOrScheduler;\n  }\n\n  const selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n  const subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n\n  return (source: Observable<T>) => multicast(() => subject, selector)(source) as ConnectableObservable<R>;\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../types';\nimport { race as raceStatic } from '../observable/race';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T>(observables: Array<Observable<T>>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T, R>(observables: Array<Observable<T>>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T, R>(...observables: Array<Observable<any> | Array<Observable<any>>>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n * @deprecated Deprecated in favor of static {@link race}.\n */\nexport function race<T>(...observables: (Observable<T> | Observable<T>[])[]): MonoTypeOperatorFunction<T> {\n  return function raceOperatorFunction(source: Observable<T>) {\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1 && isArray(observables[0])) {\n      observables = observables[0] as Observable<T>[];\n    }\n\n    return source.lift.call(raceStatic(source, ...(observables as Observable<T>[])));\n  };\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { empty } from '../observable/empty';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that will resubscribe to the source stream when the source stream completes, at most count times.\n *\n * <span class=\"informal\">Repeats all values emitted on the source. It's like {@link retry}, but for non error cases.</span>\n *\n * ![](repeat.png)\n *\n * Similar to {@link retry}, this operator repeats the stream of items emitted by the source for non error cases.\n * Repeat can be useful for creating observables that are meant to have some repeated pattern or rhythm.\n *\n * Note: `repeat(0)` returns an empty observable and `repeat()` will repeat forever\n *\n * ## Example\n * Repeat a message stream\n * ```ts\n * import { of } from 'rxjs';\n * import { repeat, delay } from 'rxjs/operators';\n *\n * const source = of('Repeat message');\n * const example = source.pipe(repeat(3));\n * example.subscribe(x => console.log(x));\n *\n * // Results\n * // Repeat message\n * // Repeat message\n * // Repeat message\n * ```\n *\n * Repeat 3 values, 2 times\n * ```ts\n * import { interval } from 'rxjs';\n * import { repeat, take } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(take(3), repeat(2));\n * example.subscribe(x => console.log(x));\n *\n * // Results every second\n * // 0\n * // 1\n * // 2\n * // 0\n * // 1\n * // 2\n * ```\n *\n * @see {@link repeatWhen}\n * @see {@link retry}\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that will resubscribe to the source stream when the source stream completes\n * , at most count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * ![](repeatWhen.png)\n *\n * ## Example\n * Repeat a message stream on click\n * ```ts\n * import { of, fromEvent } from 'rxjs';\n * import { repeatWhen } from 'rxjs/operators';\n *\n * const source = of('Repeat message');\n * const documentClick$ = fromEvent(document, 'click');\n *\n * source.pipe(repeatWhen(() => documentClick$)\n * ).subscribe(data => console.log(data))\n * ```\n * @see {@link repeat}\n * @see {@link retry}\n * @see {@link retryWhen}\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RepeatWhenOperator(notifier));\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n\n  private notifications?: Subject<any>;\n  private retries?: Observable<any>;\n  private retriesSubscription?: Subscription;\n  private sourceIsBeingSubscribedTo: boolean = true;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  notifyNext(): void {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  }\n\n  notifyComplete(): void {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return super.complete();\n    }\n  }\n\n  complete() {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return super.complete();\n      }\n\n      this._unsubscribeAndRecycle();\n      this.notifications!.next(undefined);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = undefined;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = undefined;\n    }\n    this.retries = undefined;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _unsubscribe } = this;\n\n    this._unsubscribe = null!;\n    super._unsubscribeAndRecycle();\n    this._unsubscribe = _unsubscribe;\n\n    return this;\n  }\n\n  private subscribeToRetries() {\n    this.notifications = new Subject();\n    let retries;\n    try {\n      const { notifier } = this;\n      retries = notifier(this.notifications);\n    } catch (e) {\n      return super.complete();\n    }\n    this.retries = retries;\n    this.retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n *\n * ## Example\n * ```ts\n * import { interval, of, throwError } from 'rxjs';\n * import { mergeMap, retry } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   mergeMap(val => {\n *     if(val > 5){\n *       return throwError('Error!');\n *     }\n *     return of(val);\n *   }),\n *   //retry 2 times on error\n *   retry(2)\n * );\n *\n * const subscribe = example.subscribe({\n *   next: val => console.log(val),\n *   error: val => console.log(`${val}: Retried 2 times then quit!`)\n * });\n *\n * // Output:\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // \"Error!: Retried 2 times then quit!\"\n * ```\n *\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * ![](retryWhen.png)\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              protected source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n\n  private errors?: Subject<any>;\n  private retries?: Observable<any>;\n  private retriesSubscription?: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        try {\n          const { notifier } = this;\n          retries = notifier(errors);\n        } catch (e) {\n          return super.error(e);\n        }\n        retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n      } else {\n        this.errors = undefined;\n        this.retriesSubscription = undefined;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors!.next(err);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = undefined;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = undefined;\n    }\n    this.retries = undefined;\n  }\n\n  notifyNext(): void {\n    const { _unsubscribe } = this;\n\n    this._unsubscribe = null!;\n    this._unsubscribeAndRecycle();\n    this._unsubscribe = _unsubscribe;\n\n    this.source.subscribe(this);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * ![](sample.png)\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * ## Example\n * On every click, sample the most recent \"seconds\" timer\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { sample } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = seconds.pipe(sample(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleOperator(notifier));\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const sampleSubscriber = new SampleSubscriber(subscriber);\n    const subscription = source.subscribe(sampleSubscriber);\n    subscription.add(innerSubscribe(this.notifier, new SimpleInnerSubscriber(sampleSubscriber)));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private value?: T;\n  private hasValue: boolean = false;\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next!(this.value!);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * ![](sampleTime.png)\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * ## Example\n * Every second, emit the most recent click at most once\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { sampleTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(sampleTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(this: SchedulerAction<any>, state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { Observer, OperatorFunction } from '../types';\n\n/**\n * Compares all values of two observables in sequence using an optional comparator function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * ![](sequenceEqual.png)\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * ## Example\n * figure out if the Konami code matches\n * ```ts\n * import { from, fromEvent } from 'rxjs';\n * import { sequenceEqual, bufferCount, mergeMap, map } from 'rxjs/operators';\n *\n * const codes = from([\n *   'ArrowUp',\n *   'ArrowUp',\n *   'ArrowDown',\n *   'ArrowDown',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'KeyB',\n *   'KeyA',\n *   'Enter', // no start key, clearly.\n * ]);\n *\n * const keys = fromEvent(document, 'keyup').pipe(map(e => e.code));\n * const matches = keys.pipe(\n *   bufferCount(11, 1),\n *   mergeMap(\n *     last11 => from(last11).pipe(sequenceEqual(codes)),\n *   ),\n * );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparator] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparator?: (a: T, b: T) => boolean): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new SequenceEqualOperator(compareTo, comparator));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, boolean> {\n  constructor(private compareTo: Observable<T>,\n              private comparator: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparator: (a: T, b: T) => boolean) {\n    super(destination);\n    (this.destination as Subscription).add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n    this.unsubscribe();\n  }\n\n  checkValues() {\n    const { _a, _b, comparator } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      try {\n        areEqual = comparator ? comparator(a, b) : a === b;\n      } catch (e) {\n        this.destination.error(e);\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n\n  completeB() {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.completeB();\n    this.unsubscribe();\n  }\n}\n","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\n\nimport { MonoTypeOperatorFunction } from '../types';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * ![](share.png)\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => refCount()(multicast(shareSubjectFactory)(source)) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplayed observable` forever,\n * but an errored source can be retried.\n *\n * ## Why use shareReplay?\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ![](shareReplay.png)\n *\n * ## Example\n * ```ts\n * import { interval } from 'rxjs';\n * import { shareReplay, take } from 'rxjs/operators';\n *\n * const obs$ = interval(1000);\n * const shared$ = obs$.pipe(\n *   take(4),\n *   shareReplay(3)\n * );\n * shared$.subscribe(x => console.log('source A: ', x));\n * shared$.subscribe(y => console.log('source B: ', y));\n *\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param {Number} [bufferSize=Number.POSITIVE_INFINITY] Maximum element count of the replay buffer.\n * @param {Number} [windowTime=Number.POSITIVE_INFINITY] Maximum time length of the replay buffer in milliseconds.\n * @param {Scheduler} [scheduler] Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return {Observable} An observable sequence that contains the elements of a sequence produced\n * by multicasting the source sequence within a selector function.\n * @method shareReplay\n * @owner Observable\n */\nexport function shareReplay<T>(\n  config: ShareReplayConfig\n): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(\n  bufferSize?: number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let config: ShareReplayConfig;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    config = configOrBufferSize as ShareReplayConfig;\n  } else {\n    config = {\n      bufferSize: configOrBufferSize as number | undefined,\n      windowTime,\n      refCount: false,\n      scheduler,\n    };\n  }\n  return (source: Observable<T>) => source.lift(shareReplayOperator(config));\n}\n\nfunction shareReplayOperator<T>({\n  bufferSize = Number.POSITIVE_INFINITY,\n  windowTime = Number.POSITIVE_INFINITY,\n  refCount: useRefCount,\n  scheduler,\n}: ShareReplayConfig) {\n  let subject: ReplaySubject<T> | undefined;\n  let refCount = 0;\n  let subscription: Subscription | undefined;\n  let hasError = false;\n  let isComplete = false;\n\n  return function shareReplayOperation(\n    this: Subscriber<T>,\n    source: Observable<T>\n  ) {\n    refCount++;\n    let innerSub: Subscription;\n    if (!subject || hasError) {\n      hasError = false;\n      subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n      innerSub = subject.subscribe(this);\n      subscription = source.subscribe({\n        next(value) {\n          subject.next(value);\n        },\n        error(err) {\n          hasError = true;\n          subject.error(err);\n        },\n        complete() {\n          isComplete = true;\n          subscription = undefined;\n          subject.complete();\n        },\n      });\n\n      // Here we need to check to see if the source synchronously completed. Although\n      // we're setting `subscription = undefined` in the completion handler, if the source\n      // is synchronous, that will happen *before* subscription is set by the return of\n      // the `subscribe` call.\n      if (isComplete) {\n        subscription = undefined;\n      }\n    } else {\n      innerSub = subject.subscribe(this);\n    }\n\n    this.add(() => {\n      refCount--;\n      innerSub.unsubscribe();\n      innerSub = undefined;\n      if (subscription && !isComplete && useRefCount && refCount === 0) {\n        subscription.unsubscribe();\n        subscription = undefined;\n        subject = undefined;\n      }\n    });\n  };\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\n\nimport { Observer, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * items, notify of an IllegalArgumentException or NoSuchElementException respectively. If the source Observable\n * emits items but none match the specified predicate then `undefined` is emitted.\n *\n * <span class=\"informal\">Like {@link first}, but emit with error notification if there is more than one value.</span>\n * ![](single.png)\n *\n * ## Example\n * emits 'error'\n * ```ts\n * import { range } from 'rxjs';\n * import { single } from 'rxjs/operators';\n *\n * const numbers = range(1,5).pipe(single());\n * numbers.subscribe(x => console.log('never get called'), e => console.log('error'));\n * // result\n * // 'error'\n * ```\n *\n * emits 'undefined'\n * ```ts\n * import { range } from 'rxjs';\n * import { single } from 'rxjs/operators';\n *\n * const numbers = range(1,5).pipe(single(x => x === 10));\n * numbers.subscribe(x => console.log(x));\n * // result\n * // 'undefined'\n * ```\n *\n * @see {@link first}\n * @see {@link find}\n * @see {@link findIndex}\n * @see {@link elementAt}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate or `undefined` when no items match.\n *\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SingleOperator(predicate, source));\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T, index: number): void {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * ![](skipLast.png)\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * ## Example\n * Skip the last 2 values of an Observable with many values\n * ```ts\n * import { range } from 'rxjs';\n * import { skipLast } from 'rxjs/operators';\n *\n * const many = range(1, 5);\n * const skipLastTwo = many.pipe(skipLast(2));\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic, ObservableInput } from '../types';\nimport { Subscription } from '../Subscription';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * The `skipUntil` operator causes the observable stream to skip the emission of values ​​until the passed in observable emits the first value.\n * This can be particularly useful in combination with user interactions, responses of http requests or waiting for specific times to pass by.\n *\n * ![](skipUntil.png)\n *\n * Internally the `skipUntil` operator subscribes to the passed in observable (in the following called *notifier*) in order to recognize the emission\n * of its first value. When this happens, the operator unsubscribes from the *notifier* and starts emitting the values of the *source*\n * observable. It will never let the *source* observable emit any values if the *notifier* completes or throws an error without emitting\n * a value before.\n *\n * ## Example\n *\n * In the following example, all emitted values ​​of the interval observable are skipped until the user clicks anywhere within the page.\n *\n * ```ts\n * import { interval, fromEvent } from 'rxjs';\n * import { skipUntil } from 'rxjs/operators';\n *\n * const intervalObservable = interval(1000);\n * const click = fromEvent(document, 'click');\n *\n * const emitAfterClick = intervalObservable.pipe(\n *   skipUntil(click)\n * );\n * // clicked at 4.6s. output: 5...6...7...8........ or\n * // clicked at 7.3s. output: 8...9...10..11.......\n * const subscribe = emitAfterClick.subscribe(value => console.log(value));\n * ```\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(destination: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private innerSubscription?: Subscription;\n\n  constructor(destination: Subscriber<R>, notifier: ObservableInput<any>) {\n    super(destination);\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    this.add(innerSubscriber);\n    this.innerSubscription = innerSubscriber;\n    const innerSubscription = innerSubscribe(notifier, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      this.add(innerSubscription);\n      this.innerSubscription = innerSubscription;\n    }\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  notifyNext(): void {\n    this.hasValue = true;\n    if (this.innerSubscription) {\n      this.innerSubscription.unsubscribe();\n    }\n  }\n\n  notifyComplete() {\n    /* do nothing */\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * ![](skipWhile.png)\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nimport { MonoTypeOperatorFunction, OperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D>(v1: D, scheduler: SchedulerLike): OperatorFunction<T, T | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E>(v1: D, v2: E, scheduler: SchedulerLike): OperatorFunction<T, T | D | E>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F>(v1: D, v2: E, v3: F, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G>(v1: D, v2:  E, v3: F, v4: G, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G, H>(v1: D, v2: E, v3: F, v4: G, v5: H, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G | H>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G, H, I>(v1: D, v2: E, v3: F, v4: G, v5: H, v6: I, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G | H | I>;\n\nexport function startWith<T, D>(v1: D): OperatorFunction<T, T | D>;\nexport function startWith<T, D, E>(v1: D, v2: E): OperatorFunction<T, T | D | E>;\nexport function startWith<T, D, E, F>(v1: D, v2: E, v3: F): OperatorFunction<T, T | D | E | F>;\nexport function startWith<T, D, E, F, G>(v1: D, v2:  E, v3: F, v4: G): OperatorFunction<T, T | D | E | F | G>;\nexport function startWith<T, D, E, F, G, H>(v1: D, v2: E, v3: F, v4: G, v5: H): OperatorFunction<T, T | D | E | F | G | H>;\nexport function startWith<T, D, E, F, G, H, I>(v1: D, v2: E, v3: F, v4: G, v5: H, v6: I): OperatorFunction<T, T | D | E | F | G | H | I>;\nexport function startWith<T, D = T>(...array: D[]): OperatorFunction<T, T | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D = T>(...array: Array<D | SchedulerLike>): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Start the chain of emissions with `\"first\"`, `\"second\"`\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * of(\"from source\")\n *   .pipe(startWith(\"first\", \"second\"))\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * //   \"first\"\n * //   \"second\"\n * //   \"from source\"\n * ```\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {SchedulerLike} [scheduler] - A {@link SchedulerLike} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith<T, D>(...array: Array<T | SchedulerLike>): OperatorFunction<T, T | D> {\n  const scheduler = array[array.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    // deprecated path\n    array.pop();\n    return (source: Observable<T>) => concat(array as T[], source, scheduler);\n  } else {\n    return (source: Observable<T>) => concat(array as T[], source);\n  }\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n\nexport interface DispatchArg<T> {\n  source: Observable<T>;\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class SubscribeOnObservable<T> extends Observable<T> {\n  /** @nocollapse */\n  static create<T>(source: Observable<T>, delay: number = 0, scheduler: SchedulerLike = asap): Observable<T> {\n    return new SubscribeOnObservable(source, delay, scheduler);\n  }\n\n  /** @nocollapse */\n  static dispatch<T>(this: SchedulerAction<T>, arg: DispatchArg<T>): Subscription {\n    const { source, subscriber } = arg;\n    return this.add(source.subscribe(subscriber));\n  }\n\n  constructor(public source: Observable<T>,\n              private delayTime: number = 0,\n              private scheduler: SchedulerLike = asap) {\n    super();\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      this.delayTime = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = asap;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const delay = this.delayTime;\n    const source = this.source;\n    const scheduler = this.scheduler;\n\n    return scheduler.schedule<DispatchArg<any>>(SubscribeOnObservable.dispatch, delay, {\n      source, subscriber\n    });\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n * Given the following code:\n * ```javascript\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3, 4);\n * const b = of(5, 6, 7, 8, 9);\n * merge(a, b).subscribe(console.log);\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n * This will result in the output of `1 2 3 4 5 6 7 8 9`.\n *\n * But if we instead us the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emited by Observable `a`:\n * ```javascript\n * import { of, merge, asyncScheduler } from 'rxjs';\n * import { subscribeOn } from 'rxjs/operators';\n *\n * const a = of(1, 2, 3, 4).pipe(subscribeOn(asyncScheduler));\n * const b = of(5, 6, 7, 8, 9);\n * merge(a, b).subscribe(console.log);\n * ```\n *\n * The output will instead be `5 6 7 8 9 1 2 3 4`.\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param {SchedulerLike} scheduler - The {@link SchedulerLike} to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified {@link SchedulerLike}.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function subscribeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new SubscribeOnOperator<T>(scheduler, delay));\n  };\n}\n\nclass SubscribeOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike,\n              private delay: number) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return new SubscribeOnObservable<T>(\n      source, this.delay, this.scheduler\n    ).subscribe(subscriber);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n * Generate new Observable according to source Observable values\n * ```typescript\n * import { of } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const switched = of(1, 2, 3).pipe(switchMap((x: number) => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // ... and so on\n * ```\n *\n * Rerun an interval Observable on every click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap((ev) => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    return (source: Observable<T>) => source.pipe(\n      switchMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii))\n      ))\n    );\n  }\n  return (source: Observable<T>) => source.lift(new SwitchMapOperator(project));\n}\n\nclass SwitchMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private index = 0;\n  private innerSubscription?: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error!(error);\n      return;\n    }\n    this._innerSub(result);\n  }\n\n  private _innerSub(result: ObservableInput<R>) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    this.innerSubscription = innerSubscribe(result, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (this.innerSubscription !== innerSubscriber) {\n      destination.add(this.innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n    this.unsubscribe();\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = undefined;\n  }\n\n  notifyComplete(): void {\n    this.innerSubscription = undefined;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(innerValue: R): void {\n      this.destination.next!(innerValue);\n  }\n}\n","import {OperatorFunction, ObservableInput} from '../types';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\nexport function switchAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function switchAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable\n * producing values only from the most recent observable sequence\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](switchAll.png)\n *\n * `switchAll` subscribes to a source that is an observable of observables, also known as a\n * \"higher-order observable\" (or `Observable<Observable<T>>`). It subscribes to the most recently\n * provided \"inner observable\" emitted by the source, unsubscribing from any previously subscribed\n * to inner observable, such that only the most recent inner observable may be subscribed to at\n * any point in time. The resulting observable returned by `switchAll` will only complete if the\n * source observable completes, *and* any currently subscribed to inner observable also has completed,\n * if there are any.\n *\n * ## Examples\n * Spawn a new interval observable for each click event, but for every new\n * click, cancel the previous interval and subscribe to the new one.\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchAll, map, tap } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click').pipe(tap(() => console.log('click')));\n * const source = clicks.pipe(map((ev) => interval(1000)));\n *\n * source.pipe(\n *   switchAll()\n * ).subscribe(x => console.log(x));\n *\n * // Output\n * // click\n * // 1\n * // 2\n * // 3\n * // 4\n * // ...\n * // click\n * // 1\n * // 2\n * // 3\n * // ...\n * // click\n * // ...\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link mergeAll}\n */\n\nexport function switchAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return switchMap(identity);\n}\n","import { ObservableInput, OperatorFunction } from '../types';\nimport { switchMap } from './switchMap';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<R>(observable: ObservableInput<R>): OperatorFunction<any, R>;\n/** @deprecated resultSelector is no longer supported. Switch to using switchMap with an inner map */\nexport function switchMapTo<T, R>(observable: ObservableInput<R>, resultSelector: undefined): OperatorFunction<T, R>;\n/** @deprecated resultSelector is no longer supported. Switch to using switchMap with an inner map */\nexport function switchMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switchMap} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](switchMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * ## Example\n * Rerun an interval Observable on every click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchMapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through the deprecated `resultSelector`)\n * every time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(\n  innerObservable: ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I|R> {\n  return resultSelector ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n * Tick every second until the first click happens\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { takeUntil } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n    const notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n    if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n      takeUntilSubscriber.add(notifierSubscription);\n      return source.subscribe(takeUntilSubscriber);\n    }\n    return takeUntilSubscriber;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  seenValue = false;\n\n  constructor(destination: Subscriber<any>, ) {\n    super(destination);\n  }\n\n  notifyNext(): void {\n    this.seenValue = true;\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n * Emit click events only while the clientX property is greater than 200\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { takeWhile } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(\n    predicate: (value: T, index: number) => boolean,\n    inclusive = false): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) =>\n             source.lift(new TakeWhileOperator(predicate, inclusive));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(\n      private predicate: (value: T, index: number) => boolean,\n      private inclusive: boolean) {}\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n        new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(\n      destination: Subscriber<T>,\n      private predicate: (value: T, index: number) => boolean,\n      private inclusive: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      if (this.inclusive) {\n        destination.next(value);\n      }\n      destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, TeardownLogic } from '../types';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use an observer instead of a complete callback */\nexport function tap<T>(next: null | undefined, error: null | undefined, complete: () => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Use an observer instead of an error callback */\nexport function tap<T>(next: null | undefined, error: (error: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Use an observer instead of a complete callback */\nexport function tap<T>(next: (value: T) => void, error: null | undefined, complete: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(next?: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * ![](do.png)\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `tap` is not subscribed, the side effects specified by the\n * Observer will never happen. `tap` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * ## Example\n * Map every click to the clientX position of that click, while also logging the click event\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { tap, map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(\n *   tap(ev => console.log(ev)),\n *   map(ev => ev.clientX),\n * );\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n * @see {@link Observable#subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nclass TapSubscriber<T> extends Subscriber<T> {\n  private _context: any;\n\n  private _tapNext: ((value: T) => void) = noop;\n\n  private _tapError: ((err: any) => void) = noop;\n\n  private _tapComplete: (() => void) = noop;\n\n  constructor(destination: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n      super(destination);\n      this._tapError = error || noop;\n      this._tapComplete = complete || noop;\n      if (isFunction(observerOrNext)) {\n        this._context = this;\n        this._tapNext = observerOrNext;\n      } else if (observerOrNext) {\n        this._context = observerOrNext;\n        this._tapNext = observerOrNext.next || noop;\n        this._tapError = observerOrNext.error || noop;\n        this._tapComplete = observerOrNext.complete || noop;\n      }\n    }\n\n  _next(value: T) {\n    try {\n      this._tapNext.call(this._context, value);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(value);\n  }\n\n  _error(err: any) {\n    try {\n      this._tapError.call(this._context, err);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.error(err);\n  }\n\n  _complete() {\n    try {\n      this._tapComplete.call(this._context, );\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    return this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](throttle.png)\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * ## Example\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { throttle } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttle(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<any>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private _throttled?: Subscription;\n  private _sendValue?: T;\n  private _hasValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this._hasValue = true;\n    this._sendValue = value;\n\n    if (!this._throttled) {\n      if (this._leading) {\n        this.send();\n      } else {\n        this.throttle(value);\n      }\n    }\n  }\n\n  private send() {\n    const { _hasValue, _sendValue } = this;\n    if (_hasValue) {\n      this.destination.next(_sendValue);\n      this.throttle(_sendValue!);\n    }\n    this._hasValue = false;\n    this._sendValue = undefined;\n  }\n\n  private throttle(value: T): void {\n    const duration = this.tryDurationSelector(value);\n    if (!!duration) {\n      this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> | null {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  private throttlingDone() {\n    const { _throttled, _trailing } = this;\n    if (_throttled) {\n      _throttled.unsubscribe();\n    }\n    this._throttled = undefined;\n\n    if (_trailing) {\n      this.send();\n    }\n  }\n\n  notifyNext(): void {\n    this.throttlingDone();\n  }\n\n  notifyComplete(): void {\n    this.throttlingDone();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * ![](throttleTime.png)\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link SchedulerLike} for managing timers.\n *\n * ## Examples\n *\n * #### Limit click rate\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { throttleTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttleTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * #### Double Click\n *\n * The following example only emits clicks which happen within a subsequent\n * delay of 400ms of the previous click. This for example can emulate a double\n * click. It makes use of the `trailing` parameter of the throttle configuration.\n *\n * ```ts\n * import { fromEvent, asyncScheduler } from 'rxjs';\n * import { throttleTime, withLatestFrom } from 'rxjs/operators';\n *\n * // defaultThottleConfig = { leading: true, trailing: false }\n * const throttleConfig = {\n *   leading: false,\n *   trailing: true\n * }\n *\n * const click = fromEvent(document, 'click');\n * const doubleClick = click.pipe(\n *   throttleTime(400, asyncScheduler, throttleConfig)\n * );\n *\n * doubleClick.subscribe((throttleValue: Event) => {\n *   console.log(`Double-clicked! Timestamp: ${throttleValue.timeStamp}`);\n * });\n * ```\n *\n * If you enable the `leading` parameter in this example, the output would be the primary click and\n * the double click, but restricts additional clicks within 400ms.\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling.\n * @param {Object} config a configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: SchedulerLike = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: SchedulerLike,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: SchedulerLike,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule<DispatchArg<T>>(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      } else if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    }\n  }\n\n  protected _complete() {\n    if (this._hasTrailingValue) {\n      this.destination.next(this._trailingValue);\n      this.destination.complete();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerLike, OperatorFunction } from '../types';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\n\n/**\n *\n * Emits an object containing the current value, and the time that has\n * passed between emitting the current value and the previous value, which is\n * calculated by using the provided `scheduler`'s `now()` method to retrieve\n * the current time at each emission, then calculating the difference. The `scheduler`\n * defaults to {@link asyncScheduler}, so by default, the `interval` will be in\n * milliseconds.\n *\n * <span class=\"informal\">Convert an Observable that emits items into one that\n * emits indications of the amount of time elapsed between those emissions.</span>\n *\n * ![](timeinterval.png)\n *\n * ## Examples\n * Emit inteval between current value with the last value\n *\n * ```ts\n * const seconds = interval(1000);\n *\n * seconds.pipe(timeInterval())\n * .subscribe(\n *     value => console.log(value),\n *     err => console.log(err),\n * );\n *\n * seconds.pipe(timeout(900))\n * .subscribe(\n *     value => console.log(value),\n *     err => console.log(err),\n * );\n *\n * // NOTE: The values will never be this precise,\n * // intervals created with `interval` or `setInterval`\n * // are non-deterministic.\n *\n * // {value: 0, interval: 1000}\n * // {value: 1, interval: 1000}\n * // {value: 2, interval: 1000}\n * ```\n *\n * @param {SchedulerLike} [scheduler] Scheduler used to get the current time.\n * @return {Observable<{ interval: number, value: T }>} Observable that emit infomation about value and interval\n * @method timeInterval\n */\nexport function timeInterval<T>(scheduler: SchedulerLike = async): OperatorFunction<T, TimeInterval<T>> {\n  return (source: Observable<T>) => defer(() => {\n    return source.pipe(\n      // TODO(benlesh): correct these typings.\n      scan(\n        ({ current }, value) => ({ value, current: scheduler.now(), last: current }),\n        { current: scheduler.now(), value: undefined,  last: undefined }\n      ) as any,\n      map<any, TimeInterval<T>>(({ current, last, value }) => new TimeInterval(value, current - last)),\n    );\n  });\n}\n\n// TODO(benlesh): make this an interface, export the interface, but not the implemented class,\n// there's no reason users should be manually creating this type.\n\n/**\n * @deprecated exposed API, use as interface only.\n */\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {}\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { ObservableInput, OperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * ![](timeoutWith.png)\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * ## Example\n * Add fallback observable\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeoutWith } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n * const minutes = interval(60 * 1000);\n *\n * seconds.pipe(timeoutWith(900, minutes))\n *   .subscribe(\n *     value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                  // since first value of `seconds` will not arrive fast enough.\n *     err => console.log(err),     // Would be called after 900ms in case of `timeout`,\n *                                  // but here will never be called.\n *   );\n * ```\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {SchedulerLike} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: SchedulerLike = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n\n  private action?: SchedulerAction<TimeoutWithSubscriber<T, R>>;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    subscriber._unsubscribeAndRecycle();\n    subscriber.add(innerSubscribe(withObservable, new SimpleInnerSubscriber(subscriber)));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<SchedulerAction<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<SchedulerAction<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule<TimeoutWithSubscriber<T, R>>(\n        TimeoutWithSubscriber.dispatchTimeout as any, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.action = undefined;\n    this.scheduler = null!;\n    this.withObservable = null!;\n  }\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\nimport { timeoutWith } from './timeoutWith';\nimport { throwError } from '../observable/throwError';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * ## Examples\n * Check if ticks are emitted within certain timespan\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeout } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n *\n * seconds.pipe(timeout(1100))      // Let's use bigger timespan to be safe,\n *                                  // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err),     // Will never be called.\n * );\n *\n * seconds.pipe(timeout(900))\n * .subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err),     // Will emit error before even first value is emitted,\n *                                  // since it did not arrive within 900ms period.\n * );\n * ```\n *\n * Use Date to check if Observable completed\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeout } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n *\n * seconds.pipe(\n *   timeout(new Date(\"December 17, 2020 03:24:00\")),\n * )\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err)      // On December 17, 2020 at 03:24:00 it will emit an error,\n *                                  // since Observable did not complete by then.\n * );\n * ```\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {SchedulerLike} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return timeoutWith(due, throwError(new TimeoutError()), scheduler);\n}\n","\nimport { async } from '../scheduler/async';\nimport { OperatorFunction, SchedulerLike, Timestamp as TimestampInterface } from '../types';\nimport { map } from './map';\n\n/**\n * Attaches a timestamp to each item emitted by an observable indicating when it was emitted\n *\n * The `timestamp` operator maps the *source* observable stream to an object of type\n * `{value: T, timestamp: R}`. The properties are generically typed. The `value` property contains the value\n * and type of the *source* observable. The `timestamp` is generated by the schedulers `now` function. By\n * default it uses the *async* scheduler which simply returns `Date.now()` (milliseconds since 1970/01/01\n * 00:00:00:000) and therefore is of type `number`.\n *\n * ![](timestamp.png)\n *\n * ## Example\n *\n * In this example there is a timestamp attached to the documents click event.\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { timestamp } from 'rxjs/operators';\n *\n * const clickWithTimestamp = fromEvent(document, 'click').pipe(\n *   timestamp()\n * );\n *\n * // Emits data of type {value: MouseEvent, timestamp: number}\n * clickWithTimestamp.subscribe(data => {\n *   console.log(data);\n * });\n * ```\n *\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp<T>(scheduler: SchedulerLike = async): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => new Timestamp(value, scheduler.now()));\n  // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\n\nexport class Timestamp<T> implements TimestampInterface<T> {\n  constructor(public value: T, public timestamp: number) {\n  }\n}\n","import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\n\nfunction toArrayReducer<T>(arr: T[], item: T, index: number) {\n  if (index === 0) {\n    return [item];\n  }\n  arr.push(item);\n  return arr;\n}\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * ![](toArray.png)\n *\n * `toArray` will wait until the source Observable completes before emitting\n * the array containing all emissions. When the source Observable errors no\n * array will be emitted.\n *\n *  ## Example\n * ```ts\n * import { interval } from 'rxjs';\n * import { toArray, take } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(10),\n *   toArray()\n * );\n *\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n *\n * ```\n* @return An array from an observable sequence.\n* @method toArray\n* @owner Observable\n*/\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  return reduce(toArrayReducer, [] as T[]);\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { Operator } from '../Operator';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * ![](window.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * ## Example\n * In every window of 1 second each, emit at most 2 click events\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { window, mergeAll, map, take } from 'rxjs/operators';\n *\n *  const clicks = fromEvent(document, 'click');\n *  const sec = interval(1000);\n *  const result = clicks.pipe(\n *      window(sec),\n *      map(win => win.pipe(take(2))), // each window has at most 2 emissions\n *      mergeAll(),              // flatten the Observable-of-Observables\n *  );\n *  result.subscribe(x => console.log(x));\n * ```\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(innerSubscribe(this.windowBoundaries, new SimpleInnerSubscriber(windowSubscriber)));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends SimpleOuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any): void {\n    this._error(error);\n  }\n\n  notifyComplete(): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error!(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete!();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.window = null!;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next!(newWindow);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowCount.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * ## Examples\n * Ignore every 3rd click event, starting from the first one\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowCount, map, mergeAll, skip } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(3),\n *   map(win => win.pipe(skip(1))), // skip first of every 3 clicks\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Ignore every 3rd click event, starting from the third one\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowCount, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(2, 3),\n *   mergeAll(),              // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  return function windowCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n  };\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  protected _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction, SchedulerLike, SchedulerAction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowTime.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * ## Examples\n * In every window of 1 second each, emit at most 2 click events\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowTime, map, mergeAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000),\n *   map(win => win.pipe(take(2))), // each window has at most 2 emissions\n *   mergeAll(),                    // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds start a window 1 second long, and emit at most 2 click events per window\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowTime, map, mergeAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000),\n *   map(win => win.pipe(take(2))), // each window has at most 2 emissions\n *   mergeAll(),                    // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Same as example above but with maxWindowCount instead of take\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowTime, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000, 2), // each window has still at most 2 emissions\n *   mergeAll(),                // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\n\nexport function windowTime<T>(windowTimeSpan: number): OperatorFunction<T, Observable<T>> {\n  let scheduler: SchedulerLike = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = Number(arguments[2]);\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = Number(arguments[1]);\n  }\n\n  return function windowTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: SchedulerLike;\n}\n\ninterface TimeSpanOnlyState<T> {\n    window: CountedSubject<T>;\n    windowTimeSpan: number;\n    subscriber: WindowTimeSubscriber<T>;\n  }\n\ninterface CloseWindowContext<T> {\n  action: SchedulerAction<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface CloseState<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: CountedSubject<T>;\n  context: CloseWindowContext<T>;\n}\n\nclass CountedSubject<T> extends Subject<T> {\n  private _numberOfNextedValues: number = 0;\n\n  next(value?: T): void {\n    this._numberOfNextedValues++;\n    super.next(value);\n  }\n\n  get numberOfNextedValues(): number {\n    return this._numberOfNextedValues;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: CountedSubject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n\n    const window = this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      const closeState: CloseState<T> = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule<CloseState<T>>(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule<CreationState<T>>(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState: TimeSpanOnlyState<T> = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule<TimeSpanOnlyState<T>>(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T): void {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n        if (window.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window);\n        }\n      }\n    }\n  }\n\n  protected _error(err: any): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  public openWindow(): CountedSubject<T> {\n    const window = new CountedSubject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  public closeWindow(window: CountedSubject<T>): void {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(this: SchedulerAction<TimeSpanOnlyState<T>>, state: TimeSpanOnlyState<T>): void {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation<T>(this: SchedulerAction<CreationState<T>>, state: CreationState<T>): void {\n  const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  const window = subscriber.openWindow();\n  const action = this;\n  let context: CloseWindowContext<T> = { action, subscription: <any>null };\n  const timeSpanState: CloseState<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule<CloseState<T>>(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(state: CloseState<T>): void {\n  const { subscriber, window, context } = state;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowToggle.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * ## Example\n * Every other second, emit the click events from the next 500ms\n * ```ts\n * import { fromEvent, interval, EMPTY } from 'rxjs';\n * import { windowToggle, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const result = clicks.pipe(\n *   windowToggle(openings, i => i % 2 ? interval(500) : EMPTY),\n *   mergeAll()\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return (source: Observable<T>) => source.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings as any));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n      let closingNotifier;\n      try {\n        const { closingSelector } = this;\n        closingNotifier = closingSelector(innerValue);\n      } catch (e) {\n        return this.error(e);\n      }\n\n      const window = new Subject<T>();\n      const subscription = new Subscription();\n      const context = { window, subscription };\n      this.contexts.push(context);\n      const innerSubscription = subscribeToResult(this, closingNotifier, context as any);\n\n      if (innerSubscription.closed) {\n        this.closeWindow(this.contexts.length - 1);\n      } else {\n        (<any>innerSubscription).context = context;\n        subscription.add(innerSubscription);\n      }\n\n      this.destination.next(window);\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowWhen.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * ## Example\n * Emit only the first two clicks events in every window of [1-5] random seconds\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { windowWhen, map, mergeAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowWhen(() => interval(1000 + Math.random() * 4000)),\n *   map(win => win.pipe(take(2))),     // each window has at most 2 emissions\n *   mergeAll()                         // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowWhenOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator<T>(closingSelector));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window?: Subject<T>;\n  private closingNotification?: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(_outerValue: T, _innerValue: any,\n             _outerIndex: number, _innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window!.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window!.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window!.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> | null = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    let closingNotifier;\n    try {\n      const { closingSelector } = this;\n      closingNotifier = closingSelector();\n    } catch (e) {\n      this.destination.error(e);\n      this.window.error(e);\n      return;\n    }\n    this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, R>(source2: O2, project: (v1: T, v2: ObservedValueOf<O2>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v2: O2, v3: O3, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v2: O2, v3: O3, v4: O4, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v2: O2, v3: O3, v4: O4, v5: O5, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>>(source2: O2): OperatorFunction<T, [T, ObservedValueOf<O2>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v2: O2, v3: O3): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v2: O2, v3: O3, v4: O4): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v2: O2, v3: O3, v4: O4, v5: O5): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\nexport function withLatestFrom<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): OperatorFunction<T, R>;\n\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * ![](withLatestFrom.png)\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * ## Example\n * On every click event, emit an array with the latest timer event plus the click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { withLatestFrom } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const result = clicks.pipe(withLatestFrom(timer));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.pipe(withLatestFrom(b, c), map(([a1, b1, c1]) => a1 + b1 + c1))`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    let project: any;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    const observables = <Observable<any>[]>args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, undefined, i));\n    }\n  }\n\n  notifyNext(_outerValue: T, innerValue: R,\n             outerIndex: number): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next!(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project!.apply(this, args);\n    } catch (err) {\n      this.destination.error!(err);\n      return;\n    }\n    this.destination.next!(result);\n  }\n}\n","import { zip as zipStatic } from '../observable/zip';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(array: Array<ObservableInput<T>>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link zip}.\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return function zipOperatorFunction(source: Observable<T>) {\n    return source.lift.call(zipStatic<R>(source, ...observables));\n  };\n}","import { ZipOperator } from '../observable/zip';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new ZipOperator(project));\n}\n","\n/* Operator exports */\nexport { audit } from '../internal/operators/audit';\nexport { auditTime } from '../internal/operators/auditTime';\nexport { buffer } from '../internal/operators/buffer';\nexport { bufferCount } from '../internal/operators/bufferCount';\nexport { bufferTime } from '../internal/operators/bufferTime';\nexport { bufferToggle } from '../internal/operators/bufferToggle';\nexport { bufferWhen } from '../internal/operators/bufferWhen';\nexport { catchError } from '../internal/operators/catchError';\nexport { combineAll } from '../internal/operators/combineAll';\nexport { combineLatest } from '../internal/operators/combineLatest';\nexport { concat } from '../internal/operators/concat';\nexport { concatAll } from '../internal/operators/concatAll';\nexport { concatMap } from '../internal/operators/concatMap';\nexport { concatMapTo } from '../internal/operators/concatMapTo';\nexport { count } from '../internal/operators/count';\nexport { debounce } from '../internal/operators/debounce';\nexport { debounceTime } from '../internal/operators/debounceTime';\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\nexport { delay } from '../internal/operators/delay';\nexport { delayWhen } from '../internal/operators/delayWhen';\nexport { dematerialize } from '../internal/operators/dematerialize';\nexport { distinct } from '../internal/operators/distinct';\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from '../internal/operators/elementAt';\nexport { endWith } from '../internal/operators/endWith';\nexport { every } from '../internal/operators/every';\nexport { exhaust } from '../internal/operators/exhaust';\nexport { exhaustMap } from '../internal/operators/exhaustMap';\nexport { expand } from '../internal/operators/expand';\nexport { filter } from '../internal/operators/filter';\nexport { finalize } from '../internal/operators/finalize';\nexport { find } from '../internal/operators/find';\nexport { findIndex } from '../internal/operators/findIndex';\nexport { first } from '../internal/operators/first';\nexport { groupBy } from '../internal/operators/groupBy';\nexport { ignoreElements } from '../internal/operators/ignoreElements';\nexport { isEmpty } from '../internal/operators/isEmpty';\nexport { last } from '../internal/operators/last';\nexport { map } from '../internal/operators/map';\nexport { mapTo } from '../internal/operators/mapTo';\nexport { materialize } from '../internal/operators/materialize';\nexport { max } from '../internal/operators/max';\nexport { merge } from '../internal/operators/merge';\nexport { mergeAll } from '../internal/operators/mergeAll';\nexport { mergeMap, flatMap } from '../internal/operators/mergeMap';\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\nexport { mergeScan } from '../internal/operators/mergeScan';\nexport { min } from '../internal/operators/min';\nexport { multicast } from '../internal/operators/multicast';\nexport { observeOn } from '../internal/operators/observeOn';\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNext';\nexport { pairwise } from '../internal/operators/pairwise';\nexport { partition } from '../internal/operators/partition';\nexport { pluck } from '../internal/operators/pluck';\nexport { publish } from '../internal/operators/publish';\nexport { publishBehavior } from '../internal/operators/publishBehavior';\nexport { publishLast } from '../internal/operators/publishLast';\nexport { publishReplay } from '../internal/operators/publishReplay';\nexport { race } from '../internal/operators/race';\nexport { reduce } from '../internal/operators/reduce';\nexport { repeat } from '../internal/operators/repeat';\nexport { repeatWhen } from '../internal/operators/repeatWhen';\nexport { retry } from '../internal/operators/retry';\nexport { retryWhen } from '../internal/operators/retryWhen';\nexport { refCount } from '../internal/operators/refCount';\nexport { sample } from '../internal/operators/sample';\nexport { sampleTime } from '../internal/operators/sampleTime';\nexport { scan } from '../internal/operators/scan';\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\nexport { share } from '../internal/operators/share';\nexport { shareReplay } from '../internal/operators/shareReplay';\nexport { single } from '../internal/operators/single';\nexport { skip } from '../internal/operators/skip';\nexport { skipLast } from '../internal/operators/skipLast';\nexport { skipUntil } from '../internal/operators/skipUntil';\nexport { skipWhile } from '../internal/operators/skipWhile';\nexport { startWith } from '../internal/operators/startWith';\nexport { subscribeOn } from '../internal/operators/subscribeOn';\nexport { switchAll } from '../internal/operators/switchAll';\nexport { switchMap } from '../internal/operators/switchMap';\nexport { switchMapTo } from '../internal/operators/switchMapTo';\nexport { take } from '../internal/operators/take';\nexport { takeLast } from '../internal/operators/takeLast';\nexport { takeUntil } from '../internal/operators/takeUntil';\nexport { takeWhile } from '../internal/operators/takeWhile';\nexport { tap } from '../internal/operators/tap';\nexport { throttle } from '../internal/operators/throttle';\nexport { throttleTime } from '../internal/operators/throttleTime';\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\nexport { timeInterval } from '../internal/operators/timeInterval';\nexport { timeout } from '../internal/operators/timeout';\nexport { timeoutWith } from '../internal/operators/timeoutWith';\nexport { timestamp } from '../internal/operators/timestamp';\nexport { toArray } from '../internal/operators/toArray';\nexport { window } from '../internal/operators/window';\nexport { windowCount } from '../internal/operators/windowCount';\nexport { windowTime } from '../internal/operators/windowTime';\nexport { windowToggle } from '../internal/operators/windowToggle';\nexport { windowWhen } from '../internal/operators/windowWhen';\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\nexport { zip } from '../internal/operators/zip';\nexport { zipAll } from '../internal/operators/zipAll';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CacheLayer = void 0;\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nclass CacheLayer {\n    constructor(layer) {\n        this.items = new rxjs_1.BehaviorSubject([]);\n        this.map = new Map();\n        this.name = layer.name;\n        this.config = layer.config;\n        this.initHook(layer);\n    }\n    get(name) {\n        return this.map.get(name);\n    }\n    initHook(layer) {\n        if (this.config.maxAge) {\n            this.onExpireAll(layer);\n        }\n    }\n    onExpireAll(layer) {\n        layer.items.forEach(item => this.onExpire(item['key']));\n    }\n    putItemHook(layerItem) {\n        if (this.config.maxAge) {\n            this.onExpire(layerItem['key']);\n        }\n    }\n    getItem(key) {\n        if (this.map.has(key)) {\n            return this.get(key);\n        }\n        else {\n            return null;\n        }\n    }\n    putItem(layerItem) {\n        this.map.set(layerItem['key'], layerItem);\n        const item = this.get(layerItem['key']);\n        const filteredItems = this.items\n            .getValue()\n            .filter(item => item['key'] !== layerItem['key']);\n        this.items.next([...filteredItems, item]);\n        this.putItemHook(layerItem);\n        return layerItem;\n    }\n    onExpire(key) {\n        return new rxjs_1.Observable(observer => observer.next())\n            .pipe((0, operators_1.timeoutWith)(this.config.maxAge, (0, rxjs_1.of)(1)), (0, operators_1.skip)(1), (0, operators_1.take)(1))\n            .subscribe(() => this.removeItem(key));\n    }\n    removeItem(key) {\n        const newLayerItems = this.items\n            .getValue()\n            .filter(item => item['key'] !== key);\n        this.map.delete(key);\n        this.items.next(newLayerItems);\n    }\n    getItemObservable(key) {\n        return this.items.asObservable().pipe((0, operators_1.filter)(() => !!this.map.has(key)), (0, operators_1.map)(() => this.map.get(key)));\n    }\n    flushCache() {\n        return this.items.asObservable().pipe((0, operators_1.map)(items => {\n            items.forEach(i => this.removeItem(i['key']));\n            return true;\n        }));\n    }\n}\nexports.CacheLayer = CacheLayer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalLayers = exports.InternalEvents = void 0;\nfunction strEnum(o) {\n    return o.reduce((res, key) => {\n        res[key] = key;\n        return res;\n    }, Object.create(null));\n}\nexports.InternalEvents = strEnum(['load', 'config']);\nexports.InternalLayers = strEnum(['globalConfig', 'modules']);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigModel = exports.InitOptionsConfig = exports.ExperimentalFeatures = exports.PrivateCryptoModel = exports.LoggerConfig = void 0;\nclass LoggerConfig {\n    constructor() {\n        this.logging = process.env.LOGGING === 'true' ? true : false;\n        this.hashes = true;\n        this.date = true;\n        this.exitHandler = true;\n    }\n}\nexports.LoggerConfig = LoggerConfig;\nclass PrivateCryptoModel {\n}\nexports.PrivateCryptoModel = PrivateCryptoModel;\nclass ExperimentalFeatures {\n}\nexports.ExperimentalFeatures = ExperimentalFeatures;\nclass InitOptionsConfig {\n}\nexports.InitOptionsConfig = InitOptionsConfig;\nclass ConfigModel {\n    constructor() {\n        this.init = true;\n        this.initOptions = new InitOptionsConfig();\n        this.experimental = new ExperimentalFeatures();\n        this.logger = new LoggerConfig();\n    }\n}\nexports.ConfigModel = ConfigModel;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigService = void 0;\nconst Service_1 = require(\"../../decorators/service/Service\");\nconst config_model_1 = require(\"./config.model\");\nlet ConfigService = class ConfigService {\n    constructor() {\n        this.config = new config_model_1.ConfigModel();\n    }\n    setConfig(config) {\n        Object.assign(this.config, config);\n    }\n};\nConfigService = __decorate([\n    (0, Service_1.Service)()\n], ConfigService);\nexports.ConfigService = ConfigService;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./config.model\"), exports);\n__exportStar(require(\"./config.service\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Injector = void 0;\nconst container_1 = require(\"../../container\");\nfunction Injector(Service) {\n    return function (target, propertyName) {\n        Object.defineProperty(target, propertyName, {\n            get: () => container_1.Container.get(Service)\n        });\n    };\n}\nexports.Injector = Injector;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BootstrapLogger = void 0;\nconst Service_1 = require(\"../../decorators/service/Service\");\nconst index_1 = require(\"../config/index\");\nconst injector_decorator_1 = require(\"../../decorators/injector/injector.decorator\");\nlet BootstrapLogger = class BootstrapLogger {\n    log(message) {\n        if (this.configService.config.logger.logging) {\n            const m = [this.logDate(), message];\n            console.log(...m);\n            return m;\n        }\n    }\n    error(message) {\n        console.error(message);\n    }\n    logImporter(message) {\n        if (this.configService.config.logger.logging) {\n            return this.log(message);\n        }\n    }\n    logDate() {\n        if (this.configService.config.logger.date) {\n            return `${Date.now().toPrecision()}`;\n        }\n        else {\n            return '';\n        }\n    }\n    logHashes(message) {\n        if (this.configService.config.logger.hashes) {\n            return message;\n        }\n        else {\n            return '';\n        }\n    }\n    logExitHandler(message) {\n        if (this.configService.config.logger.exitHandler) {\n            this.log(message);\n        }\n        else {\n            return '';\n        }\n    }\n};\n__decorate([\n    (0, injector_decorator_1.Injector)(index_1.ConfigService),\n    __metadata(\"design:type\", index_1.ConfigService)\n], BootstrapLogger.prototype, \"configService\", void 0);\nBootstrapLogger = __decorate([\n    (0, Service_1.Service)()\n], BootstrapLogger);\nexports.BootstrapLogger = BootstrapLogger;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./bootstrap-logger\"), exports);\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar CacheService_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CacheService = void 0;\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst cache_layer_1 = require(\"./cache-layer\");\nconst events_1 = require(\"../../helpers/events\");\nconst Service_1 = require(\"../../decorators/service/Service\");\nconst index_1 = require(\"../bootstrap-logger/index\");\nconst FRIENDLY_ERROR_MESSAGES = {\n    TRY_TO_UNSUBSCRIBE: 'Someone try to unsubscribe from collection directly... agghhh.. read docs! Blame: '\n};\nlet CacheService = CacheService_1 = class CacheService {\n    constructor(logger) {\n        this.logger = logger;\n        this._cachedLayers = new rxjs_1.BehaviorSubject([]);\n        this.map = new Map();\n        this.config = {};\n    }\n    static createCacheInstance(cacheLayer) {\n        return new cache_layer_1.CacheLayer(cacheLayer);\n    }\n    getLayer(name) {\n        const exists = this.map.has(name);\n        if (!exists) {\n            return this.createLayer({ name: name });\n        }\n        return this.map.get(name);\n    }\n    getLayersByName(name) {\n        return Array.from(this.map.keys())\n            .map(item => {\n            if (item !== events_1.InternalLayers.modules &&\n                item !== events_1.InternalLayers.globalConfig) {\n                const config = this.getLayer(item).getItem(events_1.InternalEvents.config);\n                if (config && config.data && name === config.data.moduleName) {\n                    return this.getLayer(config.data.moduleHash);\n                }\n            }\n        })\n            .filter(i => !!i);\n    }\n    searchForDuplicateDependenciesInsideApp() {\n        const uniq = [].concat\n            .apply([], Array.from(this.map.keys()).map(key => Array.from(this.getLayer(key).map.keys())\n            .map(key => (!this.isExcludedEvent(key) ? key : null))\n            .filter(i => !!i)))\n            .map(name => Object.create({ count: 1, name }))\n            .reduce((a, b) => {\n            a[b.name] = (a[b.name] || 0) + b.count;\n            return a;\n        }, {});\n        const duplicates = Object.keys(uniq).filter(a => uniq[a] > 1);\n        if (duplicates.length) {\n            const dups = this.searchForDuplicatesByHash(duplicates[0]);\n            const moduleType = dups[0].class['metadata']['type'].charAt(0).toUpperCase() +\n                dups[0].class['metadata']['type'].slice(1);\n            throw new Error(`\n                ${dups[0].class['metadata'].raw}\n                ${moduleType}: '${dups[0].originalName}' found multiple times!\n                ${moduleType} hash: ${dups[0].moduleHash}\n                Modules: [${dups[0].moduleName}, ${dups[1].moduleName}]\n\n                Hint: '${dups[0].originalName}' class identity hash is identical in both\n                imported files inside ${dups[0].moduleName} and ${dups[1].moduleName}\n                consider removing one of the '${dups[0].originalName}'\n            `);\n        }\n        return duplicates;\n    }\n    isExcludedEvent(i) {\n        return i === events_1.InternalEvents.config || i === events_1.InternalEvents.load;\n    }\n    searchForItem(classItem) {\n        return Array.from(this.map.keys())\n            .map(module => {\n            const currentModule = this.getLayer(module);\n            const currentModuleDependencies = Array.from(currentModule.map.keys());\n            const found = currentModuleDependencies.filter(i => {\n                if (this.isExcludedEvent(i)) {\n                    return;\n                }\n                else {\n                    return i === classItem.name;\n                }\n            });\n            if (found.length) {\n                return currentModule.getItem(found[0]).data;\n            }\n        })\n            .filter(i => !!i)[0];\n    }\n    searchForDuplicatesByHash(key) {\n        return Array.from(this.map.keys())\n            .map(module => {\n            const currentModule = this.getLayer(module);\n            const found = Array.from(currentModule.map.keys()).filter(i => {\n                if (this.isExcludedEvent(i)) {\n                    return;\n                }\n                return i === key;\n            });\n            if (found.length) {\n                const currentFoundItem = currentModule.getItem(found[0]);\n                const currentModuleName = this.getLayer(module).getItem(events_1.InternalEvents.config);\n                return {\n                    moduleName: currentModuleName.data.moduleName,\n                    moduleHash: currentModuleName.data.moduleHash,\n                    originalName: currentFoundItem.data.originalName,\n                    dupeName: currentFoundItem.key,\n                    raw: currentModuleName.data.raw,\n                    class: currentFoundItem.data\n                };\n            }\n        })\n            .filter(i => !!i);\n    }\n    createLayer(layer) {\n        const exists = this.map.has(layer.name);\n        if (exists) {\n            return this.map.get(layer.name);\n        }\n        layer.items = layer.items || [];\n        layer.config = layer.config || this.config;\n        const cacheLayer = CacheService_1.createCacheInstance(layer);\n        this.map.set(cacheLayer.name, cacheLayer);\n        this._cachedLayers.next([...this._cachedLayers.getValue(), cacheLayer]);\n        this.LayerHook(cacheLayer);\n        return cacheLayer;\n    }\n    LayerHook(layerInstance) {\n        this.protectLayerFromInvaders(layerInstance);\n        if (layerInstance.config.cacheFlushInterval ||\n            this.config.cacheFlushInterval) {\n            this.OnExpire(layerInstance);\n        }\n    }\n    protectLayerFromInvaders(cacheLayer) {\n        cacheLayer.items.constructor.prototype.unsubsribeFromLayer =\n            cacheLayer.items.constructor.prototype.unsubscribe;\n        cacheLayer.items.constructor.prototype.unsubscribe = () => {\n            console.error(FRIENDLY_ERROR_MESSAGES.TRY_TO_UNSUBSCRIBE + cacheLayer.name);\n        };\n    }\n    OnExpire(layerInstance) {\n        return new rxjs_1.Observable(observer => observer.next())\n            .pipe((0, operators_1.timeoutWith)(layerInstance.config.cacheFlushInterval ||\n            this.config.cacheFlushInterval, (0, rxjs_1.of)(1)), (0, operators_1.skip)(1), (0, operators_1.take)(1))\n            .subscribe(() => this.removeLayer(layerInstance));\n    }\n    removeLayer(layerInstance) {\n        this.map.delete(layerInstance.name);\n        this._cachedLayers.next([\n            ...this._cachedLayers\n                .getValue()\n                .filter(layer => layer.name !== layerInstance.name)\n        ]);\n    }\n    transferItems(name, newCacheLayers) {\n        const oldLayer = this.getLayer(name);\n        const newLayers = [];\n        newCacheLayers.forEach(layerName => {\n            const newLayer = this.createLayer(layerName);\n            oldLayer.items.getValue().forEach(item => newLayer.putItem(item));\n            newLayers.push(newLayer);\n        });\n        return newLayers;\n    }\n    flushCache() {\n        let oldLayersNames;\n        return this._cachedLayers.pipe((0, operators_1.take)(1), (0, operators_1.map)((layers) => {\n            oldLayersNames = layers.map(l => l.name);\n            layers.forEach(layer => this.removeLayer(layer));\n            oldLayersNames.forEach(l => this.createLayer({ name: l }));\n            return true;\n        }));\n    }\n};\nCacheService = CacheService_1 = __decorate([\n    (0, Service_1.Service)(),\n    __metadata(\"design:paramtypes\", [index_1.BootstrapLogger])\n], CacheService);\nexports.CacheService = CacheService;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CacheServiceConfigInterface = void 0;\nclass CacheServiceConfigInterface {\n    constructor() {\n        this.deleteOnExpire = 'aggressive';\n        this.cacheFlushInterval = 60 * 60 * 1000;\n        this.maxAge = 15 * 60 * 1000;\n        this.localStorage = false;\n    }\n}\nexports.CacheServiceConfigInterface = CacheServiceConfigInterface;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./cache-layer.service\"), exports);\n__exportStar(require(\"./cache-layer\"), exports);\n__exportStar(require(\"./cache-layer.interfaces\"), exports);\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PluginService = void 0;\nconst rxjs_1 = require(\"rxjs\");\n// import { PluginBase, PluginNameVersion, PluginPackage } from 'hapi';\nconst Service_1 = require(\"../../decorators/service/Service\");\nlet PluginService = class PluginService {\n    constructor() {\n        this.plugins = new rxjs_1.BehaviorSubject([]);\n        this.beforePlugins = new rxjs_1.BehaviorSubject([]);\n        this.afterPlugins = new rxjs_1.BehaviorSubject([]);\n    }\n    register(plugin) {\n        this.plugins.next([...this.plugins.getValue(), plugin]);\n    }\n    registerBefore(plugin) {\n        this.beforePlugins.next([...this.plugins.getValue(), plugin]);\n    }\n    registerAfter(plugin) {\n        this.afterPlugins.next([...this.plugins.getValue(), plugin]);\n    }\n    getPlugins() {\n        return this.plugins.getValue();\n    }\n    getAfterPlugins() {\n        return this.afterPlugins.getValue();\n    }\n    getBeforePlugins() {\n        return this.beforePlugins.getValue();\n    }\n};\nPluginService = __decorate([\n    (0, Service_1.Service)()\n], PluginService);\nexports.PluginService = PluginService;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExitHandlerService = void 0;\nconst Service_1 = require(\"../../decorators/service/Service\");\nconst bootstrap_logger_1 = require(\"../bootstrap-logger\");\nconst injector_decorator_1 = require(\"../../decorators/injector/injector.decorator\");\nconst rxjs_1 = require(\"rxjs\");\nlet ExitHandlerService = class ExitHandlerService {\n    constructor() {\n        this.errorHandler = new rxjs_1.Subject();\n    }\n    init() { }\n    exitHandler(options, err) {\n        this.errorHandler.next(err);\n        if (options.cleanup) {\n            this.logger.logExitHandler('AppStopped');\n        }\n        if (err)\n            console.log(err.stack);\n        if (options.exit) {\n            this.logger.logExitHandler('Unhandled error rejection');\n        }\n        process.exit(0);\n    }\n    onExitApp(events) {\n        return new rxjs_1.Observable(o => events &&\n            events.length &&\n            events.forEach(event => process.on(event, e => o.next(e))));\n    }\n};\n__decorate([\n    (0, injector_decorator_1.Injector)(bootstrap_logger_1.BootstrapLogger),\n    __metadata(\"design:type\", bootstrap_logger_1.BootstrapLogger)\n], ExitHandlerService.prototype, \"logger\", void 0);\nExitHandlerService = __decorate([\n    (0, Service_1.Service)()\n], ExitHandlerService);\nexports.ExitHandlerService = ExitHandlerService;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./exit-handler.service\"), exports);\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LazyFactory = void 0;\nconst Service_1 = require(\"../../decorators/service/Service\");\nlet LazyFactory = class LazyFactory {\n    constructor() {\n        this.lazyFactories = new Map();\n    }\n    setLazyFactory(provide, factory) {\n        this.lazyFactories.set(provide, factory);\n        return this.getLazyFactory(provide);\n    }\n    getLazyFactory(provide) {\n        return this.lazyFactories.get(provide);\n    }\n};\nLazyFactory = __decorate([\n    (0, Service_1.Service)()\n], LazyFactory);\nexports.LazyFactory = LazyFactory;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ModuleValidators = void 0;\nconst Service_1 = require(\"../../../decorators/service/Service\");\nlet ModuleValidators = class ModuleValidators {\n    validateEmpty(m, original, type) {\n        if (!m) {\n            const requiredType = type.charAt(0).toUpperCase() + type.slice(1);\n            throw new Error(`\n            ${original.metadata.raw}\n            -> @Module: ${original.metadata.moduleName}\n            -> @Module hash: ${original.metadata.moduleHash}\n                --> Maybe you forgot to import some ${requiredType} inside ${original.metadata.moduleName} ?\n\n                Hint: run ts-lint again, looks like imported ${requiredType} is undefined or null inside ${original.metadata.moduleName}\n            `);\n        }\n    }\n    genericWrongPluggableError(m, original, type) {\n        if (m.metadata.type !== type) {\n            const moduleType = m.metadata.type.charAt(0).toUpperCase() + m.metadata.type.slice(1);\n            const requiredType = type.charAt(0).toUpperCase() + type.slice(1);\n            throw new Error(`\n            ${original.metadata.raw}\n            -> @Module: '${original.metadata.moduleName}'\n            -> @Module hash: '${original.metadata.moduleHash}'\n                --> @${moduleType} '${m.metadata.moduleName}' provided, where expected class decorated with '@${requiredType}' instead,\n            -> @Hint: please provide class with @Service decorator or remove ${m.metadata.moduleName} class\n            `);\n        }\n    }\n    validateImports(m, original) {\n        if (m.metadata.type !== 'module') {\n            throw new Error(`\n            ${original.metadata.raw}\n            -> @Module: '${original.metadata.moduleName}'\n            -> @Module hash: '${original.metadata.moduleHash}'\n                --> @${m.metadata.type.charAt(0).toUpperCase() +\n                m.metadata.type.slice(1)} '${m.originalName}' provided, where expected class decorated with '@Module' instead,\n            -> @Hint: please provide class with @Module decorator or remove ${m.originalName} from imports\n            `);\n        }\n    }\n    validateServices(m, original) {\n        this.validateEmpty(m, original, 'service');\n        if (m.provide) {\n            return;\n        }\n        this.genericWrongPluggableError(m, original, 'service');\n    }\n    validatePlugin(m, original) {\n        this.validateEmpty(m, original, 'plugin');\n        if (m.provide) {\n            return;\n        }\n        this.genericWrongPluggableError(m, original, 'plugin');\n    }\n    validateController(m, original) {\n        this.validateEmpty(m, original, 'controller');\n        if (m.provide) {\n            return;\n        }\n        this.genericWrongPluggableError(m, original, 'controller');\n    }\n    validateEffect(m, original) {\n        this.validateEmpty(m, original, 'effect');\n        if (m.provide) {\n            return;\n        }\n        this.genericWrongPluggableError(m, original, 'effect');\n    }\n    validateComponent(m, original) {\n        this.validateEmpty(m, original, 'component');\n        if (m.provide) {\n            return;\n        }\n        this.genericWrongPluggableError(m, original, 'component');\n    }\n};\nModuleValidators = __decorate([\n    (0, Service_1.Service)()\n], ModuleValidators);\nexports.ModuleValidators = ModuleValidators;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ControllersService = void 0;\nconst Service_1 = require(\"../../decorators/service/Service\");\nconst rxjs_1 = require(\"rxjs\");\nlet ControllersService = class ControllersService {\n    constructor() {\n        this.controllers = new rxjs_1.BehaviorSubject([]);\n    }\n    register(plugin) {\n        this.controllers.next([...this.controllers.getValue(), plugin]);\n    }\n    getControllers() {\n        return this.controllers.getValue();\n    }\n};\nControllersService = __decorate([\n    (0, Service_1.Service)()\n], ControllersService);\nexports.ControllersService = ControllersService;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EffectsService = void 0;\nconst Service_1 = require(\"../../decorators/service/Service\");\nconst rxjs_1 = require(\"rxjs\");\nlet EffectsService = class EffectsService {\n    constructor() {\n        this.effects = new rxjs_1.BehaviorSubject([]);\n    }\n    register(plugin) {\n        this.effects.next([...this.effects.getValue(), plugin]);\n    }\n    getEffects() {\n        return this.effects.getValue();\n    }\n};\nEffectsService = __decorate([\n    (0, Service_1.Service)()\n], EffectsService);\nexports.EffectsService = EffectsService;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ComponentsService = void 0;\nconst Service_1 = require(\"../../decorators/service/Service\");\nconst rxjs_1 = require(\"rxjs\");\nlet ComponentsService = class ComponentsService {\n    constructor() {\n        this.components = new rxjs_1.BehaviorSubject([]);\n    }\n    register(plugin) {\n        this.components.next([...this.components.getValue(), plugin]);\n    }\n    getComponents() {\n        return this.components.getValue();\n    }\n};\nComponentsService = __decorate([\n    (0, Service_1.Service)()\n], ComponentsService);\nexports.ComponentsService = ComponentsService;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BootstrapsServices = void 0;\nconst Service_1 = require(\"../../decorators/service/Service\");\nconst rxjs_1 = require(\"rxjs\");\nlet BootstrapsServices = class BootstrapsServices {\n    constructor() {\n        this.bootstraps = new rxjs_1.BehaviorSubject([]);\n    }\n    register(plugin) {\n        this.bootstraps.next([...this.bootstraps.getValue(), plugin]);\n    }\n    getBootstraps() {\n        return this.bootstraps.getValue();\n    }\n};\nBootstrapsServices = __decorate([\n    (0, Service_1.Service)()\n], BootstrapsServices);\nexports.BootstrapsServices = BootstrapsServices;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServicesService = void 0;\nconst Service_1 = require(\"../../decorators/service/Service\");\nconst rxjs_1 = require(\"rxjs\");\nlet ServicesService = class ServicesService {\n    constructor() {\n        this.services = new rxjs_1.BehaviorSubject([]);\n    }\n    register(plugin) {\n        this.services.next([...this.services.getValue(), plugin]);\n    }\n    getServices() {\n        return this.services.getValue();\n    }\n};\nServicesService = __decorate([\n    (0, Service_1.Service)()\n], ServicesService);\nexports.ServicesService = ServicesService;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ModuleService = void 0;\nconst rxjs_1 = require(\"rxjs\");\nconst container_1 = require(\"../../container\");\nconst Service_1 = require(\"../../decorators/service/Service\");\nconst lazy_factory_service_1 = require(\"../lazy-factory/lazy-factory.service\");\nconst plugin_service_1 = require(\"../plugin/plugin.service\");\nconst injector_decorator_1 = require(\"../../decorators/injector/injector.decorator\");\nconst validators_1 = require(\"./helpers/validators\");\nconst constructor_watcher_1 = require(\"../constructor-watcher/constructor-watcher\");\nconst controllers_service_1 = require(\"../controllers/controllers.service\");\nconst effect_service_1 = require(\"../effect/effect.service\");\nconst components_service_1 = require(\"../components/components.service\");\nconst bootstraps_service_1 = require(\"../bootstraps/bootstraps.service\");\nconst services_service_1 = require(\"../services/services.service\");\nconst reflect_decorator_1 = require(\"../../helpers/reflect.decorator\");\nlet ModuleService = class ModuleService {\n    constructor() {\n        this.watcherService = constructor_watcher_1.constructorWatcherService;\n    }\n    setServices(services, original, currentModule) {\n        services.forEach((service) => {\n            this.validators.validateServices(service, original);\n            this.setInjectedDependencies(service);\n            if (service.provide && service.provide.constructor === Function) {\n                service.provide = service.provide['name'];\n            }\n            if (service.provide && service.useFactory) {\n                this.setUseFactory(service);\n            }\n            else if (service.provide &&\n                service.useClass &&\n                service.useClass.constructor === Function) {\n                this.setUseClass(service);\n            }\n            else if (service.provide && service.useValue) {\n                this.setUseValue(service);\n            }\n            else {\n                currentModule.putItem({ data: service, key: service.name });\n                this.servicesService.register(service);\n            }\n        });\n    }\n    setInjectedDependencies(service) {\n        service.deps = service.deps || [];\n        if (service.deps.length) {\n            service.deps = service.deps.map((dep) => container_1.Container.get(dep));\n        }\n    }\n    setUseValue(service) {\n        container_1.Container.set(service.provide, service.useValue);\n        if (service.lazy) {\n            this.lazyFactoryService.setLazyFactory(service.provide, (0, rxjs_1.of)(container_1.Container.get(service.provide)));\n        }\n    }\n    setUseClass(service) {\n        if (service.lazy) {\n            this.lazyFactoryService.setLazyFactory(service.provide, (0, rxjs_1.of)(container_1.Container.get(service.useClass)));\n        }\n        else {\n            container_1.Container.set(service.provide, container_1.Container.get(service.useClass));\n        }\n    }\n    setUseFactory(service) {\n        const factory = service.useFactory;\n        service.useFactory = () => factory(...service.deps);\n        if (service.lazy) {\n            this.lazyFactoryService.setLazyFactory(service.provide, service.useFactory());\n        }\n        else {\n            container_1.Container.set(service.provide, service.useFactory());\n        }\n    }\n    setControllers(controllers, original, currentModule) {\n        controllers.forEach((controller) => {\n            this.validators.validateController(controller, original);\n            currentModule.putItem({\n                data: controller,\n                key: controller.name,\n            });\n            this.controllersService.register(controller);\n        });\n    }\n    setEffects(effects, original, currentModule) {\n        effects.forEach((effect) => {\n            this.validators.validateEffect(effect, original);\n            currentModule.putItem({\n                data: effect,\n                key: effect.name,\n            });\n            this.effectsService.register(effect);\n        });\n    }\n    setComponents(components, original, currentModule) {\n        components.forEach((component) => {\n            if (!component['metadata']) {\n                (0, reflect_decorator_1.ReflectDecorator)({}, { type: 'component' })(component);\n            }\n            this.validators.validateComponent(component, original);\n            currentModule.putItem({\n                data: component,\n                key: component.name,\n            });\n            this.componentsService.register(component);\n        });\n    }\n    setPlugins(plugins, original, currentModule) {\n        plugins.forEach((plugin) => {\n            this.validators.validatePlugin(plugin, original);\n            currentModule.putItem({\n                data: plugin,\n                key: plugin.name,\n            });\n            this.pluginService.register(plugin);\n        });\n    }\n    setBootstraps(bootstraps, original, currentModule) {\n        bootstraps.forEach((bootstrap) => {\n            if (!bootstrap['metadata']) {\n                (0, reflect_decorator_1.ReflectDecorator)({}, { type: 'component' })(bootstrap);\n            }\n            this.validators.validateEmpty(bootstrap, original, bootstrap['metadata']['type']);\n            currentModule.putItem({\n                data: bootstrap,\n                key: bootstrap.name,\n            });\n            this.bootstraps.register(bootstrap);\n        });\n    }\n    setAfterPlugins(plugins, original, currentModule) {\n        plugins.forEach((plugin) => {\n            this.validators.validatePlugin(plugin, original);\n            currentModule.putItem({\n                data: plugin,\n                key: plugin.name,\n            });\n            this.pluginService.registerAfter(plugin);\n        });\n    }\n    setBeforePlugins(plugins, original, currentModule) {\n        plugins.forEach((plugin) => {\n            this.validators.validatePlugin(plugin, original);\n            currentModule.putItem({\n                data: plugin,\n                key: plugin.name,\n            });\n            this.pluginService.registerBefore(plugin);\n        });\n    }\n    setImports(imports, original) {\n        imports.forEach((m) => {\n            this.validators.validateImports(m, original);\n            if (!m) {\n                throw new Error('Missing import module');\n            }\n            else {\n                container_1.Container.get(m);\n            }\n        });\n    }\n};\n__decorate([\n    (0, injector_decorator_1.Injector)(lazy_factory_service_1.LazyFactory),\n    __metadata(\"design:type\", lazy_factory_service_1.LazyFactory)\n], ModuleService.prototype, \"lazyFactoryService\", void 0);\n__decorate([\n    (0, injector_decorator_1.Injector)(plugin_service_1.PluginService),\n    __metadata(\"design:type\", plugin_service_1.PluginService)\n], ModuleService.prototype, \"pluginService\", void 0);\n__decorate([\n    (0, injector_decorator_1.Injector)(components_service_1.ComponentsService),\n    __metadata(\"design:type\", components_service_1.ComponentsService)\n], ModuleService.prototype, \"componentsService\", void 0);\n__decorate([\n    (0, injector_decorator_1.Injector)(controllers_service_1.ControllersService),\n    __metadata(\"design:type\", controllers_service_1.ControllersService)\n], ModuleService.prototype, \"controllersService\", void 0);\n__decorate([\n    (0, injector_decorator_1.Injector)(effect_service_1.EffectsService),\n    __metadata(\"design:type\", effect_service_1.EffectsService)\n], ModuleService.prototype, \"effectsService\", void 0);\n__decorate([\n    (0, injector_decorator_1.Injector)(bootstraps_service_1.BootstrapsServices),\n    __metadata(\"design:type\", bootstraps_service_1.BootstrapsServices)\n], ModuleService.prototype, \"bootstraps\", void 0);\n__decorate([\n    (0, injector_decorator_1.Injector)(validators_1.ModuleValidators),\n    __metadata(\"design:type\", validators_1.ModuleValidators)\n], ModuleService.prototype, \"validators\", void 0);\n__decorate([\n    (0, injector_decorator_1.Injector)(services_service_1.ServicesService),\n    __metadata(\"design:type\", services_service_1.ServicesService)\n], ModuleService.prototype, \"servicesService\", void 0);\nModuleService = __decorate([\n    (0, Service_1.Service)()\n], ModuleService);\nexports.ModuleService = ModuleService;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./module.service\"), exports);\n__exportStar(require(\"./helpers/validators\"), exports);\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResolverService = void 0;\nconst container_1 = require(\"../../container\");\nconst cache_layer_service_1 = require(\"../cache/cache-layer.service\");\nconst events_1 = require(\"../../helpers/events\");\nconst operators_1 = require(\"rxjs/operators\");\nconst rxjs_1 = require(\"rxjs\");\nconst bootstrap_logger_1 = require(\"../bootstrap-logger/bootstrap-logger\");\nconst injector_decorator_1 = require(\"../../decorators/injector/injector.decorator\");\nconst Service_1 = require(\"../../decorators/service/Service\");\nlet ResolverService = class ResolverService {\n    resolveDependencies(hash, target, moduleName) {\n        this.cacheService\n            .getLayer(events_1.InternalLayers.modules)\n            .putItem({ key: hash, data: target });\n        const currentModule = this.cacheService.getLayer(hash);\n        currentModule.putItem({\n            key: events_1.InternalEvents.config,\n            data: { moduleName, moduleHash: hash }\n        });\n        return currentModule.getItemObservable(events_1.InternalEvents.load).pipe((0, operators_1.switchMap)(config => {\n            if (!config.data) {\n                return (0, rxjs_1.of)(null);\n            }\n            return currentModule.items.asObservable();\n        }), (0, operators_1.filter)(res => res && res.length), (0, operators_1.map)(this.resolveContainerDependencies(target, moduleName)));\n    }\n    resolveContainerDependencies(target, moduleName) {\n        return res => {\n            res.forEach(i => {\n                if (i.key === events_1.InternalEvents.load || i.key === events_1.InternalEvents.config) {\n                    return;\n                }\n                const found = this.cacheService.searchForItem(i.data);\n                if (found) {\n                    if (found.provide) {\n                        return found;\n                    }\n                    const moduleType = found.metadata.type.charAt(0).toUpperCase() +\n                        found.metadata.type.slice(1);\n                    this.bootstrapLogger.log(`Start -> @Module('${moduleName}')${this.bootstrapLogger.logHashes(`(${target.name})`)}: @${moduleType}('${found.originalName}')${this.bootstrapLogger.logHashes(`(${found.name})`)}` +\n                        ' initialized!');\n                    return container_1.Container.get(found);\n                }\n                else {\n                    throw new Error('not found');\n                }\n            });\n            return res;\n        };\n    }\n};\n__decorate([\n    (0, injector_decorator_1.Injector)(bootstrap_logger_1.BootstrapLogger),\n    __metadata(\"design:type\", bootstrap_logger_1.BootstrapLogger)\n], ResolverService.prototype, \"bootstrapLogger\", void 0);\n__decorate([\n    (0, injector_decorator_1.Injector)(cache_layer_service_1.CacheService),\n    __metadata(\"design:type\", cache_layer_service_1.CacheService)\n], ResolverService.prototype, \"cacheService\", void 0);\nResolverService = __decorate([\n    (0, Service_1.Service)()\n], ResolverService);\nexports.ResolverService = ResolverService;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./resolver.service\"), exports);\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AfterStarterService = void 0;\nconst Service_1 = require(\"../../decorators/service/Service\");\nconst rxjs_1 = require(\"rxjs\");\nlet AfterStarterService = class AfterStarterService {\n    constructor() {\n        this.appStarted = new rxjs_1.Subject();\n    }\n};\nAfterStarterService = __decorate([\n    (0, Service_1.Service)()\n], AfterStarterService);\nexports.AfterStarterService = AfterStarterService;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logExtendedInjectables = void 0;\nconst Container_1 = require(\"../container/Container\");\nconst logExtendedInjectables = (name, logExtendedInjectables) => {\n    if (Container_1.Container.has(name) && logExtendedInjectables) {\n        console.log(`Warn: Injection Token '${name.name ||\n            name}' is extended after it has being declared! ${JSON.stringify(Container_1.Container.get(name))}`);\n    }\n};\nexports.logExtendedInjectables = logExtendedInjectables;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BootstrapService = void 0;\nconst rxjs_1 = require(\"rxjs\");\nconst container_1 = require(\"../../container\");\nconst bootstrap_logger_1 = require(\"../bootstrap-logger/bootstrap-logger\");\nconst cache_layer_service_1 = require(\"../cache/cache-layer.service\");\nconst events_1 = require(\"../../helpers/events\");\nconst lazy_factory_service_1 = require(\"../lazy-factory/lazy-factory.service\");\nconst config_service_1 = require(\"../config/config.service\");\nconst plugin_service_1 = require(\"../plugin/plugin.service\");\nconst operators_1 = require(\"rxjs/operators\");\nconst effect_service_1 = require(\"../effect/effect.service\");\nconst controllers_service_1 = require(\"../controllers/controllers.service\");\nconst components_service_1 = require(\"../components/components.service\");\nconst bootstraps_service_1 = require(\"../bootstraps/bootstraps.service\");\nconst services_service_1 = require(\"../services/services.service\");\nconst after_starter_service_1 = require(\"../after-starter/after-starter.service\");\nconst log_1 = require(\"../../helpers/log\");\nconst Service_1 = require(\"../../decorators/service/Service\");\nlet BootstrapService = class BootstrapService {\n    constructor(logger, cacheService, lazyFactoriesService, configService, controllersService, effectsService, pluginService, componentsService, bootstrapsService, servicesService, afterStarterService) {\n        this.logger = logger;\n        this.cacheService = cacheService;\n        this.lazyFactoriesService = lazyFactoriesService;\n        this.configService = configService;\n        this.controllersService = controllersService;\n        this.effectsService = effectsService;\n        this.pluginService = pluginService;\n        this.componentsService = componentsService;\n        this.bootstrapsService = bootstrapsService;\n        this.servicesService = servicesService;\n        this.afterStarterService = afterStarterService;\n        this.globalConfig = this.cacheService.createLayer({\n            name: events_1.InternalLayers.globalConfig\n        });\n    }\n    start(app, config) {\n        this.configService.setConfig(config);\n        this.globalConfig.putItem({ key: events_1.InternalEvents.config, data: config });\n        container_1.Container.get(app);\n        const lazyFactoryKeys = Array.from(this.lazyFactoriesService.lazyFactories.keys());\n        return (0, rxjs_1.of)(lazyFactoryKeys).pipe((0, operators_1.map)(factories => this.prepareAsyncChainables(factories)), (0, operators_1.switchMap)(res => (0, rxjs_1.combineLatest)(res).pipe((0, operators_1.take)(1), (0, operators_1.map)(c => this.attachLazyLoadedChainables(lazyFactoryKeys, c)), (0, operators_1.map)(() => this.validateSystem()), (0, operators_1.switchMap)(() => (0, rxjs_1.combineLatest)(this.asyncChainableControllers())), (0, operators_1.switchMap)(() => (0, rxjs_1.combineLatest)(this.asyncChainablePluginsBeforeRegister())), (0, operators_1.switchMap)(() => (0, rxjs_1.combineLatest)(this.asyncChainablePluginsRegister())), (0, operators_1.switchMap)(() => (0, rxjs_1.combineLatest)(this.asyncChainablePluginsAfterRegister())), (0, operators_1.switchMap)(() => (0, rxjs_1.combineLatest)(this.asyncChainableServices())), (0, operators_1.switchMap)(() => (0, rxjs_1.combineLatest)(this.asyncChainableEffects())), (0, operators_1.switchMap)(() => (0, rxjs_1.combineLatest)(this.asyncChainableComponents())), (0, operators_1.map)(() => this.loadApplication()), (0, operators_1.switchMap)(() => (0, rxjs_1.combineLatest)(this.asyncChainableBootstraps())), (0, operators_1.map)(() => this.final()))));\n    }\n    final() {\n        this.afterStarterService.appStarted.next(true);\n        if (!this.configService.config.init) {\n            this.logger.log('Bootstrap -> press start!');\n        }\n        return container_1.Container;\n    }\n    asyncChainableComponents() {\n        return [\n            (0, rxjs_1.of)(true),\n            ...this.componentsService\n                .getComponents()\n                .filter(c => this.genericFilter(c, 'components'))\n                .map((c) => __awaiter(this, void 0, void 0, function* () { return yield container_1.Container.get(c); }))\n        ];\n    }\n    asyncChainableBootstraps() {\n        return [\n            (0, rxjs_1.of)(true),\n            ...this.bootstrapsService\n                .getBootstraps()\n                .map((c) => __awaiter(this, void 0, void 0, function* () { return yield container_1.Container.get(c); }))\n        ];\n    }\n    asyncChainableEffects() {\n        return [\n            (0, rxjs_1.of)(true),\n            ...this.effectsService\n                .getEffects()\n                .filter(c => this.genericFilter(c, 'effects'))\n                .map((c) => __awaiter(this, void 0, void 0, function* () { return yield container_1.Container.get(c); }))\n        ];\n    }\n    asyncChainableServices() {\n        return [\n            (0, rxjs_1.of)(true),\n            ...this.servicesService\n                .getServices()\n                .filter(c => this.genericFilter(c, 'services'))\n                .map((c) => __awaiter(this, void 0, void 0, function* () { return yield container_1.Container.get(c); }))\n        ];\n    }\n    asyncChainableControllers() {\n        return [\n            (0, rxjs_1.of)(true),\n            ...this.controllersService\n                .getControllers()\n                .filter(c => this.genericFilter(c, 'controllers'))\n                .map((c) => __awaiter(this, void 0, void 0, function* () { return yield container_1.Container.get(c); }))\n        ];\n    }\n    asyncChainablePluginsRegister() {\n        return [\n            (0, rxjs_1.of)(true),\n            ...this.pluginService\n                .getPlugins()\n                .filter(c => this.genericFilter(c, 'plugins'))\n                .map((c) => __awaiter(this, void 0, void 0, function* () { return yield this.registerPlugin(c); }))\n        ];\n    }\n    asyncChainablePluginsAfterRegister() {\n        return [\n            (0, rxjs_1.of)(true),\n            ...this.pluginService\n                .getAfterPlugins()\n                .filter(c => this.genericFilter(c, 'pluginsAfter'))\n                .map((c) => __awaiter(this, void 0, void 0, function* () { return yield this.registerPlugin(c); }))\n        ];\n    }\n    asyncChainablePluginsBeforeRegister() {\n        return [\n            (0, rxjs_1.of)(true),\n            ...this.pluginService\n                .getBeforePlugins()\n                .filter(c => this.genericFilter(c, 'pluginsBefore'))\n                .map((c) => __awaiter(this, void 0, void 0, function* () { return yield this.registerPlugin(c); }))\n        ];\n    }\n    genericFilter(c, name) {\n        return (this.configService.config.initOptions[name] ||\n            (c.metadata.options && c.metadata.options['init']) ||\n            this.configService.config.init);\n    }\n    registerPlugin(pluggable) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const plugin = container_1.Container.get(pluggable);\n            if (typeof (plugin === null || plugin === void 0 ? void 0 : plugin.register) === 'function') {\n                yield plugin.register();\n            }\n            return plugin;\n        });\n    }\n    prepareAsyncChainables(injectables) {\n        const asynChainables = [(0, rxjs_1.of)(true)];\n        const injectableLog = {};\n        const getName = n => n.name || n;\n        injectables.map(i => {\n            const date = Date.now();\n            injectableLog[getName(i)] = {\n                started: date,\n                end: null\n            };\n            this.logger.log(`Bootstrap -> @Service('${getName(i)}'): loading...`);\n            const somethingAsync = (0, rxjs_1.from)((this.lazyFactoriesService.getLazyFactory(i))).pipe((0, operators_1.shareReplay)(1));\n            asynChainables.push(somethingAsync);\n            somethingAsync.subscribe(() => {\n                this.logger.log(`Bootstrap -> @Service('${getName(i)}'): loading finished after ${Date.now() -\n                    injectableLog[getName(i)].started}ms !`);\n                delete injectableLog[getName(i)];\n            });\n        });\n        return asynChainables;\n    }\n    validateSystem() {\n        if (this.configService.config.strict) {\n            this.cacheService.searchForDuplicateDependenciesInsideApp();\n        }\n    }\n    attachLazyLoadedChainables(res, chainables) {\n        // Remove first chainable unused observable\n        chainables.splice(0, 1);\n        let count = 0;\n        res.map(name => {\n            (0, log_1.logExtendedInjectables)(name, this.configService.config.experimental.logExtendedInjectables);\n            container_1.Container.set(name, chainables[count++]);\n        });\n        return true;\n    }\n    loadApplication() {\n        Array.from(this.cacheService.getLayer(events_1.InternalLayers.modules).map.keys()).forEach(m => this.cacheService.getLayer(m).putItem({\n            key: events_1.InternalEvents.load,\n            data: this.configService.config.init\n        }));\n        return true;\n    }\n};\nBootstrapService = __decorate([\n    (0, Service_1.Service)(),\n    __metadata(\"design:paramtypes\", [bootstrap_logger_1.BootstrapLogger,\n        cache_layer_service_1.CacheService,\n        lazy_factory_service_1.LazyFactory,\n        config_service_1.ConfigService,\n        controllers_service_1.ControllersService,\n        effect_service_1.EffectsService,\n        plugin_service_1.PluginService,\n        components_service_1.ComponentsService,\n        bootstraps_service_1.BootstrapsServices,\n        services_service_1.ServicesService,\n        after_starter_service_1.AfterStarterService])\n], BootstrapService);\nexports.BootstrapService = BootstrapService;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exitHandlerInit = void 0;\nconst exit_handler_service_1 = require(\"../services/exit-handler/exit-handler.service\");\nconst container_1 = require(\"../container\");\nconst exitHandlerInit = () => {\n    const handler = container_1.Container.get(exit_handler_service_1.ExitHandlerService);\n    handler.init();\n    // do something when app is closing\n    process.on('exit', handler.exitHandler.bind(handler, { cleanup: true }));\n    // catches ctrl+c event\n    process.on('SIGINT', handler.exitHandler.bind(handler, { exit: true }));\n    // catches 'kill pid' (for example: nodemon restart)\n    process.on('SIGUSR1', handler.exitHandler.bind(handler, { exit: true }));\n    process.on('SIGUSR2', handler.exitHandler.bind(handler, { exit: true }));\n    // catches uncaught exceptions\n    process.on('uncaughtException', handler.exitHandler.bind(handler, { exit: true }));\n};\nexports.exitHandlerInit = exitHandlerInit;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createTestBed = exports.setup = exports.BootstrapFramework = exports.BootstrapPromisify = exports.Bootstrap = void 0;\nrequire(\"@abraham/reflection\");\nconst container_1 = require(\"../container\");\nconst bootstrap_service_1 = require(\"../services/bootstrap/bootstrap.service\");\nconst exit_handler_1 = require(\"./exit-handler\");\n(0, exit_handler_1.exitHandlerInit)();\nconst bootstrapService = container_1.Container.get(bootstrap_service_1.BootstrapService);\nconst Bootstrap = (app, config) => bootstrapService.start(app, config);\nexports.Bootstrap = Bootstrap;\nconst BootstrapPromisify = (app, config) => bootstrapService.start(app, config).toPromise();\nexports.BootstrapPromisify = BootstrapPromisify;\nconst BootstrapFramework = (app, modules, config) => {\n    bootstrapService.configService.setConfig(config);\n    modules.map((m) => container_1.Container.get(m));\n    return bootstrapService.start(app, config);\n};\nexports.BootstrapFramework = BootstrapFramework;\nconst setup = (options, frameworks = [], bootstrapOptions) => {\n    const Module = require('../decorators/module/module.decorator').Module;\n    return (0, exports.BootstrapFramework)(Module({\n        imports: options.imports || [],\n        providers: options.providers || [],\n        services: options.services || [],\n        bootstrap: options.bootstrap || [],\n        components: options.components || [],\n        controllers: options.controllers || [],\n        effects: options.effects || [],\n        plugins: options.plugins || [],\n        afterPlugins: options.afterPlugins || [],\n        beforePlugins: options.beforePlugins || [],\n    })(function () { }), frameworks, bootstrapOptions);\n};\nexports.setup = setup;\nexports.createTestBed = exports.setup;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./bootstrap\"), exports);\n__exportStar(require(\"./create-unique-hash\"), exports);\n__exportStar(require(\"./generic-constructor\"), exports);\n__exportStar(require(\"./sha256\"), exports);\n// export * from './testing';\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MetadataService = void 0;\nconst Service_1 = require(\"../../decorators/service/Service\");\nconst helpers_1 = require(\"../../helpers\");\nlet MetadataService = class MetadataService {\n    generateHashData(module, original) {\n        const services = module.services || [];\n        const imports = module.imports || [];\n        const fillMetadata = (injectable) => {\n            if (injectable && injectable['provide']) {\n                return injectable['provide'];\n            }\n            else if (injectable) {\n                this.validateCustomInjectable(injectable, module, original);\n                return {\n                    moduleName: injectable['metadata']['moduleName'],\n                    hash: injectable['metadata']['moduleHash'],\n                };\n            }\n        };\n        return [\n            [...services.map((i) => fillMetadata(i))],\n            [...imports.map((i) => fillMetadata(i))],\n        ];\n    }\n    validateCustomInjectableKeys(keys) {\n        // keys.forEach(key => {\n        //     console.log('TOVA NE E SHEGA', key);\n        // });\n    }\n    validateCustomInjectable(injectable, module, original) {\n        if (!injectable['metadata'] && !injectable['provide']) {\n            throw new Error(`\n                ---- Wrong service ${JSON.stringify(injectable)} provided inside '${original.name}' ----\n                @Module({\n                    services: ${JSON.stringify([\n                ...module.services.filter((i) => !i['metadata']),\n                ...module.services\n                    .filter((i) => i && i['metadata'] && i['metadata']['moduleName'])\n                    .map((i) => i['metadata']['moduleName']),\n            ])}\n                })\n                ${JSON.stringify(`${original}`, null, 2)}\n\n                Hint: System recieved Object but it is not with appropriate format you must provide object with following parameters:\n\n                YourObject: ${JSON.stringify(injectable)}\n\n                Option 1. [YourClass]\n\n                Option 2. [{provide: 'your-value', useClass: YourClass}]\n\n                Option 3. [{provide: 'your-value', deps: [YourClass], useFactory: (test: YourClass) => {}}]\n\n                Option 4. [{provide: 'your-value', useValue: 'your-value'}]\n            `);\n        }\n    }\n    parseModuleTemplate(moduleName, generatedHashData, targetCurrentSymbol) {\n        return `\n            ---- @gapi module '${moduleName}' metadata----\n            @Module({\n                imports: ${JSON.stringify(generatedHashData[1], null, '\\t')},\n                services: ${JSON.stringify(generatedHashData[0], null, '\\t')}\n            })\n            ${JSON.stringify(targetCurrentSymbol, null, 2)}\n        `;\n    }\n    createUniqueHash(string) {\n        return (0, helpers_1.createUniqueHash)(string);\n    }\n};\nMetadataService = __decorate([\n    (0, Service_1.Service)()\n], MetadataService);\nexports.MetadataService = MetadataService;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./metadata.service\"), exports);\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompressionService = void 0;\n// import { createReadStream, createWriteStream } from 'fs';\n// import { createGzip, createGunzip } from 'zlib';\n// import { Observable } from 'rxjs';\nconst Service_1 = require(\"../../decorators/service/Service\");\nconst injector_decorator_1 = require(\"../../decorators/injector/injector.decorator\");\nconst index_1 = require(\"../config/index\");\nlet CompressionService = class CompressionService {\n    // public gZipFile(input: string, output: string, options: PrivateCryptoModel = { cyperIv: '', algorithm: '', cyperKey: '' }) {\n    //     const config = this.config.config.experimental.crypto || options;\n    //     return Observable.create(observer => {\n    //         createReadStream(input)\n    //             .pipe(createGzip())\n    //             // .pipe(createCipheriv(config.algorithm, config.cyperKey, config.cyperIv))\n    //             .pipe(createWriteStream(output))\n    //             .on('finish', () => observer.next(true))\n    //             .on('error', (err) => observer.error(err));\n    //     });\n    // }\n    // public readGzipFile(input: string, output: string, options: PrivateCryptoModel = { cyperIv: '', algorithm: '', cyperKey: '' }) {\n    //     const config = this.config.config.experimental.crypto || options;\n    //     return Observable.create(observer => {\n    //         createReadStream(input)\n    //             // .pipe(createDecipheriv(config.algorithm, config.cyperKey, config.cyperIv))\n    //             .pipe(createGunzip())\n    //             .pipe(createWriteStream(output))\n    //             .on('finish', () => observer.next(true))\n    //             .on('error', (err) => observer.error(err));\n    //     });\n    // }\n    gZipAll() {\n        // var archiver = require('archiver');\n        // var output = createWriteStream('./example.tar.gz');\n        // var archive = archiver('tar', {\n        //     gzip: true,\n        //     zlib: { level: 9 } // Sets the compression level.\n        // });\n        // archive.on('error', function (err) {\n        //     throw err;\n        // });\n        // // pipe archive data to the output file\n        // archive.pipe(output);\n        // // append files\n        // archive.file('/path/to/file0.txt', { name: 'file0-or-change-this-whatever.txt' });\n        // archive.file('/path/to/README.md', { name: 'foobar.md' });\n        // // Wait for streams to complete\n        // archive.finalize();\n    }\n};\n__decorate([\n    (0, injector_decorator_1.Injector)(index_1.ConfigService),\n    __metadata(\"design:type\", index_1.ConfigService)\n], CompressionService.prototype, \"config\", void 0);\nCompressionService = __decorate([\n    (0, Service_1.Service)()\n], CompressionService);\nexports.CompressionService = CompressionService;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./compression.service\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./effect.service\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./controllers.service\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./components.service\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./bootstraps.service\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./services.service\"), exports);\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PluginManager = void 0;\nconst plugin_service_1 = require(\"../plugin/plugin.service\");\nconst Service_1 = require(\"../../decorators/service/Service\");\nlet PluginManager = class PluginManager {\n    constructor(pluginService) {\n        this.pluginService = pluginService;\n    }\n    listPlugins() {\n        return this.pluginService.getPlugins();\n    }\n    getPlugin(pluginClass) {\n        return this.pluginService\n            .getPlugins()\n            .filter(p => p.name === pluginClass.name)[0];\n    }\n};\nPluginManager = __decorate([\n    (0, Service_1.Service)(),\n    __metadata(\"design:paramtypes\", [plugin_service_1.PluginService])\n], PluginManager);\nexports.PluginManager = PluginManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./cache/index\"), exports);\n__exportStar(require(\"./plugin/plugin.service\"), exports);\n__exportStar(require(\"./bootstrap-logger/index\"), exports);\n__exportStar(require(\"./exit-handler/index\"), exports);\n__exportStar(require(\"./module/index\"), exports);\n__exportStar(require(\"./resolver/index\"), exports);\n__exportStar(require(\"./config/index\"), exports);\n__exportStar(require(\"./metadata/index\"), exports);\n__exportStar(require(\"./compression/index\"), exports);\n__exportStar(require(\"./constructor-watcher/index\"), exports);\n__exportStar(require(\"./effect/index\"), exports);\n__exportStar(require(\"./controllers/index\"), exports);\n__exportStar(require(\"./components/index\"), exports);\n__exportStar(require(\"./bootstraps/index\"), exports);\n__exportStar(require(\"./services/index\"), exports);\n__exportStar(require(\"./plugin-manager/plugin-manager\"), exports);\n__exportStar(require(\"./after-starter/after-starter.service\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GenericConstruct = void 0;\nconst container_1 = require(\"../container\");\nconst services_1 = require(\"../services\");\nconst moduleService = container_1.Container.get(services_1.ModuleService);\nconst bootstrapLogger = container_1.Container.get(services_1.BootstrapLogger);\nfunction GenericConstruct(module, original, currentModule) {\n    return function construct(constructor, args) {\n        if (!module) {\n            return new constructor();\n        }\n        if (module.imports) {\n            moduleService.setImports(module.imports, original);\n        }\n        if (module.services) {\n            moduleService.setServices(module.services, original, currentModule);\n        }\n        if (module.providers) {\n            moduleService.setServices(module.providers, original, currentModule);\n        }\n        if (module.controllers) {\n            moduleService.setControllers(module.controllers, original, currentModule);\n        }\n        if (module.effects) {\n            moduleService.setEffects(module.effects, original, currentModule);\n        }\n        if (module.components) {\n            moduleService.setComponents(module.components, original, currentModule);\n        }\n        if (module.beforePlugins) {\n            moduleService.setBeforePlugins(module.beforePlugins, original, currentModule);\n        }\n        if (module.plugins) {\n            moduleService.setPlugins(module.plugins, original, currentModule);\n        }\n        if (module.afterPlugins) {\n            moduleService.setAfterPlugins(module.afterPlugins, original, currentModule);\n        }\n        if (module.bootstrap) {\n            moduleService.setBootstraps(module.bootstrap, original, currentModule);\n        }\n        bootstrapLogger.log(`Bootstrap -> @Module('${constructor.originalName}')${bootstrapLogger.logHashes(`(${constructor.name})`)}: finished!`);\n        return container_1.Container.get(constructor);\n    };\n}\nexports.GenericConstruct = GenericConstruct;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NgModule = exports.Module = void 0;\nconst container_1 = require(\"../../container\");\nconst cache_layer_service_1 = require(\"../../services/cache/cache-layer.service\");\nconst generic_constructor_1 = require(\"../../helpers/generic-constructor\");\nconst bootstrap_logger_1 = require(\"../../services/bootstrap-logger/bootstrap-logger\");\nconst resolver_service_1 = require(\"../../services/resolver/resolver.service\");\nconst metadata_service_1 = require(\"../../services/metadata/metadata.service\");\nconst module_service_1 = require(\"../../services/module/module.service\");\nconst bootstrapLogger = container_1.Container.get(bootstrap_logger_1.BootstrapLogger);\nconst resolverService = container_1.Container.get(resolver_service_1.ResolverService);\nconst cacheService = container_1.Container.get(cache_layer_service_1.CacheService);\nconst metadataService = container_1.Container.get(metadata_service_1.MetadataService);\nconst moduleService = container_1.Container.get(module_service_1.ModuleService);\nfunction Module(module) {\n    return (target) => {\n        module = module || {};\n        const original = Object.assign(target);\n        const moduleName = target.name || target.constructor.name;\n        const generatedHashData = metadataService.generateHashData(module, original);\n        const uniqueModuleTemplate = metadataService.parseModuleTemplate(moduleName, generatedHashData, `${target}`);\n        const uniqueHashForClass = metadataService.createUniqueHash(uniqueModuleTemplate);\n        // console.log(`--------- ${moduleName} --------- Hash: ${uniqueHashForClass}---------`);\n        // console.log(uniqueModuleTemplate);\n        Object.defineProperty(original, 'originalName', { value: original.name || original.constructor.name, writable: false });\n        Object.defineProperty(original, 'name', { value: uniqueHashForClass, writable: true });\n        const currentModuleLayer = cacheService.createLayer({ name: uniqueHashForClass });\n        original.metadata = {\n            moduleName: original.originalName,\n            moduleHash: uniqueHashForClass,\n            options: null,\n            type: 'module',\n            raw: uniqueModuleTemplate\n        };\n        const constructorFunction = function (...args) {\n            bootstrapLogger.log(`Bootstrap -> @Module('${original.originalName}')${bootstrapLogger.logHashes(`(${original.name})`)}: loading...`);\n            return (0, generic_constructor_1.GenericConstruct)(module, original, currentModuleLayer)(original, args);\n        };\n        Object.assign(constructorFunction, original);\n        resolverService.resolveDependencies(uniqueHashForClass, original, moduleName)\n            .subscribe(() => bootstrapLogger.log(`Start -> @Module('${original.originalName}')${bootstrapLogger.logHashes(`(${original.name})`)}: loaded!`));\n        Object.getOwnPropertyNames(original)\n            .filter(prop => typeof original[prop] === 'function')\n            .map(descriptor => Object.defineProperty(constructorFunction, descriptor, {\n            configurable: true,\n            writable: true,\n            value: original[descriptor]\n        }));\n        if (original.forRoot) {\n            const originalForRoot = constructorFunction.forRoot;\n            constructorFunction.forRoot = function (...args) {\n                const result = originalForRoot(...args);\n                if (!result) {\n                    throw new Error(`forRoot configuration inside ${constructorFunction.name} is returning undefined or null`);\n                }\n                if (result.frameworkImports) {\n                    moduleService.setImports(result.frameworkImports, original);\n                }\n                if (result.services) {\n                    moduleService.setServices(result.services, original, currentModuleLayer);\n                }\n                if (result.providers) {\n                    moduleService.setServices(result.providers, original, currentModuleLayer);\n                }\n                if (result.components) {\n                    moduleService.setComponents(result.components, original, currentModuleLayer);\n                }\n                if (result.effects) {\n                    moduleService.setEffects(result.effects, original, currentModuleLayer);\n                }\n                if (result.controllers) {\n                    moduleService.setControllers(result.controllers, original, currentModuleLayer);\n                }\n                if (result.beforePlugins) {\n                    moduleService.setBeforePlugins(result.beforePlugins, original, currentModuleLayer);\n                }\n                if (result.plugins) {\n                    moduleService.setPlugins(result.plugins, original, currentModuleLayer);\n                }\n                if (result.afterPlugins) {\n                    moduleService.setAfterPlugins(result.afterPlugins, original, currentModuleLayer);\n                }\n                /** @angular compatability */\n                if (result.ngModule) {\n                    return result.ngModule;\n                }\n                return result.module ? result.module : result;\n            };\n        }\n        const service = {\n            type: constructorFunction\n        };\n        container_1.Container.set(service);\n        return constructorFunction;\n    };\n}\nexports.Module = Module;\n/** @angular module compatability */\nexports.NgModule = Module;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./module.decorator\"), exports);\n__exportStar(require(\"./module.interfaces\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./injector.decorator\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectSoft = void 0;\nconst container_1 = require(\"../../container\");\nconst module_service_1 = require(\"../../services/module/module.service\");\nfunction InjectSoft(Service) {\n    return container_1.Container.get(module_service_1.ModuleService).watcherService.getByClass(Service);\n}\nexports.InjectSoft = InjectSoft;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./inject-soft.decorator\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CannotInjectError = void 0;\n/**\n * Thrown when DI cannot inject value into property decorated by @Inject decorator.\n */\nclass CannotInjectError extends Error {\n    constructor(target, propertyName) {\n        super(`Cannot inject value into '${target.constructor.name}.${propertyName}'. ` +\n            `Please make sure you setup @abraham/reflection properly and you don't use interfaces without service tokens as injection value.`);\n        this.name = 'ServiceNotFoundError';\n        Object.setPrototypeOf(this, CannotInjectError.prototype);\n    }\n}\nexports.CannotInjectError = CannotInjectError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isClient = exports.getIdentifier = void 0;\nconst Token_1 = require(\"../container/Token\");\nconst CannotInjectError_1 = require(\"../container/error/CannotInjectError\");\nconst getIdentifier = (typeOrName, target, propertyName) => {\n    let identifier;\n    if (typeof typeOrName === 'string') {\n        identifier = typeOrName;\n    }\n    else if (typeOrName instanceof Token_1.Token) {\n        identifier = typeOrName;\n    }\n    else {\n        identifier = typeOrName();\n    }\n    if (identifier === Object) {\n        throw new CannotInjectError_1.CannotInjectError(target, propertyName);\n    }\n    return identifier;\n};\nexports.getIdentifier = getIdentifier;\nconst isClient = () => typeof window !== 'undefined' && typeof window.document !== 'undefined';\nexports.isClient = isClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Inject = void 0;\nconst Container_1 = require(\"../../container/Container\");\nconst get_identifier_1 = require(\"../../helpers/get-identifier\");\n/**\n * Injects a service into a class property or constructor parameter.\n */\nfunction Inject(typeOrName) {\n    return function (target, propertyName, index) {\n        if ((0, get_identifier_1.isClient)() && typeOrName && typeof typeOrName === 'function') {\n            Object.defineProperty(target, propertyName, {\n                get: () => Container_1.Container.get(typeOrName)\n            });\n            return;\n        }\n        if (!typeOrName)\n            typeOrName = () => Reflect.getMetadata('design:type', target, propertyName);\n        Container_1.Container.registerHandler({\n            object: target,\n            propertyName: propertyName,\n            index: index,\n            value: instance => instance.get((0, get_identifier_1.getIdentifier)(typeOrName, target, propertyName))\n        });\n    };\n}\nexports.Inject = Inject;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Controller = void 0;\nconst reflect_decorator_1 = require(\"../../helpers/reflect.decorator\");\nfunction Controller(options) {\n    return (0, reflect_decorator_1.ReflectDecorator)(options, { type: 'controller' });\n}\nexports.Controller = Controller;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./controller.decorator\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Effect = void 0;\nconst reflect_decorator_1 = require(\"../../helpers/reflect.decorator\");\nfunction Effect(options) {\n    return (0, reflect_decorator_1.ReflectDecorator)(options, { type: 'effect' });\n}\nexports.Effect = Effect;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./effect.decorator\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Plugin = void 0;\nconst reflect_decorator_1 = require(\"../../helpers/reflect.decorator\");\nfunction Plugin(options) {\n    return (0, reflect_decorator_1.ReflectDecorator)(options, { type: 'plugin' });\n}\nexports.Plugin = Plugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Component = void 0;\nconst reflect_decorator_1 = require(\"../../helpers/reflect.decorator\");\nfunction Component(options) {\n    return (0, reflect_decorator_1.ReflectDecorator)(options, { type: 'component' });\n}\nexports.Component = Component;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./component.decorator\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectMany = void 0;\nconst Container_1 = require(\"../../container/Container\");\nconst Token_1 = require(\"../../container/Token\");\nconst get_identifier_1 = require(\"../../helpers/get-identifier\");\n/**\n * Injects a service into a class property or constructor parameter.\n */\nfunction InjectMany(typeOrName) {\n    return function (target, propertyName, index) {\n        if ((0, get_identifier_1.isClient)() && typeOrName instanceof Token_1.Token) {\n            Object.defineProperty(target, propertyName, {\n                get: () => Container_1.Container.getMany((0, get_identifier_1.getIdentifier)(typeOrName, target, propertyName))\n            });\n            return;\n        }\n        if (!typeOrName) {\n            typeOrName = () => Reflect.getMetadata('design:type', target, propertyName);\n        }\n        Container_1.Container.registerHandler({\n            object: target,\n            propertyName: propertyName,\n            index: index,\n            value: instance => instance.getMany((0, get_identifier_1.getIdentifier)(typeOrName, target, propertyName))\n        });\n    };\n}\nexports.InjectMany = InjectMany;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Injectable = void 0;\n__exportStar(require(\"./module/index\"), exports);\n__exportStar(require(\"./injector/index\"), exports);\n__exportStar(require(\"./inject-soft/index\"), exports);\n__exportStar(require(\"./inject/Inject\"), exports);\n__exportStar(require(\"./controller/index\"), exports);\n__exportStar(require(\"./effect/index\"), exports);\n__exportStar(require(\"./plugin/Plugin\"), exports);\n__exportStar(require(\"./service/Service\"), exports);\n__exportStar(require(\"./component/index\"), exports);\n__exportStar(require(\"./inject-many/InjectMany\"), exports);\nvar Service_1 = require(\"./service/Service\");\nObject.defineProperty(exports, \"Injectable\", { enumerable: true, get: function () { return Service_1.Service; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"@abraham/reflection\");\n__exportStar(require(\"./container/index\"), exports);\n__exportStar(require(\"./decorators/index\"), exports);\n__exportStar(require(\"./helpers/index\"), exports);\n__exportStar(require(\"./services/index\"), exports);\n","export enum PaymentProviders {\n  'APPLEPAY' = 'APPLEPAY',\n  'BANK_TRANSFER' = 'BANK_TRANSFER',\n  'BITPACE' = 'BITPACE',\n  'CASH' = 'CASH',\n  'CASHPAY' = 'CASHPAY',\n  'CASHTERMINAL' = 'CASHTERMINAL',\n  'EASYPAY' = 'EASYPAY',\n  'EPAY' = 'EPAY',\n  'FASTPAY' = 'FASTPAY',\n  'GOOGLEPAY' = 'GOOGLEPAY',\n  'MASTER_CARD' = 'MASTER_CARD',\n  'NETELLER' = 'NETELLER',\n  'PAYSAFECARD' = 'PAY',\n  'PHYRE' = 'PHYRE',\n  'SKRILL' = 'SKRILL',\n  'STATIA_DE_PLATA' = 'STATIA_DE_PLATA',\n  'TWISTPLAY' = 'TWISTPLAY',\n  'VISA' = 'VISA',\n  'VOUCHER' = 'VAUCHER',\n  'A1' = 'A1',\n}\n\nexport const paymentProviders: Record<keyof typeof PaymentProviders, { title: string }> = {\n  APPLEPAY: {\n    title: 'Apple Pay',\n  },\n  A1: {\n    title: 'A1',\n  },\n  BANK_TRANSFER: {\n    title: 'Bank Transfer',\n  },\n  BITPACE: {\n    title: 'Bitpace',\n  },\n  CASH: {\n    title: 'Cash',\n  },\n  CASHPAY: {\n    title: 'Cash Pay',\n  },\n  CASHTERMINAL: {\n    title: 'Cash Terminal',\n  },\n  EASYPAY: {\n    title: 'EasyPay',\n  },\n  EPAY: {\n    title: 'Epay',\n  },\n  FASTPAY: {\n    title: 'FastPay',\n  },\n  GOOGLEPAY: {\n    title: 'GooglePay',\n  },\n  MASTER_CARD: {\n    title: 'MasterCard',\n  },\n  NETELLER: {\n    title: 'Neteller',\n  },\n  PAYSAFECARD: {\n    title: 'PaySafeCard',\n  },\n  PHYRE: {\n    title: 'Phyre',\n  },\n  SKRILL: {\n    title: 'Skrill',\n  },\n  STATIA_DE_PLATA: {\n    title: 'Statia De Plata',\n  },\n  TWISTPLAY: {\n    title: 'Twistplay',\n  },\n  VISA: {\n    title: 'Visa',\n  },\n  VOUCHER: {\n    title: 'Voucher',\n  },\n};\n\nexport const PaymentProvidersEntries = Object.entries(paymentProviders);\n","import { Injectable } from '@rxdi/core';\nimport { Observable, of } from 'rxjs';\n\nimport { PaymentProvidersEntries } from './providers';\n\n@Injectable()\nexport class ApiService {\n  getProviders(): Observable<typeof PaymentProvidersEntries> {\n    return of(PaymentProvidersEntries);\n  }\n}\n","import { Module } from '@rxdi/core';\n\nimport { ApiService } from './api/api.service';\n\n@Module({\n  providers: [ApiService],\n})\nexport class CoreModule {}\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets =\n  global.ShadowRoot &&\n  (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst cssTagCache = new WeakMap<TemplateStringsArray, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n  private _strings: TemplateStringsArray | undefined;\n\n  private constructor(\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(\n          this.cssText\n        );\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    undefined,\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(\n    cssText,\n    strings,\n    constructionToken\n  );\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    styles.forEach((s) => {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (global as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    });\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle =\n  supportsAdoptingStyleSheets ||\n  (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s: CSSResultOrNative) => s\n    : (s: CSSResultOrNative) =>\n        s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n// In the Node build, this import will be injected by Rollup:\n// import {HTMLElement, customElements} from '@lit-labs/ssr-dom-shim';\n\nexport * from './css-tag.js';\nexport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\nif (NODE_MODE) {\n  global.customElements ??= customElements;\n}\n\nconst DEV_MODE = true;\n\nlet requestUpdateThenable: (name: string) => {\n  then: (\n    onfulfilled?: (value: boolean) => void,\n    _onrejected?: () => void\n  ) => void;\n};\n\nlet issueWarning: (code: string, warning: string) => void;\n\nconst trustedTypes = (global as unknown as {trustedTypes?: {emptyScript: ''}})\n  .trustedTypes;\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nconst polyfillSupport = DEV_MODE\n  ? global.reactiveElementPolyfillSupportDevMode\n  : global.reactiveElementPolyfillSupport;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> = (global.litIssuedWarnings ??=\n    new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n\n  // Issue polyfill support warning.\n  if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n    issueWarning(\n      'polyfill-support-missing',\n      `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n        `the \\`polyfill-support\\` module has not been loaded.`\n    );\n  }\n\n  requestUpdateThenable = (name) => ({\n    then: (\n      onfulfilled?: (value: boolean) => void,\n      _onrejected?: () => void\n    ) => {\n      issueWarning(\n        'request-update-promise',\n        `The \\`requestUpdate\\` method should no longer return a Promise but ` +\n          `does so on \\`${name}\\`. Use \\`updateComplete\\` instead.`\n      );\n      if (onfulfilled !== undefined) {\n        onfulfilled(false);\n      }\n    },\n  });\n}\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace ReactiveUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry = Update;\n    export interface Update {\n      kind: 'update';\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: ReactiveUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<ReactiveUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * A Map of property keys to values.\n *\n * Takes an optional type parameter T, which when specified as a non-any,\n * non-unknown type, will make the Map more strongly-typed, associating the map\n * keys with their corresponding value type on T.\n *\n * Use `PropertyValues<this>` when overriding ReactiveElement.update() and\n * other lifecycle methods in order to get stronger type-checking on keys\n * and values.\n */\n// This type is conditional so that if the parameter T is not specified, or\n// is `any`, the type will include `Map<PropertyKey, unknown>`. Since T is not\n// given in the uses of PropertyValues in this file, all uses here fallback to\n// meaning `Map<PropertyKey, unknown>`, but if a developer uses\n// `PropertyValues<this>` (or any other value for T) they will get a\n// strongly-typed Map type.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = T extends object\n  ? PropertyValueMap<T>\n  : Map<PropertyKey, unknown>;\n\n/**\n * Do not use, instead prefer {@linkcode PropertyValues}.\n */\n// This type must be exported such that JavaScript generated by the Google\n// Closure Compiler can import a type reference.\nexport interface PropertyValueMap<T> extends Map<PropertyKey, unknown> {\n  get<K extends keyof T>(k: K): T[K];\n  set<K extends keyof T>(key: K, value: T[K]): this;\n  has<K extends keyof T>(k: K): boolean;\n  delete<K extends keyof T>(k: K): boolean;\n}\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? emptyStringForBooleanAttribute : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * A string representing one of the supported dev mode warning categories.\n */\nexport type WarningKind = 'change-in-update' | 'migration';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  // In the Node build, this `extends` clause will be substituted with\n  // `(globalThis.HTMLElement ?? HTMLElement)`.\n  //\n  // This way, we will first prefer any global `HTMLElement` polyfill that the\n  // user has assigned, and then fall back to the `HTMLElement` shim which has\n  // been imported (see note at the top of this file about how this import is\n  // generated by Rollup). Note that the `HTMLElement` variable has been\n  // shadowed by this import, so it no longer refers to the global.\n  extends HTMLElement\n  implements ReactiveControllerHost\n{\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning categories for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement subclasses\n   * ReactiveElement.enableWarning?.('migration');\n   *\n   * // Enable for only MyElement and subclasses\n   * MyElement.enableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement subclasses\n   * ReactiveElement.disableWarning?.('migration');\n   *\n   * // Disable for only MyElement and subclasses\n   * MyElement.disableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this.finalize();\n    (this._initializers ??= []).push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static [finalized] = true;\n\n  /**\n   * Memoized list of all element properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap = new Map();\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: Array<CSSResultOrNative> = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the {@linkcode css} tag function, via constructible stylesheets, or\n   * imported from native CSS module scripts.\n   *\n   * Note on Content Security Policy:\n   *\n   * Element styles are implemented with `<style>` tags when the browser doesn't\n   * support adopted StyleSheets. To use such `<style>` tags with the style-src\n   * CSP directive, the style-src value must either include 'unsafe-inline' or\n   * `nonce-<base64-value>` with `<base64-value>` replaced be a server-generated\n   * nonce.\n   *\n   * To provide a nonce to use on generated `<style>` elements, set\n   * `window.litNonce` to a server-generated nonce in your page's HTML, before\n   * loading application code:\n   *\n   * ```html\n   * <script>\n   *   // Generated and unique per request:\n   *   window.litNonce = 'a1b2c3d4';\n   * </script>\n   * ```\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * The set of properties defined by this class that caused an accessor to be\n   * added during `createProperty`.\n   * @nocollapse\n   */\n  private static __reactivePropertyKeys?: Set<PropertyKey>;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this.elementProperties.forEach((v, p) => {\n      const attr = this.__attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a {@linkcode PropertyDeclaration} for the property with the\n   * given options. The property setter calls the property's `hasChanged`\n   * property option or uses a strict identity check to determine whether or not\n   * to request an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // if this is a state property, force the attribute to false.\n    if (options.state) {\n      // Cast as any since this is readonly.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (options as any).attribute = false;\n    }\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure finalization has been kicked off.\n    this.finalize();\n    this.elementProperties.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (!options.noAccessor && !this.prototype.hasOwnProperty(name)) {\n      const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        Object.defineProperty(this.prototype, name, descriptor);\n        if (DEV_MODE) {\n          // If this class doesn't have its own set, create one and initialize\n          // with the values in the set from the nearest ancestor class, if any.\n          if (!this.hasOwnProperty('__reactivePropertyKeys')) {\n            this.__reactivePropertyKeys = new Set(\n              this.__reactivePropertyKeys ?? []\n            );\n          }\n          this.__reactivePropertyKeys!.add(name);\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ): PropertyDescriptor | undefined {\n    return {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = (this as {} as {[key: string]: unknown})[\n          name as string\n        ];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as ReactiveElement).requestUpdate(\n          name,\n          oldValue,\n          options\n        );\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override\n   * {@linkcode createProperty}.\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) || defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties, sets up element\n   * styling, and ensures any superclasses are also finalized. Returns true if\n   * the element was finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(finalized)) {\n      return false;\n    }\n    this[finalized] = true;\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n    // Create own set of initializers for this class if any exist on the\n    // superclass and copy them down. Note, for a small perf boost, avoid\n    // creating initializers unless needed.\n    if (superCtor._initializers !== undefined) {\n      this._initializers = [...superCtor._initializers];\n    }\n    this.elementProperties = new Map(superCtor.elementProperties);\n    // initialize Map populated in observedAttributes\n    this.__attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...Object.getOwnPropertySymbols(props),\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeScript lack of support for symbol in\n        // index types\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n    this.elementStyles = this.finalizeStyles(this.styles);\n    // DEV mode warnings\n    if (DEV_MODE) {\n      const warnRemovedOrRenamed = (name: string, renamed = false) => {\n        if (this.prototype.hasOwnProperty(name)) {\n          issueWarning(\n            renamed ? 'renamed-api' : 'removed-api',\n            `\\`${name}\\` is implemented on class ${this.name}. It ` +\n              `has been ${renamed ? 'renamed' : 'removed'} ` +\n              `in this version of LitElement.`\n          );\n        }\n      };\n      warnRemovedOrRenamed('initialize');\n      warnRemovedOrRenamed('requestUpdateInternal');\n      warnRemovedOrRenamed('_getUpdateComplete', true);\n    }\n    return true;\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(\n    styles?: CSSResultGroup\n  ): Array<CSSResultOrNative> {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | ShadowRoot;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n      ? attribute\n      : typeof name === 'string'\n      ? name.toLowerCase()\n      : undefined;\n  }\n\n  private __instanceProperties?: PropertyValues = new Map();\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  /**\n   * True if there is a pending update as a result of calling `requestUpdate()`.\n   * Should only be read.\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * Is set to `true` after the first update. The element code cannot assume\n   * that `renderRoot` exists before the element `hasUpdated`.\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: ReactiveController[];\n\n  constructor() {\n    super();\n    this._initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   *\n   * @internal\n   */\n  _initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= []).push(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    // Note, if the indexOf is -1, the >>> will flip the sign which makes the\n    // splice do nothing.\n    this.__controllers?.splice(this.__controllers.indexOf(controller) >>> 0, 1);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private __saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof ReactiveElement).elementProperties.forEach(\n      (_v, p) => {\n        if (this.hasOwnProperty(p)) {\n          this.__instanceProperties!.set(p, this[p as keyof this]);\n          delete this[p as keyof this];\n        }\n      }\n    );\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): Element | ShadowRoot {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // create renderRoot before first update.\n    if (this.renderRoot === undefined) {\n      (\n        this as {\n          renderRoot: Element | DocumentFragment;\n        }\n      ).renderRoot = this.createRenderRoot();\n    }\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * Specifically, when an attribute is set, the corresponding property is set.\n   * You should rarely need to implement this callback. If this method is\n   * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n   * called.\n   *\n   * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\n   * on MDN for more information about the `attributeChangedCallback`.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(\n    name: PropertyKey,\n    value: unknown,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    const attr = (\n      this.constructor as typeof ReactiveElement\n    ).__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const converter =\n        (options.converter as ComplexAttributeConverter)?.toAttribute !==\n        undefined\n          ? (options.converter as ComplexAttributeConverter)\n          : defaultConverter;\n      const attrValue = converter.toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n          'migration'\n        ) >= 0 &&\n        attrValue === undefined\n      ) {\n        issueWarning(\n          'undefined-attribute-value',\n          `The attribute value for the ${name as string} property is ` +\n            `undefined on element ${this.localName}. The attribute will be ` +\n            `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n            `the attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter =\n        typeof options.converter === 'function'\n          ? {fromAttribute: options.converter}\n          : options.converter?.fromAttribute !== undefined\n          ? options.converter\n          : defaultConverter;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      this[propName as keyof this] = converter.fromAttribute!(\n        value,\n        options.type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) as any;\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      options =\n        options ||\n        (this.constructor as typeof ReactiveElement).getPropertyOptions(name);\n      const hasChanged = options.hasChanged || notEqual;\n      if (hasChanged(this[name as keyof this], oldValue)) {\n        if (!this._$changedProperties.has(name)) {\n          this._$changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true && this.__reflectingProperty !== name) {\n          if (this.__reflectingProperties === undefined) {\n            this.__reflectingProperties = new Map();\n          }\n          this.__reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this.isUpdatePending && shouldRequestUpdate) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n    // Note, since this no longer returns a promise, in dev mode we return a\n    // thenable which warns if it's called.\n    return DEV_MODE\n      ? (requestUpdateThenable(this.localName) as unknown as void)\n      : undefined;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected scheduleUpdate(): void | Promise<unknown> {\n    return this.performUpdate();\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * Note: To ensure `performUpdate()` synchronously completes a pending update,\n   * it should not be overridden. In LitElement 2.x it was suggested to override\n   * `performUpdate()` to also customizing update scheduling. Instead, you should now\n   * override `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\n   * scheduling updates via `performUpdate()` continues to work, but will make\n   * also calling `performUpdate()` to synchronously process updates difficult.\n   *\n   * @category updates\n   */\n  protected performUpdate(): void | Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    debugLogEvent?.({kind: 'update'});\n    // create renderRoot before first update.\n    if (!this.hasUpdated) {\n      // Produce warning if any class properties are shadowed by class fields\n      if (DEV_MODE) {\n        const shadowedProperties: string[] = [];\n        (\n          this.constructor as typeof ReactiveElement\n        ).__reactivePropertyKeys?.forEach((p) => {\n          if (this.hasOwnProperty(p) && !this.__instanceProperties?.has(p)) {\n            shadowedProperties.push(p as string);\n          }\n        });\n        if (shadowedProperties.length) {\n          throw new Error(\n            `The following properties on element ${this.localName} will not ` +\n              `trigger updates as expected because they are set using class ` +\n              `fields: ${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. See ` +\n              `https://lit.dev/msg/class-field-shadowing ` +\n              `for more information.`\n          );\n        }\n      }\n    }\n    // Mixin instance properties once, if they exist.\n    if (this.__instanceProperties) {\n      // Use forEach so this works even if for/of loops are compiled to for loops\n      // expecting arrays\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.__instanceProperties!.forEach((v, p) => ((this as any)[p] = v));\n      this.__instanceProperties = undefined;\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * Invoked before `update()` to compute values needed during the update.\n   *\n   * Implement `willUpdate` to compute property values that depend on other\n   * properties and are used in the rest of the update process.\n   *\n   * ```ts\n   * willUpdate(changedProperties) {\n   *   // only need to check changed properties for an expensive computation.\n   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n   *   }\n   * }\n   *\n   * render() {\n   *   return html`SHA: ${this.sha}`;\n   * }\n   * ```\n   *\n   * @category updates\n   */\n  protected willUpdate(_changedProperties: PropertyValues): void {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n        'change-in-update'\n      ) >= 0\n    ) {\n      issueWarning(\n        'change-in-update',\n        `Element ${this.localName} scheduled an update ` +\n          `(generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this.__reflectingProperties !== undefined) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this.__reflectingProperties.forEach((v, k) =>\n        this.__propertyToAttribute(k, this[k as keyof this], v)\n      );\n      this.__reflectingProperties = undefined;\n    }\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * ```ts\n   * firstUpdated() {\n   *   this.renderRoot.getElementById('my-text-area').focus();\n   * }\n   * ```\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n\n// Apply polyfills if available\npolyfillSupport?.({ReactiveElement});\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = ['change-in-update'];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (this.enabledWarnings!.indexOf(warning) < 0) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('1.6.1');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n// Use window for browser builds because IE11 doesn't have globalThis.\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!global.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  global.ShadyDOM?.noPatch === true\n    ? global.ShadyDOM!.wrap\n    : (node: Node) => node;\n\nconst trustedTypes = (global as unknown as Partial<Window>).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = (v = '') => d.createComment(v);\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type TemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  h: TrustedHTML;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus cannot be used within an `<svg>` HTML element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */,\n  null,\n  false\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string | undefined>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string | undefined> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n              ? doubleQuoteAttrEndRegex\n              : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n        ? (attrNames.push(attrName!),\n          s.slice(0, attrNameEndIndex) +\n            boundAttributeSuffix +\n            s.slice(attrNameEndIndex)) +\n          marker +\n          end\n        : s +\n          marker +\n          (attrNameEndIndex === -2 ? (attrNames.push(undefined), i) : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!Array.isArray(strings) || !strings.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n\n          If you're using the html or svg tagged template functions normally\n          and and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  // Returned as an array for terseness\n  return [\n    policy !== undefined\n      ? policy.createHTML(htmlResult)\n      : (htmlResult as unknown as TrustedHTML),\n    attrNames,\n  ];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n  /** @internal */\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: TemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Reparent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const content = this.el.content;\n      const svgElement = content.firstChild!;\n      svgElement.remove();\n      content.append(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          // We defer removing bound attributes because on IE we might not be\n          // iterating attributes in their template order, and would sometimes\n          // remove an attribute that we still need to create a part for.\n          const attrsToRemove = [];\n          for (const name of (node as Element).getAttributeNames()) {\n            // `name` is the name of the attribute we're iterating over, but not\n            // _neccessarily_ the name of the attribute we will create a part\n            // for. They can be different in browsers that don't iterate on\n            // attributes in source order. In that case the attrNames array\n            // contains the attribute name we'll process next. We only need the\n            // attribute name here to know if we should process a bound attribute\n            // on this element.\n            if (\n              name.endsWith(boundAttributeSuffix) ||\n              name.startsWith(marker)\n            ) {\n              const realName = attrNames[attrNameIndex++];\n              attrsToRemove.push(name);\n              if (realName !== undefined) {\n                // Lowercase for case-sensitive SVG attributes like viewBox\n                const value = (node as Element).getAttribute(\n                  realName.toLowerCase() + boundAttributeSuffix\n                )!;\n                const statics = value.split(marker);\n                const m = /([.?@])?(.*)/.exec(realName)!;\n                parts.push({\n                  type: ATTRIBUTE_PART,\n                  index: nodeIndex,\n                  name: m[2],\n                  strings: statics,\n                  ctor:\n                    m[1] === '.'\n                      ? PropertyPart\n                      : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                      ? EventPart\n                      : AttributePart,\n                });\n              } else {\n                parts.push({\n                  type: ELEMENT_PART,\n                  index: nodeIndex,\n                });\n              }\n            }\n          }\n          for (const name of attrsToRemove) {\n            (node as Element).removeAttribute(name);\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n    debugLogEvent?.({\n      kind: 'template prep',\n      template: this,\n      clonableTemplate: this.el,\n      parts: this.parts,\n      strings,\n    });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  /** @internal */\n  _$template: Template;\n  /** @internal */\n  _parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        debugLogEvent?.({\n          kind: 'set part',\n          part,\n          value: values[i],\n          valueIndex: i,\n          values,\n          templateInstance: this,\n        });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  /** @internal */\n  readonly ctor: typeof AttributePart;\n  /** @internal */\n  readonly strings: ReadonlyArray<string>;\n};\ntype NodeTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | NodeTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unsed otherwise. The\n   * intention would clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent?.({\n            kind: 'commit nothing to child',\n            start: this._$startNode,\n            end: this._$endNode,\n            parent: this._$parent,\n            options: this.options,\n          });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T, ref = this._$endNode) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(node, ref);\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and make do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent?.({\n        kind: 'commit node',\n        start: this._$startNode,\n        parent: this._$parent,\n        value: value,\n        options: this.options,\n      });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent?.({\n        kind: 'commit text',\n        node,\n        value,\n        options: this.options,\n      });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = document.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: textNode,\n          value,\n          options: this.options,\n        });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: wrap(this._$startNode).nextSibling as Text,\n          value,\n          options: this.options,\n        });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as TemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(type.h, this.options)),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent?.({\n        kind: 'template updating',\n        template,\n        instance: this._$committedValue as TemplateInstance,\n        parts: (this._$committedValue as TemplateInstance)._parts,\n        options: this.options,\n        values,\n      });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent?.({\n        kind: 'template instantiated',\n        template,\n        instance,\n        parts: instance._parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      instance._update(values);\n      debugLogEvent?.({\n        kind: 'template instantiated and updated',\n        template,\n        instance,\n        parts: instance._parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: TemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this metod\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was prevously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent?.({\n        kind: 'commit attribute',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent?.({\n      kind: 'commit property',\n      element: this.element,\n      name: this.name,\n      value,\n      options: this.options,\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent?.({\n      kind: 'commit boolean attribute',\n      element: this.element,\n      name: this.name,\n      value: !!(value && value !== nothing),\n      options: this.options,\n    });\n    if (value && value !== nothing) {\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        emptyStringForBooleanAttribute\n      );\n    } else {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    }\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent?.({\n      kind: 'commit event listener',\n      element: this.element,\n      name: this.name,\n      value: newListener,\n      options: this.options,\n      removeListener: shouldRemoveListener,\n      addListener: shouldAddListener,\n      oldListener,\n    });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent?.({\n      kind: 'commit to element binding',\n      element: this.element,\n      value,\n      options: this.options,\n    });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in hydrate\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  // Used in tests and private-ssr-support\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litHtmlPolyfillSupportDevMode\n  : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('2.6.1');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`\n  );\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent?.({\n    kind: 'begin render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent?.({\n    kind: 'end render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\nimport {LitUnstable} from 'lit-html';\nimport {ReactiveUnstable} from '@lit/reactive-element';\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Unstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | LitUnstable.DebugLog.Entry\n      | ReactiveUnstable.DebugLog.Entry;\n  }\n}\n\n// For backwards compatibility export ReactiveElement as UpdatingElement. Note,\n// IE transpilation requires exporting like this.\nexport const UpdatingElement = ReactiveElement;\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See @lit/reactive-element for more information.\n   */\n  protected static override ['finalized'] = true;\n\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? globalThis.litElementPolyfillSupportDevMode\n  : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({LitElement});\n\n// DEV mode warnings\nif (DEV_MODE) {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  // Note, for compatibility with closure compilation, this access\n  // needs to be as a string property index.\n  (LitElement as any)['finalize'] = function (this: typeof LitElement) {\n    const finalized = (ReactiveElement as any).finalize.call(this);\n    if (!finalized) {\n      return false;\n    }\n    const warnRemovedOrRenamed = (obj: any, name: string, renamed = false) => {\n      if (obj.hasOwnProperty(name)) {\n        const ctorName = (typeof obj === 'function' ? obj : obj.constructor)\n          .name;\n        issueWarning(\n          renamed ? 'renamed-api' : 'removed-api',\n          `\\`${name}\\` is implemented on class ${ctorName}. It ` +\n            `has been ${renamed ? 'renamed' : 'removed'} ` +\n            `in this version of LitElement.`\n        );\n      }\n    };\n    warnRemovedOrRenamed(this, 'render');\n    warnRemovedOrRenamed(this, 'getStyles', true);\n    warnRemovedOrRenamed((this as typeof LitElement).prototype, 'adoptStyles');\n    return true;\n  };\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('3.2.2');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * @fileoverview\n *\n * This file exports a boolean const whose value will depend on what environment\n * the module is being imported from.\n */\n\nconst NODE_MODE = false;\n\n/**\n * A boolean that will be `true` in server environments like Node, and `false`\n * in browser environments. Note that your server environment or toolchain must\n * support the `\"node\"` export condition for this to be `true`.\n *\n * This can be used when authoring components to change behavior based on\n * whether or not the component is executing in an SSR context.\n */\nexport const isServer = NODE_MODE;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Component = void 0;\nconst lit_1 = require(\"lit\");\nconst legacyCustomElement = (tagName, clazz, options) => {\n    window.customElements.define(tagName, clazz, options);\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor, options) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz, options);\n        }\n    };\n};\nconst isFunction = (v) => typeof v === 'function';\nconst customElement = (tag, config = {}) => (Base) => {\n    var _a;\n    var _b;\n    /* Feature flag implementation where we don't define at all components when they are excluded */\n    if ((_a = window._excluded_components) === null || _a === void 0 ? void 0 : _a.includes(config.selector)) {\n        return Base;\n    }\n    if (!tag || (tag && tag.indexOf('-') <= 0)) {\n        throw new Error(`You need at least 1 dash in the custom element name! ${Base}`);\n    }\n    config.styles = config.styles || [];\n    const OnInit = Base.prototype.OnInit || function () { };\n    const OnDestroy = Base.prototype.OnDestroy || function () { };\n    const OnUpdate = Base.prototype.OnUpdate || function () { };\n    const OnUpdateFirst = Base.prototype.OnUpdateFirst || function () { };\n    const connectedCallback = Base.prototype.connectedCallback || function () { };\n    const disconnectedCallback = Base.prototype.disconnectedCallback || function () { };\n    const update = Base.prototype.update || function () { };\n    const firstUpdated = Base.prototype.firstUpdated || function () { };\n    let registry;\n    if (!config.template) {\n        config.template = Base.prototype.render || (() => (0, lit_1.html) ``);\n    }\n    if (config.style) {\n        config.styles.push(config.style);\n    }\n    const ModifiedClass = (_b = class NoName extends Base {\n            static is() {\n                return tag;\n            }\n            getTemplateResult() {\n                return this;\n            }\n            OnInit() {\n                if (config.container) {\n                    (0, lit_1.render)(config.template.call(this), config.container);\n                    if (config.style) {\n                        const style = document.createElement('style');\n                        style.type = 'text/css';\n                        if (style['styleSheet']) {\n                            // This is required for IE8 and below.\n                            style['styleSheet'].cssText = config.style.toString();\n                        }\n                        else {\n                            style.appendChild(document.createTextNode(config.style.toString()));\n                        }\n                        config.container.prepend(style);\n                    }\n                }\n                return OnInit.call(this);\n            }\n            disconnectedCallback() {\n                OnDestroy.call(this);\n                disconnectedCallback.call(this);\n                registry === null || registry === void 0 ? void 0 : registry.unsubscribe();\n                registry = null;\n            }\n            connectedCallback() {\n                var _a, _b;\n                connectedCallback.call(this);\n                OnInit.call(this);\n                if (isFunction(config.registry)) {\n                    registry = config.registry.call(this);\n                }\n                if ((_a = config.modifiers) === null || _a === void 0 ? void 0 : _a.length) {\n                    for (const modifier of config.modifiers) {\n                        if (!modifier) {\n                            throw new Error(`Provided null value inside modifiers for component \"${config.selector}\"`);\n                        }\n                        if (!modifier.options) {\n                            throw new Error(`Missing options for attribute inside ${config.selector}`);\n                        }\n                        if (!((_b = modifier.options) === null || _b === void 0 ? void 0 : _b.selector)) {\n                            throw new Error(`Missing attribute selector inside component \"${config.selector}\"`);\n                        }\n                        if (!registry && typeof modifier.options.registry === 'function') {\n                            registry = modifier.options.registry.call(this);\n                        }\n                        if (!registry) {\n                            throw new Error(`Missing attribute registry for attribute \"${modifier.options.selector}\" and no default registry specified inside component \"${config.selector}\"`);\n                        }\n                        registry.define(modifier.options.selector, modifier);\n                    }\n                }\n            }\n            render() {\n                return config.template.call(this);\n            }\n            update() {\n                update.call(this);\n                OnUpdate.call(this);\n            }\n            firstUpdated() {\n                firstUpdated.call(this);\n                OnUpdateFirst.call(this);\n            }\n        },\n        _b.styles = config.styles,\n        _b);\n    const registeredElement = window.customElements.get(tag);\n    if (registeredElement) {\n        console.error(`** IMPORTANT!!! **\n              ------------------------------------------\n< ${tag} > </${tag}> Component re-defined multiple times and it is already registered inside customElements registry\nPossible Solutions:\n* Bundle problem where multiple versions of the component are used\n            * @Component decorator is used twice for the same component\n              * Defined \"selector\" with the same name in multiple components\n\n                ** If this is Server Side Rendering you can ignore this message **\n                  ------------------------------------------\n                    `);\n        return registeredElement;\n    }\n    if (typeof ModifiedClass === 'function') {\n        legacyCustomElement(tag, ModifiedClass, {\n            extends: config.extends\n        });\n    }\n    else {\n        standardCustomElement(tag, ModifiedClass, { extends: config.extends });\n    }\n    return ModifiedClass;\n};\nconst Component = (config) => customElement(config.selector, config);\nexports.Component = Component;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./on-destroy\"), exports);\n__exportStar(require(\"./on-init\"), exports);\n__exportStar(require(\"./on-update\"), exports);\n__exportStar(require(\"./on-update-first\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./component.decorator\"), exports);\n__exportStar(require(\"./hooks/index\"), exports);\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Disconnectable, Part} from './lit-html.js';\n\nexport {\n  AttributePart,\n  BooleanAttributePart,\n  ChildPart,\n  ElementPart,\n  EventPart,\n  Part,\n  PropertyPart,\n} from './lit-html.js';\n\nexport interface DirectiveClass {\n  new (part: PartInfo): Directive;\n}\n\n/**\n * This utility type extracts the signature of a directive class's render()\n * method so we can use it for the type of the generated directive function.\n */\nexport type DirectiveParameters<C extends Directive> = Parameters<C['render']>;\n\n/**\n * A generated directive function doesn't evaluate the directive, but just\n * returns a DirectiveResult object that captures the arguments.\n */\nexport interface DirectiveResult<C extends DirectiveClass = DirectiveClass> {\n  /**\n   * This property needs to remain unminified.\n   * @internal */\n  ['_$litDirective$']: C;\n  /** @internal */\n  values: DirectiveParameters<InstanceType<C>>;\n}\n\nexport const PartType = {\n  ATTRIBUTE: 1,\n  CHILD: 2,\n  PROPERTY: 3,\n  BOOLEAN_ATTRIBUTE: 4,\n  EVENT: 5,\n  ELEMENT: 6,\n} as const;\n\nexport type PartType = typeof PartType[keyof typeof PartType];\n\nexport interface ChildPartInfo {\n  readonly type: typeof PartType.CHILD;\n}\n\nexport interface AttributePartInfo {\n  readonly type:\n    | typeof PartType.ATTRIBUTE\n    | typeof PartType.PROPERTY\n    | typeof PartType.BOOLEAN_ATTRIBUTE\n    | typeof PartType.EVENT;\n  readonly strings?: ReadonlyArray<string>;\n  readonly name: string;\n  readonly tagName: string;\n}\n\nexport interface ElementPartInfo {\n  readonly type: typeof PartType.ELEMENT;\n}\n\n/**\n * Information about the part a directive is bound to.\n *\n * This is useful for checking that a directive is attached to a valid part,\n * such as with directive that can only be used on attribute bindings.\n */\nexport type PartInfo = ChildPartInfo | AttributePartInfo | ElementPartInfo;\n\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive =\n  <C extends DirectiveClass>(c: C) =>\n  (...values: DirectiveParameters<InstanceType<C>>): DirectiveResult<C> => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n  });\n\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport abstract class Directive implements Disconnectable {\n  //@internal\n  __part!: Part;\n  //@internal\n  __attributeIndex: number | undefined;\n  //@internal\n  __directive?: Directive;\n\n  //@internal\n  _$parent!: Disconnectable;\n\n  // These will only exist on the AsyncDirective subclass\n  //@internal\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // This property needs to remain unminified.\n  //@internal\n  ['_$notifyDirectiveConnectionChanged']?(isConnected: boolean): void;\n\n  constructor(_partInfo: PartInfo) {}\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  /** @internal */\n  _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    this.__part = part;\n    this._$parent = parent;\n    this.__attributeIndex = attributeIndex;\n  }\n  /** @internal */\n  _$resolve(part: Part, props: Array<unknown>): unknown {\n    return this.update(part, props);\n  }\n\n  abstract render(...props: Array<unknown>): unknown;\n\n  update(_part: Part, props: Array<unknown>): unknown {\n    return this.render(...props);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {_$LH, Part, DirectiveParent, TemplateResult} from './lit-html.js';\nimport {\n  DirectiveResult,\n  DirectiveClass,\n  PartInfo,\n  AttributePartInfo,\n} from './directive.js';\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\n\nconst {_ChildPart: ChildPart} = _$LH;\n\ntype ChildPart = InstanceType<typeof ChildPart>;\n\nconst ENABLE_SHADYDOM_NOPATCH = true;\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  window.ShadyDOM?.inUse &&\n  window.ShadyDOM?.noPatch === true\n    ? window.ShadyDOM!.wrap\n    : (node: Node) => node;\n\n/**\n * Tests if a value is a primitive value.\n *\n * See https://tc39.github.io/ecma262/#sec-typeof-operator\n */\nexport const isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\n\nexport const TemplateResultType = {\n  HTML: 1,\n  SVG: 2,\n} as const;\n\nexport type TemplateResultType =\n  typeof TemplateResultType[keyof typeof TemplateResultType];\n\n/**\n * Tests if a value is a TemplateResult.\n */\nexport const isTemplateResult = (\n  value: unknown,\n  type?: TemplateResultType\n): value is TemplateResult =>\n  type === undefined\n    ? // This property needs to remain unminified.\n      (value as TemplateResult)?.['_$litType$'] !== undefined\n    : (value as TemplateResult)?.['_$litType$'] === type;\n\n/**\n * Tests if a value is a DirectiveResult.\n */\nexport const isDirectiveResult = (value: unknown): value is DirectiveResult =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'] !== undefined;\n\n/**\n * Retrieves the Directive class for a DirectiveResult\n */\nexport const getDirectiveClass = (value: unknown): DirectiveClass | undefined =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'];\n\n/**\n * Tests whether a part has only a single-expression with no strings to\n * interpolate between.\n *\n * Only AttributePart and PropertyPart can have multiple expressions.\n * Multi-expression parts have a `strings` property and single-expression\n * parts do not.\n */\nexport const isSingleExpression = (part: PartInfo) =>\n  (part as AttributePartInfo).strings === undefined;\n\nconst createMarker = () => document.createComment('');\n\n/**\n * Inserts a ChildPart into the given container ChildPart's DOM, either at the\n * end of the container ChildPart, or before the optional `refPart`.\n *\n * This does not add the part to the containerPart's committed value. That must\n * be done by callers.\n *\n * @param containerPart Part within which to add the new ChildPart\n * @param refPart Part before which to add the new ChildPart; when omitted the\n *     part added to the end of the `containerPart`\n * @param part Part to insert, or undefined to create a new part\n */\nexport const insertPart = (\n  containerPart: ChildPart,\n  refPart?: ChildPart,\n  part?: ChildPart\n): ChildPart => {\n  const container = wrap(containerPart._$startNode).parentNode!;\n\n  const refNode =\n    refPart === undefined ? containerPart._$endNode : refPart._$startNode;\n\n  if (part === undefined) {\n    const startNode = wrap(container).insertBefore(createMarker(), refNode);\n    const endNode = wrap(container).insertBefore(createMarker(), refNode);\n    part = new ChildPart(\n      startNode,\n      endNode,\n      containerPart,\n      containerPart.options\n    );\n  } else {\n    const endNode = wrap(part._$endNode!).nextSibling;\n    const oldParent = part._$parent;\n    const parentChanged = oldParent !== containerPart;\n    if (parentChanged) {\n      part._$reparentDisconnectables?.(containerPart);\n      // Note that although `_$reparentDisconnectables` updates the part's\n      // `_$parent` reference after unlinking from its current parent, that\n      // method only exists if Disconnectables are present, so we need to\n      // unconditionally set it here\n      part._$parent = containerPart;\n      // Since the _$isConnected getter is somewhat costly, only\n      // read it once we know the subtree has directives that need\n      // to be notified\n      let newConnectionState;\n      if (\n        part._$notifyConnectionChanged !== undefined &&\n        (newConnectionState = containerPart._$isConnected) !==\n          oldParent!._$isConnected\n      ) {\n        part._$notifyConnectionChanged(newConnectionState);\n      }\n    }\n    if (endNode !== refNode || parentChanged) {\n      let start: Node | null = part._$startNode;\n      while (start !== endNode) {\n        const n: Node | null = wrap(start!).nextSibling;\n        wrap(container).insertBefore(start!, refNode);\n        start = n;\n      }\n    }\n  }\n\n  return part;\n};\n\n/**\n * Sets the value of a Part.\n *\n * Note that this should only be used to set/update the value of user-created\n * parts (i.e. those created using `insertPart`); it should not be used\n * by directives to set the value of the directive's container part. Directives\n * should return a value from `update`/`render` to update their part state.\n *\n * For directives that require setting their part value asynchronously, they\n * should extend `AsyncDirective` and call `this.setValue()`.\n *\n * @param part Part to set\n * @param value Value to set\n * @param index For `AttributePart`s, the index to set\n * @param directiveParent Used internally; should not be set by user\n */\nexport const setChildPartValue = <T extends ChildPart>(\n  part: T,\n  value: unknown,\n  directiveParent: DirectiveParent = part\n): T => {\n  part._$setValue(value, directiveParent);\n  return part;\n};\n\n// A sentinal value that can never appear as a part value except when set by\n// live(). Used to force a dirty-check to fail and cause a re-render.\nconst RESET_VALUE = {};\n\n/**\n * Sets the committed value of a ChildPart directly without triggering the\n * commit stage of the part.\n *\n * This is useful in cases where a directive needs to update the part such\n * that the next update detects a value change or not. When value is omitted,\n * the next update will be guaranteed to be detected as a change.\n *\n * @param part\n * @param value\n */\nexport const setCommittedValue = (part: Part, value: unknown = RESET_VALUE) =>\n  (part._$committedValue = value);\n\n/**\n * Returns the committed value of a ChildPart.\n *\n * The committed value is used for change detection and efficient updates of\n * the part. It can differ from the value set by the template or directive in\n * cases where the template value is transformed before being commited.\n *\n * - `TemplateResult`s are committed as a `TemplateInstance`\n * - Iterables are committed as `Array<ChildPart>`\n * - All other types are committed as the template value or value returned or\n *   set by a directive.\n *\n * @param part\n */\nexport const getCommittedValue = (part: ChildPart) => part._$committedValue;\n\n/**\n * Removes a ChildPart from the DOM, including any of its content.\n *\n * @param part The Part to remove\n */\nexport const removePart = (part: ChildPart) => {\n  part._$notifyConnectionChanged?.(false, true);\n  let start: ChildNode | null = part._$startNode;\n  const end: ChildNode | null = wrap(part._$endNode!).nextSibling;\n  while (start !== end) {\n    const n: ChildNode | null = wrap(start!).nextSibling;\n    (wrap(start!) as ChildNode).remove();\n    start = n;\n  }\n};\n\nexport const clearPart = (part: ChildPart) => {\n  part._$clear();\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Overview:\n *\n * This module is designed to add support for an async `setValue` API and\n * `disconnected` callback to directives with the least impact on the core\n * runtime or payload when that feature is not used.\n *\n * The strategy is to introduce a `AsyncDirective` subclass of\n * `Directive` that climbs the \"parent\" tree in its constructor to note which\n * branches of lit-html's \"logical tree\" of data structures contain such\n * directives and thus need to be crawled when a subtree is being cleared (or\n * manually disconnected) in order to run the `disconnected` callback.\n *\n * The \"nodes\" of the logical tree include Parts, TemplateInstances (for when a\n * TemplateResult is committed to a value of a ChildPart), and Directives; these\n * all implement a common interface called `DisconnectableChild`. Each has a\n * `_$parent` reference which is set during construction in the core code, and a\n * `_$disconnectableChildren` field which is initially undefined.\n *\n * The sparse tree created by means of the `AsyncDirective` constructor\n * crawling up the `_$parent` tree and placing a `_$disconnectableChildren` Set\n * on each parent that includes each child that contains a\n * `AsyncDirective` directly or transitively via its children. In order to\n * notify connection state changes and disconnect (or reconnect) a tree, the\n * `_$notifyConnectionChanged` API is patched onto ChildParts as a directive\n * climbs the parent tree, which is called by the core when clearing a part if\n * it exists. When called, that method iterates over the sparse tree of\n * Set<DisconnectableChildren> built up by AsyncDirectives, and calls\n * `_$notifyDirectiveConnectionChanged` on any directives that are encountered\n * in that tree, running the required callbacks.\n *\n * A given \"logical tree\" of lit-html data-structures might look like this:\n *\n *  ChildPart(N1) _$dC=[D2,T3]\n *   ._directive\n *     AsyncDirective(D2)\n *   ._value // user value was TemplateResult\n *     TemplateInstance(T3) _$dC=[A4,A6,N10,N12]\n *      ._parts[]\n *        AttributePart(A4) _$dC=[D5]\n *         ._directives[]\n *           AsyncDirective(D5)\n *        AttributePart(A6) _$dC=[D7,D8]\n *         ._directives[]\n *           AsyncDirective(D7)\n *           Directive(D8) _$dC=[D9]\n *            ._directive\n *              AsyncDirective(D9)\n *        ChildPart(N10) _$dC=[D11]\n *         ._directive\n *           AsyncDirective(D11)\n *         ._value\n *           string\n *        ChildPart(N12) _$dC=[D13,N14,N16]\n *         ._directive\n *           AsyncDirective(D13)\n *         ._value // user value was iterable\n *           Array<ChildPart>\n *             ChildPart(N14) _$dC=[D15]\n *              ._value\n *                string\n *             ChildPart(N16) _$dC=[D17,T18]\n *              ._directive\n *                AsyncDirective(D17)\n *              ._value // user value was TemplateResult\n *                TemplateInstance(T18) _$dC=[A19,A21,N25]\n *                 ._parts[]\n *                   AttributePart(A19) _$dC=[D20]\n *                    ._directives[]\n *                      AsyncDirective(D20)\n *                   AttributePart(A21) _$dC=[22,23]\n *                    ._directives[]\n *                      AsyncDirective(D22)\n *                      Directive(D23) _$dC=[D24]\n *                       ._directive\n *                         AsyncDirective(D24)\n *                   ChildPart(N25) _$dC=[D26]\n *                    ._directive\n *                      AsyncDirective(D26)\n *                    ._value\n *                      string\n *\n * Example 1: The directive in ChildPart(N12) updates and returns `nothing`. The\n * ChildPart will _clear() itself, and so we need to disconnect the \"value\" of\n * the ChildPart (but not its directive). In this case, when `_clear()` calls\n * `_$notifyConnectionChanged()`, we don't iterate all of the\n * _$disconnectableChildren, rather we do a value-specific disconnection: i.e.\n * since the _value was an Array<ChildPart> (because an iterable had been\n * committed), we iterate the array of ChildParts (N14, N16) and run\n * `setConnected` on them (which does recurse down the full tree of\n * `_$disconnectableChildren` below it, and also removes N14 and N16 from N12's\n * `_$disconnectableChildren`). Once the values have been disconnected, we then\n * check whether the ChildPart(N12)'s list of `_$disconnectableChildren` is empty\n * (and would remove it from its parent TemplateInstance(T3) if so), but since\n * it would still contain its directive D13, it stays in the disconnectable\n * tree.\n *\n * Example 2: In the course of Example 1, `setConnected` will reach\n * ChildPart(N16); in this case the entire part is being disconnected, so we\n * simply iterate all of N16's `_$disconnectableChildren` (D17,T18) and\n * recursively run `setConnected` on them. Note that we only remove children\n * from `_$disconnectableChildren` for the top-level values being disconnected\n * on a clear; doing this bookkeeping lower in the tree is wasteful since it's\n * all being thrown away.\n *\n * Example 3: If the LitElement containing the entire tree above becomes\n * disconnected, it will run `childPart.setConnected()` (which calls\n * `childPart._$notifyConnectionChanged()` if it exists); in this case, we\n * recursively run `setConnected()` over the entire tree, without removing any\n * children from `_$disconnectableChildren`, since this tree is required to\n * re-connect the tree, which does the same operation, simply passing\n * `isConnected: true` down the tree, signaling which callback to run.\n */\n\nimport {AttributePart, ChildPart, Disconnectable, Part} from './lit-html.js';\nimport {isSingleExpression} from './directive-helpers.js';\nimport {Directive, PartInfo, PartType} from './directive.js';\nexport * from './directive.js';\n\nconst DEV_MODE = true;\n\n/**\n * Recursively walks down the tree of Parts/TemplateInstances/Directives to set\n * the connected state of directives and run `disconnected`/ `reconnected`\n * callbacks.\n *\n * @return True if there were children to disconnect; false otherwise\n */\nconst notifyChildrenConnectedChanged = (\n  parent: Disconnectable,\n  isConnected: boolean\n): boolean => {\n  const children = parent._$disconnectableChildren;\n  if (children === undefined) {\n    return false;\n  }\n  for (const obj of children) {\n    // The existence of `_$notifyDirectiveConnectionChanged` is used as a \"brand\" to\n    // disambiguate AsyncDirectives from other DisconnectableChildren\n    // (as opposed to using an instanceof check to know when to call it); the\n    // redundancy of \"Directive\" in the API name is to avoid conflicting with\n    // `_$notifyConnectionChanged`, which exists `ChildParts` which are also in\n    // this list\n    // Disconnect Directive (and any nested directives contained within)\n    // This property needs to remain unminified.\n    (obj as AsyncDirective)['_$notifyDirectiveConnectionChanged']?.(\n      isConnected,\n      false\n    );\n    // Disconnect Part/TemplateInstance\n    notifyChildrenConnectedChanged(obj, isConnected);\n  }\n  return true;\n};\n\n/**\n * Removes the given child from its parent list of disconnectable children, and\n * if the parent list becomes empty as a result, removes the parent from its\n * parent, and so forth up the tree when that causes subsequent parent lists to\n * become empty.\n */\nconst removeDisconnectableFromParent = (obj: Disconnectable) => {\n  let parent, children;\n  do {\n    if ((parent = obj._$parent) === undefined) {\n      break;\n    }\n    children = parent._$disconnectableChildren!;\n    children.delete(obj);\n    obj = parent;\n  } while (children?.size === 0);\n};\n\nconst addDisconnectableToParent = (obj: Disconnectable) => {\n  // Climb the parent tree, creating a sparse tree of children needing\n  // disconnection\n  for (let parent; (parent = obj._$parent); obj = parent) {\n    let children = parent._$disconnectableChildren;\n    if (children === undefined) {\n      parent._$disconnectableChildren = children = new Set();\n    } else if (children.has(obj)) {\n      // Once we've reached a parent that already contains this child, we\n      // can short-circuit\n      break;\n    }\n    children.add(obj);\n    installDisconnectAPI(parent);\n  }\n};\n\n/**\n * Changes the parent reference of the ChildPart, and updates the sparse tree of\n * Disconnectable children accordingly.\n *\n * Note, this method will be patched onto ChildPart instances and called from\n * the core code when parts are moved between different parents.\n */\nfunction reparentDisconnectables(this: ChildPart, newParent: Disconnectable) {\n  if (this._$disconnectableChildren !== undefined) {\n    removeDisconnectableFromParent(this);\n    this._$parent = newParent;\n    addDisconnectableToParent(this);\n  } else {\n    this._$parent = newParent;\n  }\n}\n\n/**\n * Sets the connected state on any directives contained within the committed\n * value of this part (i.e. within a TemplateInstance or iterable of\n * ChildParts) and runs their `disconnected`/`reconnected`s, as well as within\n * any directives stored on the ChildPart (when `valueOnly` is false).\n *\n * `isClearingValue` should be passed as `true` on a top-level part that is\n * clearing itself, and not as a result of recursively disconnecting directives\n * as part of a `clear` operation higher up the tree. This both ensures that any\n * directive on this ChildPart that produced a value that caused the clear\n * operation is not disconnected, and also serves as a performance optimization\n * to avoid needless bookkeeping when a subtree is going away; when clearing a\n * subtree, only the top-most part need to remove itself from the parent.\n *\n * `fromPartIndex` is passed only in the case of a partial `_clear` running as a\n * result of truncating an iterable.\n *\n * Note, this method will be patched onto ChildPart instances and called from the\n * core code when parts are cleared or the connection state is changed by the\n * user.\n */\nfunction notifyChildPartConnectedChanged(\n  this: ChildPart,\n  isConnected: boolean,\n  isClearingValue = false,\n  fromPartIndex = 0\n) {\n  const value = this._$committedValue;\n  const children = this._$disconnectableChildren;\n  if (children === undefined || children.size === 0) {\n    return;\n  }\n  if (isClearingValue) {\n    if (Array.isArray(value)) {\n      // Iterable case: Any ChildParts created by the iterable should be\n      // disconnected and removed from this ChildPart's disconnectable\n      // children (starting at `fromPartIndex` in the case of truncation)\n      for (let i = fromPartIndex; i < value.length; i++) {\n        notifyChildrenConnectedChanged(value[i], false);\n        removeDisconnectableFromParent(value[i]);\n      }\n    } else if (value != null) {\n      // TemplateInstance case: If the value has disconnectable children (will\n      // only be in the case that it is a TemplateInstance), we disconnect it\n      // and remove it from this ChildPart's disconnectable children\n      notifyChildrenConnectedChanged(value as Disconnectable, false);\n      removeDisconnectableFromParent(value as Disconnectable);\n    }\n  } else {\n    notifyChildrenConnectedChanged(this, isConnected);\n  }\n}\n\n/**\n * Patches disconnection API onto ChildParts.\n */\nconst installDisconnectAPI = (obj: Disconnectable) => {\n  if ((obj as ChildPart).type == PartType.CHILD) {\n    (obj as ChildPart)._$notifyConnectionChanged ??=\n      notifyChildPartConnectedChanged;\n    (obj as ChildPart)._$reparentDisconnectables ??= reparentDisconnectables;\n  }\n};\n\n/**\n * An abstract `Directive` base class whose `disconnected` method will be\n * called when the part containing the directive is cleared as a result of\n * re-rendering, or when the user calls `part.setConnected(false)` on\n * a part that was previously rendered containing the directive (as happens\n * when e.g. a LitElement disconnects from the DOM).\n *\n * If `part.setConnected(true)` is subsequently called on a\n * containing part, the directive's `reconnected` method will be called prior\n * to its next `update`/`render` callbacks. When implementing `disconnected`,\n * `reconnected` should also be implemented to be compatible with reconnection.\n *\n * Note that updates may occur while the directive is disconnected. As such,\n * directives should generally check the `this.isConnected` flag during\n * render/update to determine whether it is safe to subscribe to resources\n * that may prevent garbage collection.\n */\nexport abstract class AsyncDirective extends Directive {\n  // As opposed to other Disconnectables, AsyncDirectives always get notified\n  // when the RootPart connection changes, so the public `isConnected`\n  // is a locally stored variable initialized via its part's getter and synced\n  // via `_$notifyDirectiveConnectionChanged`. This is cheaper than using\n  // the _$isConnected getter, which has to look back up the tree each time.\n  /**\n   * The connection state for this Directive.\n   */\n  isConnected!: boolean;\n\n  // @internal\n  override _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /**\n   * Initialize the part with internal fields\n   * @param part\n   * @param parent\n   * @param attributeIndex\n   */\n  override _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    super._$initialize(part, parent, attributeIndex);\n    addDisconnectableToParent(this);\n    this.isConnected = part._$isConnected;\n  }\n  // This property needs to remain unminified.\n  /**\n   * Called from the core code when a directive is going away from a part (in\n   * which case `shouldRemoveFromParent` should be true), and from the\n   * `setChildrenConnected` helper function when recursively changing the\n   * connection state of a tree (in which case `shouldRemoveFromParent` should\n   * be false).\n   *\n   * @param isConnected\n   * @param isClearingDirective - True when the directive itself is being\n   *     removed; false when the tree is being disconnected\n   * @internal\n   */\n  override ['_$notifyDirectiveConnectionChanged'](\n    isConnected: boolean,\n    isClearingDirective = true\n  ) {\n    if (isConnected !== this.isConnected) {\n      this.isConnected = isConnected;\n      if (isConnected) {\n        this.reconnected?.();\n      } else {\n        this.disconnected?.();\n      }\n    }\n    if (isClearingDirective) {\n      notifyChildrenConnectedChanged(this, isConnected);\n      removeDisconnectableFromParent(this);\n    }\n  }\n\n  /**\n   * Sets the value of the directive's Part outside the normal `update`/`render`\n   * lifecycle of a directive.\n   *\n   * This method should not be called synchronously from a directive's `update`\n   * or `render`.\n   *\n   * @param directive The directive to update\n   * @param value The value to set\n   */\n  setValue(value: unknown) {\n    if (isSingleExpression(this.__part as unknown as PartInfo)) {\n      this.__part._$setValue(value, this);\n    } else {\n      // this.__attributeIndex will be defined in this case, but\n      // assert it in dev mode\n      if (DEV_MODE && this.__attributeIndex === undefined) {\n        throw new Error(`Expected this.__attributeIndex to be a number`);\n      }\n      const newValues = [...(this.__part._$committedValue as Array<unknown>)];\n      newValues[this.__attributeIndex!] = value;\n      (this.__part as AttributePart)._$setValue(newValues, this, 0);\n    }\n  }\n\n  /**\n   * User callbacks for implementing logic to release any resources/subscriptions\n   * that may have been retained by this directive. Since directives may also be\n   * re-connected, `reconnected` should also be implemented to restore the\n   * working state of the directive prior to the next render.\n   */\n  protected disconnected() {}\n  protected reconnected() {}\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.async = void 0;\nconst lit_1 = require(\"lit\");\nconst directive_1 = require(\"lit/directive\");\nconst async_directive_1 = require(\"lit/async-directive\");\nclass ObserveDirective extends async_directive_1.AsyncDirective {\n    // When the observable changes, unsubscribe to the old one and\n    // subscribe to the new one\n    render(asyncResult) {\n        if ('then' in asyncResult) {\n            Promise.resolve(asyncResult).then((v) => this.setValue(v));\n            return '';\n        }\n        if (this.observable !== asyncResult) {\n            this.unsubscribe();\n            this.observable = asyncResult;\n            if (this.isConnected) {\n                this.subscribe(asyncResult);\n            }\n        }\n        return lit_1.noChange;\n    }\n    // Subscribes to the observable, calling the directive's asynchronous\n    // setValue API each time the value changes\n    subscribe(observable) {\n        this.subscription = observable.subscribe((v) => {\n            this.setValue(v);\n        });\n    }\n    // When the directive is disconnected from the DOM, unsubscribe to ensure\n    // the directive instance can be garbage collected\n    disconnected() {\n        this.unsubscribe();\n    }\n    unsubscribe() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    // If the subtree the directive is in was disconneted and subsequently\n    // re-connected, re-subscribe to make the directive operable again\n    reconnected() {\n        this.subscribe(this.observable);\n    }\n}\nexports.async = (0, directive_1.directive)(ObserveDirective);\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport type {TemplateResult} from './lit-html.js';\n\nimport {noChange, RenderOptions, _$LH} from './lit-html.js';\nimport {AttributePartInfo, PartType} from './directive.js';\nimport {\n  isPrimitive,\n  isSingleExpression,\n  isTemplateResult,\n} from './directive-helpers.js';\n\n// In the Node build, this import will be injected by Rollup:\n// import {Buffer} from 'buffer';\n\nconst NODE_MODE = false;\n\nconst {\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  _ChildPart: ChildPart,\n  _ElementPart: ElementPart,\n} = _$LH;\n\ntype ChildPart = InstanceType<typeof ChildPart>;\ntype TemplateInstance = InstanceType<typeof TemplateInstance>;\n\n/**\n * Information needed to rehydrate a single TemplateResult.\n */\ntype ChildPartState =\n  | {\n      type: 'leaf';\n      /** The ChildPart that the result is rendered to */\n      part: ChildPart;\n    }\n  | {\n      type: 'iterable';\n      /** The ChildPart that the result is rendered to */\n      part: ChildPart;\n      value: Iterable<unknown>;\n      iterator: Iterator<unknown>;\n      done: boolean;\n    }\n  | {\n      type: 'template-instance';\n      /** The ChildPart that the result is rendered to */\n      part: ChildPart;\n\n      result: TemplateResult;\n\n      /** The TemplateInstance created from the TemplateResult */\n      instance: TemplateInstance;\n\n      /**\n       * The index of the next Template part to be hydrated. This is mutable and\n       * updated as the tree walk discovers new part markers at the right level in\n       * the template instance tree.  Note there is only one Template part per\n       * attribute with (one or more) bindings.\n       */\n      templatePartIndex: number;\n\n      /**\n       * The index of the next TemplateInstance part to be hydrated. This is used\n       * to retrieve the value from the TemplateResult and initialize the\n       * TemplateInstance parts' values for dirty-checking on first render.\n       */\n      instancePartIndex: number;\n    };\n\n/**\n * hydrate() operates on a container with server-side rendered content and\n * restores the client side data structures needed for lit-html updates such as\n * TemplateInstances and Parts. After calling `hydrate`, lit-html will behave as\n * if it initially rendered the DOM, and any subsequent updates will update\n * efficiently, the same as if lit-html had rendered the DOM on the client.\n *\n * hydrate() must be called on DOM that adheres the to lit-ssr structure for\n * parts. ChildParts must be represented with both a start and end comment\n * marker, and ChildParts that contain a TemplateInstance must have the template\n * digest written into the comment data.\n *\n * Since render() encloses its output in a ChildPart, there must always be a root\n * ChildPart.\n *\n * Example (using for # ... for annotations in HTML)\n *\n * Given this input:\n *\n *   html`<div class=${x}>${y}</div>`\n *\n * The SSR DOM is:\n *\n *   <!--lit-part AEmR7W+R0Ak=-->  # Start marker for the root ChildPart created\n *                                 # by render(). Includes the digest of the\n *                                 # template\n *   <div class=\"TEST_X\">\n *     <!--lit-node 0--> # Indicates there are attribute bindings here\n *                           # The number is the depth-first index of the parent\n *                           # node in the template.\n *     <!--lit-part-->  # Start marker for the ${x} expression\n *     TEST_Y\n *     <!--/lit-part-->  # End marker for the ${x} expression\n *   </div>\n *\n *   <!--/lit-part-->  # End marker for the root ChildPart\n *\n * @param rootValue\n * @param container\n * @param userOptions\n */\nexport const hydrate = (\n  rootValue: unknown,\n  container: Element | DocumentFragment,\n  options: Partial<RenderOptions> = {}\n) => {\n  // TODO(kschaaf): Do we need a helper for _$litPart$ (\"part for node\")?\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if ((container as any)['_$litPart$'] !== undefined) {\n    throw new Error('container already contains a live render');\n  }\n\n  // Since render() creates a ChildPart to render into, we'll always have\n  // exactly one root part. We need to hold a reference to it so we can set\n  // it in the parts cache.\n  let rootPart: ChildPart | undefined = undefined;\n\n  // When we are in-between ChildPart markers, this is the current ChildPart.\n  // It's needed to be able to set the ChildPart's endNode when we see a\n  // close marker\n  let currentChildPart: ChildPart | undefined = undefined;\n\n  // Used to remember parent template state as we recurse into nested\n  // templates\n  const stack: Array<ChildPartState> = [];\n\n  const walker = document.createTreeWalker(\n    container,\n    NodeFilter.SHOW_COMMENT,\n    null,\n    false\n  );\n  let marker: Comment | null;\n\n  // Walk the DOM looking for part marker comments\n  while ((marker = walker.nextNode() as Comment | null) !== null) {\n    const markerText = marker.data;\n    if (markerText.startsWith('lit-part')) {\n      if (stack.length === 0 && rootPart !== undefined) {\n        throw new Error('there must be only one root part per container');\n      }\n      // Create a new ChildPart and push it onto the stack\n      currentChildPart = openChildPart(rootValue, marker, stack, options);\n      rootPart ??= currentChildPart;\n    } else if (markerText.startsWith('lit-node')) {\n      // Create and hydrate attribute parts into the current ChildPart on the\n      // stack\n      createAttributeParts(marker, stack, options);\n    } else if (markerText.startsWith('/lit-part')) {\n      // Close the current ChildPart, and pop the previous one off the stack\n      if (stack.length === 1 && currentChildPart !== rootPart) {\n        throw new Error('internal error');\n      }\n      currentChildPart = closeChildPart(marker, currentChildPart, stack);\n    }\n  }\n  console.assert(\n    rootPart !== undefined,\n    'there should be exactly one root part in a render container'\n  );\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (container as any)['_$litPart$'] = rootPart;\n};\n\nconst openChildPart = (\n  rootValue: unknown,\n  marker: Comment,\n  stack: Array<ChildPartState>,\n  options: RenderOptions\n) => {\n  let value: unknown;\n  // We know the startNode now. We'll know the endNode when we get to\n  // the matching marker and set it in closeChildPart()\n  // TODO(kschaaf): Current constructor takes both nodes\n  let part;\n  if (stack.length === 0) {\n    part = new ChildPart(marker, null, undefined, options);\n    value = rootValue;\n  } else {\n    const state = stack[stack.length - 1];\n    if (state.type === 'template-instance') {\n      part = new ChildPart(marker, null, state.instance, options);\n      state.instance._parts.push(part);\n      value = state.result.values[state.instancePartIndex++];\n      state.templatePartIndex++;\n    } else if (state.type === 'iterable') {\n      part = new ChildPart(marker, null, state.part, options);\n      const result = state.iterator.next();\n      if (result.done) {\n        value = undefined;\n        state.done = true;\n        throw new Error('Unhandled shorter than expected iterable');\n      } else {\n        value = result.value;\n      }\n      (state.part._$committedValue as Array<ChildPart>).push(part);\n    } else {\n      // state.type === 'leaf'\n      // TODO(kschaaf): This is unexpected, and likely a result of a primitive\n      // been rendered on the client when a TemplateResult was rendered on the\n      // server; this part will be hydrated but not used. We can detect it, but\n      // we need to decide what to do in this case. Note that this part won't be\n      // retained by any parent TemplateInstance, since a primitive had been\n      // rendered in its place.\n      // https://github.com/lit/lit/issues/1434\n      // throw new Error('Hydration value mismatch: Found a TemplateInstance' +\n      //  'where a leaf value was expected');\n      part = new ChildPart(marker, null, state.part, options);\n    }\n  }\n\n  // Initialize the ChildPart state depending on the type of value and push\n  // it onto the stack. This logic closely follows the ChildPart commit()\n  // cascade order:\n  // 1. directive\n  // 2. noChange\n  // 3. primitive (note strings must be handled before iterables, since they\n  //    are iterable)\n  // 4. TemplateResult\n  // 5. Node (not yet implemented, but fallback handling is fine)\n  // 6. Iterable\n  // 7. nothing (handled in fallback)\n  // 8. Fallback for everything else\n  value = resolveDirective(part, value);\n  if (value === noChange) {\n    stack.push({part, type: 'leaf'});\n  } else if (isPrimitive(value)) {\n    stack.push({part, type: 'leaf'});\n    part._$committedValue = value;\n    // TODO(kschaaf): We can detect when a primitive is being hydrated on the\n    // client where a TemplateResult was rendered on the server, but we need to\n    // decide on a strategy for what to do next.\n    // https://github.com/lit/lit/issues/1434\n    // if (marker.data !== 'lit-part') {\n    //   throw new Error('Hydration value mismatch: Primitive found where TemplateResult expected');\n    // }\n  } else if (isTemplateResult(value)) {\n    // Check for a template result digest\n    const markerWithDigest = `lit-part ${digestForTemplateResult(value)}`;\n    if (marker.data === markerWithDigest) {\n      const template = ChildPart.prototype._$getTemplate(value);\n      const instance = new TemplateInstance(template, part);\n      stack.push({\n        type: 'template-instance',\n        instance,\n        part,\n        templatePartIndex: 0,\n        instancePartIndex: 0,\n        result: value,\n      });\n      // For TemplateResult values, we set the part value to the\n      // generated TemplateInstance\n      part._$committedValue = instance;\n    } else {\n      // TODO: if this isn't the server-rendered template, do we\n      // need to stop hydrating this subtree? Clear it? Add tests.\n      throw new Error(\n        'Hydration value mismatch: Unexpected TemplateResult rendered to part'\n      );\n    }\n  } else if (isIterable(value)) {\n    // currentChildPart.value will contain an array of ChildParts\n    stack.push({\n      part: part,\n      type: 'iterable',\n      value,\n      iterator: value[Symbol.iterator](),\n      done: false,\n    });\n    part._$committedValue = [];\n  } else {\n    // Fallback for everything else (nothing, Objects, Functions,\n    // etc.): we just initialize the part's value\n    // Note that `Node` value types are not currently supported during\n    // SSR, so that part of the cascade is missing.\n    stack.push({part: part, type: 'leaf'});\n    part._$committedValue = value == null ? '' : value;\n  }\n  return part;\n};\n\nconst closeChildPart = (\n  marker: Comment,\n  part: ChildPart | undefined,\n  stack: Array<ChildPartState>\n): ChildPart | undefined => {\n  if (part === undefined) {\n    throw new Error('unbalanced part marker');\n  }\n\n  part._$endNode = marker;\n\n  const currentState = stack.pop()!;\n\n  if (currentState.type === 'iterable') {\n    if (!currentState.iterator.next().done) {\n      throw new Error('unexpected longer than expected iterable');\n    }\n  }\n\n  if (stack.length > 0) {\n    const state = stack[stack.length - 1];\n    return state.part;\n  } else {\n    return undefined;\n  }\n};\n\nconst createAttributeParts = (\n  comment: Comment,\n  stack: Array<ChildPartState>,\n  options: RenderOptions\n) => {\n  // Get the nodeIndex from DOM. We're only using this for an integrity\n  // check right now, we might not need it.\n  const match = /lit-node (\\d+)/.exec(comment.data)!;\n  const nodeIndex = parseInt(match[1]);\n\n  // For void elements, the node the comment was referring to will be\n  // the previousSibling; for non-void elements, the comment is guaranteed\n  // to be the first child of the element (i.e. it won't have a previousSibling\n  // meaning it should use the parentElement)\n  const node = comment.previousElementSibling ?? comment.parentElement;\n  if (node === null) {\n    throw new Error('could not find node for attribute parts');\n  }\n  // Remove `defer-hydration` attribute, if any\n  node.removeAttribute('defer-hydration');\n\n  const state = stack[stack.length - 1];\n  if (state.type === 'template-instance') {\n    const instance = state.instance;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      // If the next template part is in attribute-position on the current node,\n      // create the instance part for it and prime its state\n      const templatePart = instance._$template.parts[state.templatePartIndex];\n      if (\n        templatePart === undefined ||\n        (templatePart.type !== PartType.ATTRIBUTE &&\n          templatePart.type !== PartType.ELEMENT) ||\n        templatePart.index !== nodeIndex\n      ) {\n        break;\n      }\n\n      if (templatePart.type === PartType.ATTRIBUTE) {\n        // The instance part is created based on the constructor saved in the\n        // template part\n        const instancePart = new templatePart.ctor(\n          node as HTMLElement,\n          templatePart.name,\n          templatePart.strings,\n          state.instance,\n          options\n        );\n\n        const value = isSingleExpression(\n          instancePart as unknown as AttributePartInfo\n        )\n          ? state.result.values[state.instancePartIndex]\n          : state.result.values;\n\n        // Setting the attribute value primes committed value with the resolved\n        // directive value; we only then commit that value for event/property\n        // parts since those were not serialized, and pass `noCommit` for the\n        // others to avoid perf impact of touching the DOM unnecessarily\n        const noCommit = !(\n          instancePart.type === PartType.EVENT ||\n          instancePart.type === PartType.PROPERTY\n        );\n        instancePart._$setValue(\n          value,\n          instancePart,\n          state.instancePartIndex,\n          noCommit\n        );\n        state.instancePartIndex += templatePart.strings.length - 1;\n        instance._parts.push(instancePart);\n      } else {\n        // templatePart.type === PartType.ELEMENT\n        const instancePart = new ElementPart(node, state.instance, options);\n        resolveDirective(\n          instancePart,\n          state.result.values[state.instancePartIndex++]\n        );\n        instance._parts.push(instancePart);\n      }\n      state.templatePartIndex++;\n    }\n  } else {\n    throw new Error('internal error');\n  }\n};\n\n// Number of 32 bit elements to use to create template digests\nconst digestSize = 2;\n// We need to specify a digest to use across rendering environments. This is a\n// simple digest build from a DJB2-ish hash modified from:\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\n// It has been changed to an array of hashes to add additional bits.\n// Goals:\n//  - Extremely low collision rate. We may not be able to detect collisions.\n//  - Extremely fast.\n//  - Extremely small code size.\n//  - Safe to include in HTML comment text or attribute value.\n//  - Easily specifiable and implementable in multiple languages.\n// We don't care about cryptographic suitability.\nexport const digestForTemplateResult = (templateResult: TemplateResult) => {\n  const hashes = new Uint32Array(digestSize).fill(5381);\n\n  for (const s of templateResult.strings) {\n    for (let i = 0; i < s.length; i++) {\n      hashes[i % digestSize] = (hashes[i % digestSize] * 33) ^ s.charCodeAt(i);\n    }\n  }\n  const str = String.fromCharCode(...new Uint8Array(hashes.buffer));\n  // Use `btoa` in browsers because it is supported universally.\n  //\n  // In Node, we are sometimes executing in an isolated VM context, which means\n  // neither `btoa` nor `Buffer` will be globally available by default (also\n  // note that `btoa` is only supported in Node 16+ anyway, and we still support\n  // Node 14). Instead of requiring users to always provide an implementation\n  // for `btoa` when they set up their VM context, we instead inject an import\n  // for `Buffer` from Node's built-in `buffer` module in our Rollup config (see\n  // note at the top of this file), and use that.\n  return NODE_MODE ? Buffer.from(str, 'binary').toString('base64') : btoa(str);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * LitElement support for hydration of content rendered using lit-ssr.\n *\n * @packageDocumentation\n */\n\nimport type {PropertyValues} from '@lit/reactive-element';\nimport {render, RenderOptions} from 'lit-html';\nimport {hydrate} from 'lit-html/experimental-hydrate.js';\n\ninterface PatchableLitElement extends HTMLElement {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-misused-new\n  new (...args: any[]): PatchableLitElement;\n  enableUpdating(requestedUpdate?: boolean): void;\n  createRenderRoot(): Element | ShadowRoot;\n  renderRoot: HTMLElement | DocumentFragment;\n  render(): unknown;\n  renderOptions: RenderOptions;\n  _$needsHydration: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nglobalThis.litElementHydrateSupport = ({\n  LitElement,\n}: {\n  LitElement: PatchableLitElement;\n}) => {\n  const observedAttributes = Object.getOwnPropertyDescriptor(\n    Object.getPrototypeOf(LitElement),\n    'observedAttributes'\n  )!.get!;\n\n  // Add `defer-hydration` to observedAttributes\n  Object.defineProperty(LitElement, 'observedAttributes', {\n    get() {\n      return [...observedAttributes.call(this), 'defer-hydration'];\n    },\n  });\n\n  // Enable element when 'defer-hydration' attribute is removed by calling the\n  // super.connectedCallback()\n  const attributeChangedCallback =\n    LitElement.prototype.attributeChangedCallback;\n  LitElement.prototype.attributeChangedCallback = function (\n    name: string,\n    old: string | null,\n    value: string | null\n  ) {\n    if (name === 'defer-hydration' && value === null) {\n      connectedCallback.call(this);\n    }\n    attributeChangedCallback.call(this, name, old, value);\n  };\n\n  // Override `connectedCallback` to capture whether we need hydration, and\n  // defer `super.connectedCallback()` if the 'defer-hydration' attribute is set\n  const connectedCallback = LitElement.prototype.connectedCallback;\n  LitElement.prototype.connectedCallback = function (\n    this: PatchableLitElement\n  ) {\n    // If the outer scope of this element has not yet been hydrated, wait until\n    // 'defer-hydration' attribute has been removed to enable\n    if (!this.hasAttribute('defer-hydration')) {\n      connectedCallback.call(this);\n    }\n  };\n\n  // If we've been server-side rendered, just return `this.shadowRoot`, don't\n  // call the base implementation, which would also adopt styles (for now)\n  const createRenderRoot = LitElement.prototype.createRenderRoot;\n  LitElement.prototype.createRenderRoot = function (this: PatchableLitElement) {\n    if (this.shadowRoot) {\n      this._$needsHydration = true;\n      return this.shadowRoot;\n    } else {\n      return createRenderRoot.call(this);\n    }\n  };\n\n  // Hydrate on first update when needed\n  const update = Object.getPrototypeOf(LitElement.prototype).update;\n  LitElement.prototype.update = function (\n    this: PatchableLitElement,\n    changedProperties: PropertyValues\n  ) {\n    const value = this.render();\n    // Since this is a patch, we can't call super.update(), so we capture\n    // it off the proto chain and call it instead\n    update.call(this, changedProperties);\n    if (this._$needsHydration) {\n      this._$needsHydration = false;\n      hydrate(value, this.renderRoot, this.renderOptions);\n    } else {\n      render(value, this.renderRoot, this.renderOptions);\n    }\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * LitElement patch to support browsers without native web components.\n *\n * This module should be used in addition to loading the web components\n * polyfills via @webcomponents/webcomponentjs. When using those polyfills\n * support for polyfilled Shadow DOM is automatic via the ShadyDOM polyfill, but\n * support for Shadow DOM like css scoping is opt-in. This module uses ShadyCSS\n * to scope styles defined via the `static styles` property and styles included\n * in the render method. There are some limitations to be aware of:\n * * only styles that are included in the first render of a component are scoped.\n * * In addition, support for the deprecated `@apply` feature of ShadyCSS is\n * only provided for styles included in the template and not styles provided\n * via the static styles property.\n * * Lit parts cannot be used in styles included in the template.\n *\n * @packageDocumentation\n */\n\nimport '@lit/reactive-element/polyfill-support.js';\nimport 'lit-html/polyfill-support.js';\n\ninterface RenderOptions {\n  readonly renderBefore?: ChildNode | null;\n  scope?: string;\n}\n\ninterface PatchableLitElementConstructor {\n  _$handlesPrepareStyles?: boolean;\n}\n\ninterface PatchableLitElement extends HTMLElement {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-misused-new\n  new (...args: any[]): PatchableLitElement;\n  constructor: PatchableLitElementConstructor;\n  createRenderRoot(): Element | ShadowRoot;\n  renderOptions: RenderOptions;\n}\n\n// Note, explicitly use `var` here so that this can be re-defined when\n// bundled.\n// eslint-disable-next-line no-var\nvar DEV_MODE = true;\n\nconst polyfillSupport = ({LitElement}: {LitElement: PatchableLitElement}) => {\n  // polyfill-support is only needed if ShadyCSS or the ApplyShim is in use\n  // We test at the point of patching, which makes it safe to load\n  // webcomponentsjs and polyfill-support in either order\n  if (\n    window.ShadyCSS === undefined ||\n    (window.ShadyCSS.nativeShadow && !window.ShadyCSS.ApplyShim)\n  ) {\n    return;\n  }\n\n  // console.log(\n  //   '%c Making LitElement compatible with ShadyDOM/CSS.',\n  //   'color: lightgreen; font-style: italic'\n  // );\n\n  (\n    LitElement as unknown as PatchableLitElementConstructor\n  )._$handlesPrepareStyles = true;\n\n  /**\n   * Patch to apply adoptedStyleSheets via ShadyCSS\n   */\n  const litElementProto = LitElement.prototype;\n  const createRenderRoot = litElementProto.createRenderRoot;\n  litElementProto.createRenderRoot = function (this: PatchableLitElement) {\n    // Pass the scope to render options so that it gets to lit-html for proper\n    // scoping via ShadyCSS. This is needed under Shady and also Shadow DOM,\n    // due to @apply.\n    this.renderOptions.scope = this.localName;\n    return createRenderRoot.call(this);\n  };\n};\n\nif (DEV_MODE) {\n  globalThis.litElementPolyfillSupportDevMode ??= polyfillSupport;\n} else {\n  globalThis.litElementPolyfillSupport ??= polyfillSupport;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * ReactiveElement patch to support browsers without native web components.\n *\n * This module should be used in addition to loading the web components\n * polyfills via @webcomponents/webcomponentjs. When using those polyfills\n * support for polyfilled Shadow DOM is automatic via the ShadyDOM polyfill, but\n * support for Shadow DOM like css scoping is opt-in. This module uses ShadyCSS\n * to scope styles defined via the `static styles` property.\n *\n * @packageDocumentation\n */\n\nexport {};\n\ninterface RenderOptions {\n  readonly renderBefore?: ChildNode | null;\n  scope?: string;\n}\n\nconst SCOPED = '__scoped';\n\ntype CSSResults = Array<{cssText: string} | CSSStyleSheet>;\n\ninterface PatchableReactiveElementConstructor {\n  [SCOPED]: boolean;\n  elementStyles: CSSResults;\n  shadowRootOptions: ShadowRootInit;\n  _$handlesPrepareStyles?: boolean;\n}\n\ninterface PatchableReactiveElement extends HTMLElement {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-misused-new\n  new (...args: any[]): PatchableReactiveElement;\n  constructor: PatchableReactiveElementConstructor;\n  connectedCallback(): void;\n  hasUpdated: boolean;\n  _$didUpdate(changedProperties: unknown): void;\n  createRenderRoot(): Element | ShadowRoot;\n  renderOptions: RenderOptions;\n}\n\n// Note, explicitly use `var` here so that this can be re-defined when\n// bundled.\n// eslint-disable-next-line no-var\nvar DEV_MODE = true;\n\nconst polyfillSupport = ({\n  ReactiveElement,\n}: {\n  ReactiveElement: PatchableReactiveElement;\n}) => {\n  // polyfill-support is only needed if ShadyCSS or the ApplyShim is in use\n  // We test at the point of patching, which makes it safe to load\n  // webcomponentsjs and polyfill-support in either order\n  if (\n    window.ShadyCSS === undefined ||\n    (window.ShadyCSS.nativeShadow && !window.ShadyCSS.ApplyShim)\n  ) {\n    return;\n  }\n\n  // console.log(\n  //   '%c Making ReactiveElement compatible with ShadyDOM/CSS.',\n  //   'color: lightgreen; font-style: italic'\n  // );\n\n  const elementProto = ReactiveElement.prototype;\n\n  // In noPatch mode, patch the ReactiveElement prototype so that no\n  // ReactiveElements must be wrapped.\n  if (\n    window.ShadyDOM &&\n    window.ShadyDOM.inUse &&\n    window.ShadyDOM.noPatch === true\n  ) {\n    window.ShadyDOM.patchElementProto(elementProto);\n  }\n\n  /**\n   * Patch to apply adoptedStyleSheets via ShadyCSS\n   */\n  const createRenderRoot = elementProto.createRenderRoot;\n  elementProto.createRenderRoot = function (this: PatchableReactiveElement) {\n    // Pass the scope to render options so that it gets to lit-html for proper\n    // scoping via ShadyCSS.\n    const name = this.localName;\n    // If using native Shadow DOM must adoptStyles normally,\n    // otherwise do nothing.\n    if (window.ShadyCSS!.nativeShadow) {\n      return createRenderRoot.call(this);\n    } else {\n      if (!this.constructor.hasOwnProperty(SCOPED)) {\n        (this.constructor as PatchableReactiveElementConstructor)[SCOPED] =\n          true;\n        // Use ShadyCSS's `prepareAdoptedCssText` to shim adoptedStyleSheets.\n        const css = (\n          this.constructor as PatchableReactiveElementConstructor\n        ).elementStyles.map((v) =>\n          v instanceof CSSStyleSheet\n            ? Array.from(v.cssRules).reduce(\n                (a: string, r: CSSRule) => (a += r.cssText),\n                ''\n              )\n            : v.cssText\n        );\n        window.ShadyCSS?.ScopingShim?.prepareAdoptedCssText(css, name);\n        if (this.constructor._$handlesPrepareStyles === undefined) {\n          window.ShadyCSS!.prepareTemplateStyles(\n            document.createElement('template'),\n            name\n          );\n        }\n      }\n      return (\n        this.shadowRoot ??\n        this.attachShadow(\n          (this.constructor as PatchableReactiveElementConstructor)\n            .shadowRootOptions\n        )\n      );\n    }\n  };\n\n  /**\n   * Patch connectedCallback to apply ShadyCSS custom properties shimming.\n   */\n  const connectedCallback = elementProto.connectedCallback;\n  elementProto.connectedCallback = function (this: PatchableReactiveElement) {\n    connectedCallback.call(this);\n    // Note, must do first update separately so that we're ensured\n    // that rendering has completed before calling this.\n    if (this.hasUpdated) {\n      window.ShadyCSS!.styleElement(this);\n    }\n  };\n\n  /**\n   * Patch update to apply ShadyCSS custom properties shimming for first\n   * update.\n   */\n  const didUpdate = elementProto._$didUpdate;\n  elementProto._$didUpdate = function (\n    this: PatchableReactiveElement,\n    changedProperties: unknown\n  ) {\n    // Note, must do first update here so rendering has completed before\n    // calling this and styles are correct by updated/firstUpdated.\n    if (!this.hasUpdated) {\n      window.ShadyCSS!.styleElement(this);\n    }\n    didUpdate.call(this, changedProperties);\n  };\n};\n\nif (DEV_MODE) {\n  globalThis.reactiveElementPolyfillSupportDevMode ??= polyfillSupport;\n} else {\n  globalThis.reactiveElementPolyfillSupport ??= polyfillSupport;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * lit-html patch to support browsers without native web components.\n *\n * This module should be used in addition to loading the web components\n * polyfills via @webcomponents/webcomponentjs. When using those polyfills\n * support for polyfilled Shadow DOM is automatic via the ShadyDOM polyfill.\n * Scoping classes are added to DOM nodes to facilitate CSS scoping that\n * simulates the style scoping Shadow DOM provides. ShadyDOM does this scoping\n * to all elements added to the DOM. This module provides an important\n * optimization for this process by pre-scoping lit-html template\n * DOM. This means ShadyDOM does not have to scope each instance of the\n * template DOM. Instead, each template is scoped only once.\n *\n * Creating scoped CSS is not covered by this module. It is, however, integrated\n * into the lit-element and @lit/reactive-element packages. See the ShadyCSS docs\n * for how to apply scoping to CSS:\n * https://github.com/webcomponents/polyfills/tree/master/packages/shadycss#usage.\n *\n * @packageDocumentation\n */\n\nexport {};\n\ninterface RenderOptions {\n  readonly renderBefore?: ChildNode | null;\n  scope?: string;\n}\n\ninterface ShadyTemplateResult {\n  strings: TemplateStringsArray;\n  // This property needs to remain unminified.\n  ['_$litType$']?: string;\n}\n\n// Note, this is a dummy type as the full type here is big.\ninterface Directive {\n  __directive?: Directive;\n}\n\ninterface DirectiveParent {\n  _$parent?: DirectiveParent;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\ninterface PatchableChildPartConstructor {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-misused-new\n  new (...args: any[]): PatchableChildPart;\n}\n\ninterface PatchableChildPart {\n  __directive?: Directive;\n  _$committedValue: unknown;\n  _$startNode: ChildNode;\n  _$endNode: ChildNode | null;\n  options: RenderOptions;\n  _$setValue(value: unknown, directiveParent: DirectiveParent): void;\n  _$getTemplate(result: ShadyTemplateResult): HTMLTemplateElement;\n}\n\ninterface PatchableTemplate {\n  el: HTMLTemplateElement;\n}\n\ninterface PatchableTemplateConstructor {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-misused-new\n  new (...args: any[]): PatchableTemplate;\n  createElement(html: string, options?: RenderOptions): HTMLTemplateElement;\n}\n\ninterface PatchableTemplateInstance {\n  _$template: PatchableTemplate;\n}\n\n// Scopes that have had styling prepared. Note, must only be done once per\n// scope.\nconst styledScopes: Set<string> = new Set();\n// Map of css per scope. This is collected during first scope render, used when\n// styling is prepared, and then discarded.\nconst scopeCssStore: Map<string, string[]> = new Map();\n\nconst ENABLE_SHADYDOM_NOPATCH = true;\n\n// Note, explicitly use `var` here so that this can be re-defined when\n// bundled.\n// eslint-disable-next-line no-var\nvar DEV_MODE = true;\n\n/**\n * lit-html patches. These properties cannot be renamed.\n * * ChildPart.prototype._$getTemplate\n * * ChildPart.prototype._$setValue\n */\nconst polyfillSupport: NonNullable<typeof litHtmlPolyfillSupport> = (\n  Template: PatchableTemplateConstructor,\n  ChildPart: PatchableChildPartConstructor\n) => {\n  // polyfill-support is only needed if ShadyCSS or the ApplyShim is in use\n  // We test at the point of patching, which makes it safe to load\n  // webcomponentsjs and polyfill-support in either order\n  if (\n    window.ShadyCSS === undefined ||\n    (window.ShadyCSS.nativeShadow && !window.ShadyCSS.ApplyShim)\n  ) {\n    return;\n  }\n\n  // console.log(\n  //   '%c Making lit-html compatible with ShadyDOM/CSS.',\n  //   'color: lightgreen; font-style: italic'\n  // );\n\n  const wrap =\n    ENABLE_SHADYDOM_NOPATCH &&\n    window.ShadyDOM?.inUse &&\n    window.ShadyDOM?.noPatch === true\n      ? window.ShadyDOM!.wrap\n      : (node: Node) => node;\n\n  const needsPrepareStyles = (name: string | undefined) =>\n    name !== undefined && !styledScopes.has(name);\n\n  const cssForScope = (name: string) => {\n    let scopeCss = scopeCssStore.get(name);\n    if (scopeCss === undefined) {\n      scopeCssStore.set(name, (scopeCss = []));\n    }\n    return scopeCss;\n  };\n\n  const prepareStyles = (name: string, template: HTMLTemplateElement) => {\n    // Get styles\n    const scopeCss = cssForScope(name);\n    const hasScopeCss = scopeCss.length !== 0;\n    if (hasScopeCss) {\n      const style = document.createElement('style');\n      style.textContent = scopeCss.join('\\n');\n      // Note, it's important to add the style to the *end* of the template so\n      // it doesn't mess up part indices.\n      template.content.appendChild(style);\n    }\n    // Mark this scope as styled.\n    styledScopes.add(name);\n    // Remove stored data since it's no longer needed.\n    scopeCssStore.delete(name);\n    // ShadyCSS removes scopes and removes the style under ShadyDOM and leaves\n    // it under native Shadow DOM\n    window.ShadyCSS!.prepareTemplateStyles(template, name);\n    // Note, under native Shadow DOM, the style is added to the beginning of the\n    // template. It must be moved to the *end* of the template so it doesn't\n    // mess up part indices.\n    if (hasScopeCss && window.ShadyCSS!.nativeShadow) {\n      // If there were styles but the CSS text was empty, ShadyCSS will\n      // eliminate the style altogether, so the style here could be null\n      const style = template.content.querySelector('style');\n      if (style !== null) {\n        template.content.appendChild(style);\n      }\n    }\n  };\n\n  const scopedTemplateCache = new Map<\n    string | undefined,\n    Map<TemplateStringsArray, PatchableTemplate>\n  >();\n\n  /**\n   * Override to extract style elements from the template\n   * and store all style.textContent in the shady scope data.\n   * Note, it's ok to patch Template since it's only used via ChildPart.\n   */\n  const originalCreateElement = Template.createElement;\n  Template.createElement = function (html: string, options?: RenderOptions) {\n    const element = originalCreateElement.call(Template, html, options);\n    const scope = options?.scope;\n    if (scope !== undefined) {\n      if (!window.ShadyCSS!.nativeShadow) {\n        window.ShadyCSS!.prepareTemplateDom(element, scope);\n      }\n      // Process styles only if this scope is being prepared. Otherwise,\n      // leave styles as is for back compat with Lit1.\n      if (needsPrepareStyles(scope)) {\n        const scopeCss = cssForScope(scope);\n        // Remove styles and store textContent.\n        const styles = element.content.querySelectorAll(\n          'style'\n        ) as NodeListOf<HTMLStyleElement>;\n        // Store the css in this template in the scope css and remove the <style>\n        // from the template _before_ the node-walk captures part indices\n        scopeCss.push(\n          ...Array.from(styles).map((style) => {\n            style.parentNode?.removeChild(style);\n            return style.textContent!;\n          })\n        );\n      }\n    }\n    return element;\n  };\n\n  const renderContainer = document.createDocumentFragment();\n  const renderContainerMarker = document.createComment('');\n\n  const childPartProto = ChildPart.prototype;\n  /**\n   * Patch to apply gathered css via ShadyCSS. This is done only once per scope.\n   */\n  const setValue = childPartProto._$setValue;\n  childPartProto._$setValue = function (\n    this: PatchableChildPart,\n    value: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    const container = wrap(this._$startNode).parentNode!;\n    const scope = this.options?.scope;\n    if (container instanceof ShadowRoot && needsPrepareStyles(scope)) {\n      // Note, @apply requires outer => inner scope rendering on initial\n      // scope renders to apply property values correctly. Style preparation\n      // is tied to rendering into `shadowRoot`'s and this is typically done by\n      // custom elements. If this is done in `connectedCallback`, as is typical,\n      // the code below ensures the right order since content is rendered\n      // into a fragment first so the hosting element can prepare styles first.\n      // If rendering is done in the constructor, this won't work, but that's\n      // not supported in ShadyDOM anyway.\n      const startNode = this._$startNode;\n      const endNode = this._$endNode;\n\n      // Temporarily move this part into the renderContainer.\n      renderContainer.appendChild(renderContainerMarker);\n      this._$startNode = renderContainerMarker;\n      this._$endNode = null;\n\n      // Note, any nested template results render here and their styles will\n      // be extracted and collected.\n      setValue.call(this, value, directiveParent);\n\n      // Get the template for this result or create a dummy one if a result\n      // is not being rendered.\n      // This property needs to remain unminified.\n      const template = (value as ShadyTemplateResult)?.['_$litType$']\n        ? (this._$committedValue as PatchableTemplateInstance)._$template.el\n        : document.createElement('template');\n      prepareStyles(scope!, template);\n\n      // Note, this is the temporary startNode.\n      renderContainer.removeChild(renderContainerMarker);\n      // When using native Shadow DOM, include prepared style in shadowRoot.\n      if (window.ShadyCSS?.nativeShadow) {\n        const style = template.content.querySelector('style');\n        if (style !== null) {\n          renderContainer.appendChild(style.cloneNode(true));\n        }\n      }\n      container.insertBefore(renderContainer, endNode);\n      // Move part back to original container.\n      this._$startNode = startNode;\n      this._$endNode = endNode;\n    } else {\n      setValue.call(this, value, directiveParent);\n    }\n  };\n\n  /**\n   * Patch ChildPart._$getTemplate to look up templates in a cache bucketed\n   * by element name.\n   */\n  childPartProto._$getTemplate = function (\n    this: PatchableChildPart,\n    result: ShadyTemplateResult\n  ) {\n    const scope = this.options?.scope;\n    let templateCache = scopedTemplateCache.get(scope);\n    if (templateCache === undefined) {\n      scopedTemplateCache.set(scope, (templateCache = new Map()));\n    }\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(\n        result.strings,\n        (template = new Template(result, this.options))\n      );\n    }\n    return template;\n  };\n};\n\nif (ENABLE_SHADYDOM_NOPATCH) {\n  polyfillSupport.noPatchSupported = ENABLE_SHADYDOM_NOPATCH;\n}\n\nif (DEV_MODE) {\n  globalThis.litHtmlPolyfillSupportDevMode ??= polyfillSupport;\n} else {\n  globalThis.litHtmlPolyfillSupport ??= polyfillSupport;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\n\nexport type Constructor<T> = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  new (...args: any[]): T;\n};\n\n// From the TC39 Decorators proposal\nexport interface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => void | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\nexport interface ClassElement {\n  kind: 'field' | 'method';\n  key: PropertyKey;\n  placement: 'static' | 'prototype' | 'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => void | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nexport const legacyPrototypeMethod = (\n  descriptor: PropertyDescriptor,\n  proto: Object,\n  name: PropertyKey\n) => {\n  Object.defineProperty(proto, name, descriptor);\n};\n\nexport const standardPrototypeMethod = (\n  descriptor: PropertyDescriptor,\n  element: ClassElement\n) => ({\n  kind: 'method',\n  placement: 'prototype',\n  key: element.key,\n  descriptor,\n});\n\n/**\n * Helper for decorating a property that is compatible with both TypeScript\n * and Babel decorators. The optional `finisher` can be used to perform work on\n * the class. The optional `descriptor` should return a PropertyDescriptor\n * to install for the given property.\n *\n * @param finisher {function} Optional finisher method; receives the element\n * constructor and property key as arguments and has no return value.\n * @param descriptor {function} Optional descriptor method; receives the\n * property key as an argument and returns a property descriptor to define for\n * the given property.\n * @returns {ClassElement|void}\n */\nexport const decorateProperty =\n  ({\n    finisher,\n    descriptor,\n  }: {\n    finisher?:\n      | ((ctor: typeof ReactiveElement, property: PropertyKey) => void)\n      | null;\n    descriptor?: (property: PropertyKey) => PropertyDescriptor;\n  }) =>\n  (\n    protoOrDescriptor: ReactiveElement | ClassElement,\n    name?: PropertyKey\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any => {\n    // TypeScript / Babel legacy mode\n    if (name !== undefined) {\n      const ctor = (protoOrDescriptor as ReactiveElement)\n        .constructor as typeof ReactiveElement;\n      if (descriptor !== undefined) {\n        Object.defineProperty(protoOrDescriptor, name, descriptor(name));\n      }\n      finisher?.(ctor, name!);\n      // Babel standard mode\n    } else {\n      // Note, the @property decorator saves `key` as `originalKey`\n      // so try to use it here.\n      const key =\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (protoOrDescriptor as any).originalKey ??\n        (protoOrDescriptor as ClassElement).key;\n      const info: ClassElement =\n        descriptor != undefined\n          ? {\n              kind: 'method',\n              placement: 'prototype',\n              key,\n              descriptor: descriptor((protoOrDescriptor as ClassElement).key),\n            }\n          : {...(protoOrDescriptor as ClassElement), key};\n      if (finisher != undefined) {\n        info.finisher = function <ReactiveElement>(\n          ctor: Constructor<ReactiveElement>\n        ) {\n          finisher(ctor as unknown as typeof ReactiveElement, key);\n        };\n      }\n      return info;\n    }\n  };\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport {Constructor, ClassDescriptor} from './base.js';\n\n/**\n * Allow for custom element classes with private constructors\n */\ntype CustomElementClass = Omit<typeof HTMLElement, 'new'>;\n\nconst legacyCustomElement = (tagName: string, clazz: CustomElementClass) => {\n  customElements.define(tagName, clazz as CustomElementConstructor);\n  // Cast as any because TS doesn't recognize the return type as being a\n  // subtype of the decorated class when clazz is typed as\n  // `Constructor<HTMLElement>` for some reason.\n  // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n  // applied to elements however.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return clazz as any;\n};\n\nconst standardCustomElement = (\n  tagName: string,\n  descriptor: ClassDescriptor\n) => {\n  const {kind, elements} = descriptor;\n  return {\n    kind,\n    elements,\n    // This callback is called once the class is otherwise fully defined\n    finisher(clazz: Constructor<HTMLElement>) {\n      customElements.define(tagName, clazz);\n    },\n  };\n};\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport const customElement =\n  (tagName: string) =>\n  (classOrDescriptor: CustomElementClass | ClassDescriptor) =>\n    typeof classOrDescriptor === 'function'\n      ? legacyCustomElement(tagName, classOrDescriptor)\n      : standardCustomElement(tagName, classOrDescriptor as ClassDescriptor);\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport {PropertyDeclaration, ReactiveElement} from '../reactive-element.js';\nimport {ClassElement} from './base.js';\n\nconst standardProperty = (\n  options: PropertyDeclaration,\n  element: ClassElement\n) => {\n  // When decorating an accessor, pass it through and add property metadata.\n  // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n  // stomp over the user's accessor.\n  if (\n    element.kind === 'method' &&\n    element.descriptor &&\n    !('value' in element.descriptor)\n  ) {\n    return {\n      ...element,\n      finisher(clazz: typeof ReactiveElement) {\n        clazz.createProperty(element.key, options);\n      },\n    };\n  } else {\n    // createProperty() takes care of defining the property, but we still\n    // must return some kind of descriptor, so return a descriptor for an\n    // unused prototype field. The finisher calls createProperty().\n    return {\n      kind: 'field',\n      key: Symbol(),\n      placement: 'own',\n      descriptor: {},\n      // store the original key so subsequent decorators have access to it.\n      originalKey: element.key,\n      // When @babel/plugin-proposal-decorators implements initializers,\n      // do this instead of the initializer below. See:\n      // https://github.com/babel/babel/issues/9260 extras: [\n      //   {\n      //     kind: 'initializer',\n      //     placement: 'own',\n      //     initializer: descriptor.initializer,\n      //   }\n      // ],\n      initializer(this: {[key: string]: unknown}) {\n        if (typeof element.initializer === 'function') {\n          this[element.key as string] = element.initializer.call(this);\n        }\n      },\n      finisher(clazz: typeof ReactiveElement) {\n        clazz.createProperty(element.key, options);\n      },\n    };\n  }\n};\n\nconst legacyProperty = (\n  options: PropertyDeclaration,\n  proto: Object,\n  name: PropertyKey\n) => {\n  (proto.constructor as typeof ReactiveElement).createProperty(name, options);\n};\n\n/**\n * A property decorator which creates a reactive property that reflects a\n * corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (protoOrDescriptor: Object | ClassElement, name?: PropertyKey): any =>\n    name !== undefined\n      ? legacyProperty(options!, protoOrDescriptor as Object, name)\n      : standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {property} from './property.js';\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function state(options?: InternalPropertyDeclaration) {\n  return property({\n    ...options,\n    state: true,\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options: AddEventListenerOptions) {\n  return decorateProperty({\n    finisher: (ctor: typeof ReactiveElement, name: PropertyKey) => {\n      Object.assign(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        ctor.prototype[name as keyof ReactiveElement] as any,\n        options\n      );\n    },\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean) {\n  return decorateProperty({\n    descriptor: (name: PropertyKey) => {\n      const descriptor = {\n        get(this: ReactiveElement) {\n          return this.renderRoot?.querySelector(selector) ?? null;\n        },\n        enumerable: true,\n        configurable: true,\n      };\n      if (cache) {\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        descriptor.get = function (this: ReactiveElement) {\n          if (\n            (this as unknown as {[key: string]: Element | null})[\n              key as string\n            ] === undefined\n          ) {\n            (this as unknown as {[key: string]: Element | null})[\n              key as string\n            ] = this.renderRoot?.querySelector(selector) ?? null;\n          }\n          return (this as unknown as {[key: string]: Element | null})[\n            key as string\n          ];\n        };\n      }\n      return descriptor;\n    },\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs: NodeListOf<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector: string) {\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      get(this: ReactiveElement) {\n        return this.renderRoot?.querySelectorAll(selector) ?? [];\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first: Promise<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector: string) {\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      async get(this: ReactiveElement) {\n        await this.updateComplete;\n        return this.renderRoot?.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {decorateProperty} from './base.js';\n\nimport type {ReactiveElement} from '../reactive-element.js';\nimport type {QueryAssignedNodesOptions} from './query-assigned-nodes.js';\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * A tiny module scoped polyfill for HTMLSlotElement.assignedElements.\n */\nconst slotAssignedElements =\n  global.HTMLSlotElement?.prototype.assignedElements != null\n    ? (slot: HTMLSlotElement, opts?: AssignedNodesOptions) =>\n        slot.assignedElements(opts)\n    : (slot: HTMLSlotElement, opts?: AssignedNodesOptions) =>\n        slot\n          .assignedNodes(opts)\n          .filter(\n            (node): node is Element => node.nodeType === Node.ELEMENT_NODE\n          );\n\n/**\n * Options for the {@linkcode queryAssignedElements} decorator. Extends the\n * options that can be passed into\n * [HTMLSlotElement.assignedElements](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n */\nexport interface QueryAssignedElementsOptions\n  extends QueryAssignedNodesOptions {\n  /**\n   * CSS selector used to filter the elements returned. For example, a selector\n   * of `\".item\"` will only include elements with the `item` class.\n   */\n  selector?: string;\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedElements` of the given `slot`. Provides a declarative\n * way to use\n * [`HTMLSlotElement.assignedElements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n *\n * Can be passed an optional {@linkcode QueryAssignedElementsOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedElements({ slot: 'list' })\n *   listItems!: Array<HTMLElement>;\n *   @queryAssignedElements()\n *   unnamedSlotEls!: Array<HTMLElement>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *       <slot></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note, the type of this property should be annotated as `Array<HTMLElement>`.\n *\n * @category Decorator\n */\nexport function queryAssignedElements(options?: QueryAssignedElementsOptions) {\n  const {slot, selector} = options ?? {};\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      get(this: ReactiveElement) {\n        const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n        const slotEl =\n          this.renderRoot?.querySelector<HTMLSlotElement>(slotSelector);\n        const elements =\n          slotEl != null ? slotAssignedElements(slotEl, options) : [];\n        if (selector) {\n          return elements.filter((node) => node.matches(selector));\n        }\n        return elements;\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {decorateProperty} from './base.js';\nimport {queryAssignedElements} from './query-assigned-elements.js';\n\nimport type {ReactiveElement} from '../reactive-element.js';\n\n/**\n * Options for the {@linkcode queryAssignedNodes} decorator. Extends the options\n * that can be passed into [HTMLSlotElement.assignedNodes](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedNodes).\n */\nexport interface QueryAssignedNodesOptions extends AssignedNodesOptions {\n  /**\n   * Name of the slot to query. Leave empty for the default slot.\n   */\n  slot?: string;\n}\n\n// TypeScript requires the decorator return type to be `void|any`.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype TSDecoratorReturnType = void | any;\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given `slot`.\n *\n * Can be passed an optional {@linkcode QueryAssignedNodesOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes({slot: 'list', flatten: true})\n *   listItems!: Array<Node>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note the type of this property should be annotated as `Array<Node>`.\n *\n * @category Decorator\n */\nexport function queryAssignedNodes(\n  options?: QueryAssignedNodesOptions\n): TSDecoratorReturnType;\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems!: Array<HTMLElement>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note the type of this property should be annotated as `Array<Node>` if used\n * without a `selector` or `Array<HTMLElement>` if a selector is provided.\n * Use {@linkcode queryAssignedElements @queryAssignedElements} to list only\n * elements, and optionally filter the element list using a CSS selector.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n *     meaning any assigned nodes that are slot elements are replaced with their\n *     assigned nodes.\n * @param selector A CSS selector used to filter the elements returned.\n *\n * @category Decorator\n * @deprecated Prefer passing in a single options object, i.e. `{slot: 'list'}`.\n * If using `selector` please use `@queryAssignedElements`.\n * `@queryAssignedNodes('', false, '.item')` is functionally identical to\n * `@queryAssignedElements({slot: '', flatten: false, selector: '.item'})` or\n * `@queryAssignedElements({selector: '.item'})`.\n */\nexport function queryAssignedNodes(\n  slotName?: string,\n  flatten?: boolean,\n  selector?: string\n): TSDecoratorReturnType;\n\nexport function queryAssignedNodes(\n  slotOrOptions?: string | QueryAssignedNodesOptions,\n  flatten?: boolean,\n  selector?: string\n) {\n  // Normalize the overloaded arguments.\n  let slot = slotOrOptions;\n  let assignedNodesOptions: AssignedNodesOptions;\n  if (typeof slotOrOptions === 'object') {\n    slot = slotOrOptions.slot;\n    assignedNodesOptions = slotOrOptions;\n  } else {\n    assignedNodesOptions = {flatten};\n  }\n\n  // For backwards compatibility, queryAssignedNodes with a selector behaves\n  // exactly like queryAssignedElements with a selector.\n  if (selector) {\n    return queryAssignedElements({\n      slot: slot as string,\n      flatten,\n      selector,\n    });\n  }\n\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      get(this: ReactiveElement) {\n        const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n        const slotEl =\n          this.renderRoot?.querySelector<HTMLSlotElement>(slotSelector);\n        return slotEl?.assignedNodes(assignedNodesOptions) ?? [];\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\nexport * from './lit-element.js';\nexport * from './decorators.js';\n\nconsole.warn(\n  \"The main 'lit-element' module entrypoint is deprecated. Please update \" +\n    \"your imports to use the 'lit' package: 'lit' and 'lit/decorators.ts' \" +\n    \"or import from 'lit-element/lit-element.ts'. See \" +\n    'https://lit.dev/msg/deprecated-import-path for more information.'\n);\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of class names to truthy values.\n */\nexport interface ClassInfo {\n  readonly [name: string]: string | boolean | number;\n}\n\nclass ClassMapDirective extends Directive {\n  /**\n   * Stores the ClassInfo object applied to a given AttributePart.\n   * Used to unset existing values when a new ClassInfo object is applied.\n   */\n  private _previousClasses?: Set<string>;\n  private _staticClasses?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'class' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        '`classMap()` can only be used in the `class` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(classInfo: ClassInfo) {\n    // Add spaces to ensure separation from static classes\n    return (\n      ' ' +\n      Object.keys(classInfo)\n        .filter((key) => classInfo[key])\n        .join(' ') +\n      ' '\n    );\n  }\n\n  override update(part: AttributePart, [classInfo]: DirectiveParameters<this>) {\n    // Remember dynamic classes on the first render\n    if (this._previousClasses === undefined) {\n      this._previousClasses = new Set();\n      if (part.strings !== undefined) {\n        this._staticClasses = new Set(\n          part.strings\n            .join(' ')\n            .split(/\\s/)\n            .filter((s) => s !== '')\n        );\n      }\n      for (const name in classInfo) {\n        if (classInfo[name] && !this._staticClasses?.has(name)) {\n          this._previousClasses.add(name);\n        }\n      }\n      return this.render(classInfo);\n    }\n\n    const classList = part.element.classList;\n\n    // Remove old classes that no longer apply\n    // We use forEach() instead of for-of so that we don't require down-level\n    // iteration.\n    this._previousClasses.forEach((name) => {\n      if (!(name in classInfo)) {\n        classList.remove(name);\n        this._previousClasses!.delete(name);\n      }\n    });\n\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n      // We explicitly want a loose truthy check of `value` because it seems\n      // more convenient that '' and 0 are skipped.\n      const value = !!classInfo[name];\n      if (\n        value !== this._previousClasses.has(name) &&\n        !this._staticClasses?.has(name)\n      ) {\n        if (value) {\n          classList.add(name);\n          this._previousClasses.add(name);\n        } else {\n          classList.remove(name);\n          this._previousClasses.delete(name);\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies dynamic CSS classes.\n *\n * This must be used in the `class` attribute and must be the only part used in\n * the attribute. It takes each property in the `classInfo` argument and adds\n * the property name to the element's `classList` if the property value is\n * truthy; if the property value is falsey, the property name is removed from\n * the element's `class`.\n *\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\n * truthy.\n *\n * @param classInfo\n */\nexport const classMap = directive(ClassMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {ClassMapDirective};\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Note, this module is not included in package exports so that it's private to\n// our first-party directives. If it ends up being useful, we can open it up and\n// export it.\n\n/**\n * Helper to iterate an AsyncIterable in its own closure.\n * @param iterable The iterable to iterate\n * @param callback The callback to call for each value. If the callback returns\n * `false`, the loop will be broken.\n */\nexport const forAwaitOf = async <T>(\n  iterable: AsyncIterable<T>,\n  callback: (value: T) => Promise<boolean>\n) => {\n  for await (const v of iterable) {\n    if ((await callback(v)) === false) {\n      return;\n    }\n  }\n};\n\n/**\n * Holds a reference to an instance that can be disconnected and reconnected,\n * so that a closure over the ref (e.g. in a then function to a promise) does\n * not strongly hold a ref to the instance. Approximates a WeakRef but must\n * be manually connected & disconnected to the backing instance.\n */\nexport class PseudoWeakRef<T> {\n  private _ref?: T;\n  constructor(ref: T) {\n    this._ref = ref;\n  }\n  /**\n   * Disassociates the ref with the backing instance.\n   */\n  disconnect() {\n    this._ref = undefined;\n  }\n  /**\n   * Reassociates the ref with the backing instance.\n   */\n  reconnect(ref: T) {\n    this._ref = ref;\n  }\n  /**\n   * Retrieves the backing instance (will be undefined when disconnected)\n   */\n  deref() {\n    return this._ref;\n  }\n}\n\n/**\n * A helper to pause and resume waiting on a condition in an async function\n */\nexport class Pauser {\n  private _promise?: Promise<void> = undefined;\n  private _resolve?: () => void = undefined;\n  /**\n   * When paused, returns a promise to be awaited; when unpaused, returns\n   * undefined. Note that in the microtask between the pauser being resumed\n   * an an await of this promise resolving, the pauser could be paused again,\n   * hence callers should check the promise in a loop when awaiting.\n   * @returns A promise to be awaited when paused or undefined\n   */\n  get() {\n    return this._promise;\n  }\n  /**\n   * Creates a promise to be awaited\n   */\n  pause() {\n    this._promise ??= new Promise((resolve) => (this._resolve = resolve));\n  }\n  /**\n   * Resolves the promise which may be awaited\n   */\n  resume() {\n    this._resolve?.();\n    this._promise = this._resolve = undefined;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart, noChange} from '../lit-html.js';\nimport {\n  AsyncDirective,\n  directive,\n  DirectiveParameters,\n} from '../async-directive.js';\nimport {Pauser, PseudoWeakRef, forAwaitOf} from './private-async-helpers.js';\n\ntype Mapper<T> = (v: T, index?: number) => unknown;\n\nexport class AsyncReplaceDirective extends AsyncDirective {\n  private __value?: AsyncIterable<unknown>;\n  private __weakThis = new PseudoWeakRef(this);\n  private __pauser = new Pauser();\n\n  // @ts-expect-error value not used, but we want a nice parameter for docs\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  render<T>(value: AsyncIterable<T>, _mapper?: Mapper<T>) {\n    return noChange;\n  }\n\n  override update(\n    _part: ChildPart,\n    [value, mapper]: DirectiveParameters<this>\n  ) {\n    // If our initial render occurs while disconnected, ensure that the pauser\n    // and weakThis are in the disconnected state\n    if (!this.isConnected) {\n      this.disconnected();\n    }\n    // If we've already set up this particular iterable, we don't need\n    // to do anything.\n    if (value === this.__value) {\n      return;\n    }\n    this.__value = value;\n    let i = 0;\n    const {__weakThis: weakThis, __pauser: pauser} = this;\n    // Note, the callback avoids closing over `this` so that the directive\n    // can be gc'ed before the promise resolves; instead `this` is retrieved\n    // from `weakThis`, which can break the hard reference in the closure when\n    // the directive disconnects\n    forAwaitOf(value, async (v: unknown) => {\n      // The while loop here handles the case that the connection state\n      // thrashes, causing the pauser to resume and then get re-paused\n      while (pauser.get()) {\n        await pauser.get();\n      }\n      // If the callback gets here and there is no `this`, it means that the\n      // directive has been disconnected and garbage collected and we don't\n      // need to do anything else\n      const _this = weakThis.deref();\n      if (_this !== undefined) {\n        // Check to make sure that value is the still the current value of\n        // the part, and if not bail because a new value owns this part\n        if (_this.__value !== value) {\n          return false;\n        }\n\n        // As a convenience, because functional-programming-style\n        // transforms of iterables and async iterables requires a library,\n        // we accept a mapper function. This is especially convenient for\n        // rendering a template for each item.\n        if (mapper !== undefined) {\n          v = mapper(v, i);\n        }\n\n        _this.commitValue(v, i);\n        i++;\n      }\n      return true;\n    });\n    return noChange;\n  }\n\n  // Override point for AsyncAppend to append rather than replace\n  protected commitValue(value: unknown, _index: number) {\n    this.setValue(value);\n  }\n\n  override disconnected() {\n    this.__weakThis.disconnect();\n    this.__pauser.pause();\n  }\n\n  override reconnected() {\n    this.__weakThis.reconnect(this);\n    this.__pauser.resume();\n  }\n}\n\n/**\n * A directive that renders the items of an async iterable[1], replacing\n * previous values with new values, so that only one value is ever rendered\n * at a time. This directive may be used in any expression type.\n *\n * Async iterables are objects with a `[Symbol.asyncIterator]` method, which\n * returns an iterator who's `next()` method returns a Promise. When a new\n * value is available, the Promise resolves and the value is rendered to the\n * Part controlled by the directive. If another value other than this\n * directive has been set on the Part, the iterable will no longer be listened\n * to and new values won't be written to the Part.\n *\n * [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n *\n * @param value An async iterable\n * @param mapper An optional function that maps from (value, index) to another\n *     value. Useful for generating templates for each item in the iterable.\n */\nexport const asyncReplace = directive(AsyncReplaceDirective);\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart} from '../lit-html.js';\nimport {\n  directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\nimport {AsyncReplaceDirective} from './async-replace.js';\nimport {\n  clearPart,\n  insertPart,\n  setChildPartValue,\n} from '../directive-helpers.js';\n\nclass AsyncAppendDirective extends AsyncReplaceDirective {\n  private __childPart!: ChildPart;\n\n  // Override AsyncReplace to narrow the allowed part type to ChildPart only\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('asyncAppend can only be used in child expressions');\n    }\n  }\n\n  // Override AsyncReplace to save the part since we need to append into it\n  override update(part: ChildPart, params: DirectiveParameters<this>) {\n    this.__childPart = part;\n    return super.update(part, params);\n  }\n\n  // Override AsyncReplace to append rather than replace\n  protected override commitValue(value: unknown, index: number) {\n    // When we get the first value, clear the part. This lets the\n    // previous value display until we can replace it.\n    if (index === 0) {\n      clearPart(this.__childPart);\n    }\n    // Create and insert a new part and set its value to the next value\n    const newPart = insertPart(this.__childPart);\n    setChildPartValue(newPart, value);\n  }\n}\n\n/**\n * A directive that renders the items of an async iterable[1], appending new\n * values after previous values, similar to the built-in support for iterables.\n * This directive is usable only in child expressions.\n *\n * Async iterables are objects with a [Symbol.asyncIterator] method, which\n * returns an iterator who's `next()` method returns a Promise. When a new\n * value is available, the Promise resolves and the value is appended to the\n * Part controlled by the directive. If another value other than this\n * directive has been set on the Part, the iterable will no longer be listened\n * to and new values won't be written to the Part.\n *\n * [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n *\n * @param value An async iterable\n * @param mapper An optional function that maps from (value, index) to another\n *     value. Useful for generating templates for each item in the iterable.\n */\nexport const asyncAppend = directive(AsyncAppendDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {AsyncAppendDirective};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {\n  TemplateResult,\n  ChildPart,\n  RootPart,\n  render,\n  nothing,\n} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n} from '../directive.js';\nimport {\n  clearPart,\n  getCommittedValue,\n  insertPart,\n  isTemplateResult,\n  setCommittedValue,\n} from '../directive-helpers.js';\n\nclass CacheDirective extends Directive {\n  private _templateCache = new WeakMap<TemplateStringsArray, RootPart>();\n  private _value?: TemplateResult;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n  }\n\n  render(v: unknown) {\n    // Return an array of the value to induce lit-html to create a ChildPart\n    // for the value that we can move into the cache.\n    return [v];\n  }\n\n  override update(containerPart: ChildPart, [v]: DirectiveParameters<this>) {\n    // If the previous value is a TemplateResult and the new value is not,\n    // or is a different Template as the previous value, move the child part\n    // into the cache.\n    if (\n      isTemplateResult(this._value) &&\n      (!isTemplateResult(v) || this._value.strings !== v.strings)\n    ) {\n      // This is always an array because we return [v] in render()\n      const partValue = getCommittedValue(containerPart) as Array<ChildPart>;\n      const childPart = partValue.pop()!;\n      let cachedContainerPart = this._templateCache.get(this._value.strings);\n      if (cachedContainerPart === undefined) {\n        const fragment = document.createDocumentFragment();\n        cachedContainerPart = render(nothing, fragment);\n        cachedContainerPart.setConnected(false);\n        this._templateCache.set(this._value.strings, cachedContainerPart);\n      }\n      // Move into cache\n      setCommittedValue(cachedContainerPart, [childPart]);\n      insertPart(cachedContainerPart, undefined, childPart);\n    }\n    // If the new value is a TemplateResult and the previous value is not,\n    // or is a different Template as the previous value, restore the child\n    // part from the cache.\n    if (isTemplateResult(v)) {\n      if (!isTemplateResult(this._value) || this._value.strings !== v.strings) {\n        const cachedContainerPart = this._templateCache.get(v.strings);\n        if (cachedContainerPart !== undefined) {\n          // Move the cached part back into the container part value\n          const partValue = getCommittedValue(\n            cachedContainerPart\n          ) as Array<ChildPart>;\n          const cachedPart = partValue.pop()!;\n          // Move cached part back into DOM\n          clearPart(containerPart);\n          insertPart(containerPart, undefined, cachedPart);\n          setCommittedValue(containerPart, [cachedPart]);\n        }\n      }\n      this._value = v;\n    } else {\n      this._value = undefined;\n    }\n    return this.render(v);\n  }\n}\n\n/**\n * Enables fast switching between multiple templates by caching the DOM nodes\n * and TemplateInstances produced by the templates.\n *\n * Example:\n *\n * ```js\n * let checked = false;\n *\n * html`\n *   ${cache(checked ? html`input is checked` : html`input is not checked`)}\n * `\n * ```\n */\nexport const cache = directive(CacheDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {CacheDirective};\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {noChange, Part} from '../lit-html.js';\nimport {directive, Directive, DirectiveParameters} from '../directive.js';\n\n// A sentinal that indicates guard() hasn't rendered anything yet\nconst initialValue = {};\n\nclass GuardDirective extends Directive {\n  private _previousValue: unknown = initialValue;\n\n  render(_value: unknown, f: () => unknown) {\n    return f();\n  }\n\n  override update(_part: Part, [value, f]: DirectiveParameters<this>) {\n    if (Array.isArray(value)) {\n      // Dirty-check arrays by item\n      if (\n        Array.isArray(this._previousValue) &&\n        this._previousValue.length === value.length &&\n        value.every((v, i) => v === (this._previousValue as Array<unknown>)[i])\n      ) {\n        return noChange;\n      }\n    } else if (this._previousValue === value) {\n      // Dirty-check non-arrays by identity\n      return noChange;\n    }\n\n    // Copy the value if it's an array so that if it's mutated we don't forget\n    // what the previous values were.\n    this._previousValue = Array.isArray(value) ? Array.from(value) : value;\n    const r = this.render(value, f);\n    return r;\n  }\n}\n\n/**\n * Prevents re-render of a template function until a single value or an array of\n * values changes.\n *\n * Values are checked against previous values with strict equality (`===`), and\n * so the check won't detect nested property changes inside objects or arrays.\n * Arrays values have each item checked against the previous value at the same\n * index with strict equality. Nested arrays are also checked only by strict\n * equality.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([user.id, company.id], () => html`...`)}\n *   </div>\n * `\n * ```\n *\n * In this case, the template only rerenders if either `user.id` or `company.id`\n * changes.\n *\n * guard() is useful with immutable data patterns, by preventing expensive work\n * until data updates.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n *   </div>\n * `\n * ```\n *\n * In this case, items are mapped over only when the array reference changes.\n *\n * @param value the value to check before re-rendering\n * @param f the template function\n */\nexport const guard = directive(GuardDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {GuardDirective};\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\n\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = <T>(value: T) => value ?? nothing;\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange, nothing} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\nimport {isSingleExpression, setCommittedValue} from '../directive-helpers.js';\n\nclass LiveDirective extends Directive {\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      !(\n        partInfo.type === PartType.PROPERTY ||\n        partInfo.type === PartType.ATTRIBUTE ||\n        partInfo.type === PartType.BOOLEAN_ATTRIBUTE\n      )\n    ) {\n      throw new Error(\n        'The `live` directive is not allowed on child or event bindings'\n      );\n    }\n    if (!isSingleExpression(partInfo)) {\n      throw new Error('`live` bindings can only contain a single expression');\n    }\n  }\n\n  render(value: unknown) {\n    return value;\n  }\n\n  override update(part: AttributePart, [value]: DirectiveParameters<this>) {\n    if (value === noChange || value === nothing) {\n      return value;\n    }\n    const element = part.element;\n    const name = part.name;\n\n    if (part.type === PartType.PROPERTY) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if (value === (element as any)[name]) {\n        return noChange;\n      }\n    } else if (part.type === PartType.BOOLEAN_ATTRIBUTE) {\n      if (!!value === element.hasAttribute(name)) {\n        return noChange;\n      }\n    } else if (part.type === PartType.ATTRIBUTE) {\n      if (element.getAttribute(name) === String(value)) {\n        return noChange;\n      }\n    }\n    // Resets the part's value, causing its dirty-check to fail so that it\n    // always sets the value.\n    setCommittedValue(part);\n    return value;\n  }\n}\n\n/**\n * Checks binding values against live DOM values, instead of previously bound\n * values, when determining whether to update the value.\n *\n * This is useful for cases where the DOM value may change from outside of\n * lit-html, such as with a binding to an `<input>` element's `value` property,\n * a content editable elements text, or to a custom element that changes it's\n * own properties or attributes.\n *\n * In these cases if the DOM value changes, but the value set through lit-html\n * bindings hasn't, lit-html won't know to update the DOM value and will leave\n * it alone. If this is not what you want--if you want to overwrite the DOM\n * value with the bound value no matter what--use the `live()` directive:\n *\n * ```js\n * html`<input .value=${live(x)}>`\n * ```\n *\n * `live()` performs a strict equality check against the live DOM value, and if\n * the new value is equal to the live value, does nothing. This means that\n * `live()` should not be used when the binding will cause a type conversion. If\n * you use `live()` with an attribute binding, make sure that only strings are\n * passed in, or the binding will update every render.\n */\nexport const live = directive(LiveDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {LiveDirective};\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {nothing, ElementPart} from '../lit-html.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\n\n/**\n * Creates a new Ref object, which is container for a reference to an element.\n */\nexport const createRef = <T = Element>() => new Ref<T>();\n\n/**\n * An object that holds a ref value.\n */\nclass Ref<T = Element> {\n  /**\n   * The current Element value of the ref, or else `undefined` if the ref is no\n   * longer rendered.\n   */\n  readonly value?: T;\n}\n\nexport type {Ref};\n\ninterface RefInternal {\n  value: Element | undefined;\n}\n\n// When callbacks are used for refs, this map tracks the last value the callback\n// was called with, for ensuring a directive doesn't clear the ref if the ref\n// has already been rendered to a new spot. It is double-keyed on both the\n// context (`options.host`) and the callback, since we auto-bind class methods\n// to `options.host`.\nconst lastElementForContextAndCallback: WeakMap<\n  object,\n  WeakMap<Function, Element | undefined>\n> = new WeakMap();\n\nexport type RefOrCallback = Ref | ((el: Element | undefined) => void);\n\nclass RefDirective extends AsyncDirective {\n  private _element?: Element;\n  private _ref?: RefOrCallback;\n  private _context?: object;\n\n  render(_ref: RefOrCallback) {\n    return nothing;\n  }\n\n  override update(part: ElementPart, [ref]: Parameters<this['render']>) {\n    const refChanged = ref !== this._ref;\n    if (refChanged && this._ref !== undefined) {\n      // The ref passed to the directive has changed;\n      // unset the previous ref's value\n      this._updateRefValue(undefined);\n    }\n    if (refChanged || this._lastElementForRef !== this._element) {\n      // We either got a new ref or this is the first render;\n      // store the ref/element & update the ref value\n      this._ref = ref;\n      this._context = part.options?.host;\n      this._updateRefValue((this._element = part.element));\n    }\n    return nothing;\n  }\n\n  private _updateRefValue(element: Element | undefined) {\n    if (typeof this._ref === 'function') {\n      // If the current ref was called with a previous value, call with\n      // `undefined`; We do this to ensure callbacks are called in a consistent\n      // way regardless of whether a ref might be moving up in the tree (in\n      // which case it would otherwise be called with the new value before the\n      // previous one unsets it) and down in the tree (where it would be unset\n      // before being set). Note that element lookup is keyed by\n      // both the context and the callback, since we allow passing unbound\n      // functions that are called on options.host, and we want to treat\n      // these as unique \"instances\" of a function.\n      const context = this._context ?? globalThis;\n      let lastElementForCallback =\n        lastElementForContextAndCallback.get(context);\n      if (lastElementForCallback === undefined) {\n        lastElementForCallback = new WeakMap();\n        lastElementForContextAndCallback.set(context, lastElementForCallback);\n      }\n      if (lastElementForCallback.get(this._ref) !== undefined) {\n        this._ref.call(this._context, undefined);\n      }\n      lastElementForCallback.set(this._ref, element);\n      // Call the ref with the new element value\n      if (element !== undefined) {\n        this._ref.call(this._context, element);\n      }\n    } else {\n      (this._ref as RefInternal)!.value = element;\n    }\n  }\n\n  private get _lastElementForRef() {\n    return typeof this._ref === 'function'\n      ? lastElementForContextAndCallback\n          .get(this._context ?? globalThis)\n          ?.get(this._ref)\n      : this._ref?.value;\n  }\n\n  override disconnected() {\n    // Only clear the box if our element is still the one in it (i.e. another\n    // directive instance hasn't rendered its element to it before us); that\n    // only happens in the event of the directive being cleared (not via manual\n    // disconnection)\n    if (this._lastElementForRef === this._element) {\n      this._updateRefValue(undefined);\n    }\n  }\n\n  override reconnected() {\n    // If we were manually disconnected, we can safely put our element back in\n    // the box, since no rendering could have occurred to change its state\n    this._updateRefValue(this._element);\n  }\n}\n\n/**\n * Sets the value of a Ref object or calls a ref callback with the element it's\n * bound to.\n *\n * A Ref object acts as a container for a reference to an element. A ref\n * callback is a function that takes an element as its only argument.\n *\n * The ref directive sets the value of the Ref object or calls the ref callback\n * during rendering, if the referenced element changed.\n *\n * Note: If a ref callback is rendered to a different element position or is\n * removed in a subsequent render, it will first be called with `undefined`,\n * followed by another call with the new element it was rendered to (if any).\n *\n * ```js\n * // Using Ref object\n * const inputRef = createRef();\n * render(html`<input ${ref(inputRef)}>`, container);\n * inputRef.value.focus();\n *\n * // Using callback\n * const callback = (inputElement) => inputElement.focus();\n * render(html`<input ${ref(callback)}>`, container);\n * ```\n */\nexport const ref = directive(RefDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RefDirective};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\nimport {\n  insertPart,\n  getCommittedValue,\n  removePart,\n  setCommittedValue,\n  setChildPartValue,\n} from '../directive-helpers.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map<unknown, number>();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\nclass RepeatDirective extends Directive {\n  private _itemKeys?: unknown[];\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('repeat() can only be used in text expressions');\n    }\n  }\n\n  private _getValuesAndKeys<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    let keyFn: KeyFn<T> | undefined;\n    if (template === undefined) {\n      template = keyFnOrTemplate;\n    } else if (keyFnOrTemplate !== undefined) {\n      keyFn = keyFnOrTemplate as KeyFn<T>;\n    }\n    const keys = [];\n    const values = [];\n    let index = 0;\n    for (const item of items) {\n      keys[index] = keyFn ? keyFn(item, index) : index;\n      values[index] = template!(item, index);\n      index++;\n    }\n    return {\n      values,\n      keys,\n    };\n  }\n\n  render<T>(items: Iterable<T>, template: ItemTemplate<T>): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    return this._getValuesAndKeys(items, keyFnOrTemplate, template).values;\n  }\n\n  override update<T>(\n    containerPart: ChildPart,\n    [items, keyFnOrTemplate, template]: [\n      Iterable<T>,\n      KeyFn<T> | ItemTemplate<T>,\n      ItemTemplate<T>\n    ]\n  ) {\n    // Old part & key lists are retrieved from the last update (which may\n    // be primed by hydration)\n    const oldParts = getCommittedValue(\n      containerPart\n    ) as Array<ChildPart | null>;\n    const {values: newValues, keys: newKeys} = this._getValuesAndKeys(\n      items,\n      keyFnOrTemplate,\n      template\n    );\n\n    // We check that oldParts, the committed value, is an Array as an\n    // indicator that the previous value came from a repeat() call. If\n    // oldParts is not an Array then this is the first render and we return\n    // an array for lit-html's array handling to render, and remember the\n    // keys.\n    if (!Array.isArray(oldParts)) {\n      this._itemKeys = newKeys;\n      return newValues;\n    }\n\n    // In SSR hydration it's possible for oldParts to be an arrray but for us\n    // to not have item keys because the update() hasn't run yet. We set the\n    // keys to an empty array. This will cause all oldKey/newKey comparisons\n    // to fail and execution to fall to the last nested brach below which\n    // reuses the oldPart.\n    const oldKeys = (this._itemKeys ??= []);\n\n    // New part list will be built up as we go (either reused from\n    // old parts or created for new keys in this update). This is\n    // saved in the above cache at the end of the update.\n    const newParts: ChildPart[] = [];\n\n    // Maps from key to index for current and previous update; these\n    // are generated lazily only when needed as a performance\n    // optimization, since they are only required for multiple\n    // non-contiguous changes in the list, which are less common.\n    let newKeyToIndexMap!: Map<unknown, number>;\n    let oldKeyToIndexMap!: Map<unknown, number>;\n\n    // Head and tail pointers to old parts and new values\n    let oldHead = 0;\n    let oldTail = oldParts.length - 1;\n    let newHead = 0;\n    let newTail = newValues.length - 1;\n\n    // Overview of O(n) reconciliation algorithm (general approach\n    // based on ideas found in ivi, vue, snabbdom, etc.):\n    //\n    // * We start with the list of old parts and new values (and\n    //   arrays of their respective keys), head/tail pointers into\n    //   each, and we build up the new list of parts by updating\n    //   (and when needed, moving) old parts or creating new ones.\n    //   The initial scenario might look like this (for brevity of\n    //   the diagrams, the numbers in the array reflect keys\n    //   associated with the old parts or new values, although keys\n    //   and parts/values are actually stored in parallel arrays\n    //   indexed using the same head/tail pointers):\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n    //                                      item order\n    //      newHead ^                 ^ newTail\n    //\n    // * Iterate old & new lists from both sides, updating,\n    //   swapping, or removing parts at the head/tail locations\n    //   until neither head nor tail can move.\n    //\n    // * Example below: keys at head pointers match, so update old\n    //   part 0 in-place (no need to move it) and record part 0 in\n    //   the `newParts` list. The last thing we do is advance the\n    //   `oldHead` and `newHead` pointers (will be reflected in the\n    //   next diagram).\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //      newHead ^                 ^ newTail\n    //\n    // * Example below: head pointers don't match, but tail\n    //   pointers do, so update part 6 in place (no need to move\n    //   it), and record part 6 in the `newParts` list. Last,\n    //   advance the `oldTail` and `oldHead` pointers.\n    //\n    //         oldHead v              v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n    //                                      & newTail\n    //         newHead ^              ^ newTail\n    //\n    // * If neither head nor tail match; next check if one of the\n    //   old head/tail items was removed. We first need to generate\n    //   the reverse map of new keys to index (`newKeyToIndexMap`),\n    //   which is done once lazily as a performance optimization,\n    //   since we only hit this case if multiple non-contiguous\n    //   changes were made. Note that for contiguous removal\n    //   anywhere in the list, the head and tails would advance\n    //   from either end and pass each other before we get to this\n    //   case and removals would be handled in the final while loop\n    //   without needing to generate the map.\n    //\n    // * Example below: The key at `oldTail` was removed (no longer\n    //   in the `newKeyToIndexMap`), so remove that part from the\n    //   DOM and advance just the `oldTail` pointer.\n    //\n    //         oldHead v           v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n    //         newHead ^           ^ newTail\n    //\n    // * Once head and tail cannot move, any mismatches are due to\n    //   either new or moved items; if a new key is in the previous\n    //   \"old key to old index\" map, move the old part to the new\n    //   location, otherwise create and insert a new part. Note\n    //   that when moving an old part we null its position in the\n    //   oldParts array if it lies between the head and tail so we\n    //   know to skip it when the pointers get there.\n    //\n    // * Example below: neither head nor tail match, and neither\n    //   were removed; so find the `newHead` key in the\n    //   `oldKeyToIndexMap`, and move that old part's DOM into the\n    //   next head position (before `oldParts[oldHead]`). Last,\n    //   null the part in the `oldPart` array since it was\n    //   somewhere in the remaining oldParts still to be scanned\n    //   (between the head and tail pointers) so that we know to\n    //   skip that old part on future iterations.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n    //                                      newHead\n    //         newHead ^           ^ newTail\n    //\n    // * Note that for moves/insertions like the one above, a part\n    //   inserted at the head pointer is inserted before the\n    //   current `oldParts[oldHead]`, and a part inserted at the\n    //   tail pointer is inserted before `newParts[newTail+1]`. The\n    //   seeming asymmetry lies in the fact that new parts are\n    //   moved into place outside in, so to the right of the head\n    //   pointer are old parts, and to the right of the tail\n    //   pointer are new parts.\n    //\n    // * We always restart back from the top of the algorithm,\n    //   allowing matching and simple updates in place to\n    //   continue...\n    //\n    // * Example below: the head pointers once again match, so\n    //   simply update part 1 and record it in the `newParts`\n    //   array.  Last, advance both head pointers.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //            newHead ^        ^ newTail\n    //\n    // * As mentioned above, items that were moved as a result of\n    //   being stuck (the final else clause in the code below) are\n    //   marked with null, so we always advance old pointers over\n    //   these so we're comparing the next actual old value on\n    //   either end.\n    //\n    // * Example below: `oldHead` is null (already placed in\n    //   newParts), so advance `oldHead`.\n    //\n    //            oldHead v     v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n    //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //               newHead ^     ^ newTail\n    //\n    // * Note it's not critical to mark old parts as null when they\n    //   are moved from head to tail or tail to head, since they\n    //   will be outside the pointer range and never visited again.\n    //\n    // * Example below: Here the old tail key matches the new head\n    //   key, so the part at the `oldTail` position and move its\n    //   DOM to the new head position (before `oldParts[oldHead]`).\n    //   Last, advance `oldTail` and `newHead` pointers.\n    //\n    //               oldHead v  v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n    //                                     advance oldTail & newHead\n    //               newHead ^     ^ newTail\n    //\n    // * Example below: Old and new head keys match, so update the\n    //   old head part in place, and advance the `oldHead` and\n    //   `newHead` pointers.\n    //\n    //               oldHead v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n    //                                      newHead\n    //                  newHead ^  ^ newTail\n    //\n    // * Once the new or old pointers move past each other then all\n    //   we have left is additions (if old list exhausted) or\n    //   removals (if new list exhausted). Those are handled in the\n    //   final while loops at the end.\n    //\n    // * Example below: `oldHead` exceeded `oldTail`, so we're done\n    //   with the main loop.  Create the remaining part and insert\n    //   it at the new head position, and the update is complete.\n    //\n    //                   (oldHead > oldTail)\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //                     newHead ^ newTail\n    //\n    // * Note that the order of the if/else clauses is not\n    //   important to the algorithm, as long as the null checks\n    //   come first (to ensure we're always working on valid old\n    //   parts) and that the final else clause comes last (since\n    //   that's where the expensive moves occur). The order of\n    //   remaining clauses is is just a simple guess at which cases\n    //   will be most common.\n    //\n    // * Note, we could calculate the longest\n    //   increasing subsequence (LIS) of old items in new position,\n    //   and only move those not in the LIS set. However that costs\n    //   O(nlogn) time and adds a bit more code, and only helps\n    //   make rare types of mutations require fewer moves. The\n    //   above handles removes, adds, reversal, swaps, and single\n    //   moves of contiguous items in linear time, in the minimum\n    //   number of moves. As the number of multiple moves where LIS\n    //   might help approaches a random shuffle, the LIS\n    //   optimization becomes less helpful, so it seems not worth\n    //   the code at this point. Could reconsider if a compelling\n    //   case arises.\n\n    while (oldHead <= oldTail && newHead <= newTail) {\n      if (oldParts[oldHead] === null) {\n        // `null` means old part at head has already been used\n        // below; skip\n        oldHead++;\n      } else if (oldParts[oldTail] === null) {\n        // `null` means old part at tail has already been used\n        // below; skip\n        oldTail--;\n      } else if (oldKeys[oldHead] === newKeys[newHead]) {\n        // Old head matches new head; update in place\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newHead]\n        );\n        oldHead++;\n        newHead++;\n      } else if (oldKeys[oldTail] === newKeys[newTail]) {\n        // Old tail matches new tail; update in place\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newTail]\n        );\n        oldTail--;\n        newTail--;\n      } else if (oldKeys[oldHead] === newKeys[newTail]) {\n        // Old head matches new tail; update and move to new tail\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newTail]\n        );\n        insertPart(containerPart, newParts[newTail + 1], oldParts[oldHead]!);\n        oldHead++;\n        newTail--;\n      } else if (oldKeys[oldTail] === newKeys[newHead]) {\n        // Old tail matches new head; update and move to new head\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newHead]\n        );\n        insertPart(containerPart, oldParts[oldHead]!, oldParts[oldTail]!);\n        oldTail--;\n        newHead++;\n      } else {\n        if (newKeyToIndexMap === undefined) {\n          // Lazily generate key-to-index maps, used for removals &\n          // moves below\n          newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n          oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n        }\n        if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n          // Old head is no longer in new list; remove\n          removePart(oldParts[oldHead]!);\n          oldHead++;\n        } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n          // Old tail is no longer in new list; remove\n          removePart(oldParts[oldTail]!);\n          oldTail--;\n        } else {\n          // Any mismatches at this point are due to additions or\n          // moves; see if we have an old part we can reuse and move\n          // into place\n          const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n          const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n          if (oldPart === null) {\n            // No old part for this value; create a new one and\n            // insert it\n            const newPart = insertPart(containerPart, oldParts[oldHead]!);\n            setChildPartValue(newPart, newValues[newHead]);\n            newParts[newHead] = newPart;\n          } else {\n            // Reuse old part\n            newParts[newHead] = setChildPartValue(oldPart, newValues[newHead]);\n            insertPart(containerPart, oldParts[oldHead]!, oldPart);\n            // This marks the old part as having been used, so that\n            // it will be skipped in the first two checks above\n            oldParts[oldIndex as number] = null;\n          }\n          newHead++;\n        }\n      }\n    }\n    // Add parts for any remaining new values\n    while (newHead <= newTail) {\n      // For all remaining additions, we insert before last new\n      // tail, since old pointers are no longer valid\n      const newPart = insertPart(containerPart, newParts[newTail + 1]);\n      setChildPartValue(newPart, newValues[newHead]);\n      newParts[newHead++] = newPart;\n    }\n    // Remove any remaining unused old parts\n    while (oldHead <= oldTail) {\n      const oldPart = oldParts[oldHead++];\n      if (oldPart !== null) {\n        removePart(oldPart);\n      }\n    }\n\n    // Save order of new parts for next round\n    this._itemKeys = newKeys;\n    // Directly set part value, bypassing it's dirty-checking\n    setCommittedValue(containerPart, newParts);\n    return noChange;\n  }\n}\n\nexport interface RepeatDirectiveFn {\n  <T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ): unknown;\n  <T>(items: Iterable<T>, template: ItemTemplate<T>): unknown;\n  <T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): unknown;\n}\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * The `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n *\n * ```js\n * html`\n *   <ol>\n *     ${repeat(this.items, (item) => item.id, (item, index) => {\n *       return html`<li>${index}: ${item.name}</li>`;\n *     })}\n *   </ol>\n * `\n * ```\n *\n * **Important**: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive(RepeatDirective) as RepeatDirectiveFn;\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RepeatDirective};\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of CSS properties and values.\n *\n * The key should be either a valid CSS property name string, like\n * `'background-color'`, or a valid JavaScript camel case property name\n * for CSSStyleDeclaration like `backgroundColor`.\n */\nexport interface StyleInfo {\n  [name: string]: string | undefined | null;\n}\n\nclass StyleMapDirective extends Directive {\n  _previousStyleProperties?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'style' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        'The `styleMap` directive must be used in the `style` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(styleInfo: Readonly<StyleInfo>) {\n    return Object.keys(styleInfo).reduce((style, prop) => {\n      const value = styleInfo[prop];\n      if (value == null) {\n        return style;\n      }\n      // Convert property names from camel-case to dash-case, i.e.:\n      //  `backgroundColor` -> `background-color`\n      // Vendor-prefixed names need an extra `-` appended to front:\n      //  `webkitAppearance` -> `-webkit-appearance`\n      // Exception is any property name containing a dash, including\n      // custom properties; we assume these are already dash-cased i.e.:\n      //  `--my-button-color` --> `--my-button-color`\n      prop = prop\n        .replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, '-$&')\n        .toLowerCase();\n      return style + `${prop}:${value};`;\n    }, '');\n  }\n\n  override update(part: AttributePart, [styleInfo]: DirectiveParameters<this>) {\n    const {style} = part.element as HTMLElement;\n\n    if (this._previousStyleProperties === undefined) {\n      this._previousStyleProperties = new Set();\n      for (const name in styleInfo) {\n        this._previousStyleProperties.add(name);\n      }\n      return this.render(styleInfo);\n    }\n\n    // Remove old properties that no longer exist in styleInfo\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    this._previousStyleProperties!.forEach((name) => {\n      // If the name isn't in styleInfo or it's null/undefined\n      if (styleInfo[name] == null) {\n        this._previousStyleProperties!.delete(name);\n        if (name.includes('-')) {\n          style.removeProperty(name);\n        } else {\n          // Note reset using empty string (vs null) as IE11 does not always\n          // reset via null (https://developer.mozilla.org/en-US/docs/Web/API/ElementCSSInlineStyle/style#setting_styles)\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = '';\n        }\n      }\n    });\n\n    // Add or update properties\n    for (const name in styleInfo) {\n      const value = styleInfo[name];\n      if (value != null) {\n        this._previousStyleProperties.add(name);\n        if (name.includes('-')) {\n          style.setProperty(name, value);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = value;\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the\n * {@link StyleInfo styleInfo} object and adds the property values as CSS\n * properties. Property names with dashes (`-`) are assumed to be valid CSS\n * property names and set on the element's style object using `setProperty()`.\n * Names without dashes are assumed to be camelCased JavaScript property names\n * and set on the element's style object using property assignment, allowing the\n * style object to translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo\n * @see {@link https://lit.dev/docs/templates/directives/#stylemap styleMap code samples on Lit.dev}\n */\nexport const styleMap = directive(StyleMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {StyleMapDirective};\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\n\nclass TemplateContentDirective extends Directive {\n  private _previousTemplate?: HTMLTemplateElement;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('templateContent can only be used in child bindings');\n    }\n  }\n\n  render(template: HTMLTemplateElement) {\n    if (this._previousTemplate === template) {\n      return noChange;\n    }\n    this._previousTemplate = template;\n    return document.importNode(template.content, true);\n  }\n}\n\n/**\n * Renders the content of a template element as HTML.\n *\n * Note, the template should be developer controlled and not user controlled.\n * Rendering a user-controlled template with this directive\n * could lead to cross-site-scripting vulnerabilities.\n */\nexport const templateContent = directive(TemplateContentDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {TemplateContentDirective};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing, TemplateResult, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\n\nconst HTML_RESULT = 1;\n\nexport class UnsafeHTMLDirective extends Directive {\n  static directiveName = 'unsafeHTML';\n  static resultType = HTML_RESULT;\n\n  private _value: unknown = nothing;\n  private _templateResult?: TemplateResult;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error(\n        `${\n          (this.constructor as typeof UnsafeHTMLDirective).directiveName\n        }() can only be used in child bindings`\n      );\n    }\n  }\n\n  render(value: string | typeof nothing | typeof noChange | undefined | null) {\n    if (value === nothing || value == null) {\n      this._templateResult = undefined;\n      return (this._value = value);\n    }\n    if (value === noChange) {\n      return value;\n    }\n    if (typeof value != 'string') {\n      throw new Error(\n        `${\n          (this.constructor as typeof UnsafeHTMLDirective).directiveName\n        }() called with a non-string value`\n      );\n    }\n    if (value === this._value) {\n      return this._templateResult;\n    }\n    this._value = value;\n    const strings = [value] as unknown as TemplateStringsArray;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (strings as any).raw = strings;\n    // WARNING: impersonating a TemplateResult like this is extremely\n    // dangerous. Third-party directives should not do this.\n    return (this._templateResult = {\n      // Cast to a known set of integers that satisfy ResultType so that we\n      // don't have to export ResultType and possibly encourage this pattern.\n      // This property needs to remain unminified.\n      ['_$litType$']: (this.constructor as typeof UnsafeHTMLDirective)\n        .resultType as 1 | 2,\n      strings,\n      values: [],\n    });\n  }\n}\n\n/**\n * Renders the result as HTML, rather than text.\n *\n * The values `undefined`, `null`, and `nothing`, will all result in no content\n * (empty string) being rendered.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive(UnsafeHTMLDirective);\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {directive} from '../directive.js';\nimport {UnsafeHTMLDirective} from './unsafe-html.js';\n\nconst SVG_RESULT = 2;\n\nclass UnsafeSVGDirective extends UnsafeHTMLDirective {\n  static override directiveName = 'unsafeSVG';\n  static override resultType = SVG_RESULT;\n}\n\n/**\n * Renders the result as SVG, rather than text.\n *\n * The values `undefined`, `null`, and `nothing`, will all result in no content\n * (empty string) being rendered.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeSVG = directive(UnsafeSVGDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {UnsafeSVGDirective};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Part, noChange} from '../lit-html.js';\nimport {isPrimitive} from '../directive-helpers.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\nimport {Pauser, PseudoWeakRef} from './private-async-helpers.js';\n\nconst isPromise = (x: unknown) => {\n  return !isPrimitive(x) && typeof (x as {then?: unknown}).then === 'function';\n};\n// Effectively infinity, but a SMI.\nconst _infinity = 0x3fffffff;\n\nexport class UntilDirective extends AsyncDirective {\n  private __lastRenderedIndex: number = _infinity;\n  private __values: unknown[] = [];\n  private __weakThis = new PseudoWeakRef(this);\n  private __pauser = new Pauser();\n\n  render(...args: Array<unknown>) {\n    return args.find((x) => !isPromise(x)) ?? noChange;\n  }\n\n  override update(_part: Part, args: Array<unknown>) {\n    const previousValues = this.__values;\n    let previousLength = previousValues.length;\n    this.__values = args;\n\n    const weakThis = this.__weakThis;\n    const pauser = this.__pauser;\n\n    // If our initial render occurs while disconnected, ensure that the pauser\n    // and weakThis are in the disconnected state\n    if (!this.isConnected) {\n      this.disconnected();\n    }\n\n    for (let i = 0; i < args.length; i++) {\n      // If we've rendered a higher-priority value already, stop.\n      if (i > this.__lastRenderedIndex) {\n        break;\n      }\n\n      const value = args[i];\n\n      // Render non-Promise values immediately\n      if (!isPromise(value)) {\n        this.__lastRenderedIndex = i;\n        // Since a lower-priority value will never overwrite a higher-priority\n        // synchronous value, we can stop processing now.\n        return value;\n      }\n\n      // If this is a Promise we've already handled, skip it.\n      if (i < previousLength && value === previousValues[i]) {\n        continue;\n      }\n\n      // We have a Promise that we haven't seen before, so priorities may have\n      // changed. Forget what we rendered before.\n      this.__lastRenderedIndex = _infinity;\n      previousLength = 0;\n\n      // Note, the callback avoids closing over `this` so that the directive\n      // can be gc'ed before the promise resolves; instead `this` is retrieved\n      // from `weakThis`, which can break the hard reference in the closure when\n      // the directive disconnects\n      Promise.resolve(value).then(async (result: unknown) => {\n        // If we're disconnected, wait until we're (maybe) reconnected\n        // The while loop here handles the case that the connection state\n        // thrashes, causing the pauser to resume and then get re-paused\n        while (pauser.get()) {\n          await pauser.get();\n        }\n        // If the callback gets here and there is no `this`, it means that the\n        // directive has been disconnected and garbage collected and we don't\n        // need to do anything else\n        const _this = weakThis.deref();\n        if (_this !== undefined) {\n          const index = _this.__values.indexOf(value);\n          // If state.values doesn't contain the value, we've re-rendered without\n          // the value, so don't render it. Then, only render if the value is\n          // higher-priority than what's already been rendered.\n          if (index > -1 && index < _this.__lastRenderedIndex) {\n            _this.__lastRenderedIndex = index;\n            _this.setValue(result);\n          }\n        }\n      });\n    }\n\n    return noChange;\n  }\n\n  override disconnected() {\n    this.__weakThis.disconnect();\n    this.__pauser.pause();\n  }\n\n  override reconnected() {\n    this.__weakThis.reconnect(this);\n    this.__pauser.resume();\n  }\n}\n\n/**\n * Renders one of a series of values, including Promises, to a Part.\n *\n * Values are rendered in priority order, with the first argument having the\n * highest priority and the last argument having the lowest priority. If a\n * value is a Promise, low-priority values will be rendered until it resolves.\n *\n * The priority of values can be used to create placeholder content for async\n * data. For example, a Promise with pending content can be the first,\n * highest-priority, argument, and a non_promise loading indicator template can\n * be used as the second, lower-priority, argument. The loading indicator will\n * render immediately, and the primary content will render when the Promise\n * resolves.\n *\n * Example:\n *\n * ```js\n * const content = fetch('./content.txt').then(r => r.text());\n * html`${until(content, html`<span>Loading...</span>`)}`\n * ```\n */\nexport const until = directive(UntilDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\n// export type {UntilDirective};\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Chooses and evaluates a template function from a list based on matching\n * the given `value` to a case.\n *\n * Cases are structured as `[caseValue, func]`. `value` is matched to\n * `caseValue` by strict equality. The first match is selected. Case values\n * can be of any type including primitives, objects, and symbols.\n *\n * This is similar to a switch statement, but as an expression and without\n * fallthrough.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${choose(this.section, [\n *       ['home', () => html`<h1>Home</h1>`],\n *       ['about', () => html`<h1>About</h1>`]\n *     ],\n *     () => html`<h1>Error</h1>`)}\n *   `;\n * }\n * ```\n */\nexport const choose = <T, V>(\n  value: T,\n  cases: Array<[T, () => V]>,\n  defaultCase?: () => V\n) => {\n  for (const c of cases) {\n    const caseValue = c[0];\n    if (caseValue === value) {\n      const fn = c[1];\n      return fn();\n    }\n  }\n  return defaultCase?.();\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Returns an iterable containing the values in `items` interleaved with the\n * `joiner` value.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${join(items, html`<span class=\"separator\">|</span>`)}\n *   `;\n * }\n */\nexport function join<I, J>(\n  items: Iterable<I> | undefined,\n  joiner: (index: number) => J\n): Iterable<I | J>;\nexport function join<I, J>(\n  items: Iterable<I> | undefined,\n  joiner: J\n): Iterable<I | J>;\nexport function* join<I, J>(items: Iterable<I> | undefined, joiner: J) {\n  const isFunction = typeof joiner === 'function';\n  if (items !== undefined) {\n    let i = -1;\n    for (const value of items) {\n      if (i > -1) {\n        yield isFunction ? joiner(i) : joiner;\n      }\n      i++;\n      yield value;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  ChildPart,\n  DirectiveParameters,\n} from '../directive.js';\nimport {setCommittedValue} from '../directive-helpers.js';\n\nclass Keyed extends Directive {\n  key: unknown = nothing;\n\n  render(k: unknown, v: unknown) {\n    this.key = k;\n    return v;\n  }\n\n  override update(part: ChildPart, [k, v]: DirectiveParameters<this>) {\n    if (k !== this.key) {\n      // Clear the part before returning a value. The one-arg form of\n      // setCommittedValue sets the value to a sentinel which forces a\n      // commit the next render.\n      setCommittedValue(part);\n      this.key = k;\n    }\n    return v;\n  }\n}\n\n/**\n * Associates a renderable value with a unique key. When the key changes, the\n * previous DOM is removed and disposed before rendering the next value, even\n * if the value - such as a template - is the same.\n *\n * This is useful for forcing re-renders of stateful components, or working\n * with code that expects new data to generate new HTML elements, such as some\n * animation techniques.\n */\nexport const keyed = directive(Keyed);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {Keyed};\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Returns an iterable containing the result of calling `f(value)` on each\n * value in `items`.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     <ul>\n *       ${map(items, (i) => html`<li>${i}</li>`)}\n *     </ul>\n *   `;\n * }\n * ```\n */\nexport function* map<T>(\n  items: Iterable<T> | undefined,\n  f: (value: T, index: number) => unknown\n) {\n  if (items !== undefined) {\n    let i = 0;\n    for (const value of items) {\n      yield f(value, i++);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Returns an iterable of integers from `start` to `end` (exclusive)\n * incrementing by `step`.\n *\n * If `start` is omitted, the range starts at `0`. `step` defaults to `1`.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${map(range(8), () => html`<div class=\"cell\"></div>`)}\n *   `;\n * }\n * ```\n */\nexport function range(end: number): Iterable<number>;\nexport function range(\n  start: number,\n  end: number,\n  step?: number\n): Iterable<number>;\nexport function* range(startOrEnd: number, end?: number, step = 1) {\n  const start = end === undefined ? 0 : startOrEnd;\n  end ??= startOrEnd;\n  for (let i = start; step > 0 ? i < end : end < i; i += step) {\n    yield i;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * When `condition` is true, returns the result of calling `trueCase()`, else\n * returns the result of calling `falseCase()` if `falseCase` is defined.\n *\n * This is a convenience wrapper around a ternary expression that makes it a\n * little nicer to write an inline conditional without an else.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${when(this.user, () => html`User: ${this.user.username}`, () => html`Sign In...`)}\n *   `;\n * }\n * ```\n */\nexport function when<T, F>(\n  condition: true,\n  trueCase: () => T,\n  falseCase?: () => F\n): T;\nexport function when<T, F = undefined>(\n  condition: false,\n  trueCase: () => T,\n  falseCase?: () => F\n): F;\nexport function when<T, F = undefined>(\n  condition: unknown,\n  trueCase: () => T,\n  falseCase?: () => F\n): T | F;\nexport function when(\n  condition: unknown,\n  trueCase: () => unknown,\n  falseCase?: () => unknown\n): unknown {\n  return condition ? trueCase() : falseCase?.();\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./decorators/index\"), exports);\n__exportStar(require(\"./async\"), exports);\n__exportStar(require(\"lit\"), exports);\n__exportStar(require(\"lit/directive\"), exports);\n__exportStar(require(\"lit/experimental-hydrate\"), exports);\n__exportStar(require(\"lit/experimental-hydrate-support\"), exports);\n__exportStar(require(\"lit/polyfill-support\"), exports);\n__exportStar(require(\"lit/directive-helpers\"), exports);\n__exportStar(require(\"lit/async-directive\"), exports);\n__exportStar(require(\"lit-element\"), exports);\n__exportStar(require(\"lit/directives/class-map\"), exports);\n__exportStar(require(\"lit/directives/async-append\"), exports);\n__exportStar(require(\"lit/directives/async-replace\"), exports);\n__exportStar(require(\"lit/directives/cache\"), exports);\n__exportStar(require(\"lit/directives/guard\"), exports);\n__exportStar(require(\"lit/directives/if-defined\"), exports);\n__exportStar(require(\"lit/directives/live\"), exports);\n__exportStar(require(\"lit/directives/ref\"), exports);\n__exportStar(require(\"lit/directives/repeat\"), exports);\n__exportStar(require(\"lit/directives/style-map\"), exports);\n__exportStar(require(\"lit/directives/template-content\"), exports);\n__exportStar(require(\"lit/directives/unsafe-html\"), exports);\n__exportStar(require(\"lit/directives/unsafe-svg\"), exports);\n__exportStar(require(\"lit/directives/until\"), exports);\n__exportStar(require(\"lit/directives/choose\"), exports);\n__exportStar(require(\"lit/directives/join\"), exports);\n__exportStar(require(\"lit/directives/keyed\"), exports);\n__exportStar(require(\"lit/directives/map\"), exports);\n__exportStar(require(\"lit/directives/range\"), exports);\n__exportStar(require(\"lit/directives/when\"), exports);\n","\"use strict\";\nvar cardTypes = {\n    visa: {\n        niceType: \"Visa\",\n        type: \"visa\",\n        patterns: [4],\n        gaps: [4, 8, 12],\n        lengths: [16, 18, 19],\n        code: {\n            name: \"CVV\",\n            size: 3,\n        },\n    },\n    mastercard: {\n        niceType: \"Mastercard\",\n        type: \"mastercard\",\n        patterns: [[51, 55], [2221, 2229], [223, 229], [23, 26], [270, 271], 2720],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n    \"american-express\": {\n        niceType: \"American Express\",\n        type: \"american-express\",\n        patterns: [34, 37],\n        gaps: [4, 10],\n        lengths: [15],\n        code: {\n            name: \"CID\",\n            size: 4,\n        },\n    },\n    \"diners-club\": {\n        niceType: \"Diners Club\",\n        type: \"diners-club\",\n        patterns: [[300, 305], 36, 38, 39],\n        gaps: [4, 10],\n        lengths: [14, 16, 19],\n        code: {\n            name: \"CVV\",\n            size: 3,\n        },\n    },\n    discover: {\n        niceType: \"Discover\",\n        type: \"discover\",\n        patterns: [6011, [644, 649], 65],\n        gaps: [4, 8, 12],\n        lengths: [16, 19],\n        code: {\n            name: \"CID\",\n            size: 3,\n        },\n    },\n    jcb: {\n        niceType: \"JCB\",\n        type: \"jcb\",\n        patterns: [2131, 1800, [3528, 3589]],\n        gaps: [4, 8, 12],\n        lengths: [16, 17, 18, 19],\n        code: {\n            name: \"CVV\",\n            size: 3,\n        },\n    },\n    unionpay: {\n        niceType: \"UnionPay\",\n        type: \"unionpay\",\n        patterns: [\n            620,\n            [624, 626],\n            [62100, 62182],\n            [62184, 62187],\n            [62185, 62197],\n            [62200, 62205],\n            [622010, 622999],\n            622018,\n            [622019, 622999],\n            [62207, 62209],\n            [622126, 622925],\n            [623, 626],\n            6270,\n            6272,\n            6276,\n            [627700, 627779],\n            [627781, 627799],\n            [6282, 6289],\n            6291,\n            6292,\n            810,\n            [8110, 8131],\n            [8132, 8151],\n            [8152, 8163],\n            [8164, 8171],\n        ],\n        gaps: [4, 8, 12],\n        lengths: [14, 15, 16, 17, 18, 19],\n        code: {\n            name: \"CVN\",\n            size: 3,\n        },\n    },\n    maestro: {\n        niceType: \"Maestro\",\n        type: \"maestro\",\n        patterns: [\n            493698,\n            [500000, 504174],\n            [504176, 506698],\n            [506779, 508999],\n            [56, 59],\n            63,\n            67,\n            6,\n        ],\n        gaps: [4, 8, 12],\n        lengths: [12, 13, 14, 15, 16, 17, 18, 19],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n    elo: {\n        niceType: \"Elo\",\n        type: \"elo\",\n        patterns: [\n            401178,\n            401179,\n            438935,\n            457631,\n            457632,\n            431274,\n            451416,\n            457393,\n            504175,\n            [506699, 506778],\n            [509000, 509999],\n            627780,\n            636297,\n            636368,\n            [650031, 650033],\n            [650035, 650051],\n            [650405, 650439],\n            [650485, 650538],\n            [650541, 650598],\n            [650700, 650718],\n            [650720, 650727],\n            [650901, 650978],\n            [651652, 651679],\n            [655000, 655019],\n            [655021, 655058],\n        ],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVE\",\n            size: 3,\n        },\n    },\n    mir: {\n        niceType: \"Mir\",\n        type: \"mir\",\n        patterns: [[2200, 2204]],\n        gaps: [4, 8, 12],\n        lengths: [16, 17, 18, 19],\n        code: {\n            name: \"CVP2\",\n            size: 3,\n        },\n    },\n    hiper: {\n        niceType: \"Hiper\",\n        type: \"hiper\",\n        patterns: [637095, 63737423, 63743358, 637568, 637599, 637609, 637612],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n    hipercard: {\n        niceType: \"Hipercard\",\n        type: \"hipercard\",\n        patterns: [606282],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n};\nmodule.exports = cardTypes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clone = void 0;\nfunction clone(originalObject) {\n    if (!originalObject) {\n        return null;\n    }\n    return JSON.parse(JSON.stringify(originalObject));\n}\nexports.clone = clone;\n","\"use strict\";\n/*\n * Adapted from https://github.com/polvo-labs/card-type/blob/aaab11f80fa1939bccc8f24905a06ae3cd864356/src/cardType.js#L37-L42\n * */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.matches = void 0;\nfunction matchesRange(cardNumber, min, max) {\n    var maxLengthToCheck = String(min).length;\n    var substr = cardNumber.substr(0, maxLengthToCheck);\n    var integerRepresentationOfCardNumber = parseInt(substr, 10);\n    min = parseInt(String(min).substr(0, substr.length), 10);\n    max = parseInt(String(max).substr(0, substr.length), 10);\n    return (integerRepresentationOfCardNumber >= min &&\n        integerRepresentationOfCardNumber <= max);\n}\nfunction matchesPattern(cardNumber, pattern) {\n    pattern = String(pattern);\n    return (pattern.substring(0, cardNumber.length) ===\n        cardNumber.substring(0, pattern.length));\n}\nfunction matches(cardNumber, pattern) {\n    if (Array.isArray(pattern)) {\n        return matchesRange(cardNumber, pattern[0], pattern[1]);\n    }\n    return matchesPattern(cardNumber, pattern);\n}\nexports.matches = matches;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addMatchingCardsToResults = void 0;\nvar clone_1 = require(\"./clone\");\nvar matches_1 = require(\"./matches\");\nfunction addMatchingCardsToResults(cardNumber, cardConfiguration, results) {\n    var i, patternLength;\n    for (i = 0; i < cardConfiguration.patterns.length; i++) {\n        var pattern = cardConfiguration.patterns[i];\n        if (!matches_1.matches(cardNumber, pattern)) {\n            continue;\n        }\n        var clonedCardConfiguration = clone_1.clone(cardConfiguration);\n        if (Array.isArray(pattern)) {\n            patternLength = String(pattern[0]).length;\n        }\n        else {\n            patternLength = String(pattern).length;\n        }\n        if (cardNumber.length >= patternLength) {\n            clonedCardConfiguration.matchStrength = patternLength;\n        }\n        results.push(clonedCardConfiguration);\n        break;\n    }\n}\nexports.addMatchingCardsToResults = addMatchingCardsToResults;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidInputType = void 0;\nfunction isValidInputType(cardNumber) {\n    return typeof cardNumber === \"string\" || cardNumber instanceof String;\n}\nexports.isValidInputType = isValidInputType;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findBestMatch = void 0;\nfunction hasEnoughResultsToDetermineBestMatch(results) {\n    var numberOfResultsWithMaxStrengthProperty = results.filter(function (result) { return result.matchStrength; }).length;\n    /*\n     * if all possible results have a maxStrength property that means the card\n     * number is sufficiently long enough to determine conclusively what the card\n     * type is\n     * */\n    return (numberOfResultsWithMaxStrengthProperty > 0 &&\n        numberOfResultsWithMaxStrengthProperty === results.length);\n}\nfunction findBestMatch(results) {\n    if (!hasEnoughResultsToDetermineBestMatch(results)) {\n        return null;\n    }\n    return results.reduce(function (bestMatch, result) {\n        if (!bestMatch) {\n            return result;\n        }\n        /*\n         * If the current best match pattern is less specific than this result, set\n         * the result as the new best match\n         * */\n        if (Number(bestMatch.matchStrength) < Number(result.matchStrength)) {\n            return result;\n        }\n        return bestMatch;\n    });\n}\nexports.findBestMatch = findBestMatch;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar cardTypes = require(\"./lib/card-types\");\nvar add_matching_cards_to_results_1 = require(\"./lib/add-matching-cards-to-results\");\nvar is_valid_input_type_1 = require(\"./lib/is-valid-input-type\");\nvar find_best_match_1 = require(\"./lib/find-best-match\");\nvar clone_1 = require(\"./lib/clone\");\nvar customCards = {};\nvar cardNames = {\n    VISA: \"visa\",\n    MASTERCARD: \"mastercard\",\n    AMERICAN_EXPRESS: \"american-express\",\n    DINERS_CLUB: \"diners-club\",\n    DISCOVER: \"discover\",\n    JCB: \"jcb\",\n    UNIONPAY: \"unionpay\",\n    MAESTRO: \"maestro\",\n    ELO: \"elo\",\n    MIR: \"mir\",\n    HIPER: \"hiper\",\n    HIPERCARD: \"hipercard\",\n};\nvar ORIGINAL_TEST_ORDER = [\n    cardNames.VISA,\n    cardNames.MASTERCARD,\n    cardNames.AMERICAN_EXPRESS,\n    cardNames.DINERS_CLUB,\n    cardNames.DISCOVER,\n    cardNames.JCB,\n    cardNames.UNIONPAY,\n    cardNames.MAESTRO,\n    cardNames.ELO,\n    cardNames.MIR,\n    cardNames.HIPER,\n    cardNames.HIPERCARD,\n];\nvar testOrder = clone_1.clone(ORIGINAL_TEST_ORDER);\nfunction findType(cardType) {\n    return customCards[cardType] || cardTypes[cardType];\n}\nfunction getAllCardTypes() {\n    return testOrder.map(function (cardType) { return clone_1.clone(findType(cardType)); });\n}\nfunction getCardPosition(name, ignoreErrorForNotExisting) {\n    if (ignoreErrorForNotExisting === void 0) { ignoreErrorForNotExisting = false; }\n    var position = testOrder.indexOf(name);\n    if (!ignoreErrorForNotExisting && position === -1) {\n        throw new Error('\"' + name + '\" is not a supported card type.');\n    }\n    return position;\n}\nfunction creditCardType(cardNumber) {\n    var results = [];\n    if (!is_valid_input_type_1.isValidInputType(cardNumber)) {\n        return results;\n    }\n    if (cardNumber.length === 0) {\n        return getAllCardTypes();\n    }\n    testOrder.forEach(function (cardType) {\n        var cardConfiguration = findType(cardType);\n        add_matching_cards_to_results_1.addMatchingCardsToResults(cardNumber, cardConfiguration, results);\n    });\n    var bestMatch = find_best_match_1.findBestMatch(results);\n    if (bestMatch) {\n        return [bestMatch];\n    }\n    return results;\n}\ncreditCardType.getTypeInfo = function (cardType) {\n    return clone_1.clone(findType(cardType));\n};\ncreditCardType.removeCard = function (name) {\n    var position = getCardPosition(name);\n    testOrder.splice(position, 1);\n};\ncreditCardType.addCard = function (config) {\n    var existingCardPosition = getCardPosition(config.type, true);\n    customCards[config.type] = config;\n    if (existingCardPosition === -1) {\n        testOrder.push(config.type);\n    }\n};\ncreditCardType.updateCard = function (cardType, updates) {\n    var originalObject = customCards[cardType] || cardTypes[cardType];\n    if (!originalObject) {\n        throw new Error(\"\\\"\" + cardType + \"\\\" is not a recognized type. Use `addCard` instead.'\");\n    }\n    if (updates.type && originalObject.type !== updates.type) {\n        throw new Error(\"Cannot overwrite type parameter.\");\n    }\n    var clonedCard = clone_1.clone(originalObject);\n    clonedCard = __assign(__assign({}, clonedCard), updates);\n    customCards[clonedCard.type] = clonedCard;\n};\ncreditCardType.changeOrder = function (name, position) {\n    var currentPosition = getCardPosition(name);\n    testOrder.splice(currentPosition, 1);\n    testOrder.splice(position, 0, name);\n};\ncreditCardType.resetModifications = function () {\n    testOrder = clone_1.clone(ORIGINAL_TEST_ORDER);\n    customCards = {};\n};\ncreditCardType.types = cardNames;\nmodule.exports = creditCardType;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AmericanExpress = void 0;\nconst lit_html_1 = require(\"@rxdi/lit-html\");\nexports.AmericanExpress = (0, lit_html_1.svg) `\n <svg\n  version=\"1.1\"\n  id=\"Layer_1\"\n  xmlns:sketch=\"\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n  x=\"0px\"\n  y=\"0px\"\n  width=\"750\"\n  height=\"471\"\n  viewBox=\"0 0 750 471\"\n  enable-background=\"new 0 0 752 471\"\n  xml:space=\"preserve\"\n >\n  <title>Slice 1</title>\n  <desc>Created with Sketch.</desc>\n  <g>\n   <g>\n    <path\n     fill=\"#2557D6\"\n     d=\"M554.594,130.608l-14.521,35.039h29.121L554.594,130.608z M387.03,152.321c2.738-1.422,4.349-4.515,4.349-8.356c0-3.764-1.693-6.49-4.431-7.771c-2.492-1.42-6.328-1.584-10.006-1.584h-25.978v19.523h25.63C380.7,154.134,384.131,154.074,387.03,152.321z M54.142,130.608l-14.357,35.039h28.8L54.142,130.608z M722.565,355.08h-40.742v-18.852h40.578c4.023,0,6.84-0.525,8.537-2.177c1.471-1.358,2.494-3.336,2.494-5.733c0-2.562-1.023-4.596-2.578-5.813c-1.529-1.342-3.76-1.953-7.434-1.953c-19.81-0.67-44.523,0.609-44.523-27.211c0-12.75,8.131-26.172,30.27-26.172h42.025v-17.492h-39.045c-11.783,0-20.344,2.81-26.406,7.181v-7.181h-57.752c-9.233,0-20.074,2.279-25.201,7.181v-7.181H499.655v7.181c-8.207-5.898-22.057-7.181-28.447-7.181H403.18v7.181c-6.492-6.262-20.935-7.181-29.734-7.181h-76.134l-17.42,18.775l-16.318-18.775H149.847v122.675h111.586l17.95-19.076l16.91,19.076l68.78,0.059v-28.859h6.764c9.125,0.145,19.889-0.223,29.387-4.311v33.107h56.731v-31.976h2.736c3.492,0,3.838,0.146,3.838,3.621v28.348h172.344c10.941,0,22.38-2.786,28.712-7.853v7.853h54.668c11.375,0,22.485-1.588,30.938-5.653v-22.853C746.069,351.297,736.079,355.08,722.565,355.08z M372.734,326.113h-26.325v29.488h-41.006L279.425,326.5l-26.997,29.102h-83.569v-87.914h84.855l25.955,28.818l26.835-28.818h67.414c16.743,0,35.555,4.617,35.555,28.963C409.473,321.072,391.176,326.113,372.734,326.113z M499.323,322.127c2.98,4.291,3.41,8.297,3.496,16.047v17.428h-21.182v-10.998c0-5.289,0.512-13.121-3.41-17.209c-3.08-3.149-7.781-3.901-15.48-3.901h-22.545v32.108h-21.198v-87.914h48.706c10.685,0,18.462,0.472,25.386,4.148c6.658,4.006,10.848,9.494,10.848,19.523c-0.002,14.031-9.399,21.19-14.953,23.389C493.684,316.473,497.522,319.566,499.323,322.127z M586.473,285.869h-49.404v15.982h48.197v17.938h-48.197v17.492l49.404,0.078v18.242h-70.414v-87.914h70.414V285.869z M640.686,355.6h-41.09v-18.852h40.926c4.002,0,6.84-0.527,8.619-2.178c1.449-1.359,2.492-3.336,2.492-5.73c0-2.564-1.129-4.598-2.574-5.818c-1.615-1.34-3.842-1.948-7.514-1.948c-19.73-0.673-44.439,0.606-44.439-27.212c0-12.752,8.047-26.174,30.164-26.174h42.297v18.709h-38.703c-3.836,0-6.33,0.146-8.451,1.592c-2.313,1.423-3.17,3.535-3.17,6.322c0,3.316,1.963,5.574,4.615,6.549c2.228,0.771,4.617,0.996,8.211,0.996l11.359,0.308c11.449,0.274,19.313,2.25,24.092,7.069c4.105,4.232,6.311,9.578,6.311,18.625C673.829,346.771,661.963,355.6,640.686,355.6z M751.192,343.838L751.192,343.838L751.192,343.838L751.192,343.838z M477.061,287.287c-2.549-1.508-6.311-1.588-10.066-1.588h-25.979v19.744h25.631c4.104,0,7.594-0.144,10.414-1.812c2.734-1.646,4.371-4.678,4.371-8.438C481.432,291.434,479.795,288.711,477.061,287.287z M712.784,285.697c-3.838,0-6.389,0.145-8.537,1.588c-2.227,1.426-3.081,3.537-3.081,6.326c0,3.315,1.879,5.572,4.612,6.549c2.228,0.771,4.615,0.996,8.129,0.996l11.437,0.303c11.537,0.285,19.242,2.262,23.938,7.08c0.855,0.668,1.369,1.42,1.957,2.174v-25.014h-38.453L712.784,285.697L712.784,285.697z M373.47,285.697h-27.509v22.391h27.265c8.105,0,13.146-4.006,13.149-11.611C386.372,288.789,381.086,285.697,373.47,285.697z M189.872,285.697v15.984h46.315v17.938h-46.315v17.49h51.87l24.1-25.791l-23.076-25.621H189.872L189.872,285.697z M325.321,347.176v-70.482l-32.391,34.673L325.321,347.176z M191.649,206.025v15.148h176.263l-0.082-32.046h3.411c2.39,0.083,3.084,0.302,3.084,4.229v27.818h91.164v-7.461c7.353,3.924,18.789,7.461,33.838,7.461h38.353l8.209-19.522h18.197l8.026,19.522h73.906V202.63l11.189,18.543h59.227V98.59h-58.611v14.477l-8.207-14.477h-60.143v14.477l-7.537-14.477h-81.24c-13.6,0-25.551,1.89-35.207,7.158V98.59h-56.063v7.158c-6.146-5.43-14.519-7.158-23.826-7.158H180.784l-13.742,31.662L152.928,98.59H88.417v14.477L81.329,98.59H26.312L0.763,156.874v46.621l37.779-87.894h31.346l35.88,83.217v-83.217h34.435l27.61,59.625l25.365-59.625h35.126v87.894h-21.625l-0.079-68.837l-30.593,68.837h-18.524l-30.671-68.898v68.898H83.899l-8.106-19.605H31.865l-8.19,19.605H0.762v17.682h36.049l8.128-19.523h18.198l8.106,19.523h70.925V206.25l6.33,14.989h36.819L191.649,206.025z M469.401,125.849c6.818-7.015,17.5-10.25,32.039-10.25h20.424v18.833h-19.996c-7.696,0-12.047,1.14-16.233,5.208c-3.599,3.7-6.066,10.696-6.066,19.908c0,9.417,1.881,16.206,5.801,20.641c3.248,3.478,9.152,4.533,14.705,4.533h9.478l29.733-69.12h31.611l35.719,83.134v-83.133h32.123l37.086,61.213v-61.213h21.611v87.891h-29.898l-39.989-65.968v65.968h-42.968l-8.209-19.605h-43.827l-7.966,19.605h-24.688c-10.254,0-23.238-2.258-30.59-9.722c-7.416-7.462-11.271-17.571-11.271-33.553C458.026,147.182,460.329,135.266,469.401,125.849z M426.006,115.6h21.526v87.894h-21.526V115.6z M328.951,115.6h48.525c10.779,0,18.727,0.285,25.547,4.21c6.674,3.926,10.676,9.658,10.676,19.46c0,14.015-9.393,21.254-14.864,23.429c4.614,1.75,8.559,4.841,10.438,7.401c2.979,4.372,3.492,8.277,3.492,16.126v17.267h-21.279l-0.08-11.084c0-5.29,0.508-12.896-3.33-17.122c-3.082-3.09-7.782-3.763-15.379-3.763H350.05v31.97h-21.098L328.951,115.6L328.951,115.6z M243.902,115.6h70.479v18.303h-49.379v15.843h48.193v18.017h-48.193v17.553h49.379v18.177h-70.479V115.6L243.902,115.6z\"\n    ></path>\n   </g>\n  </g>\n </svg>\n`;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Diners = void 0;\nconst lit_html_1 = require(\"@rxdi/lit-html\");\nexports.Diners = (0, lit_html_1.svg) `\n <svg\n  version=\"1.1\"\n  id=\"Layer_1\"\n  xmlns:sketch=\"\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n  x=\"0px\"\n  y=\"0px\"\n  width=\"750\"\n  height=\"471\"\n  viewBox=\"0 0 750 471\"\n  enable-background=\"new 0 0 750 471\"\n  xml:space=\"preserve\"\n >\n  <title>diners</title>\n  <desc>Created with Sketch.</desc>\n  <g id=\"diners\" sketch:type=\"MSLayerGroup\">\n   <path\n    id=\"Shape-path\"\n    sketch:type=\"MSShapeGroup\"\n    fill=\"#0079BE\"\n    d=\"M584.934,236.947c0-99.416-82.98-168.133-173.896-168.1h-78.241c-92.003-0.033-167.73,68.705-167.73,168.1c0,90.931,75.729,165.641,167.73,165.203h78.241C501.951,402.587,584.934,327.857,584.934,236.947L584.934,236.947z\"\n   ></path>\n   <path\n    id=\"Shape-path_1_\"\n    sketch:type=\"MSShapeGroup\"\n    fill=\"#FFFFFF\"\n    d=\"M333.281,82.932c-84.069,0.026-152.193,68.308-152.215,152.58c0.021,84.258,68.145,152.532,152.215,152.559c84.088-0.026,152.229-68.301,152.239-152.559C485.508,151.238,417.369,82.958,333.281,82.932L333.281,82.932z\"\n   ></path>\n   <path\n    id=\"Path\"\n    sketch:type=\"MSShapeGroup\"\n    fill=\"#0079BE\"\n    d=\"M237.066,235.098c0.08-41.18,25.747-76.296,61.94-90.25v180.479C262.813,311.381,237.145,276.283,237.066,235.098z M368.066,325.373V144.848c36.208,13.921,61.915,49.057,61.981,90.256C429.981,276.316,404.274,311.426,368.066,325.373z\"\n   ></path>\n  </g>\n </svg>\n`;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Discover = void 0;\nconst lit_html_1 = require(\"@rxdi/lit-html\");\nexports.Discover = (0, lit_html_1.svg) `\n <svg\n  version=\"1.1\"\n  id=\"Layer_1\"\n  xmlns:sketch=\"\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n  x=\"0px\"\n  y=\"0px\"\n  width=\"780px\"\n  height=\"501px\"\n  viewBox=\"0 0 780 501\"\n  enable-background=\"new 0 0 780 501\"\n  xml:space=\"preserve\"\n >\n  <title>discover</title>\n  <desc>Created with Sketch.</desc>\n  <g id=\"Page-1\" sketch:type=\"MSPage\">\n   <g id=\"discover\" sketch:type=\"MSLayerGroup\">\n    <path\n     fill=\"#F47216\"\n     d=\"M409.412,197.758c30.938,0,56.02,23.58,56.02,52.709v0.033c0,29.129-25.082,52.742-56.02,52.742c-30.941,0-56.022-23.613-56.022-52.742v-0.033C353.39,221.338,378.471,197.758,409.412,197.758L409.412,197.758z\"\n    ></path>\n    <path\n     d=\"M321.433,198.438c8.836,0,16.247,1.785,25.269,6.09v22.752c-8.544-7.863-15.955-11.154-25.757-11.154c-19.265,0-34.413,15.015-34.413,34.051c0,20.074,14.681,34.195,35.368,34.195c9.313,0,16.586-3.12,24.802-10.856v22.764c-9.343,4.141-16.912,5.775-25.757,5.775c-31.277,0-55.581-22.597-55.581-51.737C265.363,221.49,290.314,198.438,321.433,198.438L321.433,198.438z\"\n    ></path>\n    <path\n     d=\"M224.32,199.064c11.546,0,22.109,3.721,30.942,10.994l-10.748,13.248c-5.351-5.646-10.411-8.027-16.563-8.027c-8.854,0-15.301,4.745-15.301,10.988c0,5.354,3.618,8.188,15.944,12.482c23.364,8.043,30.289,15.176,30.289,30.926c0,19.193-14.976,32.554-36.319,32.554c-15.631,0-26.993-5.795-36.457-18.871l13.268-12.031c4.73,8.609,12.622,13.223,22.42,13.223c9.163,0,15.947-5.951,15.947-13.984c0-4.164-2.056-7.733-6.158-10.258c-2.066-1.195-6.158-2.977-14.199-5.646c-19.292-6.538-25.91-13.527-25.91-27.186C191.474,211.25,205.688,199.064,224.32,199.064L224.32,199.064z\"\n    ></path>\n    <polygon\n     points=\"459.043,200.793 481.479,200.793 509.563,267.385 538.01,200.793 560.276,200.793 514.783,302.479 503.729,302.479 \"\n    ></polygon>\n    <polygon\n     points=\"157.83,200.945 178.371,200.945 178.371,300.088 157.83,300.088 \"\n    ></polygon>\n    <polygon\n     points=\"569.563,200.945 627.815,200.945 627.815,217.744 590.09,217.744 590.09,239.75 626.426,239.75 626.426,256.541 590.09,256.541 590.09,283.303 627.815,283.303 627.815,300.088 569.563,300.088 \"\n    ></polygon>\n    <path\n     d=\"M685.156,258.322c15.471-2.965,23.984-12.926,23.984-28.105c0-18.562-13.576-29.271-37.266-29.271H641.42v99.143h20.516V260.26h2.68l28.43,39.828h25.26L685.156,258.322z M667.938,246.586h-6.002v-30.025h6.326c12.791,0,19.744,5.049,19.744,14.697C688.008,241.224,681.055,246.586,667.938,246.586z\"\n    ></path>\n    <path\n     d=\"M91.845,200.945H61.696v99.143h29.992c15.946,0,27.465-3.543,37.573-11.445c12.014-9.36,19.117-23.467,19.117-38.057C148.379,221.327,125.157,200.945,91.845,200.945z M115.842,275.424c-6.454,5.484-14.837,7.879-28.108,7.879H82.22v-65.559h5.513c13.271,0,21.323,2.238,28.108,8.018c7.104,5.956,11.377,15.183,11.377,24.682C127.219,259.957,122.945,269.468,115.842,275.424z\"\n    ></path>\n   </g>\n  </g>\n </svg>\n`;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JSB = void 0;\nconst lit_html_1 = require(\"@rxdi/lit-html\");\nexports.JSB = (0, lit_html_1.svg) `\n <svg\n  version=\"1.1\"\n  id=\"Layer_1\"\n  xmlns:sketch=\"\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n  x=\"0px\"\n  y=\"0px\"\n  width=\"750px\"\n  height=\"471px\"\n  viewBox=\"0 0 750 471\"\n  enable-background=\"new 0 0 750 471\"\n  xml:space=\"preserve\"\n >\n  <title>Slice 1</title>\n  <desc>Created with Sketch.</desc>\n  <g>\n   <path\n    id=\"path3494\"\n    sketch:type=\"MSShapeGroup\"\n    fill=\"#FFFFFF\"\n    d=\"M617.242,346.766c0,41.615-33.729,75.36-75.357,75.36H132.759V124.245c0-41.626,33.73-75.371,75.364-75.371h409.12V346.766L617.242,346.766L617.242,346.766z\"\n   ></path>\n   <linearGradient\n    id=\"path3496_1_\"\n    gradientUnits=\"userSpaceOnUse\"\n    x1=\"824.7424\"\n    y1=\"333.7813\"\n    x2=\"825.7424\"\n    y2=\"333.7813\"\n    gradientTransform=\"matrix(132.8743 0 0 -323.0226 -109129.5313 108054.6016)\"\n   >\n    <stop offset=\"0\" style=\"stop-color:#007B40\"></stop>\n    <stop offset=\"1\" style=\"stop-color:#55B330\"></stop>\n   </linearGradient>\n   <path\n    id=\"path3496\"\n    sketch:type=\"MSShapeGroup\"\n    fill=\"url(#path3496_1_)\"\n    d=\"M483.86,242.045c11.686,0.254,23.439-0.516,35.078,0.4c11.787,2.199,14.627,20.043,4.156,25.887c-7.145,3.85-15.633,1.434-23.379,2.113H483.86V242.045L483.86,242.045z M525.694,209.9c2.596,9.164-6.238,17.392-15.064,16.13h-26.77c0.188-8.642-0.367-18.022,0.273-26.209c10.723,0.302,21.547-0.616,32.209,0.48C520.922,201.452,524.756,205.218,525.694,209.9L525.694,209.9z M590.119,73.997c0.498,17.501,0.072,35.927,0.215,53.783c-0.033,72.596,0.07,145.195-0.057,217.789c-0.469,27.207-24.582,50.847-51.6,51.39c-27.045,0.11-54.094,0.017-81.143,0.047v-109.75c29.471-0.153,58.957,0.308,88.416-0.231c13.666-0.858,28.635-9.875,29.271-24.914c1.609-15.103-12.631-25.551-26.152-27.201c-5.197-0.135-5.045-1.515,0-2.117c12.895-2.787,23.021-16.133,19.227-29.499c-3.234-14.058-18.771-19.499-31.695-19.472c-26.352-0.179-52.709-0.025-79.063-0.077c0.17-20.489-0.355-41,0.283-61.474c2.088-26.716,26.807-48.748,53.447-48.27C537.555,73.998,563.838,73.998,590.119,73.997L590.119,73.997z\"\n   ></path>\n   <linearGradient\n    id=\"path3498_1_\"\n    gradientUnits=\"userSpaceOnUse\"\n    x1=\"824.7551\"\n    y1=\"333.7822\"\n    x2=\"825.7484\"\n    y2=\"333.7822\"\n    gradientTransform=\"matrix(133.4307 0 0 -323.0203 -109887.6875 108053.8203)\"\n   >\n    <stop offset=\"0\" style=\"stop-color:#1D2970\"></stop>\n    <stop offset=\"1\" style=\"stop-color:#006DBA\"></stop>\n   </linearGradient>\n   <path\n    id=\"path3498\"\n    sketch:type=\"MSShapeGroup\"\n    fill=\"url(#path3498_1_)\"\n    d=\"M159.742,125.041c0.673-27.164,24.888-50.611,51.872-51.008c26.945-0.083,53.894-0.012,80.839-0.036c-0.074,90.885,0.146,181.776-0.111,272.657c-1.038,26.834-24.989,49.834-51.679,50.309c-26.996,0.098-53.995,0.014-80.992,0.041V283.551c26.223,6.195,53.722,8.832,80.474,4.723c15.991-2.574,33.487-10.426,38.901-27.016c3.984-14.191,1.741-29.126,2.334-43.691v-33.825h-46.297c-0.208,22.371,0.426,44.781-0.335,67.125c-1.248,13.734-14.849,22.46-27.802,21.994c-16.064,0.17-47.897-11.641-47.897-11.641C158.969,219.305,159.515,166.814,159.742,125.041L159.742,125.041z\"\n   ></path>\n   <linearGradient\n    id=\"path3500_1_\"\n    gradientUnits=\"userSpaceOnUse\"\n    x1=\"824.7424\"\n    y1=\"333.7813\"\n    x2=\"825.741\"\n    y2=\"333.7813\"\n    gradientTransform=\"matrix(132.9583 0 0 -323.0276 -109347.9219 108056.2656)\"\n   >\n    <stop offset=\"0\" style=\"stop-color:#6E2B2F\"></stop>\n    <stop offset=\"1\" style=\"stop-color:#E30138\"></stop>\n   </linearGradient>\n   <path\n    id=\"path3500\"\n    sketch:type=\"MSShapeGroup\"\n    fill=\"url(#path3500_1_)\"\n    d=\"M309.721,197.39c-2.437,0.517-0.491-8.301-1.114-11.646c0.166-21.15-0.346-42.323,0.284-63.458c2.082-26.829,26.991-48.916,53.738-48.288h78.767c-0.074,90.885,0.145,181.775-0.111,272.657c-1.039,26.834-24.992,49.833-51.682,50.309c-26.998,0.101-53.998,0.015-80.997,0.042V272.707c18.44,15.129,43.5,17.484,66.472,17.525c17.318-0.006,34.535-2.676,51.353-6.67V260.79c-18.953,9.446-41.234,15.446-62.244,10.019c-14.656-3.649-25.294-17.813-25.057-32.937c-1.698-15.729,7.522-32.335,22.979-37.011c19.192-6.008,40.108-1.413,58.096,6.398c3.855,2.018,7.766,4.521,6.225-1.921v-17.899c-30.086-7.158-62.104-9.792-92.33-2.005C325.352,187.902,316.828,191.645,309.721,197.39L309.721,197.39z\"\n   ></path>\n  </g>\n </svg>\n`;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Maesto = void 0;\nconst lit_html_1 = require(\"@rxdi/lit-html\");\nexports.Maesto = (0, lit_html_1.svg) `\n <svg\n  id=\"Layer_1\"\n  data-name=\"Layer 1\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"482.6\"\n  height=\"374.31\"\n  viewBox=\"0 0 482.6 374.31\"\n >\n  <title>maestro</title>\n  <g>\n   <path\n    d=\"M278.8,421.77V397c0-9.35-6-15.64-15.55-15.72-5-.08-10.26,1.49-13.9,7-2.73-4.38-7-7-13.07-7a13.08,13.08,0,0,0-11.58,5.87v-4.88h-8.61v39.55h8.69V399.85c0-6.87,3.81-10.51,9.68-10.51,5.71,0,8.61,3.72,8.61,10.42v22h8.69V399.85c0-6.87,4-10.51,9.68-10.51,5.87,0,8.69,3.72,8.69,10.42v22ZM327.28,402V382.23h-8.61V387c-2.73-3.56-6.87-5.79-12.49-5.79-11.09,0-19.77,8.69-19.77,20.77s8.69,20.77,19.77,20.77c5.63,0,9.76-2.23,12.49-5.79v4.8h8.61Zm-32,0c0-6.95,4.55-12.66,12-12.66,7.12,0,11.91,5.46,11.91,12.66s-4.8,12.66-11.91,12.66C299.81,414.66,295.26,408.95,295.26,402ZM511.4,381.19a22.29,22.29,0,0,1,8.49,1.59,20.71,20.71,0,0,1,6.75,4.38,20,20,0,0,1,4.46,6.59,22,22,0,0,1,0,16.52,20,20,0,0,1-4.46,6.59,20.69,20.69,0,0,1-6.75,4.38,23.43,23.43,0,0,1-17,0,20.47,20.47,0,0,1-6.73-4.38,20.21,20.21,0,0,1-4.44-6.59,22,22,0,0,1,0-16.52,20.23,20.23,0,0,1,4.44-6.59,20.48,20.48,0,0,1,6.73-4.38A22.29,22.29,0,0,1,511.4,381.19Zm0,8.14a12.84,12.84,0,0,0-4.91.93,11.62,11.62,0,0,0-3.92,2.6,12.13,12.13,0,0,0-2.6,4,14.39,14.39,0,0,0,0,10.28,12.11,12.11,0,0,0,2.6,4,11.62,11.62,0,0,0,3.92,2.6,13.46,13.46,0,0,0,9.83,0,11.86,11.86,0,0,0,3.94-2.6,12,12,0,0,0,2.62-4,14.39,14.39,0,0,0,0-10.28,12,12,0,0,0-2.62-4,11.86,11.86,0,0,0-3.94-2.6A12.84,12.84,0,0,0,511.4,389.32ZM374.1,402c-.08-12.33-7.69-20.77-18.78-20.77-11.58,0-19.69,8.44-19.69,20.77,0,12.58,8.44,20.77,20.27,20.77,6,0,11.42-1.49,16.22-5.54l-4.22-6.37A18.84,18.84,0,0,1,356.4,415c-5.54,0-10.59-2.56-11.83-9.68h29.37C374,404.23,374.1,403.16,374.1,402Zm-29.45-3.47c.91-5.71,4.38-9.6,10.51-9.6,5.54,0,9.1,3.47,10,9.6Zm65.69-6.2A25.49,25.49,0,0,0,398,388.93c-4.72,0-7.53,1.74-7.53,4.63,0,2.65,3,3.39,6.7,3.89l4.05.58c8.61,1.24,13.82,4.88,13.82,11.83,0,7.53-6.62,12.91-18,12.91-6.45,0-12.41-1.66-17.13-5.13l4.05-6.7a21.07,21.07,0,0,0,13.16,4.14c5.87,0,9-1.74,9-4.8,0-2.23-2.23-3.47-6.95-4.14l-4.05-.58c-8.85-1.24-13.65-5.21-13.65-11.67,0-7.86,6.45-12.66,16.46-12.66,6.29,0,12,1.41,16.13,4.14Zm41.35-2.23H437.62V408c0,4,1.41,6.62,5.71,6.62a15.89,15.89,0,0,0,7.61-2.23l2.48,7.36a20.22,20.22,0,0,1-10.76,3.06c-10.18,0-13.73-5.46-13.73-14.65v-18h-8v-7.86h8v-12h8.69v12h14.06Zm29.78-8.85a18.38,18.38,0,0,1,6.12,1.08l-2.65,8.11a14,14,0,0,0-5.38-1c-5.63,0-8.44,3.64-8.44,10.18v22.17h-8.6V382.23H471V387a11.66,11.66,0,0,1,10.42-5.79Z\"\n    transform=\"translate(-132.9 -48.5)\"\n   ></path>\n   <g id=\"_Group_\" data-name=\"<Group>\">\n    <rect x=\"176.05\" y=\"31.89\" width=\"130.5\" height=\"234.51\" fill=\"#7673c0\"></rect>\n    <path\n     id=\"_Path_\"\n     data-name=\"<Path>\"\n     d=\"M317.24,197.64a148.88,148.88,0,0,1,57-117.26,149.14,149.14,0,1,0,0,234.51A148.88,148.88,0,0,1,317.24,197.64Z\"\n     transform=\"translate(-132.9 -48.5)\"\n     fill=\"#eb001b\"\n    ></path>\n    <path\n     d=\"M615.5,197.64A149.14,149.14,0,0,1,374.2,314.9a149.16,149.16,0,0,0,0-234.51A149.14,149.14,0,0,1,615.5,197.64Z\"\n     transform=\"translate(-132.9 -48.5)\"\n     fill=\"#00a1df\"\n    ></path>\n   </g>\n  </g>\n </svg>\n`;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mastercard = void 0;\nconst lit_html_1 = require(\"@rxdi/lit-html\");\nexports.Mastercard = (0, lit_html_1.svg) `\n <svg\n  id=\"Layer_1\"\n  data-name=\"Layer 1\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"482.51\"\n  height=\"374\"\n  viewBox=\"0 0 482.51 374\"\n >\n  <title>mastercard</title>\n  <g>\n   <path\n    d=\"M220.13,421.67V396.82c0-9.53-5.8-15.74-15.32-15.74-5,0-10.35,1.66-14.08,7-2.9-4.56-7-7-13.25-7a14.07,14.07,0,0,0-12,5.8v-5h-7.87v39.76h7.87V398.89c0-7,4.14-10.35,9.94-10.35s9.11,3.73,9.11,10.35v22.78h7.87V398.89c0-7,4.14-10.35,9.94-10.35s9.11,3.73,9.11,10.35v22.78Zm129.22-39.35h-14.5v-12H327v12h-8.28v7H327V408c0,9.11,3.31,14.5,13.25,14.5A23.17,23.17,0,0,0,351,419.6l-2.49-7a13.63,13.63,0,0,1-7.46,2.07c-4.14,0-6.21-2.49-6.21-6.63V389h14.5v-6.63Zm73.72-1.24a12.39,12.39,0,0,0-10.77,5.8v-5h-7.87v39.76h7.87V399.31c0-6.63,3.31-10.77,8.7-10.77a24.24,24.24,0,0,1,5.38.83l2.49-7.46a28,28,0,0,0-5.8-.83Zm-111.41,4.14c-4.14-2.9-9.94-4.14-16.15-4.14-9.94,0-16.15,4.56-16.15,12.43,0,6.63,4.56,10.35,13.25,11.6l4.14.41c4.56.83,7.46,2.49,7.46,4.56,0,2.9-3.31,5-9.53,5a21.84,21.84,0,0,1-13.25-4.14l-4.14,6.21c5.8,4.14,12.84,5,17,5,11.6,0,17.81-5.38,17.81-12.84,0-7-5-10.35-13.67-11.6l-4.14-.41c-3.73-.41-7-1.66-7-4.14,0-2.9,3.31-5,7.87-5,5,0,9.94,2.07,12.43,3.31Zm120.11,16.57c0,12,7.87,20.71,20.71,20.71,5.8,0,9.94-1.24,14.08-4.56l-4.14-6.21a16.74,16.74,0,0,1-10.35,3.73c-7,0-12.43-5.38-12.43-13.25S445,389,452.07,389a16.74,16.74,0,0,1,10.35,3.73l4.14-6.21c-4.14-3.31-8.28-4.56-14.08-4.56-12.43-.83-20.71,7.87-20.71,19.88h0Zm-55.5-20.71c-11.6,0-19.47,8.28-19.47,20.71s8.28,20.71,20.29,20.71a25.33,25.33,0,0,0,16.15-5.38l-4.14-5.8a19.79,19.79,0,0,1-11.6,4.14c-5.38,0-11.18-3.31-12-10.35h29.41v-3.31c0-12.43-7.46-20.71-18.64-20.71h0Zm-.41,7.46c5.8,0,9.94,3.73,10.35,9.94H364.68c1.24-5.8,5-9.94,11.18-9.94ZM268.59,401.79V381.91h-7.87v5c-2.9-3.73-7-5.8-12.84-5.8-11.18,0-19.47,8.7-19.47,20.71s8.28,20.71,19.47,20.71c5.8,0,9.94-2.07,12.84-5.8v5h7.87V401.79Zm-31.89,0c0-7.46,4.56-13.25,12.43-13.25,7.46,0,12,5.8,12,13.25,0,7.87-5,13.25-12,13.25-7.87.41-12.43-5.8-12.43-13.25Zm306.08-20.71a12.39,12.39,0,0,0-10.77,5.8v-5h-7.87v39.76H532V399.31c0-6.63,3.31-10.77,8.7-10.77a24.24,24.24,0,0,1,5.38.83l2.49-7.46a28,28,0,0,0-5.8-.83Zm-30.65,20.71V381.91h-7.87v5c-2.9-3.73-7-5.8-12.84-5.8-11.18,0-19.47,8.7-19.47,20.71s8.28,20.71,19.47,20.71c5.8,0,9.94-2.07,12.84-5.8v5h7.87V401.79Zm-31.89,0c0-7.46,4.56-13.25,12.43-13.25,7.46,0,12,5.8,12,13.25,0,7.87-5,13.25-12,13.25-7.87.41-12.43-5.8-12.43-13.25Zm111.83,0V366.17h-7.87v20.71c-2.9-3.73-7-5.8-12.84-5.8-11.18,0-19.47,8.7-19.47,20.71s8.28,20.71,19.47,20.71c5.8,0,9.94-2.07,12.84-5.8v5h7.87V401.79Zm-31.89,0c0-7.46,4.56-13.25,12.43-13.25,7.46,0,12,5.8,12,13.25,0,7.87-5,13.25-12,13.25C564.73,415.46,560.17,409.25,560.17,401.79Z\"\n    transform=\"translate(-132.74 -48.5)\"\n   ></path>\n   <g>\n    <rect x=\"169.81\" y=\"31.89\" width=\"143.72\" height=\"234.42\" fill=\"#ff5f00\"></rect>\n    <path\n     d=\"M317.05,197.6A149.5,149.5,0,0,1,373.79,80.39a149.1,149.1,0,1,0,0,234.42A149.5,149.5,0,0,1,317.05,197.6Z\"\n     transform=\"translate(-132.74 -48.5)\"\n     fill=\"#eb001b\"\n    ></path>\n    <path\n     d=\"M615.26,197.6a148.95,148.95,0,0,1-241,117.21,149.43,149.43,0,0,0,0-234.42,148.95,148.95,0,0,1,241,117.21Z\"\n     transform=\"translate(-132.74 -48.5)\"\n     fill=\"#f79e1b\"\n    ></path>\n   </g>\n  </g>\n </svg>\n`;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnionPay = void 0;\nconst lit_html_1 = require(\"@rxdi/lit-html\");\nexports.UnionPay = (0, lit_html_1.svg) `\n <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"750\" height=\"471\" viewBox=\"0 0 750 471\">\n  <g fill=\"none\" fill-rule=\"evenodd\">\n   <rect width=\"750\" height=\"471\" rx=\"40\"></rect>\n   <path\n    fill=\"#D10429\"\n    d=\"M201.809581,55 L344.203266,55 C364.072152,55 376.490206,71.4063861 371.833436,91.4702467 L305.500331,378.94775 C300.843561,399.011611 280.871191,415.417997 261.002305,415.417997 L118.60862,415.417997 C98.7397339,415.417997 86.32168,399.011611 90.9784502,378.94775 L157.311555,91.4702467 C161.968325,71.3018868 181.837211,55 201.706097,55 L201.809581,55 Z\"\n   ></path>\n   <path\n    fill=\"#022E64\"\n    d=\"M331.750074,55 L495.564902,55 C515.433788,55 506.430699,71.4063861 501.773929,91.4702467 L435.440824,378.94775 C430.784054,399.011611 432.232827,415.417997 412.363941,415.417997 L248.549113,415.417997 C228.576743,415.417997 216.262173,399.011611 221.022427,378.94775 L287.355531,91.4702467 C292.012302,71.3018868 311.881188,55 331.853558,55 L331.750074,55 Z\"\n   ></path>\n   <path\n    fill=\"#076F74\"\n    d=\"M489.814981,55 L632.208666,55 C652.077552,55 664.495606,71.4063861 659.838836,91.4702467 L593.505731,378.94775 C588.848961,399.011611 568.876591,415.417997 549.007705,415.417997 L406.61402,415.417997 C386.64165,415.417997 374.32708,399.011611 378.98385,378.94775 L445.316955,91.4702467 C449.973725,71.3018868 469.842611,55 489.711498,55 L489.814981,55 Z\"\n   ></path>\n   <path\n    fill=\"#FEFEFE\"\n    d=\"M465.904754,326.014514 L479.357645,326.014514 L483.186545,312.952104 L469.837137,312.952104 L465.904754,326.014514 L465.904754,326.014514 Z M476.667067,290.066763 L476.667067,290.066763 L472.010297,305.532656 C472.010297,305.532656 477.081002,302.920174 479.875064,302.08418 C482.669126,301.457184 486.808478,300.934688 486.808478,300.934688 L490.016475,290.171263 L476.563583,290.171263 L476.667067,290.066763 Z M483.393513,267.912917 L483.393513,267.912917 L478.94371,282.751814 C478.94371,282.751814 483.910932,280.45283 486.704994,279.721335 C489.499056,278.98984 493.638407,278.780842 493.638407,278.780842 L496.846405,268.017417 L483.496997,268.017417 L483.393513,267.912917 Z M513.093359,267.912917 L513.093359,267.912917 L495.708083,325.910015 L500.364853,325.910015 L496.742921,337.927431 L492.086151,337.927431 L490.947829,341.584906 L474.390424,341.584906 L475.528745,337.927431 L442,337.927431 L445.311481,326.850508 L448.726446,326.850508 L466.318689,267.912917 L469.837137,256 L486.704994,256 L484.94577,261.956459 C484.94577,261.956459 489.395572,258.716981 493.741891,257.567489 C497.984726,256.417997 522.406899,256 522.406899,256 L518.784967,267.808418 L512.989875,267.808418 L513.093359,267.912917 Z\"\n   ></path>\n   <path\n    fill=\"#FEFEFE\"\n    d=\"M520 256L538.006178 256 538.213146 262.792453C538.109662 263.941945 539.041016 264.464441 541.214175 264.464441L544.836108 264.464441 541.524627 275.645864 531.797151 275.645864C523.414965 276.272859 520.206968 272.615385 520.413935 268.539913L520.103484 256.104499 520 256zM522.216235 309.20029L505.037927 309.20029 507.935473 299.272859 527.597391 299.272859 530.391454 290.181422 511.039986 290.181422 514.351467 279 568.163034 279 564.851553 290.181422 546.741891 290.181422 543.947829 299.272859 562.057491 299.272859 559.056461 309.20029 539.498026 309.20029 535.979578 313.380261 543.947829 313.380261 545.914021 325.920174C546.120989 327.174165 546.120989 328.01016 546.534924 328.532656 546.948859 328.950653 549.328986 329.159652 550.674275 329.159652L553.054402 329.159652 549.328986 341.386067 543.223443 341.386067C542.292089 341.386067 540.843316 341.281567 538.877124 341.281567 537.014416 341.072569 535.77261 340.027576 534.530805 339.400581 533.392483 338.878084 531.736743 337.519594 531.322808 335.11611L529.4601 322.576197 520.560494 334.907112C517.766432 338.773585 513.937532 341.804064 507.418054 341.804064L495 341.804064 498.311481 330.936139 503.071735 330.936139C504.417024 330.936139 505.65883 330.413643 506.590184 329.891147 507.521538 329.473149 508.349408 329.055152 509.177278 327.696662L522.216235 309.20029 522.216235 309.20029zM334.31354 282L379.742921 282 376.43144 292.972424 358.321778 292.972424 355.527716 302.272859 374.154797 302.272859 370.739832 313.558781 352.216235 313.558781 347.662948 328.711176C347.145529 330.383164 352.112751 330.592163 353.871975 330.592163L363.185516 329.338171 359.4601 341.878084 338.556375 341.878084C336.900635 341.878084 335.65883 341.669086 333.796122 341.251089 332.036897 340.833091 331.209027 339.997097 330.48464 338.847605 329.760254 337.593614 328.518449 336.65312 329.346319 333.936139L335.348378 313.872279 325 313.872279 328.414965 302.377358 338.763343 302.377358 341.557405 293.076923 331.209027 293.076923 334.520508 282.104499 334.31354 282zM365.700875 262.165457L384.327956 262.165457 380.912991 273.555878 355.455981 273.555878 352.661919 275.959361C351.420113 277.108853 351.109662 276.690856 349.557405 277.526851 348.108632 278.258345 345.107603 279.721335 341.175219 279.721335L333 279.721335 336.311481 268.748911 338.795092 268.748911C340.864767 268.748911 342.31354 268.539913 343.037927 268.121916 343.865797 267.599419 344.797151 266.449927 345.728505 264.56894L350.385275 256 368.908872 256 365.700875 262.269956 365.700875 262.165457zM400.808726 280.975327C400.808726 280.975327 405.879431 276.272859 414.572069 274.809869 416.538261 274.391872 428.956314 274.600871 428.956314 274.600871L430.819023 268.330914 404.637626 268.330914 400.808726 281.079826 400.808726 280.975327zM425.437866 285.782293L425.437866 285.782293 399.463436 285.782293 397.91118 291.111756 420.470644 291.111756C423.161223 290.798258 423.678642 291.216255 423.885609 291.007257L425.54135 285.782293 425.437866 285.782293zM391.702153 256.104499L391.702153 256.104499 407.535171 256.104499 405.258528 264.150943C405.258528 264.150943 410.22575 260.075472 413.744198 258.612482 417.262647 257.358491 425.127414 256.104499 425.127414 256.104499L450.791393 256 441.995271 285.468795C440.546498 290.484761 438.787274 293.724238 437.752436 295.291727 436.821082 296.754717 435.68276 298.113208 433.406117 299.367199 431.232958 300.516691 429.266766 301.248186 427.404058 301.352685 425.748317 301.457184 423.057739 301.561684 419.53929 301.561684L394.806666 301.561684 387.873253 324.865022C387.25235 327.164006 386.941899 328.313498 387.355834 328.940493 387.666285 329.46299 388.597639 330.089985 389.735961 330.089985L400.601758 329.044993 396.876342 341.793904 384.665256 341.793904C380.732872 341.793904 377.93881 341.689405 375.972618 341.584906 374.10991 341.375907 372.143718 341.584906 370.798429 340.539913 369.660107 339.49492 367.900883 338.13643 368.004367 336.777939 368.10785 335.523948 368.625269 333.433962 369.45314 330.507983L391.702153 256.104499 391.702153 256.104499z\"\n   ></path>\n   <path\n    fill=\"#FEFEFE\"\n    d=\"M437.840227 303L436.391454 310.105951C435.770551 312.300435 435.253132 313.972424 433.597391 315.435414 431.838167 316.898403 429.871975 318.465893 425.111721 318.465893L416.3156 318.88389 416.212116 326.825835C416.108632 329.020319 416.729535 328.811321 417.039986 329.229318 417.453921 329.647315 417.764373 329.751814 418.178308 329.960813L420.97237 329.751814 429.354556 329.333817 425.836108 341.037736 416.212116 341.037736C409.48567 341.037736 404.414965 340.828737 402.862708 339.574746 401.206968 338.529753 401 337.275762 401 334.976778L401.620903 303.835994 417.039986 303.835994 416.833019 310.21045 420.558435 310.21045C421.80024 310.21045 422.731594 310.105951 423.249013 309.792453 423.766432 309.478955 424.076883 308.956459 424.283851 308.224964L425.836108 303.208999 437.94371 303.208999 437.840227 303zM218.470396 147C217.952978 149.507983 208.018534 195.592163 208.018534 195.592163 205.845375 204.892598 204.293118 211.580552 199.118929 215.865022 196.117899 218.373004 192.599451 219.522496 188.563583 219.522496 182.044105 219.522496 178.318689 216.283019 177.697786 210.117562L177.594302 208.027576C177.594302 208.027576 179.560494 195.592163 179.560494 195.487663 179.560494 195.487663 189.908872 153.478955 191.771581 147.940493 191.875064 147.626996 191.875064 147.417997 191.875064 147.313498 171.695727 147.522496 168.073794 147.313498 167.866827 147 167.763343 147.417997 167.245924 150.030479 167.245924 150.030479L156.690578 197.36865 155.759224 201.339623 154 214.506531C154 218.373004 154.724386 221.612482 156.276643 224.224964 161.140381 232.793904 174.903724 234.047896 182.665008 234.047896 192.702935 234.047896 202.119959 231.853411 208.43247 227.986938 219.505234 221.403483 222.40278 211.058055 224.886391 201.966618L226.128196 197.264151C226.128196 197.264151 236.787026 153.687954 238.649734 148.044993 238.753218 147.731495 238.753218 147.522496 238.856702 147.417997 224.162004 147.522496 219.919169 147.417997 218.470396 147.104499L218.470396 147zM277.499056 233.622642C270.358675 233.518142 267.771581 233.518142 259.389394 233.936139L259.078943 233.309144C259.803329 230.069666 260.6312 226.934688 261.252102 223.69521L262.28694 219.306241C263.839197 212.513788 265.28797 204.467344 265.494937 202.063861 265.701905 200.600871 266.11584 196.943396 261.976489 196.943396 260.217264 196.943396 258.45804 197.77939 256.595332 198.615385 255.560494 202.272859 253.594302 212.513788 252.559465 217.111756 250.489789 226.934688 250.386305 228.08418 249.454951 232.891147L248.834048 233.518142C241.4867 233.413643 238.899605 233.413643 230.413935 233.83164L230 233.100145C231.448773 227.248186 232.794062 221.396226 234.139351 215.544267 237.6578 199.764877 238.589154 193.703919 239.520508 185.657475L240.244894 185.239478C248.523597 184.089985 250.489789 183.776488 259.492878 182L260.217264 182.835994 258.871975 187.851959C260.424232 186.911466 261.873005 185.970972 263.425262 185.239478 267.668097 183.149492 272.324867 182.522496 274.911962 182.522496 278.844345 182.522496 283.190664 183.671988 284.949888 188.269956 286.605629 192.345428 285.570791 197.361393 283.294148 207.288824L282.155826 212.30479C279.879183 223.381713 279.465248 225.367199 278.223443 232.891147L277.395572 233.518142 277.499056 233.622642zM306.558435 233.650218C302.212116 233.650218 299.418054 233.545718 296.727476 233.650218 294.036897 233.650218 291.449803 233.859216 287.413935 233.963716L287.206968 233.650218 287 233.232221C288.138322 229.05225 288.655741 227.58926 289.276643 226.12627 289.794062 224.66328 290.311481 223.20029 291.346319 218.91582 292.588124 213.377358 293.415995 209.510885 293.933413 206.062409 294.554316 202.822932 294.864767 200.001451 295.278703 196.761974L295.589154 196.552975 295.899605 196.239478C300.245924 195.612482 302.936502 195.194485 305.730565 194.776488 308.524627 194.358491 311.422173 193.835994 315.871975 193L316.078943 193.417997 316.182427 193.835994C315.354556 197.28447 314.526686 200.732946 313.698816 204.181422 312.870946 207.629898 312.043075 211.078374 311.318689 214.526851 309.766432 221.8418 309.042046 224.558781 308.731594 226.544267 308.317659 228.425254 308.214175 229.365747 307.593273 233.127721L307.179338 233.441219 306.765402 233.754717 306.558435 233.650218zM352.499319 207.975327C352.188868 209.856313 350.533127 216.857765 348.359968 219.783745 346.807711 221.978229 345.048487 223.33672 342.978811 223.33672 342.357909 223.33672 338.83946 223.33672 338.735976 218.007257 338.735976 215.394775 339.253395 212.677794 339.874298 209.751814 341.737006 201.287373 344.013649 194.285922 349.705257 194.285922 354.15506 194.285922 354.465511 199.510885 352.499319 207.975327L352.499319 207.975327zM371.229884 208.811321L371.229884 208.811321C373.713495 197.734398 371.747303 192.509434 369.367176 189.374456 365.64176 184.567489 359.018798 183 352.188868 183 348.049517 183 338.322041 183.417997 330.664241 190.523948 325.179601 195.644412 322.592506 202.645864 321.143733 209.333817 319.591476 216.12627 317.832252 228.352685 329.008501 232.950653 332.423466 234.413643 337.390687 234.83164 340.598684 234.83164 348.773903 234.83164 357.156089 232.532656 363.4686 225.844702 368.332338 220.41074 370.505497 212.259797 371.333368 208.811321L371.229884 208.811321zM545.661919 234.891147C536.969281 234.786647 534.48567 234.786647 526.517419 235.204644L526 234.577649C528.173159 226.322206 530.346319 217.962264 532.312511 209.602322 534.796122 198.734398 535.417024 194.13643 536.244894 187.761974L536.865797 187.239478C545.454951 185.985486 547.835078 185.671988 556.838167 184L557.045135 184.731495C555.389394 191.628447 553.837137 198.4209 552.181397 205.213353 548.869916 219.529753 547.731594 226.844702 546.489789 234.36865L545.661919 234.995646 545.661919 234.891147z\"\n   ></path>\n   <path\n    fill=\"#FEFEFE\"\n    d=\"M533.159909 209.373777C532.745974 211.150265 531.090233 218.256216 528.917074 221.182195 527.468301 223.272181 523.949852 224.630672 521.983661 224.630672 521.362758 224.630672 517.947793 224.630672 517.740826 219.405708 517.740826 216.793226 518.258244 214.076245 518.879147 211.150265 520.741855 202.894822 523.018498 195.893371 528.710106 195.893371 533.159909 195.893371 535.126101 201.013836 533.159909 209.478277L533.159909 209.373777zM550.234733 210.209772L550.234733 210.209772C552.718344 199.132849 542.576933 209.269278 541.024677 205.611804 538.541066 199.864344 540.093322 188.369423 530.158879 184.50295 526.329979 182.935461 517.32689 184.920947 509.66909 192.026898 504.287934 197.042863 501.597355 204.044315 500.148582 210.732268 498.596326 217.420222 496.837101 229.751136 507.909866 234.035606 511.428315 235.603095 514.636312 236.021092 517.844309 235.812094 529.020558 235.185098 537.506228 218.151717 543.818739 211.463763 548.682476 206.1343 549.510347 213.449249 550.234733 210.209772L550.234733 210.209772zM420.292089 233.622642C413.151708 233.518142 410.668097 233.518142 402.28591 233.936139L401.975459 233.309144C402.699846 230.069666 403.527716 226.934688 404.252102 223.69521L405.183456 219.306241C406.735713 212.513788 408.28797 204.467344 408.391454 202.063861 408.598421 200.600871 409.012356 196.943396 404.976489 196.943396 403.217264 196.943396 401.354556 197.77939 399.595332 198.615385 398.663978 202.272859 396.594302 212.513788 395.559465 217.111756 393.593273 226.934688 393.386305 228.08418 392.454951 232.891147L391.834048 233.518142C384.4867 233.413643 381.899605 233.413643 373.413935 233.83164L373 233.100145C374.448773 227.248186 375.794062 221.396226 377.139351 215.544267 380.6578 199.764877 381.48567 193.703919 382.520508 185.657475L383.141411 185.239478C391.420113 184.089985 393.489789 183.776488 402.389394 182L403.113781 182.835994 401.871975 187.851959C403.320748 186.911466 404.873005 185.970972 406.321778 185.239478 410.564613 183.149492 415.221383 182.522496 417.808478 182.522496 421.740862 182.522496 425.983697 183.671988 427.846405 188.269956 429.502145 192.345428 428.363824 197.361393 426.08718 207.288824L424.948859 212.30479C422.568732 223.381713 422.25828 225.367199 421.016475 232.891147L420.188605 233.518142 420.292089 233.622642zM482.293118 147.104499L476.291059 147.208999C460.768492 147.417997 454.559465 147.313498 452.075854 147 451.868886 148.149492 451.454951 150.134978 451.454951 150.134978 451.454951 150.134978 445.866827 176.050798 445.866827 176.155298 445.866827 176.155298 432.620903 231.330914 432 233.943396 445.556375 233.734398 451.041016 233.734398 453.421143 234.047896 453.938562 231.435414 457.043075 216.07402 457.146559 216.07402 457.146559 216.07402 459.837137 204.788099 459.940621 204.370102 459.940621 204.370102 460.768492 203.22061 461.596362 202.698113L462.838167 202.698113C474.531835 202.698113 487.674275 202.698113 498.022653 195.069666 505.05955 189.844702 509.819804 182.007257 511.992964 172.602322 512.510383 170.303338 512.924318 167.586357 512.924318 164.764877 512.924318 161.107402 512.199931 157.554427 510.130256 154.732946 504.852583 147.313498 494.400721 147.208999 482.293118 147.104499L482.293118 147.104499zM490.054402 174.169811L490.054402 174.169811C488.812597 179.917271 485.08718 184.828737 480.326926 187.127721 476.394543 189.113208 471.634289 189.322206 466.667067 189.322206L463.45907 189.322206 463.666037 188.068215C463.666037 188.068215 469.564613 162.152395 469.564613 162.256894L469.771581 160.898403 469.875064 159.853411 472.255191 160.062409C472.255191 160.062409 484.466278 161.107402 484.673245 161.107402 489.433499 162.988389 491.503175 167.795356 490.054402 174.169811L490.054402 174.169811zM617.261369 182.835994L616.536983 182C607.740862 183.776488 606.085121 184.089985 598.013386 185.239478L597.392483 185.866473C597.392483 185.970972 597.288999 186.075472 597.288999 186.28447L597.288999 186.179971C591.28694 200.287373 591.390424 197.256894 586.526686 208.333817 586.526686 207.811321 586.526686 207.497823 586.423202 206.975327L585.181397 182.940493 584.45701 182.104499C575.14347 183.880987 574.936502 184.194485 566.450832 185.343977L565.82993 185.970972C565.726446 186.28447 565.726446 186.597968 565.726446 186.911466L565.82993 187.015965C566.864767 192.554427 566.6578 191.300435 567.692638 199.973875 568.210057 204.258345 568.830959 208.542816 569.348378 212.722787 570.176248 219.828737 570.693667 223.277213 571.728505 234.040639 565.933413 243.654572 564.588124 247.312046 559 255.776488L559.310451 256.612482C567.692638 256.298984 569.555346 256.298984 575.764373 256.298984L577.109662 254.731495C581.766432 244.595065 617.364853 182.940493 617.364853 182.940493L617.261369 182.835994zM314.543608 189.75837C319.303862 186.414394 319.924765 181.816425 315.888897 179.412942 311.85303 177.009459 304.712649 177.740954 299.952395 181.084931 295.192141 184.324408 294.674722 188.922376 298.71059 191.430359 302.642973 193.729343 309.783354 193.102347 314.543608 189.75837L314.543608 189.75837z\"\n   ></path>\n   <path\n    fill=\"#FEFEFE\"\n    d=\"M575.734683,256.104499 L568.80127,268.121916 C566.628111,272.197388 562.488759,275.332366 556.072765,275.332366 L545,275.123367 L548.207997,264.255443 L550.381157,264.255443 C551.519478,264.255443 552.347349,264.150943 552.968251,263.837446 C553.589154,263.628447 553.899605,263.21045 554.417024,262.583454 L558.556375,256 L575.838167,256 L575.734683,256.104499 Z\"\n   ></path>\n  </g>\n </svg>\n`;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Visa = void 0;\nconst lit_html_1 = require(\"@rxdi/lit-html\");\nexports.Visa = (0, lit_html_1.svg) `\n <svg\n  version=\"1.1\"\n  id=\"Layer_1\"\n  xmlns:sketch=\"\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n  x=\"0px\"\n  y=\"0px\"\n  width=\"750px\"\n  height=\"471px\"\n  viewBox=\"0 0 750 471\"\n  enable-background=\"new 0 0 750 471\"\n  xml:space=\"preserve\"\n >\n  <title>Slice 1</title>\n  <desc>Created with Sketch.</desc>\n  <g id=\"visa\" sketch:type=\"MSLayerGroup\">\n   <path\n    id=\"Shape\"\n    sketch:type=\"MSShapeGroup\"\n    fill=\"#0E4595\"\n    d=\"M278.198,334.228l33.36-195.763h53.358l-33.384,195.763H278.198L278.198,334.228z\"\n   ></path>\n   <path\n    id=\"path13\"\n    sketch:type=\"MSShapeGroup\"\n    fill=\"#0E4595\"\n    d=\"M524.307,142.687c-10.57-3.966-27.135-8.222-47.822-8.222c-52.725,0-89.863,26.551-90.18,64.604c-0.297,28.129,26.514,43.821,46.754,53.185c20.77,9.597,27.752,15.716,27.652,24.283c-0.133,13.123-16.586,19.116-31.924,19.116c-21.355,0-32.701-2.967-50.225-10.274l-6.877-3.112l-7.488,43.823c12.463,5.466,35.508,10.199,59.438,10.445c56.09,0,92.502-26.248,92.916-66.884c0.199-22.27-14.016-39.216-44.801-53.188c-18.65-9.056-30.072-15.099-29.951-24.269c0-8.137,9.668-16.838,30.559-16.838c17.447-0.271,30.088,3.534,39.936,7.5l4.781,2.259L524.307,142.687\"\n   ></path>\n   <path\n    id=\"Path\"\n    sketch:type=\"MSShapeGroup\"\n    fill=\"#0E4595\"\n    d=\"M661.615,138.464h-41.23c-12.773,0-22.332,3.486-27.941,16.234l-79.244,179.402h56.031c0,0,9.16-24.121,11.232-29.418c6.123,0,60.555,0.084,68.336,0.084c1.596,6.854,6.492,29.334,6.492,29.334h49.512L661.615,138.464L661.615,138.464z M596.198,264.872c4.414-11.279,21.26-54.724,21.26-54.724c-0.314,0.521,4.381-11.334,7.074-18.684l3.607,16.878c0,0,10.217,46.729,12.352,56.527h-44.293V264.872L596.198,264.872z\"\n   ></path>\n   <path\n    id=\"path16\"\n    sketch:type=\"MSShapeGroup\"\n    fill=\"#0E4595\"\n    d=\"M232.903,138.464L180.664,271.96l-5.565-27.129c-9.726-31.274-40.025-65.157-73.898-82.12l47.767,171.204l56.455-0.064l84.004-195.386L232.903,138.464\"\n   ></path>\n   <path\n    id=\"path18\"\n    sketch:type=\"MSShapeGroup\"\n    fill=\"#F2AE14\"\n    d=\"M131.92,138.464H45.879l-0.682,4.073c66.939,16.204,111.232,55.363,129.618,102.415l-18.709-89.96C152.877,142.596,143.509,138.896,131.92,138.464\"\n   ></path>\n  </g>\n </svg>\n`;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardTypes = void 0;\nconst american_express_1 = require(\"./american-express\");\nconst diners_1 = require(\"./diners\");\nconst discover_1 = require(\"./discover\");\nconst jcb_1 = require(\"./jcb\");\nconst maestrocard_1 = require(\"./maestrocard\");\nconst mastercard_1 = require(\"./mastercard\");\nconst union_pay_1 = require(\"./union-pay\");\nconst visa_1 = require(\"./visa\");\n__exportStar(require(\"./american-express\"), exports);\n__exportStar(require(\"./diners\"), exports);\n__exportStar(require(\"./discover\"), exports);\n__exportStar(require(\"./jcb\"), exports);\n__exportStar(require(\"./maestrocard\"), exports);\n__exportStar(require(\"./mastercard\"), exports);\n__exportStar(require(\"./union-pay\"), exports);\n__exportStar(require(\"./visa\"), exports);\nexports.CardTypes = {\n    visa: visa_1.Visa,\n    mastercard: mastercard_1.Mastercard,\n    'american-express': american_express_1.AmericanExpress,\n    'diners-club': diners_1.Diners,\n    discover: discover_1.Discover,\n    jcb: jcb_1.JSB,\n    unionpay: union_pay_1.UnionPay,\n    maestro: maestrocard_1.Maesto,\n    elo: null,\n    mir: null,\n    hiper: null,\n    hipercard: null,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertModel = exports.convertExpiry = exports.convertCard = void 0;\nconst convertCard = (card) => card.replace(/ /g, '');\nexports.convertCard = convertCard;\nconst convertExpiry = (card) => card.replace('/', '');\nexports.convertExpiry = convertExpiry;\nconst convertModel = (model) => (Object.assign(Object.assign({}, model), { card: (0, exports.convertCard)(model.card) }));\nexports.convertModel = convertModel;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardCSS = void 0;\nconst lit_html_1 = require(\"@rxdi/lit-html\");\nexports.CardCSS = (0, lit_html_1.css) `\n .payment-title {\n  width: 100%;\n  text-align: center;\n }\n\n .form-container .field-container:first-of-type {\n  grid-area: name;\n }\n\n .form-container .field-container:nth-of-type(2) {\n  grid-area: number;\n }\n\n .form-container .field-container:nth-of-type(3) {\n  grid-area: expiration;\n }\n\n .form-container .field-container:nth-of-type(4) {\n  grid-area: security;\n }\n\n .field-container input {\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n }\n\n .field-container {\n  position: relative;\n }\n\n .form-container {\n  display: grid;\n  grid-column-gap: 10px;\n  grid-template-columns: auto auto;\n  grid-template-rows: 90px 90px 90px;\n  grid-template-areas: 'name name' 'number number' 'expiration security';\n  max-width: 400px;\n  padding: 20px;\n  color: #707070;\n }\n\n label {\n  padding-bottom: 5px;\n  font-size: 13px;\n }\n\n input {\n  margin-top: 3px;\n  padding: 15px;\n  font-size: 16px;\n  width: 100%;\n  border-radius: 3px;\n  border: 1px solid #dcdcdc;\n }\n\n .ccicon {\n  height: 38px;\n  position: absolute;\n  right: 6px;\n  top: calc(50% - 17px);\n  width: 60px;\n }\n\n /* CREDIT CARD IMAGE STYLING */\n .preload * {\n  transition: none !important;\n  -webkit-transition: none !important;\n  -moz-transition: none !important;\n  -ms-transition: none !important;\n  -o-transition: none !important;\n }\n\n .container {\n  width: 100%;\n  max-width: 400px;\n  max-height: 251px;\n  height: 54vw;\n  /* padding: 20px; */\n }\n\n #ccsingle {\n  position: absolute;\n  right: 15px;\n  top: 20px;\n }\n\n #ccsingle svg {\n  width: 100px;\n  max-height: 60px;\n }\n\n .creditcard svg#cardfront,\n .creditcard svg#cardback {\n  width: 100%;\n  -webkit-box-shadow: rgb(0 0 0 / 8%) 0px 14px 28px, rgb(0 0 0 / 8%) 0px 10px 10px;\n  box-shadow: rgb(0 0 0 / 8%) 0px 14px 28px, rgb(0 0 0 / 8%) 0px 10px 10px;\n  border-radius: 22px;\n }\n\n #generatecard {\n  cursor: pointer;\n  float: right;\n  font-size: 12px;\n  color: #fff;\n  padding: 2px 4px;\n  background-color: #909090;\n  border-radius: 4px;\n  cursor: pointer;\n  float: right;\n }\n\n /* CHANGEABLE CARD ELEMENTS */\n .creditcard .lightcolor,\n .creditcard .darkcolor {\n  -webkit-transition: fill 0.5s;\n  transition: fill 0.5s;\n }\n\n .creditcard .lightblue {\n  fill: #03a9f4;\n }\n\n .creditcard .lightbluedark {\n  fill: #0288d1;\n }\n\n .creditcard .red {\n  fill: #ef5350;\n }\n\n .creditcard .reddark {\n  fill: #d32f2f;\n }\n\n .creditcard .purple {\n  fill: #ab47bc;\n }\n\n .creditcard .purpledark {\n  fill: #7b1fa2;\n }\n\n .creditcard .cyan {\n  fill: #26c6da;\n }\n\n .creditcard .cyandark {\n  fill: #0097a7;\n }\n\n .creditcard .green {\n  fill: #66bb6a;\n }\n\n .creditcard .greendark {\n  fill: #388e3c;\n }\n\n .creditcard .lime {\n  fill: #d4e157;\n }\n\n .creditcard .limedark {\n  fill: #afb42b;\n }\n\n .creditcard .yellow {\n  fill: #ffeb3b;\n }\n\n .creditcard .yellowdark {\n  fill: #f9a825;\n }\n\n .creditcard .orange {\n  fill: #ff9800;\n }\n\n .creditcard .orangedark {\n  fill: #ef6c00;\n }\n\n .creditcard .grey {\n  fill: #bdbdbd;\n }\n\n .creditcard .greydark {\n  fill: #616161;\n }\n\n /* FRONT OF CARD */\n #svgname {\n  text-transform: uppercase;\n }\n\n #cardfront .st2 {\n  fill: #ffffff;\n }\n\n #cardfront .st3 {\n  font-family: 'Source Code Pro', monospace;\n  font-weight: 600;\n }\n\n #cardfront .st4 {\n  font-size: 54.7817px;\n }\n\n #cardfront .st5 {\n  font-family: 'Source Code Pro', monospace;\n  font-weight: 400;\n }\n\n #cardfront .st6 {\n  font-size: 33.1112px;\n }\n\n #cardfront .st7 {\n  opacity: 0.6;\n  fill: #ffffff;\n }\n\n #cardfront .st8 {\n  font-size: 24px;\n }\n\n #cardfront .st9 {\n  font-size: 36.5498px;\n }\n\n #cardfront .st10 {\n  font-family: 'Source Code Pro', monospace;\n  font-weight: 300;\n }\n\n #cardfront .st11 {\n  font-size: 16.1716px;\n }\n\n #cardfront .st12 {\n  fill: #4c4c4c;\n }\n\n /* BACK OF CARD */\n #cardback .st0 {\n  fill: none;\n  stroke: #0f0f0f;\n  stroke-miterlimit: 10;\n }\n\n #cardback .st2 {\n  fill: #111111;\n }\n\n #cardback .st3 {\n  fill: #f2f2f2;\n }\n\n #cardback .st4 {\n  fill: #d8d2db;\n }\n\n #cardback .st5 {\n  fill: #c4c4c4;\n }\n\n #cardback .st6 {\n  font-family: 'Source Code Pro', monospace;\n  font-weight: 400;\n }\n\n #cardback .st7 {\n  font-size: 27px;\n }\n\n #cardback .st8 {\n  opacity: 0.6;\n }\n\n #cardback .st9 {\n  fill: #ffffff;\n }\n\n #cardback .st10 {\n  font-size: 24px;\n }\n\n #cardback .st11 {\n  fill: #eaeaea;\n }\n\n #cardback .st12 {\n  font-family: 'Rock Salt', cursive;\n }\n\n #cardback .st13 {\n  font-size: 37.769px;\n }\n\n /* FLIP ANIMATION */\n .container {\n  perspective: 1000px;\n }\n\n .creditcard {\n  width: 100%;\n  max-width: 400px;\n  -webkit-transform-style: preserve-3d;\n  transform-style: preserve-3d;\n  transition: -webkit-transform 0.6s;\n  -webkit-transition: -webkit-transform 0.6s;\n  transition: transform 0.6s;\n  transition: transform 0.6s, -webkit-transform 0.6s;\n  cursor: pointer;\n }\n\n .creditcard .front,\n .creditcard .back {\n  position: absolute;\n  width: 100%;\n  max-width: 400px;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  -webkit-font-smoothing: antialiased;\n  color: #47525d;\n }\n\n .creditcard .back {\n  -webkit-transform: rotateY(180deg);\n  transform: rotateY(180deg);\n }\n\n .creditcard.flipped {\n  -webkit-transform: rotateY(180deg);\n  transform: rotateY(180deg);\n }\n .codes {\n  bottom: 5%;\n  left: 5%;\n  position: fixed;\n }\n .codes div {\n  border: 2px solid black;\n  font-size: 20px;\n  padding: 10px;\n  background-color: red;\n }\n .codes div a {\n  text-decoration: none;\n  color: white;\n  font-weight: 800;\n }\n`;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreditCardComponent = void 0;\nconst lit_html_1 = require(\"@rxdi/lit-html\");\nconst credit_card_type_1 = __importDefault(require(\"credit-card-type\"));\nconst images_1 = require(\"./images\");\nconst helpers_1 = require(\"../helpers\");\nconst credit_card_component_css_1 = require(\"./credit-card-component.css\");\n/**\n * @customElement credit-card\n */\nlet CreditCardComponent = class CreditCardComponent extends lit_html_1.LitElement {\n    constructor() {\n        super(...arguments);\n        this.number = '4000 0566 5566 5556';\n        this.name = 'John Doe';\n        this.expiry = '01/23';\n        this.cvc = '985';\n    }\n};\n__decorate([\n    (0, lit_html_1.property)({ type: String }),\n    __metadata(\"design:type\", Object)\n], CreditCardComponent.prototype, \"number\", void 0);\n__decorate([\n    (0, lit_html_1.property)({ type: String }),\n    __metadata(\"design:type\", Object)\n], CreditCardComponent.prototype, \"name\", void 0);\n__decorate([\n    (0, lit_html_1.property)({ type: String }),\n    __metadata(\"design:type\", Object)\n], CreditCardComponent.prototype, \"expiry\", void 0);\n__decorate([\n    (0, lit_html_1.property)({ type: String }),\n    __metadata(\"design:type\", Object)\n], CreditCardComponent.prototype, \"cvc\", void 0);\n__decorate([\n    (0, lit_html_1.property)({ type: Boolean }),\n    __metadata(\"design:type\", Boolean)\n], CreditCardComponent.prototype, \"flipped\", void 0);\nCreditCardComponent = __decorate([\n    (0, lit_html_1.Component)({\n        selector: 'credit-card',\n        styles: [credit_card_component_css_1.CardCSS],\n        template() {\n            var _a, _b;\n            return (0, lit_html_1.html) `\n   <div class=\"container\" @click=${() => (this.flipped = !this.flipped)}>\n    <div class=${(0, lit_html_1.classMap)({ creditcard: true, flipped: this.flipped })}>\n     <div class=\"front\">\n      <div id=\"ccsingle\">\n       ${images_1.CardTypes[(_b = (_a = (0, credit_card_type_1.default)((0, helpers_1.convertCard)(`${this.number}`))) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.type]}\n      </div>\n      <svg\n       version=\"1.1\"\n       id=\"cardfront\"\n       xmlns=\"http://www.w3.org/2000/svg\"\n       xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n       x=\"0px\"\n       y=\"0px\"\n       viewBox=\"0 0 750 471\"\n       style=\"enable-background:new 0 0 750 471;\"\n       xml:space=\"preserve\"\n      >\n       <g id=\"Front\">\n        <g id=\"CardBackground\">\n         <g id=\"Page-1_1_\">\n          <g id=\"amex_1_\">\n           <path\n            id=\"Rectangle-1_1_\"\n            class=\"lightcolor lightblue\"\n            d=\"M40,0h670c22.1,0,40,17.9,40,40v391c0,22.1-17.9,40-40,40H40c-22.1,0-40-17.9-40-40V40\n                            C0,17.9,17.9,0,40,0z\"\n           ></path>\n          </g>\n         </g>\n         <path\n          class=\"darkcolor lightbluedark\"\n          d=\"M750,431V193.2c-217.6-57.5-556.4-13.5-750,24.9V431c0,22.1,17.9,40,40,40h670C732.1,471,750,453.1,750,431z\"\n         ></path>\n        </g>\n        <text\n         transform=\"matrix(1 0 0 1 60.106 295.0121)\"\n         id=\"svgnumber\"\n         class=\"st2 st3 st4\"\n        >\n         ${this.number}\n        </text>\n        <text\n         transform=\"matrix(1 0 0 1 54.1064 428.1723)\"\n         id=\"svgname\"\n         class=\"st2 st5 st6\"\n        >\n         ${this.name}\n        </text>\n        <text transform=\"matrix(1 0 0 1 54.1074 389.8793)\" class=\"st7 st5 st8\">\n         cardholder name\n        </text>\n        <text transform=\"matrix(1 0 0 1 479.7754 388.8793)\" class=\"st7 st5 st8\">\n         expiration\n        </text>\n        <text transform=\"matrix(1 0 0 1 65.1054 241.5)\" class=\"st7 st5 st8\">\n         card number\n        </text>\n        <g>\n         <text\n          transform=\"matrix(1 0 0 1 574.4219 433.8095)\"\n          id=\"svgexpire\"\n          class=\"st2 st5 st9\"\n         >\n          ${this.expiry}\n         </text>\n         <text transform=\"matrix(1 0 0 1 479.3848 417.0097)\" class=\"st2 st10 st11\">\n          VALID\n         </text>\n         <text transform=\"matrix(1 0 0 1 479.3848 435.6762)\" class=\"st2 st10 st11\">\n          THRU\n         </text>\n         <polygon class=\"st2\" points=\"554.5,421 540.4,414.2 540.4,427.9 \t\t\"></polygon>\n        </g>\n        <g id=\"cchip\">\n         <g>\n          <path\n           class=\"st2\"\n           d=\"M168.1,143.6H82.9c-10.2,0-18.5-8.3-18.5-18.5V74.9c0-10.2,8.3-18.5,18.5-18.5h85.3\n                        c10.2,0,18.5,8.3,18.5,18.5v50.2C186.6,135.3,178.3,143.6,168.1,143.6z\"\n          ></path>\n         </g>\n         <g>\n          <g>\n           <rect x=\"82\" y=\"70\" class=\"st12\" width=\"1.5\" height=\"60\"></rect>\n          </g>\n          <g>\n           <rect x=\"167.4\" y=\"70\" class=\"st12\" width=\"1.5\" height=\"60\"></rect>\n          </g>\n          <g>\n           <path\n            class=\"st12\"\n            d=\"M125.5,130.8c-10.2,0-18.5-8.3-18.5-18.5c0-4.6,1.7-8.9,4.7-12.3c-3-3.4-4.7-7.7-4.7-12.3\n                            c0-10.2,8.3-18.5,18.5-18.5s18.5,8.3,18.5,18.5c0,4.6-1.7,8.9-4.7,12.3c3,3.4,4.7,7.7,4.7,12.3\n                            C143.9,122.5,135.7,130.8,125.5,130.8z M125.5,70.8c-9.3,0-16.9,7.6-16.9,16.9c0,4.4,1.7,8.6,4.8,11.8l0.5,0.5l-0.5,0.5\n                            c-3.1,3.2-4.8,7.4-4.8,11.8c0,9.3,7.6,16.9,16.9,16.9s16.9-7.6,16.9-16.9c0-4.4-1.7-8.6-4.8-11.8l-0.5-0.5l0.5-0.5\n                            c3.1-3.2,4.8-7.4,4.8-11.8C142.4,78.4,134.8,70.8,125.5,70.8z\"\n           ></path>\n          </g>\n          <g>\n           <rect x=\"82.8\" y=\"82.1\" class=\"st12\" width=\"25.8\" height=\"1.5\"></rect>\n          </g>\n          <g>\n           <rect x=\"82.8\" y=\"117.9\" class=\"st12\" width=\"26.1\" height=\"1.5\"></rect>\n          </g>\n          <g>\n           <rect x=\"142.4\" y=\"82.1\" class=\"st12\" width=\"25.8\" height=\"1.5\"></rect>\n          </g>\n          <g>\n           <rect x=\"142\" y=\"117.9\" class=\"st12\" width=\"26.2\" height=\"1.5\"></rect>\n          </g>\n         </g>\n        </g>\n       </g>\n       <g id=\"Back\"></g>\n      </svg>\n     </div>\n     <div class=\"back\">\n      <svg\n       version=\"1.1\"\n       id=\"cardback\"\n       xmlns=\"http://www.w3.org/2000/svg\"\n       xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n       x=\"0px\"\n       y=\"0px\"\n       viewBox=\"0 0 750 471\"\n       style=\"enable-background:new 0 0 750 471;\"\n       xml:space=\"preserve\"\n      >\n       <g id=\"Front\">\n        <line class=\"st0\" x1=\"35.3\" y1=\"10.4\" x2=\"36.7\" y2=\"11\"></line>\n       </g>\n       <g id=\"Back\">\n        <g id=\"Page-1_2_\">\n         <g id=\"amex_2_\">\n          <path\n           id=\"Rectangle-1_2_\"\n           class=\"darkcolor lightbluedark\"\n           d=\"M40,0h670c22.1,0,40,17.9,40,40v391c0,22.1-17.9,40-40,40H40c-22.1,0-40-17.9-40-40V40\n                        C0,17.9,17.9,0,40,0z\"\n          ></path>\n         </g>\n        </g>\n        <rect y=\"61.6\" class=\"st2\" width=\"750\" height=\"78\"></rect>\n        <g>\n         <path\n          class=\"st3\"\n          d=\"M701.1,249.1H48.9c-3.3,0-6-2.7-6-6v-52.5c0-3.3,2.7-6,6-6h652.1c3.3,0,6,2.7,6,6v52.5\n                    C707.1,246.4,704.4,249.1,701.1,249.1z\"\n         ></path>\n         <rect x=\"42.9\" y=\"198.6\" class=\"st4\" width=\"664.1\" height=\"10.5\"></rect>\n         <rect x=\"42.9\" y=\"224.5\" class=\"st4\" width=\"664.1\" height=\"10.5\"></rect>\n         <path\n          class=\"st5\"\n          d=\"M701.1,184.6H618h-8h-10v64.5h10h8h83.1c3.3,0,6-2.7,6-6v-52.5C707.1,187.3,704.4,184.6,701.1,184.6z\"\n         ></path>\n        </g>\n        <text\n         transform=\"matrix(1 0 0 1 621.999 227.2734)\"\n         id=\"svgsecurity\"\n         class=\"st6 st7\"\n        >\n         ${this.cvc}\n        </text>\n        <g class=\"st8\">\n         <text transform=\"matrix(1 0 0 1 518.083 280.0879)\" class=\"st9 st6 st10\">\n          security code\n         </text>\n        </g>\n        <rect x=\"58.1\" y=\"378.6\" class=\"st11\" width=\"375.5\" height=\"13.5\"></rect>\n        <rect x=\"58.1\" y=\"405.6\" class=\"st11\" width=\"421.7\" height=\"13.5\"></rect>\n        <text\n         transform=\"matrix(1 0 0 1 59.5073 228.6099)\"\n         id=\"svgnameback\"\n         class=\"st12 st13\"\n        >\n         ${this.name}\n        </text>\n       </g>\n      </svg>\n     </div>\n    </div>\n   </div>\n  `;\n        },\n    })\n], CreditCardComponent);\nexports.CreditCardComponent = CreditCardComponent;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./credit-card-component\"), exports);\n__exportStar(require(\"./credit-card-component.css\"), exports);\n__exportStar(require(\"./images\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InputErrorTemplate = void 0;\nconst lit_html_1 = require(\"@rxdi/lit-html\");\n// import { translate } from '../i18n/translate';\nfunction InputErrorTemplate(input) {\n    if (input && input.invalid && (input.touched || input.dirty)) {\n        const message = input.validationMessage;\n        // const key = Object.keys(InputValidityState).filter(o => input.validity[o])[0];\n        // message = translate(key, 'bg_BG');\n        input.classList.add('is-invalid');\n        return (0, lit_html_1.html) `\n   <style>\n    .validation-error {\n     color: #a94442;\n     font-size: 12px;\n    }\n   </style>\n   <span style=\"padding-top: 5px;color: #a94442\" class=\"validation-error\"\n    >${message}</span\n   >\n  `;\n    }\n    input && input.classList.remove('is-invalid');\n    return '';\n}\nexports.InputErrorTemplate = InputErrorTemplate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InputValidityState = void 0;\nfunction strEnum(o) {\n    return o.reduce((res, key) => {\n        res[key] = key;\n        return res;\n    }, Object.create(null));\n}\nexports.InputValidityState = strEnum([\n    'badInput',\n    'customError',\n    'patternMismatch',\n    'rangeOverflow',\n    'rangeUnderflow',\n    'stepMismatch',\n    'tooLong',\n    'tooShort',\n    'typeMismatch',\n    'valid',\n    'valueMissing'\n]);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Subscription = exports.Observable = exports.BehaviorSubject = exports.noop = exports.$BehaviorSubject = exports.$Observable = exports.$Subscription = void 0;\nclass $Subscription {\n    constructor() {\n        this.o = new Map();\n    }\n    unsubscribe() {\n        [...this.o.values()].forEach(v => this.o.delete(v));\n    }\n}\nexports.$Subscription = $Subscription;\nclass $Observable extends $Subscription {\n    constructor(fn) {\n        super();\n        this.init = true;\n        this.fn = fn;\n    }\n    subscribe(c) {\n        this.o.set(c, c);\n        if (typeof this.fn === 'function' && this.init) {\n            this.fn(this);\n            this.init = false;\n        }\n        return {\n            unsubscribe: () => {\n                this.o.delete(c);\n            }\n        };\n    }\n    complete() {\n        this.unsubscribe();\n    }\n    next(s) {\n        [...this.o.values()].forEach(f => f(s));\n    }\n}\nexports.$Observable = $Observable;\nclass $BehaviorSubject extends $Observable {\n    constructor(v) {\n        if (typeof v === 'function') {\n            super(v);\n        }\n        super(null);\n        this.setValue(v);\n    }\n    setValue(v) {\n        this.v = v;\n    }\n    next(s) {\n        this.setValue(s);\n        super.next(s);\n    }\n    getValue() {\n        return this.v;\n    }\n    asObservable() {\n        return this;\n    }\n}\nexports.$BehaviorSubject = $BehaviorSubject;\nfunction behaviorOrFake() {\n    try {\n        return require('rxjs').BehaviorSubject;\n    }\n    catch (e) { }\n    return $BehaviorSubject;\n}\nfunction observableOrFake() {\n    try {\n        return require('rxjs').Observable;\n    }\n    catch (e) { }\n    return $Observable;\n}\nfunction subscriptionOrFake() {\n    try {\n        return require('rxjs').Subscription;\n    }\n    catch (e) { }\n    return $Subscription;\n}\nfunction noop() { }\nexports.noop = noop;\nfunction BehaviorSubject(init) {\n    const b = behaviorOrFake();\n    return new b(init);\n}\nexports.BehaviorSubject = BehaviorSubject;\nfunction Observable(fn) {\n    const o = observableOrFake();\n    return new o(fn);\n}\nexports.Observable = Observable;\nfunction Subscription() {\n    const s = subscriptionOrFake();\n    return new s();\n}\nexports.Subscription = Subscription;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FormGroup = void 0;\nconst form_tokens_1 = require(\"./form.tokens\");\nconst rx_fake_1 = require(\"./rx-fake\");\nclass FormGroup {\n    constructor(value, errors) {\n        this.validators = new Map();\n        this.valid = true;\n        this.invalid = false;\n        this.errors = {};\n        this.errorMap = new Map();\n        this.inputs = new Map();\n        this.options = {};\n        this._valueChanges = new rx_fake_1.BehaviorSubject(value);\n    }\n    init() {\n        this.setFormElement(this.querySelectForm(this.parentElement.shadowRoot || this.parentElement)).setInputs(this.mapEventToInputs(this.querySelectorAllInputs()));\n    }\n    prepareValues() {\n        Object.keys(this.value).forEach(v => {\n            const value = this.value[v];\n            this.errors[v] = this.errors[v] || {};\n            if (value.constructor === Array) {\n                if (value[1] && value[1].constructor === Array) {\n                    value[1].forEach(val => {\n                        const oldValidators = this.validators.get(v) || [];\n                        this.validators.set(v, [...oldValidators, val]);\n                    });\n                }\n                if (value[0].constructor === String ||\n                    value[0].constructor === Number ||\n                    value[0].constructor === Boolean) {\n                    this.value[v] = value[0];\n                }\n                else {\n                    throw new Error(`Input value must be of type 'string', 'boolean' or 'number'`);\n                }\n            }\n        });\n        return this;\n    }\n    setParentElement(parent) {\n        this.parentElement = parent;\n        return this;\n    }\n    getParentElement() {\n        return this.parentElement;\n    }\n    setOptions(options) {\n        this.options = options;\n        return this;\n    }\n    getOptions() {\n        return this.options;\n    }\n    get valueChanges() {\n        return this._valueChanges.asObservable();\n    }\n    updateValueAndValidity() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.resetErrors();\n            const inputs = yield Promise.all(this.querySelectorAllInputs()\n                .map((i) => __awaiter(this, void 0, void 0, function* () {\n                i.setCustomValidity('');\n                this.setElementValidity(i);\n                this.setElementDirty(i);\n                return yield this.validate(i);\n            })));\n            this.getParentElement().requestUpdate();\n            return inputs.filter(e => e.errors.length);\n        });\n    }\n    updateValueAndValidityOnEvent(method) {\n        const self = this;\n        return function (event) {\n            return __awaiter(this, void 0, void 0, function* () {\n                self.setElementDirty(this);\n                const selector = `input[name=\"${this.name}\"]`;\n                const hasMultipleBindings = [\n                    ...self\n                        .getFormElement()\n                        .querySelectorAll(selector).values()\n                ].length;\n                let value = this.value;\n                if (hasMultipleBindings === 1) {\n                    if (this.type === 'radio') {\n                        value = String(this.checked);\n                    }\n                    if (this.type === 'checkbox') {\n                        value = this.checked;\n                    }\n                }\n                if (this.type === 'number') {\n                    value = Number(value);\n                }\n                const inputsWithBindings = [\n                    ...(self.getFormElement().querySelectorAll(`input[name=\"${this.name}\"]:checked`)).values()\n                ];\n                if (hasMultipleBindings > 1) {\n                    if (!self.options.multi && this.type === 'checkbox') {\n                        value = inputsWithBindings.map(e => e.value);\n                    }\n                    if (self.options.multi) {\n                        inputsWithBindings.forEach(el => (el.checked = false));\n                        this.checked = true;\n                    }\n                }\n                self.resetErrors();\n                const isValid = self.applyValidationContext(yield self.validate(this));\n                if (self.options.strict) {\n                    if (isValid) {\n                        yield self.setElementValidity(this, isValid);\n                        self.setValue(this.name, value);\n                    }\n                    self.parentElement.requestUpdate();\n                    return method.call(self.parentElement, event);\n                }\n                yield self.setElementValidity(this, isValid);\n                self.setValue(this.name, value);\n                self.parentElement.requestUpdate();\n                return method.call(self.parentElement, event);\n            });\n        };\n    }\n    applyValidationContext({ errors, element }) {\n        const form = this.getFormElement();\n        if (errors.length) {\n            this.invalid = form.invalid = true;\n            this.valid = form.valid = false;\n            return false;\n        }\n        else {\n            this.errors[element.name] = {};\n            this.invalid = form.invalid = false;\n            this.valid = form.valid = true;\n            return true;\n        }\n    }\n    querySelectForm(shadowRoot) {\n        const form = shadowRoot.querySelector(`form[name=\"${this.options.name}\"]`);\n        if (!form) {\n            throw new Error(`Form element with name \"${this.options.name}\" not present inside ${this.getParentElement().outerHTML} component`);\n        }\n        form.addEventListener('submit', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n        });\n        return form;\n    }\n    querySelectAll(name) {\n        return [...this.form.querySelectorAll(name).values()];\n    }\n    querySelectorAllInputs() {\n        return [\n            ...this.querySelectAll('input'),\n            ...this.querySelectAll('select'),\n            ...this.querySelectAll('textarea'),\n        ]\n            .filter(el => this.isInputPresentOnStage(el))\n            .filter(el => !!el.name);\n    }\n    mapEventToInputs(inputs = []) {\n        return inputs.map((el) => {\n            const strategy = `on${this.options.strategy}`;\n            if (!el[strategy]) {\n                el[strategy] = function () { };\n            }\n            const customAttributes = Object.keys(el.attributes)\n                .map(k => el.attributes[k].name.startsWith('#') ? el.attributes[k] : null)\n                .filter(i => !!i);\n            if (customAttributes.length) {\n                const attr = customAttributes.find(a => a.name.startsWith('#'));\n                this.parentElement[attr.name.replace('#', '')] = el;\n            }\n            el.addEventListener('blur', () => __awaiter(this, void 0, void 0, function* () {\n                this.setElementDirty(el);\n                yield this.parentElement.requestUpdate();\n                yield this.setElementValidity(el);\n            }));\n            el[strategy] = this.updateValueAndValidityOnEvent(el[strategy]);\n            return el;\n        });\n    }\n    setElementValidity(el, validity) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const isValid = validity || this.applyValidationContext(yield this.validate(el));\n            el['valid'] = isValid;\n            el['invalid'] = !isValid;\n        });\n    }\n    setElementDirty(input) {\n        input['touched'] = true;\n        input['dirty'] = true;\n    }\n    isInputPresentOnStage(input) {\n        if (input.outerHTML === '<input type=\"submit\" style=\"display: none;\">') {\n            return;\n        }\n        const isInputPresent = Object.keys(this.value).filter(v => v === input.name);\n        if (!isInputPresent.length) {\n            console.error(`Missing input element with name ${input.name} for form ${this.getFormElement().name}`);\n        }\n        return isInputPresent.length;\n    }\n    validate(element) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let errors = [];\n            element.setCustomValidity('');\n            if (!element.checkValidity()) {\n                return {\n                    errors: errors.concat(Object.keys(form_tokens_1.InputValidityState)\n                        .map(key => element.validity[key]\n                        ? { key, message: element.validationMessage }\n                        : null)\n                        .filter(i => !!i)),\n                    element\n                };\n            }\n            errors = yield this.mapInputErrors(element);\n            if (!errors.length) {\n                return { errors: [], element };\n            }\n            this.setFormValidity(false);\n            element.setCustomValidity(errors[0].message);\n            return { element, errors };\n        });\n    }\n    mapInputErrors(element) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield Promise.all((this.validators.get(element.name) || []).map((v) => __awaiter(this, void 0, void 0, function* () {\n                this.errors[element.name] = this.errors[element.name] || {};\n                const error = yield v.bind(this.getParentElement())(element);\n                // if (error) {\n                //   element.focus();\n                // }\n                if (error && error.key) {\n                    this.errors[element.name][error.key] = error.message;\n                    this.errorMap.set(v, error.key);\n                    return { key: error.key, message: error.message };\n                }\n                else if (this.errorMap.has(v)) {\n                    delete this.errors[element.name][this.errorMap.get(v)];\n                }\n            })));\n            return res.filter(i => !!i);\n        });\n    }\n    get(name) {\n        return this.inputs.get(name);\n    }\n    getError(inputName, errorKey) {\n        return this.errors[inputName][errorKey];\n    }\n    hasError(inputName, errorKey) {\n        return !!this.getError(inputName, errorKey);\n    }\n    reset() {\n        this.form.reset();\n        this.resetErrors();\n        this.setFormValidity();\n        this.inputs.clear();\n    }\n    setFormValidity(validity = true) {\n        this.valid = validity;\n        this.invalid = !validity;\n    }\n    resetErrors() {\n        this.errors = Object.keys(this.errors).reduce((object, key) => {\n            object[key] = {};\n            return object;\n        }, {});\n        this.errorMap.clear();\n    }\n    get value() {\n        return this._valueChanges.getValue();\n    }\n    set value(value) {\n        this._valueChanges.next(value);\n    }\n    unsubscribe() {\n        this.reset();\n        this._valueChanges.unsubscribe();\n    }\n    getValue(name) {\n        return this.value[name];\n    }\n    setValue(name, value) {\n        const input = this.get(name);\n        if (!input) {\n            return;\n        }\n        input.value = value;\n        const values = this.value;\n        values[name] = value;\n        this.value = values;\n    }\n    setFormValue(value) {\n        this.value = value;\n    }\n    setFormElement(form) {\n        this.form = form;\n        return this;\n    }\n    setInputs(inputs) {\n        this.inputs = new Map(inputs.map(e => {\n            e.value = this.getValue(e.name);\n            return [e.name, e];\n        }));\n    }\n    getFormElement() {\n        return this.form;\n    }\n}\nexports.FormGroup = FormGroup;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Form = void 0;\nconst form_group_1 = require(\"./form.group\");\nconst rx_fake_1 = require(\"./rx-fake\");\nfunction Form(options = {\n    strategy: 'none'\n}) {\n    return function (clazz, name) {\n        if (!options.name) {\n            throw new Error('Missing form name');\n        }\n        const Destroy = clazz.constructor.prototype.disconnectedCallback || rx_fake_1.noop;\n        const UpdateFirst = clazz.constructor.prototype.firstUpdated || rx_fake_1.noop;\n        const Connect = clazz.constructor.prototype.connectedCallback || rx_fake_1.noop;\n        clazz.constructor.prototype.connectedCallback = function () {\n            if (!(this[name] instanceof form_group_1.FormGroup)) {\n                throw new Error('Value provided is not an instance of FormGroup!');\n            }\n            this[name]\n                .setParentElement(this)\n                .setOptions(options)\n                .prepareValues();\n            return Connect.call(this);\n        };\n        clazz.constructor.prototype.firstUpdated = function () {\n            this[name].init();\n            return UpdateFirst.call(this);\n        };\n        clazz.constructor.prototype.disconnectedCallback = function () {\n            this[name].unsubscribe();\n            return Destroy.call(this);\n        };\n    };\n}\nexports.Form = Form;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./form.decorator\"), exports);\n__exportStar(require(\"./form.group\"), exports);\n__exportStar(require(\"./form.tokens\"), exports);\n",null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Validators = void 0;\nconst helpers_1 = require(\"../helpers\");\nclass Validators {\n    static CreditCard(element) {\n        const regex = /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/;\n        if (!regex.test((0, helpers_1.convertCard)(element.value))) {\n            element.classList.add('is-invalid');\n            return {\n                key: 'email-validator',\n                message: 'Credit card number is invalid valid example xxxx-xxxx-xxxx-xxxx',\n            };\n        }\n        element.classList.remove('is-invalid');\n    }\n    static CreditCardMask(element) {\n        element.value = element.value.replace(/\\W/gi, '').replace(/(.{4})/g, '$1 ');\n    }\n    static ExpiryMask(element) {\n        element.value = element.value\n            .replace(/\\W/gi, '')\n            .replace(/(.{2})/g, '$1/')\n            .slice(0, 5);\n    }\n}\nexports.Validators = Validators;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreditCardFormComponent = void 0;\nconst error_template_1 = require(\"./error-template\");\nconst forms_1 = require(\"@rxdi/forms\");\nconst lit_html_1 = require(\"@rxdi/lit-html\");\nconst input_1 = require(\"@rxdi/ui-kit/styles/form/input\");\nconst helpers_1 = require(\"../helpers\");\nconst validators_1 = require(\"../validators\");\n/**\n * @customElement credit-card-form\n */\nlet CreditCardFormComponent = class CreditCardFormComponent extends lit_html_1.LitElement {\n    constructor() {\n        super(...arguments);\n        this.form = new forms_1.FormGroup({\n            card: ['', [validators_1.Validators.CreditCard, validators_1.Validators.CreditCardMask]],\n            name: [''],\n            lastName: [''],\n            expiry: ['', [validators_1.Validators.ExpiryMask]],\n            cvc: [''],\n        });\n    }\n};\n__decorate([\n    (0, lit_html_1.property)({ type: Boolean }),\n    __metadata(\"design:type\", Boolean)\n], CreditCardFormComponent.prototype, \"flipped\", void 0);\n__decorate([\n    (0, forms_1.Form)({\n        name: 'credit-card-details',\n        strategy: 'input',\n    }),\n    __metadata(\"design:type\", Object)\n], CreditCardFormComponent.prototype, \"form\", void 0);\nCreditCardFormComponent = __decorate([\n    (0, lit_html_1.Component)({\n        selector: 'credit-card-form',\n        style: (0, lit_html_1.css) `\n  ${input_1.InputStyle}\n  p {\n   margin: 0px;\n   padding: 0px;\n  }\n\n  .credit-card-container {\n   padding-bottom: 60px;\n  }\n `,\n        template() {\n            return (0, lit_html_1.html) `\n   <div class=\"credit-card-container\">\n    <credit-card\n     .cvc=${this.form.value.cvc}\n     .expiry=${this.form.value.expiry}\n     .name=${this.form.value.name}\n     .number=${this.form.value.card}\n     .flipped=${this.flipped}\n    ></credit-card>\n   </div>\n   <form\n    class=\"form\"\n    novalidate\n    name=\"credit-card-details\"\n    @submit=${() => {\n                if (!this.form.updateValueAndValidity().length) {\n                    this.dispatchEvent(new CustomEvent('submit', { detail: (0, helpers_1.convertModel)(this.form.value) }));\n                }\n            }}\n   >\n    <p>Credit Card Number</p>\n    <input\n     class=\"rx-input\"\n     name=\"card\"\n     type=\"tel\"\n     required\n     inputmode=\"numeric\"\n     autocomplete=\"cc-number\"\n     maxlength=\"19\"\n     placeholder=\"xxxx xxxx xxxx xxxx\"\n    />\n    <div style=\"height:30px;\">${(0, error_template_1.InputErrorTemplate)(this.form.get('card'))}</div>\n\n    <p>Cardholder Name</p>\n    <input required class=\"rx-input\" type=\"text\" name=\"name\" />\n    <div style=\"height:30px;\">${(0, error_template_1.InputErrorTemplate)(this.form.get('name'))}</div>\n\n    <p>Card Expiry</p>\n    <input\n     required\n     placeholder=\"MM/YY\"\n     maxlength=\"5\"\n     class=\"rx-input\"\n     type=\"text\"\n     name=\"expiry\"\n    />\n    <div style=\"height:30px;\">${(0, error_template_1.InputErrorTemplate)(this.form.get('expiry'))}</div>\n\n    <p>CVC Number</p>\n    <input\n     @focusout=${() => {\n                this.flipped = false;\n            }}\n     @focus=${() => {\n                this.flipped = true;\n            }}\n     placeholder=\"CVC\"\n     maxlength=\"3\"\n     class=\"rx-input\"\n     type=\"text\"\n     required\n     name=\"cvc\"\n    />\n    <div style=\"height:30px;\">${(0, error_template_1.InputErrorTemplate)(this.form.get('cvc'))}</div>\n\n    <rx-button type=\"submit\">Submit form</rx-button>\n   </form>\n  `;\n        },\n    })\n], CreditCardFormComponent);\nexports.CreditCardFormComponent = CreditCardFormComponent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardModel = void 0;\nclass CardModel {\n    constructor(card, name, expiry, cvc) {\n        this.card = card;\n        this.name = name;\n        this.expiry = expiry;\n        this.cvc = cvc;\n    }\n}\nexports.CardModel = CardModel;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./form.component\"), exports);\n__exportStar(require(\"./model\"), exports);\n__exportStar(require(\"./error-template\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./credit-card\"), exports);\n__exportStar(require(\"./form\"), exports);\n__exportStar(require(\"./helpers\"), exports);\n__exportStar(require(\"./validators\"), exports);\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\n * Note: This file is autogenerated using \"resources/gen-version.js\" script and\n * automatically updated by \"yarn version\" command.\n */\n\n/**\n * A string containing the version of the GraphQL.js library\n */\nexport var version = '14.7.0';\n/**\n * An object containing the components of the GraphQL.js version string\n */\n\nexport var versionInfo = Object.freeze({\n  major: 14,\n  minor: 7,\n  patch: 0,\n  preReleaseTag: null\n});\n","/**\n * Returns true if the value acts like a Promise, i.e. has a \"then\" function,\n * otherwise returns false.\n */\n// eslint-disable-next-line no-redeclare\nexport default function isPromise(value) {\n  return Boolean(value && typeof value.then === 'function');\n}\n","var nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nexport default nodejsCustomInspectSymbol;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport nodejsCustomInspectSymbol from './nodejsCustomInspectSymbol';\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport default function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    // $FlowFixMe(>=0.90.0)\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","import nodejsCustomInspectSymbol from './nodejsCustomInspectSymbol';\n/**\n * The `defineToJSON()` function defines toJSON() and inspect() prototype\n * methods, if no function provided they become aliases for toString().\n */\n\nexport default function defineToJSON(classObject) {\n  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : classObject.prototype.toString;\n  classObject.prototype.toJSON = fn;\n  classObject.prototype.inspect = fn;\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from '../language/location';\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var sublineIndex = Math.floor(columnNum / 80);\n    var sublineColumnNum = columnNum % 80;\n    var sublines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      sublines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), sublines[0]]].concat(sublines.slice(1, sublineIndex + 1).map(function (subline) {\n      return ['', subline];\n    }), [[' ', whitespace(sublineColumnNum - 1) + '^'], ['', sublines[sublineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return lpad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","import isObjectLike from '../jsutils/isObjectLike';\nimport { getLocation } from '../language/location';\nimport { printLocation, printSourceLocation } from '../language/printLocation';\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport function GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n  var _source = source;\n\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n\n      return list;\n    }, []);\n  }\n\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations;\n\n  if (positions && source) {\n    _locations = positions.map(function (pos) {\n      return getLocation(source, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(getLocation(node.loc.source, node.loc.start));\n      }\n\n      return list;\n    }, []);\n  }\n\n  var _extensions = extensions;\n\n  if (_extensions == null && originalError != null) {\n    var originalExtensions = originalError.extensions;\n\n    if (isObjectLike(originalExtensions)) {\n      _extensions = originalExtensions;\n    }\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_locations)\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(path)\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _extensions || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_extensions)\n    }\n  }); // Include (non-enumerable) stack trace.\n\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: GraphQLError\n  },\n  name: {\n    value: 'GraphQLError'\n  },\n  toString: {\n    value: function toString() {\n      return printError(this);\n    }\n  }\n});\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","import { GraphQLError } from './GraphQLError';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n","/**\n * The `defineToStringTag()` function checks first to see if the runtime\n * supports the `Symbol` class and then if the `Symbol.toStringTag` constant\n * is defined as a `Symbol` instance. If both conditions are met, the\n * Symbol.toStringTag property is defined as a getter that returns the\n * supplied class constructor's name.\n *\n * @method defineToStringTag\n *\n * @param {Class<any>} classObject a class such as Object, String, Number but\n * typically one of your own creation through the class keyword; `class A {}`,\n * for example.\n */\nexport default function defineToStringTag(classObject) {\n  if (typeof Symbol === 'function' && Symbol.toStringTag) {\n    Object.defineProperty(classObject.prototype, Symbol.toStringTag, {\n      get: function get() {\n        return this.constructor.name;\n      }\n    });\n  }\n}\n","import devAssert from '../jsutils/devAssert';\nimport defineToStringTag from '../jsutils/defineToStringTag';\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nexport var Source = function Source(body, name, locationOffset) {\n  this.body = body;\n  this.name = name || 'GraphQL request';\n  this.locationOffset = locationOffset || {\n    line: 1,\n    column: 1\n  };\n  this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive');\n  this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive');\n}; // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(Source);\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dedentBlockStringValue = dedentBlockStringValue;\nexports.getBlockStringIndentation = getBlockStringIndentation;\nexports.printBlockString = printBlockString;\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n */\nfunction dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(lines);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.join('\\n');\n} // @internal\n\n\nfunction getBlockStringIndentation(lines) {\n  var commonIndent = null;\n\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    if (commonIndent === null || indent < commonIndent) {\n      commonIndent = indent;\n\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  return commonIndent === null ? 0 : commonIndent;\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\n\n\nfunction printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","import defineToJSON from '../jsutils/defineToJSON';\nimport { syntaxError } from '../error/syntaxError';\nimport { dedentBlockStringValue } from './blockString';\nimport { TokenKind } from './tokenKind';\n/**\n * Given a Source object, this returns a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport function createLexer(source, options) {\n  var startOfFileToken = new Tok(TokenKind.SOF, 0, 0, 0, 0, null);\n  var lexer = {\n    source: source,\n    options: options,\n    lastToken: startOfFileToken,\n    token: startOfFileToken,\n    line: 1,\n    lineStart: 0,\n    advance: advanceLexer,\n    lookahead: lookahead\n  };\n  return lexer;\n}\n\nfunction advanceLexer() {\n  this.lastToken = this.token;\n  var token = this.token = this.lookahead();\n  return token;\n}\n\nfunction lookahead() {\n  var token = this.token;\n\n  if (token.kind !== TokenKind.EOF) {\n    do {\n      // Note: next is only mutable during parsing, so we cast to allow this.\n      token = token.next || (token.next = readToken(this, token));\n    } while (token.kind === TokenKind.COMMENT);\n  }\n\n  return token;\n}\n/**\n * The return type of createLexer.\n */\n\n\n// @internal\nexport function isPunctuatorToken(token) {\n  var kind = token.kind;\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n/**\n * Helper function for constructing the Token object.\n */\n\nfunction Tok(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\ndefineToJSON(Tok, function () {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n});\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Tok(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Tok(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Tok(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Tok(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Tok(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Tok(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new Tok(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Tok(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Tok(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Tok(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Tok(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Tok(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Tok(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Tok(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Tok(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Tok(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or e\n\n\n  if (code === 46 || code === 69 || code === 101) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Tok(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Tok(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Tok(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Tok(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n}\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","import inspect from '../jsutils/inspect';\nimport devAssert from '../jsutils/devAssert';\nimport defineToJSON from '../jsutils/defineToJSON';\nimport { syntaxError } from '../error/syntaxError';\nimport { Kind } from './kinds';\nimport { Source } from './source';\nimport { createLexer } from './lexer';\nimport { DirectiveLocation } from './directiveLocation';\nimport { TokenKind } from './tokenKind';\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n\nvar Parser =\n/*#__PURE__*/\nfunction () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new Source(source) : source;\n    sourceObj instanceof Source || devAssert(0, \"Must provide Source. Received: \".concat(inspect(sourceObj)));\n    this._lexer = createLexer(sourceObj);\n    this._options = options || {};\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.experimentalFragmentVariables) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        if (token.value === 'true' || token.value === 'false') {\n          this._lexer.advance();\n\n          return {\n            kind: Kind.BOOLEAN,\n            value: token.value === 'true',\n            loc: this.loc(token)\n          };\n        } else if (token.value === 'null') {\n          this._lexer.advance();\n\n          return {\n            kind: Kind.NULL,\n            loc: this.loc(token)\n          };\n        }\n\n        this._lexer.advance();\n\n        return {\n          kind: Kind.ENUM,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || // Legacy support for the SDL?\n      this._options.allowLegacySDLImplementsInterfaces && this.peek(TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    // Legacy support for the SDL?\n    if (this._options.allowLegacySDLEmptyFields && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *   - extend interface Name Directives[Const]? FieldsDefinition\n   *   - extend interface Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    if (!this._options.noLocation) {\n      return new Loc(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(kind, \", found \").concat(getTokenDesc(token)));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token)));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken || this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token)));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n\nfunction Loc(startToken, endToken, source) {\n  this.start = startToken.start;\n  this.end = endToken.end;\n  this.startToken = startToken;\n  this.endToken = endToken;\n  this.source = source;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\ndefineToJSON(Loc, function () {\n  return {\n    start: this.start,\n    end: this.end\n  };\n});\n/**\n * A helper function to describe a token as a string for debugging\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return value ? \"\".concat(token.kind, \" \\\"\").concat(value, \"\\\"\") : token.kind;\n}\n","import inspect from '../jsutils/inspect';\nexport var QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexport var BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexport function visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error('Invalid AST Node: ' + inspect(node));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : visitorKeys[node.kind] || [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n\nfunction isNode(maybeNode) {\n  return Boolean(maybeNode && typeof maybeNode.kind === 'string');\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\n\nexport function visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\n\nexport function visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter: function enter(node) {\n      typeInfo.enter(node);\n      var fn = getVisitFn(visitor, node.kind,\n      /* isLeaving */\n      false);\n\n      if (fn) {\n        var result = fn.apply(visitor, arguments);\n\n        if (result !== undefined) {\n          typeInfo.leave(node);\n\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n\n        return result;\n      }\n    },\n    leave: function leave(node) {\n      var fn = getVisitFn(visitor, node.kind,\n      /* isLeaving */\n      true);\n      var result;\n\n      if (fn) {\n        result = fn.apply(visitor, arguments);\n      }\n\n      typeInfo.leave(node);\n      return result;\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n","/* eslint-disable no-redeclare */\n// $FlowFixMe\nvar find = Array.prototype.find ? function (list, predicate) {\n  return Array.prototype.find.call(list, predicate);\n} : function (list, predicate) {\n  for (var _i2 = 0; _i2 < list.length; _i2++) {\n    var value = list[_i2];\n\n    if (predicate(value)) {\n      return value;\n    }\n  }\n};\nexport default find;\n","// Workaround to make older Flow versions happy\nvar flatMapMethod = Array.prototype.flatMap;\n/* eslint-disable no-redeclare */\n// $FlowFixMe\n\nvar flatMap = flatMapMethod ? function (list, fn) {\n  return flatMapMethod.call(list, fn);\n} : function (list, fn) {\n  var result = [];\n\n  for (var _i2 = 0; _i2 < list.length; _i2++) {\n    var _item = list[_i2];\n    var value = fn(_item);\n\n    if (Array.isArray(value)) {\n      result = result.concat(value);\n    } else {\n      result.push(value);\n    }\n  }\n\n  return result;\n};\nexport default flatMap;\n","/* eslint-disable no-redeclare */\n// $FlowFixMe workaround for: https://github.com/facebook/flow/issues/2221\nvar objectValues = Object.values || function (obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n};\n\nexport default objectValues;\n","/* eslint-disable no-redeclare */\n// $FlowFixMe workaround for: https://github.com/facebook/flow/issues/5838\nvar objectEntries = Object.entries || function (obj) {\n  return Object.keys(obj).map(function (key) {\n    return [key, obj[key]];\n  });\n};\n\nexport default objectEntries;\n","import devAssert from '../jsutils/devAssert';\nimport { GraphQLError } from '../error/GraphQLError';\nvar NAME_RX = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/**\n * Upholds the spec rules about naming.\n */\n\nexport function assertValidName(name) {\n  var error = isValidNameError(name);\n\n  if (error) {\n    throw error;\n  }\n\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n */\n\nexport function isValidNameError(name, node) {\n  typeof name === 'string' || devAssert(0, 'Expected string');\n\n  if (name.length > 1 && name[0] === '_' && name[1] === '_') {\n    return new GraphQLError(\"Name \\\"\".concat(name, \"\\\" must not begin with \\\"__\\\", which is reserved by GraphQL introspection.\"), node);\n  }\n\n  if (!NAME_RX.test(name)) {\n    return new GraphQLError(\"Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \\\"\".concat(name, \"\\\" does not.\"), node);\n  }\n}\n","/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: { name: 'Jon', num: '555-1234' },\n *     //   Jenny: { name: 'Jenny', num: '867-5309' } }\n *     const entriesByName = keyMap(\n *       phoneBook,\n *       entry => entry.name\n *     )\n *\n *     // { name: 'Jenny', num: '857-6309' }\n *     const jennyEntry = entriesByName['Jenny']\n *\n */\nexport default function keyMap(list, keyFn) {\n  return list.reduce(function (map, item) {\n    map[keyFn(item)] = item;\n    return map;\n  }, Object.create(null));\n}\n","import objectEntries from '../polyfills/objectEntries';\n\n/**\n * Creates an object map with the same keys as `map` and values generated by\n * running each value of `map` thru `fn`.\n */\nexport default function mapValue(map, fn) {\n  var result = Object.create(null);\n\n  for (var _i2 = 0, _objectEntries2 = objectEntries(map); _i2 < _objectEntries2.length; _i2++) {\n    var _ref2 = _objectEntries2[_i2];\n    var _key = _ref2[0];\n    var _value = _ref2[1];\n    result[_key] = fn(_value, _key);\n  }\n\n  return result;\n}\n","import objectEntries from '../polyfills/objectEntries';\nexport default function toObjMap(obj) {\n  /* eslint-enable no-redeclare */\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n\n  var map = Object.create(null);\n\n  for (var _i2 = 0, _objectEntries2 = objectEntries(obj); _i2 < _objectEntries2.length; _i2++) {\n    var _ref2 = _objectEntries2[_i2];\n    var key = _ref2[0];\n    var value = _ref2[1];\n    map[key] = value;\n  }\n\n  return map;\n}\n","/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: '555-1234', Jenny: '867-5309' }\n *     const phonesByName = keyValMap(\n *       phoneBook,\n *       entry => entry.name,\n *       entry => entry.num\n *     )\n *\n */\nexport default function keyValMap(list, keyFn, valFn) {\n  return list.reduce(function (map, item) {\n    map[keyFn(item)] = valFn(item);\n    return map;\n  }, Object.create(null));\n}\n","/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n */\n// See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n// See: https://webpack.js.org/guides/production/\nexport default process.env.NODE_ENV === 'production' ? // eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  return value instanceof constructor;\n} : // eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  if (value instanceof constructor) {\n    return true;\n  }\n\n  if (value) {\n    var valueClass = value.constructor;\n    var className = constructor.name;\n\n    if (className && valueClass && valueClass.name === className) {\n      throw new Error(\"Cannot use \".concat(className, \" \\\"\").concat(value, \"\\\" from another module or realm.\\n\\nEnsure that there is only one instance of \\\"graphql\\\" in the node_modules\\ndirectory. If different versions of \\\"graphql\\\" are the dependencies of other\\nrelied on modules, use \\\"resolutions\\\" to ensure only one version is installed.\\n\\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\\n\\nDuplicate \\\"graphql\\\" modules cannot be used at the same time since different\\nversions may have different capabilities and behavior. The data from one\\nversion used in the function from another could produce confusing and\\nspurious results.\"));\n    }\n  }\n\n  return false;\n};\n","/**\n * Returns the first argument it receives.\n */\nexport default function identityFunc(x) {\n  return x;\n}\n","export default function invariant(condition, message) {\n  var booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message || 'Unexpected invariant triggered');\n  }\n}\n","/**\n * Returns true if a value is undefined, or NaN.\n */\nexport default function isInvalid(value) {\n  return value === undefined || value !== value;\n}\n","import inspect from '../jsutils/inspect';\nimport invariant from '../jsutils/invariant';\nimport keyValMap from '../jsutils/keyValMap';\nimport isInvalid from '../jsutils/isInvalid';\nimport { Kind } from '../language/kinds';\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nexport function valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case Kind.NULL:\n      return null;\n\n    case Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case Kind.STRING:\n    case Kind.ENUM:\n    case Kind.BOOLEAN:\n      return valueNode.value;\n\n    case Kind.LIST:\n      return valueNode.values.map(function (node) {\n        return valueFromASTUntyped(node, variables);\n      });\n\n    case Kind.OBJECT:\n      return keyValMap(valueNode.fields, function (field) {\n        return field.name.value;\n      }, function (field) {\n        return valueFromASTUntyped(field.value, variables);\n      });\n\n    case Kind.VARIABLE:\n      {\n        var variableName = valueNode.name.value;\n        return variables && !isInvalid(variables[variableName]) ? variables[variableName] : undefined;\n      }\n  } // Not reachable. All possible value nodes have been considered.\n\n\n  /* istanbul ignore next */\n  invariant(false, 'Unexpected value node: ' + inspect(valueNode));\n}\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport objectEntries from '../polyfills/objectEntries';\nimport inspect from '../jsutils/inspect';\nimport keyMap from '../jsutils/keyMap';\nimport mapValue from '../jsutils/mapValue';\nimport toObjMap from '../jsutils/toObjMap';\nimport devAssert from '../jsutils/devAssert';\nimport keyValMap from '../jsutils/keyValMap';\nimport instanceOf from '../jsutils/instanceOf';\nimport isObjectLike from '../jsutils/isObjectLike';\nimport identityFunc from '../jsutils/identityFunc';\nimport defineToJSON from '../jsutils/defineToJSON';\nimport defineToStringTag from '../jsutils/defineToStringTag';\nimport { Kind } from '../language/kinds';\nimport { valueFromASTUntyped } from '../utilities/valueFromASTUntyped';\nexport function isType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type) || isListType(type) || isNonNullType(type);\n}\nexport function assertType(type) {\n  if (!isType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL type.\"));\n  }\n\n  return type;\n}\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isScalarType(type) {\n  return instanceOf(type, GraphQLScalarType);\n}\nexport function assertScalarType(type) {\n  if (!isScalarType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Scalar type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isObjectType(type) {\n  return instanceOf(type, GraphQLObjectType);\n}\nexport function assertObjectType(type) {\n  if (!isObjectType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Object type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isInterfaceType(type) {\n  return instanceOf(type, GraphQLInterfaceType);\n}\nexport function assertInterfaceType(type) {\n  if (!isInterfaceType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Interface type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isUnionType(type) {\n  return instanceOf(type, GraphQLUnionType);\n}\nexport function assertUnionType(type) {\n  if (!isUnionType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Union type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isEnumType(type) {\n  return instanceOf(type, GraphQLEnumType);\n}\nexport function assertEnumType(type) {\n  if (!isEnumType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Enum type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isInputObjectType(type) {\n  return instanceOf(type, GraphQLInputObjectType);\n}\nexport function assertInputObjectType(type) {\n  if (!isInputObjectType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Input Object type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isListType(type) {\n  return instanceOf(type, GraphQLList);\n}\nexport function assertListType(type) {\n  if (!isListType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL List type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isNonNullType(type) {\n  return instanceOf(type, GraphQLNonNull);\n}\nexport function assertNonNullType(type) {\n  if (!isNonNullType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Non-Null type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may be used as input types for arguments and directives.\n */\n\nexport function isInputType(type) {\n  return isScalarType(type) || isEnumType(type) || isInputObjectType(type) || isWrappingType(type) && isInputType(type.ofType);\n}\nexport function assertInputType(type) {\n  if (!isInputType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL input type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may be used as output types as the result of fields.\n */\n\nexport function isOutputType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isWrappingType(type) && isOutputType(type.ofType);\n}\nexport function assertOutputType(type) {\n  if (!isOutputType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL output type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe types which may be leaf values.\n */\n\nexport function isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\nexport function assertLeafType(type) {\n  if (!isLeafType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL leaf type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\nexport function assertCompositeType(type) {\n  if (!isCompositeType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL composite type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\nexport function assertAbstractType(type) {\n  if (!isAbstractType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL abstract type.\"));\n  }\n\n  return type;\n}\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         parents: { type: GraphQLList(PersonType) },\n *         children: { type: GraphQLList(PersonType) },\n *       })\n *     })\n *\n */\n\n// eslint-disable-next-line no-redeclare\nexport function GraphQLList(ofType) {\n  if (this instanceof GraphQLList) {\n    this.ofType = assertType(ofType);\n  } else {\n    return new GraphQLList(ofType);\n  }\n} // Need to cast through any to alter the prototype.\n\nGraphQLList.prototype.toString = function toString() {\n  return '[' + String(this.ofType) + ']';\n}; // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\n\ndefineToStringTag(GraphQLList);\ndefineToJSON(GraphQLList);\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n *     const RowType = new GraphQLObjectType({\n *       name: 'Row',\n *       fields: () => ({\n *         id: { type: GraphQLNonNull(GraphQLString) },\n *       })\n *     })\n *\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function GraphQLNonNull(ofType) {\n  if (this instanceof GraphQLNonNull) {\n    this.ofType = assertNullableType(ofType);\n  } else {\n    return new GraphQLNonNull(ofType);\n  }\n} // Need to cast through any to alter the prototype.\n\nGraphQLNonNull.prototype.toString = function toString() {\n  return String(this.ofType) + '!';\n}; // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\n\ndefineToStringTag(GraphQLNonNull);\ndefineToJSON(GraphQLNonNull);\n/**\n * These types wrap and modify other types\n */\n\nexport function isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\nexport function assertWrappingType(type) {\n  if (!isWrappingType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL wrapping type.\"));\n  }\n\n  return type;\n}\n/**\n * These types can all accept null as a value.\n */\n\nexport function isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\nexport function assertNullableType(type) {\n  if (!isNullableType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL nullable type.\"));\n  }\n\n  return type;\n}\n/* eslint-disable no-redeclare */\n\nexport function getNullableType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\nexport function isNamedType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type);\n}\nexport function assertNamedType(type) {\n  if (!isNamedType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL named type.\"));\n  }\n\n  return type;\n}\n/* eslint-disable no-redeclare */\n\nexport function getNamedType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    var unwrappedType = type;\n\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n\n    return unwrappedType;\n  }\n}\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\nfunction resolveThunk(thunk) {\n  // $FlowFixMe(>=0.90.0)\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n\nfunction undefineIfEmpty(arr) {\n  return arr && arr.length > 0 ? arr : undefined;\n}\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function does not return a value (i.e. it returns\n * `undefined`) then an error will be raised and a `null` value will be returned\n * in the response. If the serialize function returns `null`, then no error will\n * be included in the response.\n *\n * Example:\n *\n *     const OddType = new GraphQLScalarType({\n *       name: 'Odd',\n *       serialize(value) {\n *         if (value % 2 === 1) {\n *           return value;\n *         }\n *       }\n *     });\n *\n */\n\n\nexport var GraphQLScalarType =\n/*#__PURE__*/\nfunction () {\n  function GraphQLScalarType(config) {\n    var parseValue = config.parseValue || identityFunc;\n    this.name = config.name;\n    this.description = config.description;\n    this.serialize = config.serialize || identityFunc;\n    this.parseValue = parseValue;\n\n    this.parseLiteral = config.parseLiteral || function (node) {\n      return parseValue(valueFromASTUntyped(node));\n    };\n\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.serialize == null || typeof config.serialize === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"serialize\\\" function. If this custom Scalar is also used as an input type, ensure \\\"parseValue\\\" and \\\"parseLiteral\\\" functions are also provided.\"));\n\n    if (config.parseLiteral) {\n      typeof config.parseValue === 'function' && typeof config.parseLiteral === 'function' || devAssert(0, \"\".concat(this.name, \" must provide both \\\"parseValue\\\" and \\\"parseLiteral\\\" functions.\"));\n    }\n  }\n\n  var _proto = GraphQLScalarType.prototype;\n\n  _proto.toConfig = function toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes || []\n    };\n  };\n\n  _proto.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLScalarType;\n}(); // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(GraphQLScalarType);\ndefineToJSON(GraphQLScalarType);\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n *     const AddressType = new GraphQLObjectType({\n *       name: 'Address',\n *       fields: {\n *         street: { type: GraphQLString },\n *         number: { type: GraphQLInt },\n *         formatted: {\n *           type: GraphQLString,\n *           resolve(obj) {\n *             return obj.number + ' ' + obj.street\n *           }\n *         }\n *       }\n *     });\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         name: { type: GraphQLString },\n *         bestFriend: { type: PersonType },\n *       })\n *     });\n *\n */\nexport var GraphQLObjectType =\n/*#__PURE__*/\nfunction () {\n  function GraphQLObjectType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.isTypeOf == null || typeof config.isTypeOf === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"isTypeOf\\\" as a function, \") + \"but got: \".concat(inspect(config.isTypeOf), \".\"));\n  }\n\n  var _proto2 = GraphQLObjectType.prototype;\n\n  _proto2.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto2.getInterfaces = function getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  };\n\n  _proto2.toConfig = function toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes || []\n    };\n  };\n\n  _proto2.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLObjectType;\n}(); // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(GraphQLObjectType);\ndefineToJSON(GraphQLObjectType);\n\nfunction defineInterfaces(config) {\n  var interfaces = resolveThunk(config.interfaces) || [];\n  Array.isArray(interfaces) || devAssert(0, \"\".concat(config.name, \" interfaces must be an Array or a function which returns an Array.\"));\n  return interfaces;\n}\n\nfunction defineFieldMap(config) {\n  var fieldMap = resolveThunk(config.fields) || {};\n  isPlainObj(fieldMap) || devAssert(0, \"\".concat(config.name, \" fields must be an object with field names as keys or a function which returns such an object.\"));\n  return mapValue(fieldMap, function (fieldConfig, fieldName) {\n    isPlainObj(fieldConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" field config must be an object\"));\n    !('isDeprecated' in fieldConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" should provide \\\"deprecationReason\\\" instead of \\\"isDeprecated\\\".\"));\n    fieldConfig.resolve == null || typeof fieldConfig.resolve === 'function' || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" field resolver must be a function if \") + \"provided, but got: \".concat(inspect(fieldConfig.resolve), \".\"));\n    var argsConfig = fieldConfig.args || {};\n    isPlainObj(argsConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" args must be an object with argument names as keys.\"));\n    var args = objectEntries(argsConfig).map(function (_ref) {\n      var argName = _ref[0],\n          arg = _ref[1];\n      return {\n        name: argName,\n        description: arg.description === undefined ? null : arg.description,\n        type: arg.type,\n        defaultValue: arg.defaultValue,\n        extensions: arg.extensions && toObjMap(arg.extensions),\n        astNode: arg.astNode\n      };\n    });\n    return _objectSpread({}, fieldConfig, {\n      name: fieldName,\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: args,\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      isDeprecated: Boolean(fieldConfig.deprecationReason),\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: fieldConfig.extensions && toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    });\n  });\n}\n\nfunction isPlainObj(obj) {\n  return isObjectLike(obj) && !Array.isArray(obj);\n}\n\nfunction fieldsToFieldsConfig(fields) {\n  return mapValue(fields, function (field) {\n    return {\n      description: field.description,\n      type: field.type,\n      args: argsToArgsConfig(field.args),\n      resolve: field.resolve,\n      subscribe: field.subscribe,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode\n    };\n  });\n}\n\nexport function argsToArgsConfig(args) {\n  return keyValMap(args, function (arg) {\n    return arg.name;\n  }, function (arg) {\n    return {\n      description: arg.description,\n      type: arg.type,\n      defaultValue: arg.defaultValue,\n      extensions: arg.extensions,\n      astNode: arg.astNode\n    };\n  });\n}\nexport function isRequiredArgument(arg) {\n  return isNonNullType(arg.type) && arg.defaultValue === undefined;\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n *     const EntityType = new GraphQLInterfaceType({\n *       name: 'Entity',\n *       fields: {\n *         name: { type: GraphQLString }\n *       }\n *     });\n *\n */\nexport var GraphQLInterfaceType =\n/*#__PURE__*/\nfunction () {\n  function GraphQLInterfaceType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineFieldMap.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.resolveType == null || typeof config.resolveType === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"resolveType\\\" as a function, \") + \"but got: \".concat(inspect(config.resolveType), \".\"));\n  }\n\n  var _proto3 = GraphQLInterfaceType.prototype;\n\n  _proto3.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto3.toConfig = function toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes || []\n    };\n  };\n\n  _proto3.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLInterfaceType;\n}(); // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(GraphQLInterfaceType);\ndefineToJSON(GraphQLInterfaceType);\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n *     const PetType = new GraphQLUnionType({\n *       name: 'Pet',\n *       types: [ DogType, CatType ],\n *       resolveType(value) {\n *         if (value instanceof Dog) {\n *           return DogType;\n *         }\n *         if (value instanceof Cat) {\n *           return CatType;\n *         }\n *       }\n *     });\n *\n */\nexport var GraphQLUnionType =\n/*#__PURE__*/\nfunction () {\n  function GraphQLUnionType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._types = defineTypes.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.resolveType == null || typeof config.resolveType === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"resolveType\\\" as a function, \") + \"but got: \".concat(inspect(config.resolveType), \".\"));\n  }\n\n  var _proto4 = GraphQLUnionType.prototype;\n\n  _proto4.getTypes = function getTypes() {\n    if (typeof this._types === 'function') {\n      this._types = this._types();\n    }\n\n    return this._types;\n  };\n\n  _proto4.toConfig = function toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes || []\n    };\n  };\n\n  _proto4.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLUnionType;\n}(); // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(GraphQLUnionType);\ndefineToJSON(GraphQLUnionType);\n\nfunction defineTypes(config) {\n  var types = resolveThunk(config.types) || [];\n  Array.isArray(types) || devAssert(0, \"Must provide Array of types or a function which returns such an array for Union \".concat(config.name, \".\"));\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n *     const RGBType = new GraphQLEnumType({\n *       name: 'RGB',\n *       values: {\n *         RED: { value: 0 },\n *         GREEN: { value: 1 },\n *         BLUE: { value: 2 }\n *       }\n *     });\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nexport var GraphQLEnumType\n/* <T> */\n=\n/*#__PURE__*/\nfunction () {\n  function GraphQLEnumType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._values = defineEnumValues(this.name, config.values);\n    this._valueLookup = new Map(this._values.map(function (enumValue) {\n      return [enumValue.value, enumValue];\n    }));\n    this._nameLookup = keyMap(this._values, function (value) {\n      return value.name;\n    });\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n  }\n\n  var _proto5 = GraphQLEnumType.prototype;\n\n  _proto5.getValues = function getValues() {\n    return this._values;\n  };\n\n  _proto5.getValue = function getValue(name) {\n    return this._nameLookup[name];\n  };\n\n  _proto5.serialize = function serialize(value) {\n    var enumValue = this._valueLookup.get(value);\n\n    if (enumValue) {\n      return enumValue.name;\n    }\n  };\n\n  _proto5.parseValue = function parseValue(value)\n  /* T */\n  {\n    if (typeof value === 'string') {\n      var enumValue = this.getValue(value);\n\n      if (enumValue) {\n        return enumValue.value;\n      }\n    }\n  };\n\n  _proto5.parseLiteral = function parseLiteral(valueNode, _variables)\n  /* T */\n  {\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind === Kind.ENUM) {\n      var enumValue = this.getValue(valueNode.value);\n\n      if (enumValue) {\n        return enumValue.value;\n      }\n    }\n  };\n\n  _proto5.toConfig = function toConfig() {\n    var values = keyValMap(this.getValues(), function (value) {\n      return value.name;\n    }, function (value) {\n      return {\n        description: value.description,\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        extensions: value.extensions,\n        astNode: value.astNode\n      };\n    });\n    return {\n      name: this.name,\n      description: this.description,\n      values: values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes || []\n    };\n  };\n\n  _proto5.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLEnumType;\n}(); // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(GraphQLEnumType);\ndefineToJSON(GraphQLEnumType);\n\nfunction defineEnumValues(typeName, valueMap) {\n  isPlainObj(valueMap) || devAssert(0, \"\".concat(typeName, \" values must be an object with value names as keys.\"));\n  return objectEntries(valueMap).map(function (_ref2) {\n    var valueName = _ref2[0],\n        value = _ref2[1];\n    isPlainObj(value) || devAssert(0, \"\".concat(typeName, \".\").concat(valueName, \" must refer to an object with a \\\"value\\\" key \") + \"representing an internal value but got: \".concat(inspect(value), \".\"));\n    !('isDeprecated' in value) || devAssert(0, \"\".concat(typeName, \".\").concat(valueName, \" should provide \\\"deprecationReason\\\" instead of \\\"isDeprecated\\\".\"));\n    return {\n      name: valueName,\n      description: value.description,\n      value: 'value' in value ? value.value : valueName,\n      isDeprecated: Boolean(value.deprecationReason),\n      deprecationReason: value.deprecationReason,\n      extensions: value.extensions && toObjMap(value.extensions),\n      astNode: value.astNode\n    };\n  });\n}\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n *     const GeoPoint = new GraphQLInputObjectType({\n *       name: 'GeoPoint',\n *       fields: {\n *         lat: { type: GraphQLNonNull(GraphQLFloat) },\n *         lon: { type: GraphQLNonNull(GraphQLFloat) },\n *         alt: { type: GraphQLFloat, defaultValue: 0 },\n *       }\n *     });\n *\n */\nexport var GraphQLInputObjectType =\n/*#__PURE__*/\nfunction () {\n  function GraphQLInputObjectType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineInputFieldMap.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n  }\n\n  var _proto6 = GraphQLInputObjectType.prototype;\n\n  _proto6.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto6.toConfig = function toConfig() {\n    var fields = mapValue(this.getFields(), function (field) {\n      return {\n        description: field.description,\n        type: field.type,\n        defaultValue: field.defaultValue,\n        extensions: field.extensions,\n        astNode: field.astNode\n      };\n    });\n    return {\n      name: this.name,\n      description: this.description,\n      fields: fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes || []\n    };\n  };\n\n  _proto6.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLInputObjectType;\n}(); // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(GraphQLInputObjectType);\ndefineToJSON(GraphQLInputObjectType);\n\nfunction defineInputFieldMap(config) {\n  var fieldMap = resolveThunk(config.fields) || {};\n  isPlainObj(fieldMap) || devAssert(0, \"\".concat(config.name, \" fields must be an object with field names as keys or a function which returns such an object.\"));\n  return mapValue(fieldMap, function (fieldConfig, fieldName) {\n    !('resolve' in fieldConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" field has a resolve property, but Input Types cannot define resolvers.\"));\n    return _objectSpread({}, fieldConfig, {\n      name: fieldName,\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      extensions: fieldConfig.extensions && toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    });\n  });\n}\n\nexport function isRequiredInputField(field) {\n  return isNonNullType(field.type) && field.defaultValue === undefined;\n}\n","import { isObjectType, isListType, isNonNullType, isAbstractType } from '../type/definition';\n/**\n * Provided two types, return true if the types are equal (invariant).\n */\n\nexport function isEqualType(typeA, typeB) {\n  // Equivalent types are equal.\n  if (typeA === typeB) {\n    return true;\n  } // If either type is non-null, the other must also be non-null.\n\n\n  if (isNonNullType(typeA) && isNonNullType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // If either type is a list, the other must also be a list.\n\n\n  if (isListType(typeA) && isListType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // Otherwise the types are not equal.\n\n\n  return false;\n}\n/**\n * Provided a type and a super type, return true if the first type is either\n * equal or a subset of the second super type (covariant).\n */\n\nexport function isTypeSubTypeOf(schema, maybeSubType, superType) {\n  // Equivalent type is a valid subtype\n  if (maybeSubType === superType) {\n    return true;\n  } // If superType is non-null, maybeSubType must also be non-null.\n\n\n  if (isNonNullType(superType)) {\n    if (isNonNullType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if (isNonNullType(maybeSubType)) {\n    // If superType is nullable, maybeSubType may be non-null or nullable.\n    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);\n  } // If superType type is a list, maybeSubType type must also be a list.\n\n\n  if (isListType(superType)) {\n    if (isListType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if (isListType(maybeSubType)) {\n    // If superType is not a list, maybeSubType must also be not a list.\n    return false;\n  } // If superType type is an abstract type, maybeSubType type may be a currently\n  // possible object type.\n\n\n  if (isAbstractType(superType) && isObjectType(maybeSubType) && schema.isPossibleType(superType, maybeSubType)) {\n    return true;\n  } // Otherwise, the child type is not a valid subtype of the parent type.\n\n\n  return false;\n}\n/**\n * Provided two composite types, determine if they \"overlap\". Two composite\n * types overlap when the Sets of possible concrete types for each intersect.\n *\n * This is often used to determine if a fragment of a given type could possibly\n * be visited in a context of another type.\n *\n * This function is commutative.\n */\n\nexport function doTypesOverlap(schema, typeA, typeB) {\n  // Equivalent types overlap\n  if (typeA === typeB) {\n    return true;\n  }\n\n  if (isAbstractType(typeA)) {\n    if (isAbstractType(typeB)) {\n      // If both types are abstract, then determine if there is any intersection\n      // between possible concrete types of each.\n      return schema.getPossibleTypes(typeA).some(function (type) {\n        return schema.isPossibleType(typeB, type);\n      });\n    } // Determine if the latter type is a possible concrete type of the former.\n\n\n    return schema.isPossibleType(typeA, typeB);\n  }\n\n  if (isAbstractType(typeB)) {\n    // Determine if the former type is a possible concrete type of the latter.\n    return schema.isPossibleType(typeB, typeA);\n  } // Otherwise the types do not overlap.\n\n\n  return false;\n}\n","/* eslint-disable no-redeclare */\n// $FlowFixMe workaround for: https://github.com/facebook/flow/issues/4441\nvar isFinitePolyfill = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value);\n};\n\nexport default isFinitePolyfill;\n","/* eslint-disable no-redeclare */\n// $FlowFixMe workaround for: https://github.com/facebook/flow/issues/4441\nvar isInteger = Number.isInteger || function (value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n};\n\nexport default isInteger;\n","import isFinite from '../polyfills/isFinite';\nimport isInteger from '../polyfills/isInteger';\nimport inspect from '../jsutils/inspect';\nimport isObjectLike from '../jsutils/isObjectLike';\nimport { Kind } from '../language/kinds';\nimport { GraphQLScalarType, isScalarType } from './definition'; // As per the GraphQL Spec, Integers are only treated as valid when a valid\n// 32-bit signed integer, providing the broadest support across platforms.\n//\n// n.b. JavaScript's integers are safe between -(2^53 - 1) and 2^53 - 1 because\n// they are internally represented as IEEE 754 doubles.\n\nvar MAX_INT = 2147483647;\nvar MIN_INT = -2147483648;\n\nfunction serializeInt(value) {\n  if (typeof value === 'boolean') {\n    return value ? 1 : 0;\n  }\n\n  var num = value;\n\n  if (typeof value === 'string' && value !== '') {\n    num = Number(value);\n  }\n\n  if (!isInteger(num)) {\n    throw new TypeError(\"Int cannot represent non-integer value: \".concat(inspect(value)));\n  }\n\n  if (num > MAX_INT || num < MIN_INT) {\n    throw new TypeError(\"Int cannot represent non 32-bit signed integer value: \".concat(inspect(value)));\n  }\n\n  return num;\n}\n\nfunction coerceInt(value) {\n  if (!isInteger(value)) {\n    throw new TypeError(\"Int cannot represent non-integer value: \".concat(inspect(value)));\n  }\n\n  if (value > MAX_INT || value < MIN_INT) {\n    throw new TypeError(\"Int cannot represent non 32-bit signed integer value: \".concat(inspect(value)));\n  }\n\n  return value;\n}\n\nexport var GraphQLInt = new GraphQLScalarType({\n  name: 'Int',\n  description: 'The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.',\n  serialize: serializeInt,\n  parseValue: coerceInt,\n  parseLiteral: function parseLiteral(ast) {\n    if (ast.kind === Kind.INT) {\n      var num = parseInt(ast.value, 10);\n\n      if (num <= MAX_INT && num >= MIN_INT) {\n        return num;\n      }\n    }\n\n    return undefined;\n  }\n});\n\nfunction serializeFloat(value) {\n  if (typeof value === 'boolean') {\n    return value ? 1 : 0;\n  }\n\n  var num = value;\n\n  if (typeof value === 'string' && value !== '') {\n    num = Number(value);\n  }\n\n  if (!isFinite(num)) {\n    throw new TypeError(\"Float cannot represent non numeric value: \".concat(inspect(value)));\n  }\n\n  return num;\n}\n\nfunction coerceFloat(value) {\n  if (!isFinite(value)) {\n    throw new TypeError(\"Float cannot represent non numeric value: \".concat(inspect(value)));\n  }\n\n  return value;\n}\n\nexport var GraphQLFloat = new GraphQLScalarType({\n  name: 'Float',\n  description: 'The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).',\n  serialize: serializeFloat,\n  parseValue: coerceFloat,\n  parseLiteral: function parseLiteral(ast) {\n    return ast.kind === Kind.FLOAT || ast.kind === Kind.INT ? parseFloat(ast.value) : undefined;\n  }\n}); // Support serializing objects with custom valueOf() or toJSON() functions -\n// a common way to represent a complex value which can be represented as\n// a string (ex: MongoDB id objects).\n\nfunction serializeObject(value) {\n  if (isObjectLike(value)) {\n    if (typeof value.valueOf === 'function') {\n      var valueOfResult = value.valueOf();\n\n      if (!isObjectLike(valueOfResult)) {\n        return valueOfResult;\n      }\n    }\n\n    if (typeof value.toJSON === 'function') {\n      // $FlowFixMe(>=0.90.0)\n      return value.toJSON();\n    }\n  }\n\n  return value;\n}\n\nfunction serializeString(rawValue) {\n  var value = serializeObject(rawValue); // Serialize string, boolean and number values to a string, but do not\n  // attempt to coerce object, function, symbol, or other types as strings.\n\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  if (typeof value === 'boolean') {\n    return value ? 'true' : 'false';\n  }\n\n  if (isFinite(value)) {\n    return value.toString();\n  }\n\n  throw new TypeError(\"String cannot represent value: \".concat(inspect(rawValue)));\n}\n\nfunction coerceString(value) {\n  if (typeof value !== 'string') {\n    throw new TypeError(\"String cannot represent a non string value: \".concat(inspect(value)));\n  }\n\n  return value;\n}\n\nexport var GraphQLString = new GraphQLScalarType({\n  name: 'String',\n  description: 'The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.',\n  serialize: serializeString,\n  parseValue: coerceString,\n  parseLiteral: function parseLiteral(ast) {\n    return ast.kind === Kind.STRING ? ast.value : undefined;\n  }\n});\n\nfunction serializeBoolean(value) {\n  if (typeof value === 'boolean') {\n    return value;\n  }\n\n  if (isFinite(value)) {\n    return value !== 0;\n  }\n\n  throw new TypeError(\"Boolean cannot represent a non boolean value: \".concat(inspect(value)));\n}\n\nfunction coerceBoolean(value) {\n  if (typeof value !== 'boolean') {\n    throw new TypeError(\"Boolean cannot represent a non boolean value: \".concat(inspect(value)));\n  }\n\n  return value;\n}\n\nexport var GraphQLBoolean = new GraphQLScalarType({\n  name: 'Boolean',\n  description: 'The `Boolean` scalar type represents `true` or `false`.',\n  serialize: serializeBoolean,\n  parseValue: coerceBoolean,\n  parseLiteral: function parseLiteral(ast) {\n    return ast.kind === Kind.BOOLEAN ? ast.value : undefined;\n  }\n});\n\nfunction serializeID(rawValue) {\n  var value = serializeObject(rawValue);\n\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  if (isInteger(value)) {\n    return String(value);\n  }\n\n  throw new TypeError(\"ID cannot represent value: \".concat(inspect(rawValue)));\n}\n\nfunction coerceID(value) {\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  if (isInteger(value)) {\n    return value.toString();\n  }\n\n  throw new TypeError(\"ID cannot represent value: \".concat(inspect(value)));\n}\n\nexport var GraphQLID = new GraphQLScalarType({\n  name: 'ID',\n  description: 'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.',\n  serialize: serializeID,\n  parseValue: coerceID,\n  parseLiteral: function parseLiteral(ast) {\n    return ast.kind === Kind.STRING || ast.kind === Kind.INT ? ast.value : undefined;\n  }\n});\nexport var specifiedScalarTypes = Object.freeze([GraphQLString, GraphQLInt, GraphQLFloat, GraphQLBoolean, GraphQLID]);\nexport function isSpecifiedScalarType(type) {\n  return isScalarType(type) && specifiedScalarTypes.some(function (_ref) {\n    var name = _ref.name;\n    return type.name === name;\n  });\n}\n","import objectEntries from '../polyfills/objectEntries';\nimport inspect from '../jsutils/inspect';\nimport toObjMap from '../jsutils/toObjMap';\nimport devAssert from '../jsutils/devAssert';\nimport instanceOf from '../jsutils/instanceOf';\nimport defineToJSON from '../jsutils/defineToJSON';\nimport isObjectLike from '../jsutils/isObjectLike';\nimport defineToStringTag from '../jsutils/defineToStringTag';\nimport { DirectiveLocation } from '../language/directiveLocation';\nimport { GraphQLString, GraphQLBoolean } from './scalars';\nimport { argsToArgsConfig, GraphQLNonNull } from './definition';\n/**\n * Test if the given value is a GraphQL directive.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isDirective(directive) {\n  return instanceOf(directive, GraphQLDirective);\n}\nexport function assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(\"Expected \".concat(inspect(directive), \" to be a GraphQL directive.\"));\n  }\n\n  return directive;\n}\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\n\nexport var GraphQLDirective =\n/*#__PURE__*/\nfunction () {\n  function GraphQLDirective(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable = config.isRepeatable != null && config.isRepeatable;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    config.name || devAssert(0, 'Directive must be named.');\n    Array.isArray(config.locations) || devAssert(0, \"@\".concat(config.name, \" locations must be an Array.\"));\n    var args = config.args || {};\n    isObjectLike(args) && !Array.isArray(args) || devAssert(0, \"@\".concat(config.name, \" args must be an object with argument names as keys.\"));\n    this.args = objectEntries(args).map(function (_ref) {\n      var argName = _ref[0],\n          arg = _ref[1];\n      return {\n        name: argName,\n        description: arg.description === undefined ? null : arg.description,\n        type: arg.type,\n        defaultValue: arg.defaultValue,\n        extensions: arg.extensions && toObjMap(arg.extensions),\n        astNode: arg.astNode\n      };\n    });\n  }\n\n  var _proto = GraphQLDirective.prototype;\n\n  _proto.toString = function toString() {\n    return '@' + this.name;\n  };\n\n  _proto.toConfig = function toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: argsToArgsConfig(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode\n    };\n  };\n\n  return GraphQLDirective;\n}(); // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(GraphQLDirective);\ndefineToJSON(GraphQLDirective);\n\n/**\n * Used to conditionally include fields or fragments.\n */\nexport var GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexport var GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexport var DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexport var GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [DirectiveLocation.FIELD_DEFINITION, DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax (as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n/**\n * The full list of specified directives.\n */\n\nexport var specifiedDirectives = Object.freeze([GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective]);\nexport function isSpecifiedDirective(directive) {\n  return isDirective(directive) && specifiedDirectives.some(function (_ref2) {\n    var name = _ref2.name;\n    return name === directive.name;\n  });\n}\n","import { visit } from './visitor';\nimport { printBlockString } from './blockString';\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, {\n    leave: printDocASTReducer\n  });\n} // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: function SchemaDefinition(_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray, separator) {\n  return maybeArray ? maybeArray.filter(function (x) {\n    return x;\n  }).join(separator || '') : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return array && array.length !== 0 ? '{\\n' + indent(join(array, '\\n')) + '\\n}' : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\n\n\nfunction wrap(start, maybeString, end) {\n  return maybeString ? start + maybeString + (end || '') : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && '  ' + maybeString.replace(/\\n/g, '\\n  ');\n}\n\nfunction isMultiline(string) {\n  return string.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray && maybeArray.some(isMultiline);\n}\n","/**\n * Copyright (c) 2016, Lee Byron\n * All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @ignore\n */\n\n/**\n * [Iterator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterator)\n * is a *protocol* which describes a standard way to produce a sequence of\n * values, typically the values of the Iterable represented by this Iterator.\n *\n * While described by the [ES2015 version of JavaScript](http://www.ecma-international.org/ecma-262/6.0/#sec-iterator-interface)\n * it can be utilized by any version of JavaScript.\n *\n * @external Iterator\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterator|MDN Iteration protocols}\n */\n\n/**\n * [Iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n * is a *protocol* which when implemented allows a JavaScript object to define\n * their iteration behavior, such as what values are looped over in a\n * [`for...of`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of)\n * loop or `iterall`'s `forEach` function. Many [built-in types](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#Builtin_iterables)\n * implement the Iterable protocol, including `Array` and `Map`.\n *\n * While described by the [ES2015 version of JavaScript](http://www.ecma-international.org/ecma-262/6.0/#sec-iterable-interface)\n * it can be utilized by any version of JavaScript.\n *\n * @external Iterable\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable|MDN Iteration protocols}\n */\n\n// In ES2015 environments, Symbol exists\nvar SYMBOL /*: any */ = typeof Symbol === 'function' ? Symbol : void 0\n\n// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\nvar SYMBOL_ITERATOR = SYMBOL && SYMBOL.iterator\n\n/**\n * A property name to be used as the name of an Iterable's method responsible\n * for producing an Iterator, referred to as `@@iterator`. Typically represents\n * the value `Symbol.iterator` but falls back to the string `\"@@iterator\"` when\n * `Symbol.iterator` is not defined.\n *\n * Use `$$iterator` for defining new Iterables instead of `Symbol.iterator`,\n * but do not use it for accessing existing Iterables, instead use\n * {@link getIterator} or {@link isIterable}.\n *\n * @example\n *\n * var $$iterator = require('iterall').$$iterator\n *\n * function Counter (to) {\n *   this.to = to\n * }\n *\n * Counter.prototype[$$iterator] = function () {\n *   return {\n *     to: this.to,\n *     num: 0,\n *     next () {\n *       if (this.num >= this.to) {\n *         return { value: undefined, done: true }\n *       }\n *       return { value: this.num++, done: false }\n *     }\n *   }\n * }\n *\n * var counter = new Counter(3)\n * for (var number of counter) {\n *   console.log(number) // 0 ... 1 ... 2\n * }\n *\n * @type {Symbol|string}\n */\n/*:: declare export var $$iterator: '@@iterator'; */\nexport var $$iterator = SYMBOL_ITERATOR || '@@iterator'\n\n/**\n * Returns true if the provided object implements the Iterator protocol via\n * either implementing a `Symbol.iterator` or `\"@@iterator\"` method.\n *\n * @example\n *\n * var isIterable = require('iterall').isIterable\n * isIterable([ 1, 2, 3 ]) // true\n * isIterable('ABC') // true\n * isIterable({ length: 1, 0: 'Alpha' }) // false\n * isIterable({ key: 'value' }) // false\n * isIterable(new Map()) // true\n *\n * @param obj\n *   A value which might implement the Iterable protocol.\n * @return {boolean} true if Iterable.\n */\n/*:: declare export function isIterable(obj: any): boolean; */\nexport function isIterable(obj) {\n  return !!getIteratorMethod(obj)\n}\n\n/**\n * Returns true if the provided object implements the Array-like protocol via\n * defining a positive-integer `length` property.\n *\n * @example\n *\n * var isArrayLike = require('iterall').isArrayLike\n * isArrayLike([ 1, 2, 3 ]) // true\n * isArrayLike('ABC') // true\n * isArrayLike({ length: 1, 0: 'Alpha' }) // true\n * isArrayLike({ key: 'value' }) // false\n * isArrayLike(new Map()) // false\n *\n * @param obj\n *   A value which might implement the Array-like protocol.\n * @return {boolean} true if Array-like.\n */\n/*:: declare export function isArrayLike(obj: any): boolean; */\nexport function isArrayLike(obj) {\n  var length = obj != null && obj.length\n  return typeof length === 'number' && length >= 0 && length % 1 === 0\n}\n\n/**\n * Returns true if the provided object is an Object (i.e. not a string literal)\n * and is either Iterable or Array-like.\n *\n * This may be used in place of [Array.isArray()][isArray] to determine if an\n * object should be iterated-over. It always excludes string literals and\n * includes Arrays (regardless of if it is Iterable). It also includes other\n * Array-like objects such as NodeList, TypedArray, and Buffer.\n *\n * @example\n *\n * var isCollection = require('iterall').isCollection\n * isCollection([ 1, 2, 3 ]) // true\n * isCollection('ABC') // false\n * isCollection({ length: 1, 0: 'Alpha' }) // true\n * isCollection({ key: 'value' }) // false\n * isCollection(new Map()) // true\n *\n * @example\n *\n * var forEach = require('iterall').forEach\n * if (isCollection(obj)) {\n *   forEach(obj, function (value) {\n *     console.log(value)\n *   })\n * }\n *\n * @param obj\n *   An Object value which might implement the Iterable or Array-like protocols.\n * @return {boolean} true if Iterable or Array-like Object.\n */\n/*:: declare export function isCollection(obj: any): boolean; */\nexport function isCollection(obj) {\n  return Object(obj) === obj && (isArrayLike(obj) || isIterable(obj))\n}\n\n/**\n * If the provided object implements the Iterator protocol, its Iterator object\n * is returned. Otherwise returns undefined.\n *\n * @example\n *\n * var getIterator = require('iterall').getIterator\n * var iterator = getIterator([ 1, 2, 3 ])\n * iterator.next() // { value: 1, done: false }\n * iterator.next() // { value: 2, done: false }\n * iterator.next() // { value: 3, done: false }\n * iterator.next() // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>} iterable\n *   An Iterable object which is the source of an Iterator.\n * @return {Iterator<T>} new Iterator instance.\n */\n/*:: declare export var getIterator:\n  & (<+TValue>(iterable: Iterable<TValue>) => Iterator<TValue>)\n  & ((iterable: mixed) => void | Iterator<mixed>); */\nexport function getIterator(iterable) {\n  var method = getIteratorMethod(iterable)\n  if (method) {\n    return method.call(iterable)\n  }\n}\n\n/**\n * If the provided object implements the Iterator protocol, the method\n * responsible for producing its Iterator object is returned.\n *\n * This is used in rare cases for performance tuning. This method must be called\n * with obj as the contextual this-argument.\n *\n * @example\n *\n * var getIteratorMethod = require('iterall').getIteratorMethod\n * var myArray = [ 1, 2, 3 ]\n * var method = getIteratorMethod(myArray)\n * if (method) {\n *   var iterator = method.call(myArray)\n * }\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>} iterable\n *   An Iterable object which defines an `@@iterator` method.\n * @return {function(): Iterator<T>} `@@iterator` method.\n */\n/*:: declare export var getIteratorMethod:\n  & (<+TValue>(iterable: Iterable<TValue>) => (() => Iterator<TValue>))\n  & ((iterable: mixed) => (void | (() => Iterator<mixed>))); */\nexport function getIteratorMethod(iterable) {\n  if (iterable != null) {\n    var method =\n      (SYMBOL_ITERATOR && iterable[SYMBOL_ITERATOR]) || iterable['@@iterator']\n    if (typeof method === 'function') {\n      return method\n    }\n  }\n}\n\n/**\n * Similar to {@link getIterator}, this method returns a new Iterator given an\n * Iterable. However it will also create an Iterator for a non-Iterable\n * Array-like collection, such as Array in a non-ES2015 environment.\n *\n * `createIterator` is complimentary to `forEach`, but allows a \"pull\"-based\n * iteration as opposed to `forEach`'s \"push\"-based iteration.\n *\n * `createIterator` produces an Iterator for Array-likes with the same behavior\n * as ArrayIteratorPrototype described in the ECMAScript specification, and\n * does *not* skip over \"holes\".\n *\n * @example\n *\n * var createIterator = require('iterall').createIterator\n *\n * var myArraylike = { length: 3, 0: 'Alpha', 1: 'Bravo', 2: 'Charlie' }\n * var iterator = createIterator(myArraylike)\n * iterator.next() // { value: 'Alpha', done: false }\n * iterator.next() // { value: 'Bravo', done: false }\n * iterator.next() // { value: 'Charlie', done: false }\n * iterator.next() // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>|{ length: number }} collection\n *   An Iterable or Array-like object to produce an Iterator.\n * @return {Iterator<T>} new Iterator instance.\n */\n/*:: declare export var createIterator:\n  & (<+TValue>(collection: Iterable<TValue>) => Iterator<TValue>)\n  & ((collection: {length: number}) => Iterator<mixed>)\n  & ((collection: mixed) => (void | Iterator<mixed>)); */\nexport function createIterator(collection) {\n  if (collection != null) {\n    var iterator = getIterator(collection)\n    if (iterator) {\n      return iterator\n    }\n    if (isArrayLike(collection)) {\n      return new ArrayLikeIterator(collection)\n    }\n  }\n}\n\n// When the object provided to `createIterator` is not Iterable but is\n// Array-like, this simple Iterator is created.\nfunction ArrayLikeIterator(obj) {\n  this._o = obj\n  this._i = 0\n}\n\n// Note: all Iterators are themselves Iterable.\nArrayLikeIterator.prototype[$$iterator] = function() {\n  return this\n}\n\n// A simple state-machine determines the IteratorResult returned, yielding\n// each value in the Array-like object in order of their indicies.\nArrayLikeIterator.prototype.next = function() {\n  if (this._o === void 0 || this._i >= this._o.length) {\n    this._o = void 0\n    return { value: void 0, done: true }\n  }\n  return { value: this._o[this._i++], done: false }\n}\n\n/**\n * Given an object which either implements the Iterable protocol or is\n * Array-like, iterate over it, calling the `callback` at each iteration.\n *\n * Use `forEach` where you would expect to use a `for ... of` loop in ES6.\n * However `forEach` adheres to the behavior of [Array#forEach][] described in\n * the ECMAScript specification, skipping over \"holes\" in Array-likes. It will\n * also delegate to a `forEach` method on `collection` if one is defined,\n * ensuring native performance for `Arrays`.\n *\n * Similar to [Array#forEach][], the `callback` function accepts three\n * arguments, and is provided with `thisArg` as the calling context.\n *\n * Note: providing an infinite Iterator to forEach will produce an error.\n *\n * [Array#forEach]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\n *\n * @example\n *\n * var forEach = require('iterall').forEach\n *\n * forEach(myIterable, function (value, index, iterable) {\n *   console.log(value, index, iterable === myIterable)\n * })\n *\n * @example\n *\n * // ES6:\n * for (let value of myIterable) {\n *   console.log(value)\n * }\n *\n * // Any JavaScript environment:\n * forEach(myIterable, function (value) {\n *   console.log(value)\n * })\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>|{ length: number }} collection\n *   The Iterable or array to iterate over.\n * @param {function(T, number, object)} callback\n *   Function to execute for each iteration, taking up to three arguments\n * @param [thisArg]\n *   Optional. Value to use as `this` when executing `callback`.\n */\n/*:: declare export var forEach:\n  & (<+TValue, TCollection: Iterable<TValue>>(\n      collection: TCollection,\n      callbackFn: (value: TValue, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => void)\n  & (<TCollection: {length: number}>(\n      collection: TCollection,\n      callbackFn: (value: mixed, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => void); */\nexport function forEach(collection, callback, thisArg) {\n  if (collection != null) {\n    if (typeof collection.forEach === 'function') {\n      return collection.forEach(callback, thisArg)\n    }\n    var i = 0\n    var iterator = getIterator(collection)\n    if (iterator) {\n      var step\n      while (!(step = iterator.next()).done) {\n        callback.call(thisArg, step.value, i++, collection)\n        // Infinite Iterators could cause forEach to run forever.\n        // After a very large number of iterations, produce an error.\n        /* istanbul ignore if */\n        if (i > 9999999) {\n          throw new TypeError('Near-infinite iteration.')\n        }\n      }\n    } else if (isArrayLike(collection)) {\n      for (; i < collection.length; i++) {\n        if (collection.hasOwnProperty(i)) {\n          callback.call(thisArg, collection[i], i, collection)\n        }\n      }\n    }\n  }\n}\n\n/////////////////////////////////////////////////////\n//                                                 //\n//                 ASYNC ITERATORS                 //\n//                                                 //\n/////////////////////////////////////////////////////\n\n/**\n * [AsyncIterable](https://tc39.github.io/proposal-async-iteration/#sec-asynciterable-interface)\n * is a *protocol* which when implemented allows a JavaScript object to define\n * an asynchronous iteration behavior, such as what values are looped over in\n * a [`for-await-of`](https://tc39.github.io/proposal-async-iteration/#sec-for-in-and-for-of-statements)\n * loop or `iterall`'s {@link forAwaitEach} function.\n *\n * While described as a proposed addition to the [ES2017 version of JavaScript](https://tc39.github.io/proposal-async-iteration/)\n * it can be utilized by any version of JavaScript.\n *\n * @external AsyncIterable\n * @see {@link https://tc39.github.io/proposal-async-iteration/#sec-asynciterable-interface|Async Iteration Proposal}\n * @template T The type of each iterated value\n * @property {function (): AsyncIterator<T>} Symbol.asyncIterator\n *   A method which produces an AsyncIterator for this AsyncIterable.\n */\n\n/**\n * [AsyncIterator](https://tc39.github.io/proposal-async-iteration/#sec-asynciterator-interface)\n * is a *protocol* which describes a standard way to produce and consume an\n * asynchronous sequence of values, typically the values of the\n * {@link AsyncIterable} represented by this {@link AsyncIterator}.\n *\n * AsyncIterator is similar to Observable or Stream. Like an {@link Iterator} it\n * also as a `next()` method, however instead of an IteratorResult,\n * calling this method returns a {@link Promise} for a IteratorResult.\n *\n * While described as a proposed addition to the [ES2017 version of JavaScript](https://tc39.github.io/proposal-async-iteration/)\n * it can be utilized by any version of JavaScript.\n *\n * @external AsyncIterator\n * @see {@link https://tc39.github.io/proposal-async-iteration/#sec-asynciterator-interface|Async Iteration Proposal}\n */\n\n// In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\nvar SYMBOL_ASYNC_ITERATOR = SYMBOL && SYMBOL.asyncIterator\n\n/**\n * A property name to be used as the name of an AsyncIterable's method\n * responsible for producing an Iterator, referred to as `@@asyncIterator`.\n * Typically represents the value `Symbol.asyncIterator` but falls back to the\n * string `\"@@asyncIterator\"` when `Symbol.asyncIterator` is not defined.\n *\n * Use `$$asyncIterator` for defining new AsyncIterables instead of\n * `Symbol.asyncIterator`, but do not use it for accessing existing Iterables,\n * instead use {@link getAsyncIterator} or {@link isAsyncIterable}.\n *\n * @example\n *\n * var $$asyncIterator = require('iterall').$$asyncIterator\n *\n * function Chirper (to) {\n *   this.to = to\n * }\n *\n * Chirper.prototype[$$asyncIterator] = function () {\n *   return {\n *     to: this.to,\n *     num: 0,\n *     next () {\n *       return new Promise(resolve => {\n *         if (this.num >= this.to) {\n *           resolve({ value: undefined, done: true })\n *         } else {\n *           setTimeout(() => {\n *             resolve({ value: this.num++, done: false })\n *           }, 1000)\n *         }\n *       })\n *     }\n *   }\n * }\n *\n * var chirper = new Chirper(3)\n * for await (var number of chirper) {\n *   console.log(number) // 0 ...wait... 1 ...wait... 2\n * }\n *\n * @type {Symbol|string}\n */\n/*:: declare export var $$asyncIterator: '@@asyncIterator'; */\nexport var $$asyncIterator = SYMBOL_ASYNC_ITERATOR || '@@asyncIterator'\n\n/**\n * Returns true if the provided object implements the AsyncIterator protocol via\n * either implementing a `Symbol.asyncIterator` or `\"@@asyncIterator\"` method.\n *\n * @example\n *\n * var isAsyncIterable = require('iterall').isAsyncIterable\n * isAsyncIterable(myStream) // true\n * isAsyncIterable('ABC') // false\n *\n * @param obj\n *   A value which might implement the AsyncIterable protocol.\n * @return {boolean} true if AsyncIterable.\n */\n/*:: declare export function isAsyncIterable(obj: any): boolean; */\nexport function isAsyncIterable(obj) {\n  return !!getAsyncIteratorMethod(obj)\n}\n\n/**\n * If the provided object implements the AsyncIterator protocol, its\n * AsyncIterator object is returned. Otherwise returns undefined.\n *\n * @example\n *\n * var getAsyncIterator = require('iterall').getAsyncIterator\n * var asyncIterator = getAsyncIterator(myStream)\n * asyncIterator.next().then(console.log) // { value: 1, done: false }\n * asyncIterator.next().then(console.log) // { value: 2, done: false }\n * asyncIterator.next().then(console.log) // { value: 3, done: false }\n * asyncIterator.next().then(console.log) // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>} asyncIterable\n *   An AsyncIterable object which is the source of an AsyncIterator.\n * @return {AsyncIterator<T>} new AsyncIterator instance.\n */\n/*:: declare export var getAsyncIterator:\n  & (<+TValue>(asyncIterable: AsyncIterable<TValue>) => AsyncIterator<TValue>)\n  & ((asyncIterable: mixed) => (void | AsyncIterator<mixed>)); */\nexport function getAsyncIterator(asyncIterable) {\n  var method = getAsyncIteratorMethod(asyncIterable)\n  if (method) {\n    return method.call(asyncIterable)\n  }\n}\n\n/**\n * If the provided object implements the AsyncIterator protocol, the method\n * responsible for producing its AsyncIterator object is returned.\n *\n * This is used in rare cases for performance tuning. This method must be called\n * with obj as the contextual this-argument.\n *\n * @example\n *\n * var getAsyncIteratorMethod = require('iterall').getAsyncIteratorMethod\n * var method = getAsyncIteratorMethod(myStream)\n * if (method) {\n *   var asyncIterator = method.call(myStream)\n * }\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>} asyncIterable\n *   An AsyncIterable object which defines an `@@asyncIterator` method.\n * @return {function(): AsyncIterator<T>} `@@asyncIterator` method.\n */\n/*:: declare export var getAsyncIteratorMethod:\n  & (<+TValue>(asyncIterable: AsyncIterable<TValue>) => (() => AsyncIterator<TValue>))\n  & ((asyncIterable: mixed) => (void | (() => AsyncIterator<mixed>))); */\nexport function getAsyncIteratorMethod(asyncIterable) {\n  if (asyncIterable != null) {\n    var method =\n      (SYMBOL_ASYNC_ITERATOR && asyncIterable[SYMBOL_ASYNC_ITERATOR]) ||\n      asyncIterable['@@asyncIterator']\n    if (typeof method === 'function') {\n      return method\n    }\n  }\n}\n\n/**\n * Similar to {@link getAsyncIterator}, this method returns a new AsyncIterator\n * given an AsyncIterable. However it will also create an AsyncIterator for a\n * non-async Iterable as well as non-Iterable Array-like collection, such as\n * Array in a pre-ES2015 environment.\n *\n * `createAsyncIterator` is complimentary to `forAwaitEach`, but allows a\n * buffering \"pull\"-based iteration as opposed to `forAwaitEach`'s\n * \"push\"-based iteration.\n *\n * `createAsyncIterator` produces an AsyncIterator for non-async Iterables as\n * described in the ECMAScript proposal [Async-from-Sync Iterator Objects](https://tc39.github.io/proposal-async-iteration/#sec-async-from-sync-iterator-objects).\n *\n * > Note: Creating `AsyncIterator`s requires the existence of `Promise`.\n * > While `Promise` has been available in modern browsers for a number of\n * > years, legacy browsers (like IE 11) may require a polyfill.\n *\n * @example\n *\n * var createAsyncIterator = require('iterall').createAsyncIterator\n *\n * var myArraylike = { length: 3, 0: 'Alpha', 1: 'Bravo', 2: 'Charlie' }\n * var iterator = createAsyncIterator(myArraylike)\n * iterator.next().then(console.log) // { value: 'Alpha', done: false }\n * iterator.next().then(console.log) // { value: 'Bravo', done: false }\n * iterator.next().then(console.log) // { value: 'Charlie', done: false }\n * iterator.next().then(console.log) // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>|Iterable<T>|{ length: number }} source\n *   An AsyncIterable, Iterable, or Array-like object to produce an Iterator.\n * @return {AsyncIterator<T>} new AsyncIterator instance.\n */\n/*:: declare export var createAsyncIterator:\n  & (<+TValue>(\n      collection: Iterable<Promise<TValue> | TValue> | AsyncIterable<TValue>\n    ) => AsyncIterator<TValue>)\n  & ((collection: {length: number}) => AsyncIterator<mixed>)\n  & ((collection: mixed) => (void | AsyncIterator<mixed>)); */\nexport function createAsyncIterator(source) {\n  if (source != null) {\n    var asyncIterator = getAsyncIterator(source)\n    if (asyncIterator) {\n      return asyncIterator\n    }\n    var iterator = createIterator(source)\n    if (iterator) {\n      return new AsyncFromSyncIterator(iterator)\n    }\n  }\n}\n\n// When the object provided to `createAsyncIterator` is not AsyncIterable but is\n// sync Iterable, this simple wrapper is created.\nfunction AsyncFromSyncIterator(iterator) {\n  this._i = iterator\n}\n\n// Note: all AsyncIterators are themselves AsyncIterable.\nAsyncFromSyncIterator.prototype[$$asyncIterator] = function() {\n  return this\n}\n\n// A simple state-machine determines the IteratorResult returned, yielding\n// each value in the Array-like object in order of their indicies.\nAsyncFromSyncIterator.prototype.next = function(value) {\n  return unwrapAsyncFromSync(this._i, 'next', value)\n}\n\nAsyncFromSyncIterator.prototype.return = function(value) {\n  return this._i.return\n    ? unwrapAsyncFromSync(this._i, 'return', value)\n    : Promise.resolve({ value: value, done: true })\n}\n\nAsyncFromSyncIterator.prototype.throw = function(value) {\n  return this._i.throw\n    ? unwrapAsyncFromSync(this._i, 'throw', value)\n    : Promise.reject(value)\n}\n\nfunction unwrapAsyncFromSync(iterator, fn, value) {\n  var step\n  return new Promise(function(resolve) {\n    step = iterator[fn](value)\n    resolve(step.value)\n  }).then(function(value) {\n    return { value: value, done: step.done }\n  })\n}\n\n/**\n * Given an object which either implements the AsyncIterable protocol or is\n * Array-like, iterate over it, calling the `callback` at each iteration.\n *\n * Use `forAwaitEach` where you would expect to use a [for-await-of](https://tc39.github.io/proposal-async-iteration/#sec-for-in-and-for-of-statements) loop.\n *\n * Similar to [Array#forEach][], the `callback` function accepts three\n * arguments, and is provided with `thisArg` as the calling context.\n *\n * > Note: Using `forAwaitEach` requires the existence of `Promise`.\n * > While `Promise` has been available in modern browsers for a number of\n * > years, legacy browsers (like IE 11) may require a polyfill.\n *\n * @example\n *\n * var forAwaitEach = require('iterall').forAwaitEach\n *\n * forAwaitEach(myIterable, function (value, index, iterable) {\n *   console.log(value, index, iterable === myIterable)\n * })\n *\n * @example\n *\n * // ES2017:\n * for await (let value of myAsyncIterable) {\n *   console.log(await doSomethingAsync(value))\n * }\n * console.log('done')\n *\n * // Any JavaScript environment:\n * forAwaitEach(myAsyncIterable, function (value) {\n *   return doSomethingAsync(value).then(console.log)\n * }).then(function () {\n *   console.log('done')\n * })\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>|Iterable<Promise<T> | T>|{ length: number }} source\n *   The AsyncIterable or array to iterate over.\n * @param {function(T, number, object)} callback\n *   Function to execute for each iteration, taking up to three arguments\n * @param [thisArg]\n *   Optional. Value to use as `this` when executing `callback`.\n */\n/*:: declare export var forAwaitEach:\n  & (<+TValue, TCollection: Iterable<Promise<TValue> | TValue> | AsyncIterable<TValue>>(\n      collection: TCollection,\n      callbackFn: (value: TValue, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => Promise<void>)\n  & (<TCollection: { length: number }>(\n      collection: TCollection,\n      callbackFn: (value: mixed, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => Promise<void>); */\nexport function forAwaitEach(source, callback, thisArg) {\n  var asyncIterator = createAsyncIterator(source)\n  if (asyncIterator) {\n    var i = 0\n    return new Promise(function(resolve, reject) {\n      function next() {\n        asyncIterator\n          .next()\n          .then(function(step) {\n            if (!step.done) {\n              Promise.resolve(callback.call(thisArg, step.value, i++, source))\n                .then(next)\n                .catch(reject)\n            } else {\n              resolve()\n            }\n            // Explicitly return null, silencing bluebird-style warnings.\n            return null\n          })\n          .catch(reject)\n        // Explicitly return null, silencing bluebird-style warnings.\n        return null\n      }\n      next()\n    })\n  }\n}\n","/**\n * Returns true if a value is null, undefined, or NaN.\n */\nexport default function isNullish(value) {\n  return value === null || value === undefined || value !== value;\n}\n","import { forEach, isCollection } from 'iterall';\nimport objectValues from '../polyfills/objectValues';\nimport inspect from '../jsutils/inspect';\nimport invariant from '../jsutils/invariant';\nimport isNullish from '../jsutils/isNullish';\nimport isInvalid from '../jsutils/isInvalid';\nimport isObjectLike from '../jsutils/isObjectLike';\nimport { Kind } from '../language/kinds';\nimport { GraphQLID } from '../type/scalars';\nimport { isLeafType, isEnumType, isInputObjectType, isListType, isNonNullType } from '../type/definition';\n/**\n * Produces a GraphQL Value AST given a JavaScript value.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Mixed         | Enum Value           |\n * | null          | NullValue            |\n *\n */\n\nexport function astFromValue(value, type) {\n  if (isNonNullType(type)) {\n    var astValue = astFromValue(value, type.ofType);\n\n    if (astValue && astValue.kind === Kind.NULL) {\n      return null;\n    }\n\n    return astValue;\n  } // only explicit null, not undefined, NaN\n\n\n  if (value === null) {\n    return {\n      kind: Kind.NULL\n    };\n  } // undefined, NaN\n\n\n  if (isInvalid(value)) {\n    return null;\n  } // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n\n\n  if (isListType(type)) {\n    var itemType = type.ofType;\n\n    if (isCollection(value)) {\n      var valuesNodes = [];\n      forEach(value, function (item) {\n        var itemNode = astFromValue(item, itemType);\n\n        if (itemNode) {\n          valuesNodes.push(itemNode);\n        }\n      });\n      return {\n        kind: Kind.LIST,\n        values: valuesNodes\n      };\n    }\n\n    return astFromValue(value, itemType);\n  } // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n\n\n  if (isInputObjectType(type)) {\n    if (!isObjectLike(value)) {\n      return null;\n    }\n\n    var fieldNodes = [];\n\n    for (var _i2 = 0, _objectValues2 = objectValues(type.getFields()); _i2 < _objectValues2.length; _i2++) {\n      var field = _objectValues2[_i2];\n      var fieldValue = astFromValue(value[field.name], field.type);\n\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: Kind.OBJECT_FIELD,\n          name: {\n            kind: Kind.NAME,\n            value: field.name\n          },\n          value: fieldValue\n        });\n      }\n    }\n\n    return {\n      kind: Kind.OBJECT,\n      fields: fieldNodes\n    };\n  }\n\n  /* istanbul ignore else */\n  if (isLeafType(type)) {\n    // Since value is an internally represented value, it must be serialized\n    // to an externally represented value before converting into an AST.\n    var serialized = type.serialize(value);\n\n    if (isNullish(serialized)) {\n      return null;\n    } // Others serialize based on their corresponding JavaScript scalar types.\n\n\n    if (typeof serialized === 'boolean') {\n      return {\n        kind: Kind.BOOLEAN,\n        value: serialized\n      };\n    } // JavaScript numbers can be Int or Float values.\n\n\n    if (typeof serialized === 'number') {\n      var stringNum = String(serialized);\n      return integerStringRegExp.test(stringNum) ? {\n        kind: Kind.INT,\n        value: stringNum\n      } : {\n        kind: Kind.FLOAT,\n        value: stringNum\n      };\n    }\n\n    if (typeof serialized === 'string') {\n      // Enum types use Enum literals.\n      if (isEnumType(type)) {\n        return {\n          kind: Kind.ENUM,\n          value: serialized\n        };\n      } // ID types can use Int literals.\n\n\n      if (type === GraphQLID && integerStringRegExp.test(serialized)) {\n        return {\n          kind: Kind.INT,\n          value: serialized\n        };\n      }\n\n      return {\n        kind: Kind.STRING,\n        value: serialized\n      };\n    }\n\n    throw new TypeError(\"Cannot convert value to AST: \".concat(inspect(serialized)));\n  } // Not reachable. All possible input types have been considered.\n\n\n  /* istanbul ignore next */\n  invariant(false, 'Unexpected input type: ' + inspect(type));\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\n\nvar integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n","import objectValues from '../polyfills/objectValues';\nimport inspect from '../jsutils/inspect';\nimport invariant from '../jsutils/invariant';\nimport { print } from '../language/printer';\nimport { DirectiveLocation } from '../language/directiveLocation';\nimport { astFromValue } from '../utilities/astFromValue';\nimport { GraphQLString, GraphQLBoolean } from './scalars';\nimport { GraphQLObjectType, GraphQLEnumType, GraphQLList, GraphQLNonNull, isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isListType, isNonNullType, isAbstractType, isNamedType } from './definition';\nexport var __Schema = new GraphQLObjectType({\n  name: '__Schema',\n  description: 'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.',\n  fields: function fields() {\n    return {\n      types: {\n        description: 'A list of all types supported by this server.',\n        type: GraphQLNonNull(GraphQLList(GraphQLNonNull(__Type))),\n        resolve: function resolve(schema) {\n          return objectValues(schema.getTypeMap());\n        }\n      },\n      queryType: {\n        description: 'The type that query operations will be rooted at.',\n        type: GraphQLNonNull(__Type),\n        resolve: function resolve(schema) {\n          return schema.getQueryType();\n        }\n      },\n      mutationType: {\n        description: 'If this server supports mutation, the type that mutation operations will be rooted at.',\n        type: __Type,\n        resolve: function resolve(schema) {\n          return schema.getMutationType();\n        }\n      },\n      subscriptionType: {\n        description: 'If this server support subscription, the type that subscription operations will be rooted at.',\n        type: __Type,\n        resolve: function resolve(schema) {\n          return schema.getSubscriptionType();\n        }\n      },\n      directives: {\n        description: 'A list of all directives supported by this server.',\n        type: GraphQLNonNull(GraphQLList(GraphQLNonNull(__Directive))),\n        resolve: function resolve(schema) {\n          return schema.getDirectives();\n        }\n      }\n    };\n  }\n});\nexport var __Directive = new GraphQLObjectType({\n  name: '__Directive',\n  description: \"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\\n\\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.\",\n  fields: function fields() {\n    return {\n      name: {\n        type: GraphQLNonNull(GraphQLString),\n        resolve: function resolve(obj) {\n          return obj.name;\n        }\n      },\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(obj) {\n          return obj.description;\n        }\n      },\n      locations: {\n        type: GraphQLNonNull(GraphQLList(GraphQLNonNull(__DirectiveLocation))),\n        resolve: function resolve(obj) {\n          return obj.locations;\n        }\n      },\n      args: {\n        type: GraphQLNonNull(GraphQLList(GraphQLNonNull(__InputValue))),\n        resolve: function resolve(directive) {\n          return directive.args;\n        }\n      }\n    };\n  }\n});\nexport var __DirectiveLocation = new GraphQLEnumType({\n  name: '__DirectiveLocation',\n  description: 'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.',\n  values: {\n    QUERY: {\n      value: DirectiveLocation.QUERY,\n      description: 'Location adjacent to a query operation.'\n    },\n    MUTATION: {\n      value: DirectiveLocation.MUTATION,\n      description: 'Location adjacent to a mutation operation.'\n    },\n    SUBSCRIPTION: {\n      value: DirectiveLocation.SUBSCRIPTION,\n      description: 'Location adjacent to a subscription operation.'\n    },\n    FIELD: {\n      value: DirectiveLocation.FIELD,\n      description: 'Location adjacent to a field.'\n    },\n    FRAGMENT_DEFINITION: {\n      value: DirectiveLocation.FRAGMENT_DEFINITION,\n      description: 'Location adjacent to a fragment definition.'\n    },\n    FRAGMENT_SPREAD: {\n      value: DirectiveLocation.FRAGMENT_SPREAD,\n      description: 'Location adjacent to a fragment spread.'\n    },\n    INLINE_FRAGMENT: {\n      value: DirectiveLocation.INLINE_FRAGMENT,\n      description: 'Location adjacent to an inline fragment.'\n    },\n    VARIABLE_DEFINITION: {\n      value: DirectiveLocation.VARIABLE_DEFINITION,\n      description: 'Location adjacent to a variable definition.'\n    },\n    SCHEMA: {\n      value: DirectiveLocation.SCHEMA,\n      description: 'Location adjacent to a schema definition.'\n    },\n    SCALAR: {\n      value: DirectiveLocation.SCALAR,\n      description: 'Location adjacent to a scalar definition.'\n    },\n    OBJECT: {\n      value: DirectiveLocation.OBJECT,\n      description: 'Location adjacent to an object type definition.'\n    },\n    FIELD_DEFINITION: {\n      value: DirectiveLocation.FIELD_DEFINITION,\n      description: 'Location adjacent to a field definition.'\n    },\n    ARGUMENT_DEFINITION: {\n      value: DirectiveLocation.ARGUMENT_DEFINITION,\n      description: 'Location adjacent to an argument definition.'\n    },\n    INTERFACE: {\n      value: DirectiveLocation.INTERFACE,\n      description: 'Location adjacent to an interface definition.'\n    },\n    UNION: {\n      value: DirectiveLocation.UNION,\n      description: 'Location adjacent to a union definition.'\n    },\n    ENUM: {\n      value: DirectiveLocation.ENUM,\n      description: 'Location adjacent to an enum definition.'\n    },\n    ENUM_VALUE: {\n      value: DirectiveLocation.ENUM_VALUE,\n      description: 'Location adjacent to an enum value definition.'\n    },\n    INPUT_OBJECT: {\n      value: DirectiveLocation.INPUT_OBJECT,\n      description: 'Location adjacent to an input object type definition.'\n    },\n    INPUT_FIELD_DEFINITION: {\n      value: DirectiveLocation.INPUT_FIELD_DEFINITION,\n      description: 'Location adjacent to an input object field definition.'\n    }\n  }\n});\nexport var __Type = new GraphQLObjectType({\n  name: '__Type',\n  description: 'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\\n\\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.',\n  fields: function fields() {\n    return {\n      kind: {\n        type: GraphQLNonNull(__TypeKind),\n        resolve: function resolve(type) {\n          if (isScalarType(type)) {\n            return TypeKind.SCALAR;\n          } else if (isObjectType(type)) {\n            return TypeKind.OBJECT;\n          } else if (isInterfaceType(type)) {\n            return TypeKind.INTERFACE;\n          } else if (isUnionType(type)) {\n            return TypeKind.UNION;\n          } else if (isEnumType(type)) {\n            return TypeKind.ENUM;\n          } else if (isInputObjectType(type)) {\n            return TypeKind.INPUT_OBJECT;\n          } else if (isListType(type)) {\n            return TypeKind.LIST;\n          } else if (isNonNullType(type)) {\n            return TypeKind.NON_NULL;\n          } // Not reachable. All possible types have been considered.\n\n\n          /* istanbul ignore next */\n          invariant(false, \"Unexpected type: \\\"\".concat(inspect(type), \"\\\".\"));\n        }\n      },\n      name: {\n        type: GraphQLString,\n        resolve: function resolve(obj) {\n          return obj.name !== undefined ? obj.name : undefined;\n        }\n      },\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(obj) {\n          return obj.description !== undefined ? obj.description : undefined;\n        }\n      },\n      fields: {\n        type: GraphQLList(GraphQLNonNull(__Field)),\n        args: {\n          includeDeprecated: {\n            type: GraphQLBoolean,\n            defaultValue: false\n          }\n        },\n        resolve: function resolve(type, _ref) {\n          var includeDeprecated = _ref.includeDeprecated;\n\n          if (isObjectType(type) || isInterfaceType(type)) {\n            var fields = objectValues(type.getFields());\n\n            if (!includeDeprecated) {\n              fields = fields.filter(function (field) {\n                return !field.deprecationReason;\n              });\n            }\n\n            return fields;\n          }\n\n          return null;\n        }\n      },\n      interfaces: {\n        type: GraphQLList(GraphQLNonNull(__Type)),\n        resolve: function resolve(type) {\n          if (isObjectType(type)) {\n            return type.getInterfaces();\n          }\n        }\n      },\n      possibleTypes: {\n        type: GraphQLList(GraphQLNonNull(__Type)),\n        resolve: function resolve(type, args, context, _ref2) {\n          var schema = _ref2.schema;\n\n          if (isAbstractType(type)) {\n            return schema.getPossibleTypes(type);\n          }\n        }\n      },\n      enumValues: {\n        type: GraphQLList(GraphQLNonNull(__EnumValue)),\n        args: {\n          includeDeprecated: {\n            type: GraphQLBoolean,\n            defaultValue: false\n          }\n        },\n        resolve: function resolve(type, _ref3) {\n          var includeDeprecated = _ref3.includeDeprecated;\n\n          if (isEnumType(type)) {\n            var values = type.getValues();\n\n            if (!includeDeprecated) {\n              values = values.filter(function (value) {\n                return !value.deprecationReason;\n              });\n            }\n\n            return values;\n          }\n        }\n      },\n      inputFields: {\n        type: GraphQLList(GraphQLNonNull(__InputValue)),\n        resolve: function resolve(type) {\n          if (isInputObjectType(type)) {\n            return objectValues(type.getFields());\n          }\n        }\n      },\n      ofType: {\n        type: __Type,\n        resolve: function resolve(obj) {\n          return obj.ofType !== undefined ? obj.ofType : undefined;\n        }\n      }\n    };\n  }\n});\nexport var __Field = new GraphQLObjectType({\n  name: '__Field',\n  description: 'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.',\n  fields: function fields() {\n    return {\n      name: {\n        type: GraphQLNonNull(GraphQLString),\n        resolve: function resolve(obj) {\n          return obj.name;\n        }\n      },\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(obj) {\n          return obj.description;\n        }\n      },\n      args: {\n        type: GraphQLNonNull(GraphQLList(GraphQLNonNull(__InputValue))),\n        resolve: function resolve(field) {\n          return field.args;\n        }\n      },\n      type: {\n        type: GraphQLNonNull(__Type),\n        resolve: function resolve(obj) {\n          return obj.type;\n        }\n      },\n      isDeprecated: {\n        type: GraphQLNonNull(GraphQLBoolean),\n        resolve: function resolve(obj) {\n          return obj.isDeprecated;\n        }\n      },\n      deprecationReason: {\n        type: GraphQLString,\n        resolve: function resolve(obj) {\n          return obj.deprecationReason;\n        }\n      }\n    };\n  }\n});\nexport var __InputValue = new GraphQLObjectType({\n  name: '__InputValue',\n  description: 'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.',\n  fields: function fields() {\n    return {\n      name: {\n        type: GraphQLNonNull(GraphQLString),\n        resolve: function resolve(obj) {\n          return obj.name;\n        }\n      },\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(obj) {\n          return obj.description;\n        }\n      },\n      type: {\n        type: GraphQLNonNull(__Type),\n        resolve: function resolve(obj) {\n          return obj.type;\n        }\n      },\n      defaultValue: {\n        type: GraphQLString,\n        description: 'A GraphQL-formatted string representing the default value for this input value.',\n        resolve: function resolve(inputVal) {\n          var valueAST = astFromValue(inputVal.defaultValue, inputVal.type);\n          return valueAST ? print(valueAST) : null;\n        }\n      }\n    };\n  }\n});\nexport var __EnumValue = new GraphQLObjectType({\n  name: '__EnumValue',\n  description: 'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.',\n  fields: function fields() {\n    return {\n      name: {\n        type: GraphQLNonNull(GraphQLString),\n        resolve: function resolve(obj) {\n          return obj.name;\n        }\n      },\n      description: {\n        type: GraphQLString,\n        resolve: function resolve(obj) {\n          return obj.description;\n        }\n      },\n      isDeprecated: {\n        type: GraphQLNonNull(GraphQLBoolean),\n        resolve: function resolve(obj) {\n          return obj.isDeprecated;\n        }\n      },\n      deprecationReason: {\n        type: GraphQLString,\n        resolve: function resolve(obj) {\n          return obj.deprecationReason;\n        }\n      }\n    };\n  }\n});\nexport var TypeKind = Object.freeze({\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  LIST: 'LIST',\n  NON_NULL: 'NON_NULL'\n});\nexport var __TypeKind = new GraphQLEnumType({\n  name: '__TypeKind',\n  description: 'An enum describing what kind of type a given `__Type` is.',\n  values: {\n    SCALAR: {\n      value: TypeKind.SCALAR,\n      description: 'Indicates this type is a scalar.'\n    },\n    OBJECT: {\n      value: TypeKind.OBJECT,\n      description: 'Indicates this type is an object. `fields` and `interfaces` are valid fields.'\n    },\n    INTERFACE: {\n      value: TypeKind.INTERFACE,\n      description: 'Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.'\n    },\n    UNION: {\n      value: TypeKind.UNION,\n      description: 'Indicates this type is a union. `possibleTypes` is a valid field.'\n    },\n    ENUM: {\n      value: TypeKind.ENUM,\n      description: 'Indicates this type is an enum. `enumValues` is a valid field.'\n    },\n    INPUT_OBJECT: {\n      value: TypeKind.INPUT_OBJECT,\n      description: 'Indicates this type is an input object. `inputFields` is a valid field.'\n    },\n    LIST: {\n      value: TypeKind.LIST,\n      description: 'Indicates this type is a list. `ofType` is a valid field.'\n    },\n    NON_NULL: {\n      value: TypeKind.NON_NULL,\n      description: 'Indicates this type is a non-null. `ofType` is a valid field.'\n    }\n  }\n});\n/**\n * Note that these are GraphQLField and not GraphQLFieldConfig,\n * so the format for args is different.\n */\n\nexport var SchemaMetaFieldDef = {\n  name: '__schema',\n  type: GraphQLNonNull(__Schema),\n  description: 'Access the current type schema of this server.',\n  args: [],\n  resolve: function resolve(source, args, context, _ref4) {\n    var schema = _ref4.schema;\n    return schema;\n  },\n  deprecationReason: undefined,\n  extensions: undefined,\n  astNode: undefined\n};\nexport var TypeMetaFieldDef = {\n  name: '__type',\n  type: __Type,\n  description: 'Request the type information of a single type.',\n  args: [{\n    name: 'name',\n    description: undefined,\n    type: GraphQLNonNull(GraphQLString),\n    defaultValue: undefined,\n    extensions: undefined,\n    astNode: undefined\n  }],\n  resolve: function resolve(source, _ref5, context, _ref6) {\n    var name = _ref5.name;\n    var schema = _ref6.schema;\n    return schema.getType(name);\n  },\n  deprecationReason: undefined,\n  extensions: undefined,\n  astNode: undefined\n};\nexport var TypeNameMetaFieldDef = {\n  name: '__typename',\n  type: GraphQLNonNull(GraphQLString),\n  description: 'The name of the current Object type at runtime.',\n  args: [],\n  resolve: function resolve(source, args, context, _ref7) {\n    var parentType = _ref7.parentType;\n    return parentType.name;\n  },\n  deprecationReason: undefined,\n  extensions: undefined,\n  astNode: undefined\n};\nexport var introspectionTypes = Object.freeze([__Schema, __Directive, __DirectiveLocation, __Type, __Field, __InputValue, __EnumValue, __TypeKind]);\nexport function isIntrospectionType(type) {\n  return isNamedType(type) && introspectionTypes.some(function (_ref8) {\n    var name = _ref8.name;\n    return type.name === name;\n  });\n}\n","import find from '../polyfills/find';\nimport objectValues from '../polyfills/objectValues';\nimport inspect from '../jsutils/inspect';\nimport toObjMap from '../jsutils/toObjMap';\nimport devAssert from '../jsutils/devAssert';\nimport instanceOf from '../jsutils/instanceOf';\nimport isObjectLike from '../jsutils/isObjectLike';\nimport defineToStringTag from '../jsutils/defineToStringTag';\nimport { __Schema } from './introspection';\nimport { GraphQLDirective, isDirective, specifiedDirectives } from './directives';\nimport { isObjectType, isInterfaceType, isUnionType, isInputObjectType, getNamedType } from './definition';\n/**\n * Test if the given value is a GraphQL schema.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isSchema(schema) {\n  return instanceOf(schema, GraphQLSchema);\n}\nexport function assertSchema(schema) {\n  if (!isSchema(schema)) {\n    throw new Error(\"Expected \".concat(inspect(schema), \" to be a GraphQL schema.\"));\n  }\n\n  return schema;\n}\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       query: MyAppQueryRootType,\n *       mutation: MyAppMutationRootType,\n *     })\n *\n * Note: When the schema is constructed, by default only the types that are\n * reachable by traversing the root types are included, other types must be\n * explicitly referenced.\n *\n * Example:\n *\n *     const characterInterface = new GraphQLInterfaceType({\n *       name: 'Character',\n *       ...\n *     });\n *\n *     const humanType = new GraphQLObjectType({\n *       name: 'Human',\n *       interfaces: [characterInterface],\n *       ...\n *     });\n *\n *     const droidType = new GraphQLObjectType({\n *       name: 'Droid',\n *       interfaces: [characterInterface],\n *       ...\n *     });\n *\n *     const schema = new GraphQLSchema({\n *       query: new GraphQLObjectType({\n *         name: 'Query',\n *         fields: {\n *           hero: { type: characterInterface, ... },\n *         }\n *       }),\n *       ...\n *       // Since this schema references only the `Character` interface it's\n *       // necessary to explicitly list the types that implement it if\n *       // you want them to be included in the final schema.\n *       types: [humanType, droidType],\n *     })\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. @include and\n * @skip) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       ...\n *       directives: specifiedDirectives.concat([ myCustomDirective ]),\n *     })\n *\n */\n\nexport var GraphQLSchema =\n/*#__PURE__*/\nfunction () {\n  // Used as a cache for validateSchema().\n  // Referenced by validateSchema().\n  function GraphQLSchema(config) {\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    if (config && config.assumeValid) {\n      this.__validationErrors = [];\n    } else {\n      this.__validationErrors = undefined; // Otherwise check for common mistakes during construction to produce\n      // clear and early error messages.\n\n      isObjectLike(config) || devAssert(0, 'Must provide configuration object.');\n      !config.types || Array.isArray(config.types) || devAssert(0, \"\\\"types\\\" must be Array if provided but got: \".concat(inspect(config.types), \".\"));\n      !config.directives || Array.isArray(config.directives) || devAssert(0, '\"directives\" must be Array if provided but got: ' + \"\".concat(inspect(config.directives), \".\"));\n      !config.allowedLegacyNames || Array.isArray(config.allowedLegacyNames) || devAssert(0, '\"allowedLegacyNames\" must be Array if provided but got: ' + \"\".concat(inspect(config.allowedLegacyNames), \".\"));\n    }\n\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = config.extensionASTNodes;\n    this.__allowedLegacyNames = config.allowedLegacyNames || [];\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription; // Provide specified directives (e.g. @include and @skip) by default.\n\n    this._directives = config.directives || specifiedDirectives; // Build type map now to detect any errors within this schema.\n\n    var initialTypes = [this._queryType, this._mutationType, this._subscriptionType, __Schema].concat(config.types); // Keep track of all types referenced within the schema.\n\n    var typeMap = Object.create(null); // First by deeply visiting all initial types.\n\n    typeMap = initialTypes.reduce(typeMapReducer, typeMap); // Then by deeply visiting all directive types.\n\n    typeMap = this._directives.reduce(typeMapDirectiveReducer, typeMap); // Storing the resulting map for reference by the schema.\n\n    this._typeMap = typeMap;\n    this._possibleTypeMap = Object.create(null); // Keep track of all implementations by interface name.\n\n    this._implementations = Object.create(null);\n\n    for (var _i2 = 0, _objectValues2 = objectValues(this._typeMap); _i2 < _objectValues2.length; _i2++) {\n      var type = _objectValues2[_i2];\n\n      if (isObjectType(type)) {\n        for (var _i4 = 0, _type$getInterfaces2 = type.getInterfaces(); _i4 < _type$getInterfaces2.length; _i4++) {\n          var iface = _type$getInterfaces2[_i4];\n\n          if (isInterfaceType(iface)) {\n            var impls = this._implementations[iface.name];\n\n            if (impls) {\n              impls.push(type);\n            } else {\n              this._implementations[iface.name] = [type];\n            }\n          }\n        }\n      }\n    }\n  }\n\n  var _proto = GraphQLSchema.prototype;\n\n  _proto.getQueryType = function getQueryType() {\n    return this._queryType;\n  };\n\n  _proto.getMutationType = function getMutationType() {\n    return this._mutationType;\n  };\n\n  _proto.getSubscriptionType = function getSubscriptionType() {\n    return this._subscriptionType;\n  };\n\n  _proto.getTypeMap = function getTypeMap() {\n    return this._typeMap;\n  };\n\n  _proto.getType = function getType(name) {\n    return this.getTypeMap()[name];\n  };\n\n  _proto.getPossibleTypes = function getPossibleTypes(abstractType) {\n    if (isUnionType(abstractType)) {\n      return abstractType.getTypes();\n    }\n\n    return this._implementations[abstractType.name] || [];\n  };\n\n  _proto.isPossibleType = function isPossibleType(abstractType, possibleType) {\n    if (this._possibleTypeMap[abstractType.name] == null) {\n      var map = Object.create(null);\n\n      for (var _i6 = 0, _this$getPossibleType2 = this.getPossibleTypes(abstractType); _i6 < _this$getPossibleType2.length; _i6++) {\n        var type = _this$getPossibleType2[_i6];\n        map[type.name] = true;\n      }\n\n      this._possibleTypeMap[abstractType.name] = map;\n    }\n\n    return Boolean(this._possibleTypeMap[abstractType.name][possibleType.name]);\n  };\n\n  _proto.getDirectives = function getDirectives() {\n    return this._directives;\n  };\n\n  _proto.getDirective = function getDirective(name) {\n    return find(this.getDirectives(), function (directive) {\n      return directive.name === name;\n    });\n  };\n\n  _proto.toConfig = function toConfig() {\n    return {\n      query: this.getQueryType(),\n      mutation: this.getMutationType(),\n      subscription: this.getSubscriptionType(),\n      types: objectValues(this.getTypeMap()),\n      directives: this.getDirectives().slice(),\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes || [],\n      assumeValid: this.__validationErrors !== undefined,\n      allowedLegacyNames: this.__allowedLegacyNames\n    };\n  };\n\n  return GraphQLSchema;\n}(); // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(GraphQLSchema);\n\nfunction typeMapReducer(map, type) {\n  if (!type) {\n    return map;\n  }\n\n  var namedType = getNamedType(type);\n  var seenType = map[namedType.name];\n\n  if (seenType) {\n    if (seenType !== namedType) {\n      throw new Error(\"Schema must contain uniquely named types but contains multiple types named \\\"\".concat(namedType.name, \"\\\".\"));\n    }\n\n    return map;\n  }\n\n  map[namedType.name] = namedType;\n  var reducedMap = map;\n\n  if (isUnionType(namedType)) {\n    reducedMap = namedType.getTypes().reduce(typeMapReducer, reducedMap);\n  }\n\n  if (isObjectType(namedType)) {\n    reducedMap = namedType.getInterfaces().reduce(typeMapReducer, reducedMap);\n  }\n\n  if (isObjectType(namedType) || isInterfaceType(namedType)) {\n    for (var _i8 = 0, _objectValues4 = objectValues(namedType.getFields()); _i8 < _objectValues4.length; _i8++) {\n      var field = _objectValues4[_i8];\n      var fieldArgTypes = field.args.map(function (arg) {\n        return arg.type;\n      });\n      reducedMap = fieldArgTypes.reduce(typeMapReducer, reducedMap);\n      reducedMap = typeMapReducer(reducedMap, field.type);\n    }\n  }\n\n  if (isInputObjectType(namedType)) {\n    for (var _i10 = 0, _objectValues6 = objectValues(namedType.getFields()); _i10 < _objectValues6.length; _i10++) {\n      var _field = _objectValues6[_i10];\n      reducedMap = typeMapReducer(reducedMap, _field.type);\n    }\n  }\n\n  return reducedMap;\n}\n\nfunction typeMapDirectiveReducer(map, directive) {\n  // Directives are not validated until validateSchema() is called.\n  if (!isDirective(directive)) {\n    return map;\n  }\n\n  return directive.args.reduce(function (_map, arg) {\n    return typeMapReducer(_map, arg.type);\n  }, map);\n}\n","import find from '../polyfills/find';\nimport flatMap from '../polyfills/flatMap';\nimport objectValues from '../polyfills/objectValues';\nimport objectEntries from '../polyfills/objectEntries';\nimport inspect from '../jsutils/inspect';\nimport { GraphQLError } from '../error/GraphQLError';\nimport { isValidNameError } from '../utilities/assertValidName';\nimport { isEqualType, isTypeSubTypeOf } from '../utilities/typeComparators';\nimport { isDirective } from './directives';\nimport { isIntrospectionType } from './introspection';\nimport { assertSchema } from './schema';\nimport { isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isNamedType, isNonNullType, isInputType, isOutputType, isRequiredArgument } from './definition';\n/**\n * Implements the \"Type Validation\" sub-sections of the specification's\n * \"Type System\" section.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the Schema is valid.\n */\n\nexport function validateSchema(schema) {\n  // First check to ensure the provided value is in fact a GraphQLSchema.\n  assertSchema(schema); // If this Schema has already been validated, return the previous results.\n\n  if (schema.__validationErrors) {\n    return schema.__validationErrors;\n  } // Validate the schema, producing a list of errors.\n\n\n  var context = new SchemaValidationContext(schema);\n  validateRootTypes(context);\n  validateDirectives(context);\n  validateTypes(context); // Persist the results of validation before returning to ensure validation\n  // does not run multiple times for this schema.\n\n  var errors = context.getErrors();\n  schema.__validationErrors = errors;\n  return errors;\n}\n/**\n * Utility function which asserts a schema is valid by throwing an error if\n * it is invalid.\n */\n\nexport function assertValidSchema(schema) {\n  var errors = validateSchema(schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map(function (error) {\n      return error.message;\n    }).join('\\n\\n'));\n  }\n}\n\nvar SchemaValidationContext =\n/*#__PURE__*/\nfunction () {\n  function SchemaValidationContext(schema) {\n    this._errors = [];\n    this.schema = schema;\n  }\n\n  var _proto = SchemaValidationContext.prototype;\n\n  _proto.reportError = function reportError(message, nodes) {\n    var _nodes = Array.isArray(nodes) ? nodes.filter(Boolean) : nodes;\n\n    this.addError(new GraphQLError(message, _nodes));\n  };\n\n  _proto.addError = function addError(error) {\n    this._errors.push(error);\n  };\n\n  _proto.getErrors = function getErrors() {\n    return this._errors;\n  };\n\n  return SchemaValidationContext;\n}();\n\nfunction validateRootTypes(context) {\n  var schema = context.schema;\n  var queryType = schema.getQueryType();\n\n  if (!queryType) {\n    context.reportError('Query root type must be provided.', schema.astNode);\n  } else if (!isObjectType(queryType)) {\n    context.reportError(\"Query root type must be Object type, it cannot be \".concat(inspect(queryType), \".\"), getOperationTypeNode(schema, queryType, 'query'));\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType && !isObjectType(mutationType)) {\n    context.reportError('Mutation root type must be Object type if provided, it cannot be ' + \"\".concat(inspect(mutationType), \".\"), getOperationTypeNode(schema, mutationType, 'mutation'));\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && !isObjectType(subscriptionType)) {\n    context.reportError('Subscription root type must be Object type if provided, it cannot be ' + \"\".concat(inspect(subscriptionType), \".\"), getOperationTypeNode(schema, subscriptionType, 'subscription'));\n  }\n}\n\nfunction getOperationTypeNode(schema, type, operation) {\n  var operationNodes = getAllSubNodes(schema, function (node) {\n    return node.operationTypes;\n  });\n\n  for (var _i2 = 0; _i2 < operationNodes.length; _i2++) {\n    var node = operationNodes[_i2];\n\n    if (node.operation === operation) {\n      return node.type;\n    }\n  }\n\n  return type.astNode;\n}\n\nfunction validateDirectives(context) {\n  for (var _i4 = 0, _context$schema$getDi2 = context.schema.getDirectives(); _i4 < _context$schema$getDi2.length; _i4++) {\n    var directive = _context$schema$getDi2[_i4];\n\n    // Ensure all directives are in fact GraphQL directives.\n    if (!isDirective(directive)) {\n      context.reportError(\"Expected directive but got: \".concat(inspect(directive), \".\"), directive && directive.astNode);\n      continue;\n    } // Ensure they are named correctly.\n\n\n    validateName(context, directive); // TODO: Ensure proper locations.\n    // Ensure the arguments are valid.\n\n    var argNames = Object.create(null);\n\n    var _loop = function _loop(_i6, _directive$args2) {\n      var arg = _directive$args2[_i6];\n      var argName = arg.name; // Ensure they are named correctly.\n\n      validateName(context, arg); // Ensure they are unique per directive.\n\n      if (argNames[argName]) {\n        context.reportError(\"Argument @\".concat(directive.name, \"(\").concat(argName, \":) can only be defined once.\"), directive.astNode && directive.args.filter(function (_ref) {\n          var name = _ref.name;\n          return name === argName;\n        }).map(function (_ref2) {\n          var astNode = _ref2.astNode;\n          return astNode;\n        }));\n        return \"continue\";\n      }\n\n      argNames[argName] = true; // Ensure the type is an input type.\n\n      if (!isInputType(arg.type)) {\n        context.reportError(\"The type of @\".concat(directive.name, \"(\").concat(argName, \":) must be Input Type \") + \"but got: \".concat(inspect(arg.type), \".\"), arg.astNode);\n      }\n    };\n\n    for (var _i6 = 0, _directive$args2 = directive.args; _i6 < _directive$args2.length; _i6++) {\n      var _ret = _loop(_i6, _directive$args2);\n\n      if (_ret === \"continue\") continue;\n    }\n  }\n}\n\nfunction validateName(context, node) {\n  // If a schema explicitly allows some legacy name which is no longer valid,\n  // allow it to be assumed valid.\n  if (context.schema.__allowedLegacyNames.indexOf(node.name) !== -1) {\n    return;\n  } // Ensure names are valid, however introspection types opt out.\n\n\n  var error = isValidNameError(node.name, node.astNode || undefined);\n\n  if (error) {\n    context.addError(error);\n  }\n}\n\nfunction validateTypes(context) {\n  var validateInputObjectCircularRefs = createInputObjectCircularRefsValidator(context);\n  var typeMap = context.schema.getTypeMap();\n\n  for (var _i8 = 0, _objectValues2 = objectValues(typeMap); _i8 < _objectValues2.length; _i8++) {\n    var type = _objectValues2[_i8];\n\n    // Ensure all provided types are in fact GraphQL type.\n    if (!isNamedType(type)) {\n      context.reportError(\"Expected GraphQL named type but got: \".concat(inspect(type), \".\"), type && type.astNode);\n      continue;\n    } // Ensure it is named correctly (excluding introspection types).\n\n\n    if (!isIntrospectionType(type)) {\n      validateName(context, type);\n    }\n\n    if (isObjectType(type)) {\n      // Ensure fields are valid\n      validateFields(context, type); // Ensure objects implement the interfaces they claim to.\n\n      validateObjectInterfaces(context, type);\n    } else if (isInterfaceType(type)) {\n      // Ensure fields are valid.\n      validateFields(context, type);\n    } else if (isUnionType(type)) {\n      // Ensure Unions include valid member types.\n      validateUnionMembers(context, type);\n    } else if (isEnumType(type)) {\n      // Ensure Enums have valid values.\n      validateEnumValues(context, type);\n    } else if (isInputObjectType(type)) {\n      // Ensure Input Object fields are valid.\n      validateInputFields(context, type); // Ensure Input Objects do not contain non-nullable circular references\n\n      validateInputObjectCircularRefs(type);\n    }\n  }\n}\n\nfunction validateFields(context, type) {\n  var fields = objectValues(type.getFields()); // Objects and Interfaces both must define one or more fields.\n\n  if (fields.length === 0) {\n    context.reportError(\"Type \".concat(type.name, \" must define one or more fields.\"), getAllNodes(type));\n  }\n\n  for (var _i10 = 0; _i10 < fields.length; _i10++) {\n    var field = fields[_i10];\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an output type\n\n    if (!isOutputType(field.type)) {\n      context.reportError(\"The type of \".concat(type.name, \".\").concat(field.name, \" must be Output Type \") + \"but got: \".concat(inspect(field.type), \".\"), field.astNode && field.astNode.type);\n    } // Ensure the arguments are valid\n\n\n    var argNames = Object.create(null);\n\n    var _loop2 = function _loop2(_i12, _field$args2) {\n      var arg = _field$args2[_i12];\n      var argName = arg.name; // Ensure they are named correctly.\n\n      validateName(context, arg); // Ensure they are unique per field.\n\n      if (argNames[argName]) {\n        context.reportError(\"Field argument \".concat(type.name, \".\").concat(field.name, \"(\").concat(argName, \":) can only be defined once.\"), field.args.filter(function (_ref3) {\n          var name = _ref3.name;\n          return name === argName;\n        }).map(function (_ref4) {\n          var astNode = _ref4.astNode;\n          return astNode;\n        }));\n      }\n\n      argNames[argName] = true; // Ensure the type is an input type\n\n      if (!isInputType(arg.type)) {\n        context.reportError(\"The type of \".concat(type.name, \".\").concat(field.name, \"(\").concat(argName, \":) must be Input \") + \"Type but got: \".concat(inspect(arg.type), \".\"), arg.astNode && arg.astNode.type);\n      }\n    };\n\n    for (var _i12 = 0, _field$args2 = field.args; _i12 < _field$args2.length; _i12++) {\n      _loop2(_i12, _field$args2);\n    }\n  }\n}\n\nfunction validateObjectInterfaces(context, object) {\n  var implementedTypeNames = Object.create(null);\n\n  for (var _i14 = 0, _object$getInterfaces2 = object.getInterfaces(); _i14 < _object$getInterfaces2.length; _i14++) {\n    var iface = _object$getInterfaces2[_i14];\n\n    if (!isInterfaceType(iface)) {\n      context.reportError(\"Type \".concat(inspect(object), \" must only implement Interface types, \") + \"it cannot implement \".concat(inspect(iface), \".\"), getAllImplementsInterfaceNodes(object, iface));\n      continue;\n    }\n\n    if (implementedTypeNames[iface.name]) {\n      context.reportError(\"Type \".concat(object.name, \" can only implement \").concat(iface.name, \" once.\"), getAllImplementsInterfaceNodes(object, iface));\n      continue;\n    }\n\n    implementedTypeNames[iface.name] = true;\n    validateObjectImplementsInterface(context, object, iface);\n  }\n}\n\nfunction validateObjectImplementsInterface(context, object, iface) {\n  var objectFieldMap = object.getFields();\n  var ifaceFieldMap = iface.getFields(); // Assert each interface field is implemented.\n\n  for (var _i16 = 0, _objectEntries2 = objectEntries(ifaceFieldMap); _i16 < _objectEntries2.length; _i16++) {\n    var _ref6 = _objectEntries2[_i16];\n    var fieldName = _ref6[0];\n    var ifaceField = _ref6[1];\n    var objectField = objectFieldMap[fieldName]; // Assert interface field exists on object.\n\n    if (!objectField) {\n      context.reportError(\"Interface field \".concat(iface.name, \".\").concat(fieldName, \" expected but \").concat(object.name, \" does not provide it.\"), [ifaceField.astNode].concat(getAllNodes(object)));\n      continue;\n    } // Assert interface field type is satisfied by object field type, by being\n    // a valid subtype. (covariant)\n\n\n    if (!isTypeSubTypeOf(context.schema, objectField.type, ifaceField.type)) {\n      context.reportError(\"Interface field \".concat(iface.name, \".\").concat(fieldName, \" expects type \") + \"\".concat(inspect(ifaceField.type), \" but \").concat(object.name, \".\").concat(fieldName, \" \") + \"is type \".concat(inspect(objectField.type), \".\"), [ifaceField.astNode && ifaceField.astNode.type, objectField.astNode && objectField.astNode.type]);\n    } // Assert each interface field arg is implemented.\n\n\n    var _loop3 = function _loop3(_i18, _ifaceField$args2) {\n      var ifaceArg = _ifaceField$args2[_i18];\n      var argName = ifaceArg.name;\n      var objectArg = find(objectField.args, function (arg) {\n        return arg.name === argName;\n      }); // Assert interface field arg exists on object field.\n\n      if (!objectArg) {\n        context.reportError(\"Interface field argument \".concat(iface.name, \".\").concat(fieldName, \"(\").concat(argName, \":) expected but \").concat(object.name, \".\").concat(fieldName, \" does not provide it.\"), [ifaceArg.astNode, objectField.astNode]);\n        return \"continue\";\n      } // Assert interface field arg type matches object field arg type.\n      // (invariant)\n      // TODO: change to contravariant?\n\n\n      if (!isEqualType(ifaceArg.type, objectArg.type)) {\n        context.reportError(\"Interface field argument \".concat(iface.name, \".\").concat(fieldName, \"(\").concat(argName, \":) \") + \"expects type \".concat(inspect(ifaceArg.type), \" but \") + \"\".concat(object.name, \".\").concat(fieldName, \"(\").concat(argName, \":) is type \") + \"\".concat(inspect(objectArg.type), \".\"), [ifaceArg.astNode && ifaceArg.astNode.type, objectArg.astNode && objectArg.astNode.type]);\n      } // TODO: validate default values?\n\n    };\n\n    for (var _i18 = 0, _ifaceField$args2 = ifaceField.args; _i18 < _ifaceField$args2.length; _i18++) {\n      var _ret2 = _loop3(_i18, _ifaceField$args2);\n\n      if (_ret2 === \"continue\") continue;\n    } // Assert additional arguments must not be required.\n\n\n    var _loop4 = function _loop4(_i20, _objectField$args2) {\n      var objectArg = _objectField$args2[_i20];\n      var argName = objectArg.name;\n      var ifaceArg = find(ifaceField.args, function (arg) {\n        return arg.name === argName;\n      });\n\n      if (!ifaceArg && isRequiredArgument(objectArg)) {\n        context.reportError(\"Object field \".concat(object.name, \".\").concat(fieldName, \" includes required argument \").concat(argName, \" that is missing from the Interface field \").concat(iface.name, \".\").concat(fieldName, \".\"), [objectArg.astNode, ifaceField.astNode]);\n      }\n    };\n\n    for (var _i20 = 0, _objectField$args2 = objectField.args; _i20 < _objectField$args2.length; _i20++) {\n      _loop4(_i20, _objectField$args2);\n    }\n  }\n}\n\nfunction validateUnionMembers(context, union) {\n  var memberTypes = union.getTypes();\n\n  if (memberTypes.length === 0) {\n    context.reportError(\"Union type \".concat(union.name, \" must define one or more member types.\"), getAllNodes(union));\n  }\n\n  var includedTypeNames = Object.create(null);\n\n  for (var _i22 = 0; _i22 < memberTypes.length; _i22++) {\n    var memberType = memberTypes[_i22];\n\n    if (includedTypeNames[memberType.name]) {\n      context.reportError(\"Union type \".concat(union.name, \" can only include type \").concat(memberType.name, \" once.\"), getUnionMemberTypeNodes(union, memberType.name));\n      continue;\n    }\n\n    includedTypeNames[memberType.name] = true;\n\n    if (!isObjectType(memberType)) {\n      context.reportError(\"Union type \".concat(union.name, \" can only include Object types, \") + \"it cannot include \".concat(inspect(memberType), \".\"), getUnionMemberTypeNodes(union, String(memberType)));\n    }\n  }\n}\n\nfunction validateEnumValues(context, enumType) {\n  var enumValues = enumType.getValues();\n\n  if (enumValues.length === 0) {\n    context.reportError(\"Enum type \".concat(enumType.name, \" must define one or more values.\"), getAllNodes(enumType));\n  }\n\n  for (var _i24 = 0; _i24 < enumValues.length; _i24++) {\n    var enumValue = enumValues[_i24];\n    var valueName = enumValue.name; // Ensure valid name.\n\n    validateName(context, enumValue);\n\n    if (valueName === 'true' || valueName === 'false' || valueName === 'null') {\n      context.reportError(\"Enum type \".concat(enumType.name, \" cannot include value: \").concat(valueName, \".\"), enumValue.astNode);\n    }\n  }\n}\n\nfunction validateInputFields(context, inputObj) {\n  var fields = objectValues(inputObj.getFields());\n\n  if (fields.length === 0) {\n    context.reportError(\"Input Object type \".concat(inputObj.name, \" must define one or more fields.\"), getAllNodes(inputObj));\n  } // Ensure the arguments are valid\n\n\n  for (var _i26 = 0; _i26 < fields.length; _i26++) {\n    var field = fields[_i26];\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an input type\n\n    if (!isInputType(field.type)) {\n      context.reportError(\"The type of \".concat(inputObj.name, \".\").concat(field.name, \" must be Input Type \") + \"but got: \".concat(inspect(field.type), \".\"), field.astNode && field.astNode.type);\n    }\n  }\n}\n\nfunction createInputObjectCircularRefsValidator(context) {\n  // Modified copy of algorithm from 'src/validation/rules/NoFragmentCycles.js'.\n  // Tracks already visited types to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  var visitedTypes = Object.create(null); // Array of types nodes used to produce meaningful errors\n\n  var fieldPath = []; // Position in the type path\n\n  var fieldPathIndexByTypeName = Object.create(null);\n  return detectCycleRecursive; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(inputObj) {\n    if (visitedTypes[inputObj.name]) {\n      return;\n    }\n\n    visitedTypes[inputObj.name] = true;\n    fieldPathIndexByTypeName[inputObj.name] = fieldPath.length;\n    var fields = objectValues(inputObj.getFields());\n\n    for (var _i28 = 0; _i28 < fields.length; _i28++) {\n      var field = fields[_i28];\n\n      if (isNonNullType(field.type) && isInputObjectType(field.type.ofType)) {\n        var fieldType = field.type.ofType;\n        var cycleIndex = fieldPathIndexByTypeName[fieldType.name];\n        fieldPath.push(field);\n\n        if (cycleIndex === undefined) {\n          detectCycleRecursive(fieldType);\n        } else {\n          var cyclePath = fieldPath.slice(cycleIndex);\n          var pathStr = cyclePath.map(function (fieldObj) {\n            return fieldObj.name;\n          }).join('.');\n          context.reportError(\"Cannot reference Input Object \\\"\".concat(fieldType.name, \"\\\" within itself through a series of non-null fields: \\\"\").concat(pathStr, \"\\\".\"), cyclePath.map(function (fieldObj) {\n            return fieldObj.astNode;\n          }));\n        }\n\n        fieldPath.pop();\n      }\n    }\n\n    fieldPathIndexByTypeName[inputObj.name] = undefined;\n  }\n}\n\nfunction getAllNodes(object) {\n  var astNode = object.astNode,\n      extensionASTNodes = object.extensionASTNodes;\n  return astNode ? extensionASTNodes ? [astNode].concat(extensionASTNodes) : [astNode] : extensionASTNodes || [];\n}\n\nfunction getAllSubNodes(object, getter) {\n  return flatMap(getAllNodes(object), function (item) {\n    return getter(item) || [];\n  });\n}\n\nfunction getAllImplementsInterfaceNodes(type, iface) {\n  return getAllSubNodes(type, function (typeNode) {\n    return typeNode.interfaces;\n  }).filter(function (ifaceNode) {\n    return ifaceNode.name.value === iface.name;\n  });\n}\n\nfunction getUnionMemberTypeNodes(union, typeName) {\n  return getAllSubNodes(union, function (unionNode) {\n    return unionNode.types;\n  }).filter(function (typeNode) {\n    return typeNode.name.value === typeName;\n  });\n}\n","import inspect from '../jsutils/inspect';\nimport invariant from '../jsutils/invariant';\nimport { Kind } from '../language/kinds';\nimport { GraphQLList, GraphQLNonNull } from '../type/definition';\n/**\n * Given a Schema and an AST node describing a type, return a GraphQLType\n * definition which applies to that type. For example, if provided the parsed\n * AST node for `[User]`, a GraphQLList instance will be returned, containing\n * the type called \"User\" found in the schema. If a type called \"User\" is not\n * found in the schema, then undefined will be returned.\n */\n\n/* eslint-disable no-redeclare */\n\nexport function typeFromAST(schema, typeNode) {\n  /* eslint-enable no-redeclare */\n  var innerType;\n\n  if (typeNode.kind === Kind.LIST_TYPE) {\n    innerType = typeFromAST(schema, typeNode.type);\n    return innerType && GraphQLList(innerType);\n  }\n\n  if (typeNode.kind === Kind.NON_NULL_TYPE) {\n    innerType = typeFromAST(schema, typeNode.type);\n    return innerType && GraphQLNonNull(innerType);\n  }\n\n  /* istanbul ignore else */\n  if (typeNode.kind === Kind.NAMED_TYPE) {\n    return schema.getType(typeNode.name.value);\n  } // Not reachable. All possible type nodes have been considered.\n\n\n  /* istanbul ignore next */\n  invariant(false, 'Unexpected type node: ' + inspect(typeNode));\n}\n","import find from '../polyfills/find';\nimport { Kind } from '../language/kinds';\nimport { isObjectType, isInterfaceType, isEnumType, isInputObjectType, isListType, isCompositeType, isInputType, isOutputType, getNullableType, getNamedType } from '../type/definition';\nimport { SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef } from '../type/introspection';\nimport { typeFromAST } from './typeFromAST';\n/**\n * TypeInfo is a utility class which, given a GraphQL schema, can keep track\n * of the current field and type definitions at any point in a GraphQL document\n * AST during a recursive descent by calling `enter(node)` and `leave(node)`.\n */\n\nexport var TypeInfo =\n/*#__PURE__*/\nfunction () {\n  function TypeInfo(schema, // NOTE: this experimental optional second parameter is only needed in order\n  // to support non-spec-compliant codebases. You should never need to use it.\n  // It may disappear in the future.\n  getFieldDefFn, // Initial type may be provided in rare cases to facilitate traversals\n  // beginning somewhere other than documents.\n  initialType) {\n    this._schema = schema;\n    this._typeStack = [];\n    this._parentTypeStack = [];\n    this._inputTypeStack = [];\n    this._fieldDefStack = [];\n    this._defaultValueStack = [];\n    this._directive = null;\n    this._argument = null;\n    this._enumValue = null;\n    this._getFieldDef = getFieldDefFn || getFieldDef;\n\n    if (initialType) {\n      if (isInputType(initialType)) {\n        this._inputTypeStack.push(initialType);\n      }\n\n      if (isCompositeType(initialType)) {\n        this._parentTypeStack.push(initialType);\n      }\n\n      if (isOutputType(initialType)) {\n        this._typeStack.push(initialType);\n      }\n    }\n  }\n\n  var _proto = TypeInfo.prototype;\n\n  _proto.getType = function getType() {\n    if (this._typeStack.length > 0) {\n      return this._typeStack[this._typeStack.length - 1];\n    }\n  };\n\n  _proto.getParentType = function getParentType() {\n    if (this._parentTypeStack.length > 0) {\n      return this._parentTypeStack[this._parentTypeStack.length - 1];\n    }\n  };\n\n  _proto.getInputType = function getInputType() {\n    if (this._inputTypeStack.length > 0) {\n      return this._inputTypeStack[this._inputTypeStack.length - 1];\n    }\n  };\n\n  _proto.getParentInputType = function getParentInputType() {\n    if (this._inputTypeStack.length > 1) {\n      return this._inputTypeStack[this._inputTypeStack.length - 2];\n    }\n  };\n\n  _proto.getFieldDef = function getFieldDef() {\n    if (this._fieldDefStack.length > 0) {\n      return this._fieldDefStack[this._fieldDefStack.length - 1];\n    }\n  };\n\n  _proto.getDefaultValue = function getDefaultValue() {\n    if (this._defaultValueStack.length > 0) {\n      return this._defaultValueStack[this._defaultValueStack.length - 1];\n    }\n  };\n\n  _proto.getDirective = function getDirective() {\n    return this._directive;\n  };\n\n  _proto.getArgument = function getArgument() {\n    return this._argument;\n  };\n\n  _proto.getEnumValue = function getEnumValue() {\n    return this._enumValue;\n  };\n\n  _proto.enter = function enter(node) {\n    var schema = this._schema; // Note: many of the types below are explicitly typed as \"mixed\" to drop\n    // any assumptions of a valid schema to ensure runtime types are properly\n    // checked before continuing since TypeInfo is used as part of validation\n    // which occurs before guarantees of schema and document validity.\n\n    switch (node.kind) {\n      case Kind.SELECTION_SET:\n        {\n          var namedType = getNamedType(this.getType());\n\n          this._parentTypeStack.push(isCompositeType(namedType) ? namedType : undefined);\n\n          break;\n        }\n\n      case Kind.FIELD:\n        {\n          var parentType = this.getParentType();\n          var fieldDef;\n          var fieldType;\n\n          if (parentType) {\n            fieldDef = this._getFieldDef(schema, parentType, node);\n\n            if (fieldDef) {\n              fieldType = fieldDef.type;\n            }\n          }\n\n          this._fieldDefStack.push(fieldDef);\n\n          this._typeStack.push(isOutputType(fieldType) ? fieldType : undefined);\n\n          break;\n        }\n\n      case Kind.DIRECTIVE:\n        this._directive = schema.getDirective(node.name.value);\n        break;\n\n      case Kind.OPERATION_DEFINITION:\n        {\n          var type;\n\n          if (node.operation === 'query') {\n            type = schema.getQueryType();\n          } else if (node.operation === 'mutation') {\n            type = schema.getMutationType();\n          } else if (node.operation === 'subscription') {\n            type = schema.getSubscriptionType();\n          }\n\n          this._typeStack.push(isObjectType(type) ? type : undefined);\n\n          break;\n        }\n\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION:\n        {\n          var typeConditionAST = node.typeCondition;\n          var outputType = typeConditionAST ? typeFromAST(schema, typeConditionAST) : getNamedType(this.getType());\n\n          this._typeStack.push(isOutputType(outputType) ? outputType : undefined);\n\n          break;\n        }\n\n      case Kind.VARIABLE_DEFINITION:\n        {\n          var inputType = typeFromAST(schema, node.type);\n\n          this._inputTypeStack.push(isInputType(inputType) ? inputType : undefined);\n\n          break;\n        }\n\n      case Kind.ARGUMENT:\n        {\n          var argDef;\n          var argType;\n          var fieldOrDirective = this.getDirective() || this.getFieldDef();\n\n          if (fieldOrDirective) {\n            argDef = find(fieldOrDirective.args, function (arg) {\n              return arg.name === node.name.value;\n            });\n\n            if (argDef) {\n              argType = argDef.type;\n            }\n          }\n\n          this._argument = argDef;\n\n          this._defaultValueStack.push(argDef ? argDef.defaultValue : undefined);\n\n          this._inputTypeStack.push(isInputType(argType) ? argType : undefined);\n\n          break;\n        }\n\n      case Kind.LIST:\n        {\n          var listType = getNullableType(this.getInputType());\n          var itemType = isListType(listType) ? listType.ofType : listType; // List positions never have a default value.\n\n          this._defaultValueStack.push(undefined);\n\n          this._inputTypeStack.push(isInputType(itemType) ? itemType : undefined);\n\n          break;\n        }\n\n      case Kind.OBJECT_FIELD:\n        {\n          var objectType = getNamedType(this.getInputType());\n          var inputFieldType;\n          var inputField;\n\n          if (isInputObjectType(objectType)) {\n            inputField = objectType.getFields()[node.name.value];\n\n            if (inputField) {\n              inputFieldType = inputField.type;\n            }\n          }\n\n          this._defaultValueStack.push(inputField ? inputField.defaultValue : undefined);\n\n          this._inputTypeStack.push(isInputType(inputFieldType) ? inputFieldType : undefined);\n\n          break;\n        }\n\n      case Kind.ENUM:\n        {\n          var enumType = getNamedType(this.getInputType());\n          var enumValue;\n\n          if (isEnumType(enumType)) {\n            enumValue = enumType.getValue(node.value);\n          }\n\n          this._enumValue = enumValue;\n          break;\n        }\n    }\n  };\n\n  _proto.leave = function leave(node) {\n    switch (node.kind) {\n      case Kind.SELECTION_SET:\n        this._parentTypeStack.pop();\n\n        break;\n\n      case Kind.FIELD:\n        this._fieldDefStack.pop();\n\n        this._typeStack.pop();\n\n        break;\n\n      case Kind.DIRECTIVE:\n        this._directive = null;\n        break;\n\n      case Kind.OPERATION_DEFINITION:\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION:\n        this._typeStack.pop();\n\n        break;\n\n      case Kind.VARIABLE_DEFINITION:\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.ARGUMENT:\n        this._argument = null;\n\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.LIST:\n      case Kind.OBJECT_FIELD:\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.ENUM:\n        this._enumValue = null;\n        break;\n    }\n  };\n\n  return TypeInfo;\n}();\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\n\nfunction getFieldDef(schema, parentType, fieldNode) {\n  var name = fieldNode.name.value;\n\n  if (name === SchemaMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return SchemaMetaFieldDef;\n  }\n\n  if (name === TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return TypeMetaFieldDef;\n  }\n\n  if (name === TypeNameMetaFieldDef.name && isCompositeType(parentType)) {\n    return TypeNameMetaFieldDef;\n  }\n\n  if (isObjectType(parentType) || isInterfaceType(parentType)) {\n    return parentType.getFields()[name];\n  }\n}\n","import { Kind } from './kinds';\nexport function isDefinitionNode(node) {\n  return isExecutableDefinitionNode(node) || isTypeSystemDefinitionNode(node) || isTypeSystemExtensionNode(node);\n}\nexport function isExecutableDefinitionNode(node) {\n  return node.kind === Kind.OPERATION_DEFINITION || node.kind === Kind.FRAGMENT_DEFINITION;\n}\nexport function isSelectionNode(node) {\n  return node.kind === Kind.FIELD || node.kind === Kind.FRAGMENT_SPREAD || node.kind === Kind.INLINE_FRAGMENT;\n}\nexport function isValueNode(node) {\n  return node.kind === Kind.VARIABLE || node.kind === Kind.INT || node.kind === Kind.FLOAT || node.kind === Kind.STRING || node.kind === Kind.BOOLEAN || node.kind === Kind.NULL || node.kind === Kind.ENUM || node.kind === Kind.LIST || node.kind === Kind.OBJECT;\n}\nexport function isTypeNode(node) {\n  return node.kind === Kind.NAMED_TYPE || node.kind === Kind.LIST_TYPE || node.kind === Kind.NON_NULL_TYPE;\n}\nexport function isTypeSystemDefinitionNode(node) {\n  return node.kind === Kind.SCHEMA_DEFINITION || isTypeDefinitionNode(node) || node.kind === Kind.DIRECTIVE_DEFINITION;\n}\nexport function isTypeDefinitionNode(node) {\n  return node.kind === Kind.SCALAR_TYPE_DEFINITION || node.kind === Kind.OBJECT_TYPE_DEFINITION || node.kind === Kind.INTERFACE_TYPE_DEFINITION || node.kind === Kind.UNION_TYPE_DEFINITION || node.kind === Kind.ENUM_TYPE_DEFINITION || node.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION;\n}\nexport function isTypeSystemExtensionNode(node) {\n  return node.kind === Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\nexport function isTypeExtensionNode(node) {\n  return node.kind === Kind.SCALAR_TYPE_EXTENSION || node.kind === Kind.OBJECT_TYPE_EXTENSION || node.kind === Kind.INTERFACE_TYPE_EXTENSION || node.kind === Kind.UNION_TYPE_EXTENSION || node.kind === Kind.ENUM_TYPE_EXTENSION || node.kind === Kind.INPUT_OBJECT_TYPE_EXTENSION;\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { isExecutableDefinitionNode } from '../../language/predicates';\nexport function nonExecutableDefinitionMessage(defName) {\n  return \"The \".concat(defName, \" definition is not executable.\");\n}\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n */\n\nexport function ExecutableDefinitions(context) {\n  return {\n    Document: function Document(node) {\n      for (var _i2 = 0, _node$definitions2 = node.definitions; _i2 < _node$definitions2.length; _i2++) {\n        var definition = _node$definitions2[_i2];\n\n        if (!isExecutableDefinitionNode(definition)) {\n          context.reportError(new GraphQLError(nonExecutableDefinitionMessage(definition.kind === Kind.SCHEMA_DEFINITION || definition.kind === Kind.SCHEMA_EXTENSION ? 'schema' : definition.name.value), definition));\n        }\n      }\n\n      return false;\n    }\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nexport function duplicateOperationNameMessage(operationName) {\n  return \"There can be only one operation named \\\"\".concat(operationName, \"\\\".\");\n}\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n */\n\nexport function UniqueOperationNames(context) {\n  var knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      var operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(new GraphQLError(duplicateOperationNameMessage(operationName.value), [knownOperationNames[operationName.value], operationName]));\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nexport function anonOperationNotAloneMessage() {\n  return 'This anonymous operation must be the only defined operation.';\n}\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n */\n\nexport function LoneAnonymousOperation(context) {\n  var operationCount = 0;\n  return {\n    Document: function Document(node) {\n      operationCount = node.definitions.filter(function (definition) {\n        return definition.kind === Kind.OPERATION_DEFINITION;\n      }).length;\n    },\n    OperationDefinition: function OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(new GraphQLError(anonOperationNotAloneMessage(), node));\n      }\n    }\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nexport function singleFieldOnlyMessage(name) {\n  return name ? \"Subscription \\\"\".concat(name, \"\\\" must select only one top level field.\") : 'Anonymous Subscription must select only one top level field.';\n}\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\n\nexport function SingleFieldSubscriptions(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new GraphQLError(singleFieldOnlyMessage(node.name && node.name.value), node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}\n","var MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\n// eslint-disable-next-line no-redeclare\nexport default function didYouMean(firstArg, secondArg) {\n  var _ref = typeof firstArg === 'string' ? [firstArg, secondArg] : [undefined, firstArg],\n      subMessage = _ref[0],\n      suggestions = _ref[1];\n\n  var message = ' Did you mean ';\n\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n\n  switch (suggestions.length) {\n    case 0:\n      return '';\n\n    case 1:\n      return message + suggestions[0] + '?';\n\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n\n  var selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  var lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}\n","/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\nexport default function suggestionList(input, options) {\n  var optionsByDistance = Object.create(null);\n  var inputThreshold = input.length / 2;\n\n  for (var _i2 = 0; _i2 < options.length; _i2++) {\n    var option = options[_i2];\n    var distance = lexicalDistance(input, option);\n    var threshold = Math.max(inputThreshold, option.length / 2, 1);\n\n    if (distance <= threshold) {\n      optionsByDistance[option] = distance;\n    }\n  }\n\n  return Object.keys(optionsByDistance).sort(function (a, b) {\n    return optionsByDistance[a] - optionsByDistance[b];\n  });\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n *\n * @param {string} a\n * @param {string} b\n * @return {int} distance in number of edits\n */\n\nfunction lexicalDistance(aStr, bStr) {\n  if (aStr === bStr) {\n    return 0;\n  }\n\n  var d = [];\n  var a = aStr.toLowerCase();\n  var b = bStr.toLowerCase();\n  var aLength = a.length;\n  var bLength = b.length; // Any case change counts as a single edit\n\n  if (a === b) {\n    return 1;\n  }\n\n  for (var i = 0; i <= aLength; i++) {\n    d[i] = [i];\n  }\n\n  for (var j = 1; j <= bLength; j++) {\n    d[0][j] = j;\n  }\n\n  for (var _i3 = 1; _i3 <= aLength; _i3++) {\n    for (var _j = 1; _j <= bLength; _j++) {\n      var cost = a[_i3 - 1] === b[_j - 1] ? 0 : 1;\n      d[_i3][_j] = Math.min(d[_i3 - 1][_j] + 1, d[_i3][_j - 1] + 1, d[_i3 - 1][_j - 1] + cost);\n\n      if (_i3 > 1 && _j > 1 && a[_i3 - 1] === b[_j - 2] && a[_i3 - 2] === b[_j - 1]) {\n        d[_i3][_j] = Math.min(d[_i3][_j], d[_i3 - 2][_j - 2] + cost);\n      }\n    }\n  }\n\n  return d[aLength][bLength];\n}\n","import didYouMean from '../../jsutils/didYouMean';\nimport suggestionList from '../../jsutils/suggestionList';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { isTypeDefinitionNode, isTypeSystemDefinitionNode, isTypeSystemExtensionNode } from '../../language/predicates';\nimport { specifiedScalarTypes } from '../../type/scalars';\nexport function unknownTypeMessage(typeName, suggestedTypes) {\n  return \"Unknown type \\\"\".concat(typeName, \"\\\".\") + didYouMean(suggestedTypes.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  }));\n}\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n */\n\nexport function KnownTypeNames(context) {\n  var schema = context.getSchema();\n  var existingTypesMap = schema ? schema.getTypeMap() : Object.create(null);\n  var definedTypes = Object.create(null);\n\n  for (var _i2 = 0, _context$getDocument$2 = context.getDocument().definitions; _i2 < _context$getDocument$2.length; _i2++) {\n    var def = _context$getDocument$2[_i2];\n\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = true;\n    }\n  }\n\n  var typeNames = Object.keys(existingTypesMap).concat(Object.keys(definedTypes));\n  return {\n    NamedType: function NamedType(node, _1, parent, _2, ancestors) {\n      var typeName = node.name.value;\n\n      if (!existingTypesMap[typeName] && !definedTypes[typeName]) {\n        var definitionNode = ancestors[2] || parent;\n        var isSDL = isSDLNode(definitionNode);\n\n        if (isSDL && isSpecifiedScalarName(typeName)) {\n          return;\n        }\n\n        var suggestedTypes = suggestionList(typeName, isSDL ? specifiedScalarsNames.concat(typeNames) : typeNames);\n        context.reportError(new GraphQLError(unknownTypeMessage(typeName, suggestedTypes), node));\n      }\n    }\n  };\n}\nvar specifiedScalarsNames = specifiedScalarTypes.map(function (type) {\n  return type.name;\n});\n\nfunction isSpecifiedScalarName(typeName) {\n  return specifiedScalarsNames.indexOf(typeName) !== -1;\n}\n\nfunction isSDLNode(value) {\n  return Boolean(value && !Array.isArray(value) && (isTypeSystemDefinitionNode(value) || isTypeSystemExtensionNode(value)));\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nimport { print } from '../../language/printer';\nimport { isCompositeType } from '../../type/definition';\nimport { typeFromAST } from '../../utilities/typeFromAST';\nexport function inlineFragmentOnNonCompositeErrorMessage(type) {\n  return \"Fragment cannot condition on non composite type \\\"\".concat(type, \"\\\".\");\n}\nexport function fragmentOnNonCompositeErrorMessage(fragName, type) {\n  return \"Fragment \\\"\".concat(fragName, \"\\\" cannot condition on non composite type \\\"\").concat(type, \"\\\".\");\n}\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n */\n\nexport function FragmentsOnCompositeTypes(context) {\n  return {\n    InlineFragment: function InlineFragment(node) {\n      var typeCondition = node.typeCondition;\n\n      if (typeCondition) {\n        var type = typeFromAST(context.getSchema(), typeCondition);\n\n        if (type && !isCompositeType(type)) {\n          context.reportError(new GraphQLError(inlineFragmentOnNonCompositeErrorMessage(print(typeCondition)), typeCondition));\n        }\n      }\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var type = typeFromAST(context.getSchema(), node.typeCondition);\n\n      if (type && !isCompositeType(type)) {\n        context.reportError(new GraphQLError(fragmentOnNonCompositeErrorMessage(node.name.value, print(node.typeCondition)), node.typeCondition));\n      }\n    }\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nimport { print } from '../../language/printer';\nimport { isInputType } from '../../type/definition';\nimport { typeFromAST } from '../../utilities/typeFromAST';\nexport function nonInputTypeOnVarMessage(variableName, typeName) {\n  return \"Variable \\\"$\".concat(variableName, \"\\\" cannot be non-input type \\\"\").concat(typeName, \"\\\".\");\n}\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n */\n\nexport function VariablesAreInputTypes(context) {\n  return {\n    VariableDefinition: function VariableDefinition(node) {\n      var type = typeFromAST(context.getSchema(), node.type); // If the variable type is not an input type, return an error.\n\n      if (type && !isInputType(type)) {\n        var variableName = node.variable.name.value;\n        context.reportError(new GraphQLError(nonInputTypeOnVarMessage(variableName, print(node.type)), node.type));\n      }\n    }\n  };\n}\n","import inspect from '../../jsutils/inspect';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { getNamedType, isLeafType } from '../../type/definition';\nexport function noSubselectionAllowedMessage(fieldName, type) {\n  return \"Field \\\"\".concat(fieldName, \"\\\" must not have a selection since type \\\"\").concat(type, \"\\\" has no subfields.\");\n}\nexport function requiredSubselectionMessage(fieldName, type) {\n  return \"Field \\\"\".concat(fieldName, \"\\\" of type \\\"\").concat(type, \"\\\" must have a selection of subfields. Did you mean \\\"\").concat(fieldName, \" { ... }\\\"?\");\n}\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\n\nexport function ScalarLeafs(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getType();\n      var selectionSet = node.selectionSet;\n\n      if (type) {\n        if (isLeafType(getNamedType(type))) {\n          if (selectionSet) {\n            context.reportError(new GraphQLError(noSubselectionAllowedMessage(node.name.value, inspect(type)), selectionSet));\n          }\n        } else if (!selectionSet) {\n          context.reportError(new GraphQLError(requiredSubselectionMessage(node.name.value, inspect(type)), node));\n        }\n      }\n    }\n  };\n}\n","import didYouMean from '../../jsutils/didYouMean';\nimport suggestionList from '../../jsutils/suggestionList';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { isObjectType, isInterfaceType, isAbstractType } from '../../type/definition';\nexport function undefinedFieldMessage(fieldName, type, suggestedTypeNames, suggestedFieldNames) {\n  var quotedTypeNames = suggestedTypeNames.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  });\n  var quotedFieldNames = suggestedFieldNames.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  });\n  return \"Cannot query field \\\"\".concat(fieldName, \"\\\" on type \\\"\").concat(type, \"\\\".\") + (didYouMean('to use an inline fragment on', quotedTypeNames) || didYouMean(quotedFieldNames));\n}\n/**\n * Fields on correct type\n *\n * A GraphQL document is only valid if all fields selected are defined by the\n * parent type, or are an allowed meta field such as __typename.\n */\n\nexport function FieldsOnCorrectType(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getParentType();\n\n      if (type) {\n        var fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          // This field doesn't exist, lets look for suggestions.\n          var schema = context.getSchema();\n          var fieldName = node.name.value; // First determine if there are any suggested types to condition on.\n\n          var suggestedTypeNames = getSuggestedTypeNames(schema, type, fieldName); // If there are no suggested types, then perhaps this was a typo?\n\n          var suggestedFieldNames = suggestedTypeNames.length !== 0 ? [] : getSuggestedFieldNames(schema, type, fieldName); // Report an error, including helpful suggestions.\n\n          context.reportError(new GraphQLError(undefinedFieldMessage(fieldName, type.name, suggestedTypeNames, suggestedFieldNames), node));\n        }\n      }\n    }\n  };\n}\n/**\n * Go through all of the implementations of type, as well as the interfaces that\n * they implement. If any of those types include the provided field, suggest\n * them, sorted by how often the type is referenced, starting with Interfaces.\n */\n\nfunction getSuggestedTypeNames(schema, type, fieldName) {\n  if (isAbstractType(type)) {\n    var suggestedObjectTypes = [];\n    var interfaceUsageCount = Object.create(null);\n\n    for (var _i2 = 0, _schema$getPossibleTy2 = schema.getPossibleTypes(type); _i2 < _schema$getPossibleTy2.length; _i2++) {\n      var possibleType = _schema$getPossibleTy2[_i2];\n\n      if (!possibleType.getFields()[fieldName]) {\n        continue;\n      } // This object type defines this field.\n\n\n      suggestedObjectTypes.push(possibleType.name);\n\n      for (var _i4 = 0, _possibleType$getInte2 = possibleType.getInterfaces(); _i4 < _possibleType$getInte2.length; _i4++) {\n        var possibleInterface = _possibleType$getInte2[_i4];\n\n        if (!possibleInterface.getFields()[fieldName]) {\n          continue;\n        } // This interface type defines this field.\n\n\n        interfaceUsageCount[possibleInterface.name] = (interfaceUsageCount[possibleInterface.name] || 0) + 1;\n      }\n    } // Suggest interface types based on how common they are.\n\n\n    var suggestedInterfaceTypes = Object.keys(interfaceUsageCount).sort(function (a, b) {\n      return interfaceUsageCount[b] - interfaceUsageCount[a];\n    }); // Suggest both interface and object types.\n\n    return suggestedInterfaceTypes.concat(suggestedObjectTypes);\n  } // Otherwise, must be an Object type, which does not have possible fields.\n\n\n  return [];\n}\n/**\n * For the field name provided, determine if there are any similar field names\n * that may be the result of a typo.\n */\n\n\nfunction getSuggestedFieldNames(schema, type, fieldName) {\n  if (isObjectType(type) || isInterfaceType(type)) {\n    var possibleFieldNames = Object.keys(type.getFields());\n    return suggestionList(fieldName, possibleFieldNames);\n  } // Otherwise, must be a Union type, which does not define fields.\n\n\n  return [];\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nexport function duplicateFragmentNameMessage(fragName) {\n  return \"There can be only one fragment named \\\"\".concat(fragName, \"\\\".\");\n}\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n */\n\nexport function UniqueFragmentNames(context) {\n  var knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new GraphQLError(duplicateFragmentNameMessage(fragmentName), [knownFragmentNames[fragmentName], node.name]));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nexport function unknownFragmentMessage(fragName) {\n  return \"Unknown fragment \\\"\".concat(fragName, \"\\\".\");\n}\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n */\n\nexport function KnownFragmentNames(context) {\n  return {\n    FragmentSpread: function FragmentSpread(node) {\n      var fragmentName = node.name.value;\n      var fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(new GraphQLError(unknownFragmentMessage(fragmentName), node.name));\n      }\n    }\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nexport function unusedFragMessage(fragName) {\n  return \"Fragment \\\"\".concat(fragName, \"\\\" is never used.\");\n}\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n */\n\nexport function NoUnusedFragments(context) {\n  var operationDefs = [];\n  var fragmentDefs = [];\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n    Document: {\n      leave: function leave() {\n        var fragmentNameUsed = Object.create(null);\n\n        for (var _i2 = 0; _i2 < operationDefs.length; _i2++) {\n          var operation = operationDefs[_i2];\n\n          for (var _i4 = 0, _context$getRecursive2 = context.getRecursivelyReferencedFragments(operation); _i4 < _context$getRecursive2.length; _i4++) {\n            var fragment = _context$getRecursive2[_i4];\n            fragmentNameUsed[fragment.name.value] = true;\n          }\n        }\n\n        for (var _i6 = 0; _i6 < fragmentDefs.length; _i6++) {\n          var fragmentDef = fragmentDefs[_i6];\n          var fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new GraphQLError(unusedFragMessage(fragName), fragmentDef));\n          }\n        }\n      }\n    }\n  };\n}\n","import inspect from '../../jsutils/inspect';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { isCompositeType } from '../../type/definition';\nimport { typeFromAST } from '../../utilities/typeFromAST';\nimport { doTypesOverlap } from '../../utilities/typeComparators';\nexport function typeIncompatibleSpreadMessage(fragName, parentType, fragType) {\n  return \"Fragment \\\"\".concat(fragName, \"\\\" cannot be spread here as objects of type \\\"\").concat(parentType, \"\\\" can never be of type \\\"\").concat(fragType, \"\\\".\");\n}\nexport function typeIncompatibleAnonSpreadMessage(parentType, fragType) {\n  return \"Fragment cannot be spread here as objects of type \\\"\".concat(parentType, \"\\\" can never be of type \\\"\").concat(fragType, \"\\\".\");\n}\n/**\n * Possible fragment spread\n *\n * A fragment spread is only valid if the type condition could ever possibly\n * be true: if there is a non-empty intersection of the possible parent types,\n * and possible types which pass the type condition.\n */\n\nexport function PossibleFragmentSpreads(context) {\n  return {\n    InlineFragment: function InlineFragment(node) {\n      var fragType = context.getType();\n      var parentType = context.getParentType();\n\n      if (isCompositeType(fragType) && isCompositeType(parentType) && !doTypesOverlap(context.getSchema(), fragType, parentType)) {\n        context.reportError(new GraphQLError(typeIncompatibleAnonSpreadMessage(inspect(parentType), inspect(fragType)), node));\n      }\n    },\n    FragmentSpread: function FragmentSpread(node) {\n      var fragName = node.name.value;\n      var fragType = getFragmentType(context, fragName);\n      var parentType = context.getParentType();\n\n      if (fragType && parentType && !doTypesOverlap(context.getSchema(), fragType, parentType)) {\n        context.reportError(new GraphQLError(typeIncompatibleSpreadMessage(fragName, inspect(parentType), inspect(fragType)), node));\n      }\n    }\n  };\n}\n\nfunction getFragmentType(context, name) {\n  var frag = context.getFragment(name);\n\n  if (frag) {\n    var type = typeFromAST(context.getSchema(), frag.typeCondition);\n\n    if (isCompositeType(type)) {\n      return type;\n    }\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nexport function cycleErrorMessage(fragName, spreadNames) {\n  var via = spreadNames.length ? ' via ' + spreadNames.join(', ') : '';\n  return \"Cannot spread fragment \\\"\".concat(fragName, \"\\\" within itself\").concat(via, \".\");\n}\nexport function NoFragmentCycles(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  var visitedFrags = Object.create(null); // Array of AST nodes used to produce meaningful errors\n\n  var spreadPath = []; // Position in the spread path\n\n  var spreadPathIndexByName = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      detectCycleRecursive(node);\n      return false;\n    }\n  }; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(fragment) {\n    if (visitedFrags[fragment.name.value]) {\n      return;\n    }\n\n    var fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n    var spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n\n    if (spreadNodes.length === 0) {\n      return;\n    }\n\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n\n    for (var _i2 = 0; _i2 < spreadNodes.length; _i2++) {\n      var spreadNode = spreadNodes[_i2];\n      var spreadName = spreadNode.name.value;\n      var cycleIndex = spreadPathIndexByName[spreadName];\n      spreadPath.push(spreadNode);\n\n      if (cycleIndex === undefined) {\n        var spreadFragment = context.getFragment(spreadName);\n\n        if (spreadFragment) {\n          detectCycleRecursive(spreadFragment);\n        }\n      } else {\n        var cyclePath = spreadPath.slice(cycleIndex);\n        var fragmentNames = cyclePath.slice(0, -1).map(function (s) {\n          return s.name.value;\n        });\n        context.reportError(new GraphQLError(cycleErrorMessage(spreadName, fragmentNames), cyclePath));\n      }\n\n      spreadPath.pop();\n    }\n\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nexport function duplicateVariableMessage(variableName) {\n  return \"There can be only one variable named \\\"\".concat(variableName, \"\\\".\");\n}\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\n\nexport function UniqueVariableNames(context) {\n  var knownVariableNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      knownVariableNames = Object.create(null);\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      var variableName = node.variable.name.value;\n\n      if (knownVariableNames[variableName]) {\n        context.reportError(new GraphQLError(duplicateVariableMessage(variableName), [knownVariableNames[variableName], node.variable.name]));\n      } else {\n        knownVariableNames[variableName] = node.variable.name;\n      }\n    }\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nexport function undefinedVarMessage(varName, opName) {\n  return opName ? \"Variable \\\"$\".concat(varName, \"\\\" is not defined by operation \\\"\").concat(opName, \"\\\".\") : \"Variable \\\"$\".concat(varName, \"\\\" is not defined.\");\n}\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n */\n\nexport function NoUndefinedVariables(context) {\n  var variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableNameDefined = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\n          var _ref2 = usages[_i2];\n          var node = _ref2.node;\n          var varName = node.name.value;\n\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(new GraphQLError(undefinedVarMessage(varName, operation.name && operation.name.value), [node, operation]));\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    }\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nexport function unusedVariableMessage(varName, opName) {\n  return opName ? \"Variable \\\"$\".concat(varName, \"\\\" is never used in operation \\\"\").concat(opName, \"\\\".\") : \"Variable \\\"$\".concat(varName, \"\\\" is never used.\");\n}\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n */\n\nexport function NoUnusedVariables(context) {\n  var variableDefs = [];\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableDefs = [];\n      },\n      leave: function leave(operation) {\n        var variableNameUsed = Object.create(null);\n        var usages = context.getRecursiveVariableUsages(operation);\n        var opName = operation.name ? operation.name.value : null;\n\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\n          var _ref2 = usages[_i2];\n          var node = _ref2.node;\n          variableNameUsed[node.name.value] = true;\n        }\n\n        for (var _i4 = 0, _variableDefs2 = variableDefs; _i4 < _variableDefs2.length; _i4++) {\n          var variableDef = _variableDefs2[_i4];\n          var variableName = variableDef.variable.name.value;\n\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(new GraphQLError(unusedVariableMessage(variableName, opName), variableDef));\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(def) {\n      variableDefs.push(def);\n    }\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { DirectiveLocation } from '../../language/directiveLocation';\nimport { specifiedDirectives } from '../../type/directives';\nexport function unknownDirectiveMessage(directiveName) {\n  return \"Unknown directive \\\"\".concat(directiveName, \"\\\".\");\n}\nexport function misplacedDirectiveMessage(directiveName, location) {\n  return \"Directive \\\"\".concat(directiveName, \"\\\" may not be used on \").concat(location, \".\");\n}\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\n\nexport function KnownDirectives(context) {\n  var locationsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map(function (name) {\n        return name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: function Directive(node, key, parent, path, ancestors) {\n      var name = node.name.value;\n      var locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(new GraphQLError(unknownDirectiveMessage(name), node));\n        return;\n      }\n\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new GraphQLError(misplacedDirectiveMessage(name, candidateLocation), node));\n      }\n    }\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n\n  if (!Array.isArray(appliedTo)) {\n    switch (appliedTo.kind) {\n      case Kind.OPERATION_DEFINITION:\n        switch (appliedTo.operation) {\n          case 'query':\n            return DirectiveLocation.QUERY;\n\n          case 'mutation':\n            return DirectiveLocation.MUTATION;\n\n          case 'subscription':\n            return DirectiveLocation.SUBSCRIPTION;\n        }\n\n        break;\n\n      case Kind.FIELD:\n        return DirectiveLocation.FIELD;\n\n      case Kind.FRAGMENT_SPREAD:\n        return DirectiveLocation.FRAGMENT_SPREAD;\n\n      case Kind.INLINE_FRAGMENT:\n        return DirectiveLocation.INLINE_FRAGMENT;\n\n      case Kind.FRAGMENT_DEFINITION:\n        return DirectiveLocation.FRAGMENT_DEFINITION;\n\n      case Kind.VARIABLE_DEFINITION:\n        return DirectiveLocation.VARIABLE_DEFINITION;\n\n      case Kind.SCHEMA_DEFINITION:\n      case Kind.SCHEMA_EXTENSION:\n        return DirectiveLocation.SCHEMA;\n\n      case Kind.SCALAR_TYPE_DEFINITION:\n      case Kind.SCALAR_TYPE_EXTENSION:\n        return DirectiveLocation.SCALAR;\n\n      case Kind.OBJECT_TYPE_DEFINITION:\n      case Kind.OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.OBJECT;\n\n      case Kind.FIELD_DEFINITION:\n        return DirectiveLocation.FIELD_DEFINITION;\n\n      case Kind.INTERFACE_TYPE_DEFINITION:\n      case Kind.INTERFACE_TYPE_EXTENSION:\n        return DirectiveLocation.INTERFACE;\n\n      case Kind.UNION_TYPE_DEFINITION:\n      case Kind.UNION_TYPE_EXTENSION:\n        return DirectiveLocation.UNION;\n\n      case Kind.ENUM_TYPE_DEFINITION:\n      case Kind.ENUM_TYPE_EXTENSION:\n        return DirectiveLocation.ENUM;\n\n      case Kind.ENUM_VALUE_DEFINITION:\n        return DirectiveLocation.ENUM_VALUE;\n\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n      case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.INPUT_OBJECT;\n\n      case Kind.INPUT_VALUE_DEFINITION:\n        {\n          var parentNode = ancestors[ancestors.length - 3];\n          return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n        }\n    }\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { specifiedDirectives } from '../../type/directives';\nexport function duplicateDirectiveMessage(directiveName) {\n  return \"The directive \\\"\".concat(directiveName, \"\\\" can only be used once at this location.\");\n}\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all non-repeatable directives at\n * a given location are uniquely named.\n */\n\nexport function UniqueDirectivesPerLocation(context) {\n  var uniqueDirectiveMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      uniqueDirectiveMap[def.name.value] = !def.repeatable;\n    }\n  }\n\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter: function enter(node) {\n      // Flow can't refine that node.directives will only contain directives,\n      // so we cast so the rest of the code is well typed.\n      var directives = node.directives;\n\n      if (directives) {\n        var knownDirectives = Object.create(null);\n\n        for (var _i6 = 0; _i6 < directives.length; _i6++) {\n          var _directive = directives[_i6];\n          var directiveName = _directive.name.value;\n\n          if (uniqueDirectiveMap[directiveName]) {\n            if (knownDirectives[directiveName]) {\n              context.reportError(new GraphQLError(duplicateDirectiveMessage(directiveName), [knownDirectives[directiveName], _directive]));\n            } else {\n              knownDirectives[directiveName] = _directive;\n            }\n          }\n        }\n      }\n    }\n  };\n}\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport didYouMean from '../../jsutils/didYouMean';\nimport suggestionList from '../../jsutils/suggestionList';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { specifiedDirectives } from '../../type/directives';\nexport function unknownArgMessage(argName, fieldName, typeName, suggestedArgs) {\n  return \"Unknown argument \\\"\".concat(argName, \"\\\" on field \\\"\").concat(fieldName, \"\\\" of type \\\"\").concat(typeName, \"\\\".\") + didYouMean(suggestedArgs.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  }));\n}\nexport function unknownDirectiveArgMessage(argName, directiveName, suggestedArgs) {\n  return \"Unknown argument \\\"\".concat(argName, \"\\\" on directive \\\"@\").concat(directiveName, \"\\\".\") + didYouMean(suggestedArgs.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  }));\n}\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\n\nexport function KnownArgumentNames(context) {\n  return _objectSpread({}, KnownArgumentNamesOnDirectives(context), {\n    Argument: function Argument(argNode) {\n      var argDef = context.getArgument();\n      var fieldDef = context.getFieldDef();\n      var parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        var argName = argNode.name.value;\n        var knownArgsNames = fieldDef.args.map(function (arg) {\n          return arg.name;\n        });\n        context.reportError(new GraphQLError(unknownArgMessage(argName, fieldDef.name, parentType.name, suggestionList(argName, knownArgsNames)), argNode));\n      }\n    }\n  });\n} // @internal\n\nexport function KnownArgumentNamesOnDirectives(context) {\n  var directiveArgs = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    directiveArgs[directive.name] = directive.args.map(function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      directiveArgs[def.name.value] = def.arguments ? def.arguments.map(function (arg) {\n        return arg.name.value;\n      }) : [];\n    }\n  }\n\n  return {\n    Directive: function Directive(directiveNode) {\n      var directiveName = directiveNode.name.value;\n      var knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (var _i6 = 0, _directiveNode$argume2 = directiveNode.arguments; _i6 < _directiveNode$argume2.length; _i6++) {\n          var argNode = _directiveNode$argume2[_i6];\n          var argName = argNode.name.value;\n\n          if (knownArgs.indexOf(argName) === -1) {\n            var suggestions = suggestionList(argName, knownArgs);\n            context.reportError(new GraphQLError(unknownDirectiveArgMessage(argName, directiveName, suggestions), argNode));\n          }\n        }\n      }\n\n      return false;\n    }\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nexport function duplicateArgMessage(argName) {\n  return \"There can be only one argument named \\\"\".concat(argName, \"\\\".\");\n}\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n */\n\nexport function UniqueArgumentNames(context) {\n  var knownArgNames = Object.create(null);\n  return {\n    Field: function Field() {\n      knownArgNames = Object.create(null);\n    },\n    Directive: function Directive() {\n      knownArgNames = Object.create(null);\n    },\n    Argument: function Argument(node) {\n      var argName = node.name.value;\n\n      if (knownArgNames[argName]) {\n        context.reportError(new GraphQLError(duplicateArgMessage(argName), [knownArgNames[argName], node.name]));\n      } else {\n        knownArgNames[argName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n","import objectValues from '../../polyfills/objectValues';\nimport keyMap from '../../jsutils/keyMap';\nimport inspect from '../../jsutils/inspect';\nimport isInvalid from '../../jsutils/isInvalid';\nimport didYouMean from '../../jsutils/didYouMean';\nimport suggestionList from '../../jsutils/suggestionList';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { print } from '../../language/printer';\nimport { isScalarType, isEnumType, isInputObjectType, isListType, isNonNullType, isRequiredInputField, getNullableType, getNamedType } from '../../type/definition';\nexport function badValueMessage(typeName, valueName, message) {\n  return \"Expected type \".concat(typeName, \", found \").concat(valueName) + (message ? \"; \".concat(message) : '.');\n}\nexport function badEnumValueMessage(typeName, valueName, suggestedValues) {\n  return \"Expected type \".concat(typeName, \", found \").concat(valueName, \".\") + didYouMean('the enum value', suggestedValues);\n}\nexport function requiredFieldMessage(typeName, fieldName, fieldTypeName) {\n  return \"Field \".concat(typeName, \".\").concat(fieldName, \" of required type \").concat(fieldTypeName, \" was not provided.\");\n}\nexport function unknownFieldMessage(typeName, fieldName, suggestedFields) {\n  return \"Field \\\"\".concat(fieldName, \"\\\" is not defined by type \").concat(typeName, \".\") + didYouMean(suggestedFields);\n}\n/**\n * Value literals of correct type\n *\n * A GraphQL document is only valid if all value literals are of the type\n * expected at their position.\n */\n\nexport function ValuesOfCorrectType(context) {\n  return {\n    NullValue: function NullValue(node) {\n      var type = context.getInputType();\n\n      if (isNonNullType(type)) {\n        context.reportError(new GraphQLError(badValueMessage(inspect(type), print(node)), node));\n      }\n    },\n    ListValue: function ListValue(node) {\n      // Note: TypeInfo will traverse into a list's item type, so look to the\n      // parent input type to check if it is a list.\n      var type = getNullableType(context.getParentInputType());\n\n      if (!isListType(type)) {\n        isValidScalar(context, node);\n        return false; // Don't traverse further.\n      }\n    },\n    ObjectValue: function ObjectValue(node) {\n      var type = getNamedType(context.getInputType());\n\n      if (!isInputObjectType(type)) {\n        isValidScalar(context, node);\n        return false; // Don't traverse further.\n      } // Ensure every required field exists.\n\n\n      var fieldNodeMap = keyMap(node.fields, function (field) {\n        return field.name.value;\n      });\n\n      for (var _i2 = 0, _objectValues2 = objectValues(type.getFields()); _i2 < _objectValues2.length; _i2++) {\n        var fieldDef = _objectValues2[_i2];\n        var fieldNode = fieldNodeMap[fieldDef.name];\n\n        if (!fieldNode && isRequiredInputField(fieldDef)) {\n          var typeStr = inspect(fieldDef.type);\n          context.reportError(new GraphQLError(requiredFieldMessage(type.name, fieldDef.name, typeStr), node));\n        }\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var parentType = getNamedType(context.getParentInputType());\n      var fieldType = context.getInputType();\n\n      if (!fieldType && isInputObjectType(parentType)) {\n        var suggestions = suggestionList(node.name.value, Object.keys(parentType.getFields()));\n        context.reportError(new GraphQLError(unknownFieldMessage(parentType.name, node.name.value, suggestions), node));\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var type = getNamedType(context.getInputType());\n\n      if (!isEnumType(type)) {\n        isValidScalar(context, node);\n      } else if (!type.getValue(node.value)) {\n        context.reportError(new GraphQLError(badEnumValueMessage(type.name, print(node), enumTypeSuggestion(type, node)), node));\n      }\n    },\n    IntValue: function IntValue(node) {\n      return isValidScalar(context, node);\n    },\n    FloatValue: function FloatValue(node) {\n      return isValidScalar(context, node);\n    },\n    StringValue: function StringValue(node) {\n      return isValidScalar(context, node);\n    },\n    BooleanValue: function BooleanValue(node) {\n      return isValidScalar(context, node);\n    }\n  };\n}\n/**\n * Any value literal may be a valid representation of a Scalar, depending on\n * that scalar type.\n */\n\nfunction isValidScalar(context, node) {\n  // Report any error at the full type expected by the location.\n  var locationType = context.getInputType();\n\n  if (!locationType) {\n    return;\n  }\n\n  var type = getNamedType(locationType);\n\n  if (!isScalarType(type)) {\n    var message = isEnumType(type) ? badEnumValueMessage(inspect(locationType), print(node), enumTypeSuggestion(type, node)) : badValueMessage(inspect(locationType), print(node));\n    context.reportError(new GraphQLError(message, node));\n    return;\n  } // Scalars determine if a literal value is valid via parseLiteral() which\n  // may throw or return an invalid value to indicate failure.\n\n\n  try {\n    var parseResult = type.parseLiteral(node, undefined\n    /* variables */\n    );\n\n    if (isInvalid(parseResult)) {\n      context.reportError(new GraphQLError(badValueMessage(inspect(locationType), print(node)), node));\n    }\n  } catch (error) {\n    // Ensure a reference to the original error is maintained.\n    context.reportError(new GraphQLError(badValueMessage(inspect(locationType), print(node), error.message), node, undefined, undefined, undefined, error));\n  }\n}\n\nfunction enumTypeSuggestion(type, node) {\n  var allNames = type.getValues().map(function (value) {\n    return value.name;\n  });\n  return suggestionList(print(node), allNames);\n}\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport inspect from '../../jsutils/inspect';\nimport keyMap from '../../jsutils/keyMap';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { print } from '../../language/printer';\nimport { specifiedDirectives } from '../../type/directives';\nimport { isType, isRequiredArgument } from '../../type/definition';\nexport function missingFieldArgMessage(fieldName, argName, type) {\n  return \"Field \\\"\".concat(fieldName, \"\\\" argument \\\"\").concat(argName, \"\\\" of type \\\"\").concat(type, \"\\\" is required, but it was not provided.\");\n}\nexport function missingDirectiveArgMessage(directiveName, argName, type) {\n  return \"Directive \\\"@\".concat(directiveName, \"\\\" argument \\\"\").concat(argName, \"\\\" of type \\\"\").concat(type, \"\\\" is required, but it was not provided.\");\n}\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\n\nexport function ProvidedRequiredArguments(context) {\n  return _objectSpread({}, ProvidedRequiredArgumentsOnDirectives(context), {\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(fieldNode) {\n        var fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        }\n\n        var argNodes = fieldNode.arguments || [];\n        var argNodeMap = keyMap(argNodes, function (arg) {\n          return arg.name.value;\n        });\n\n        for (var _i2 = 0, _fieldDef$args2 = fieldDef.args; _i2 < _fieldDef$args2.length; _i2++) {\n          var argDef = _fieldDef$args2[_i2];\n          var argNode = argNodeMap[argDef.name];\n\n          if (!argNode && isRequiredArgument(argDef)) {\n            context.reportError(new GraphQLError(missingFieldArgMessage(fieldDef.name, argDef.name, inspect(argDef.type)), fieldNode));\n          }\n        }\n      }\n    }\n  });\n} // @internal\n\nexport function ProvidedRequiredArgumentsOnDirectives(context) {\n  var requiredArgsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i4 = 0; _i4 < definedDirectives.length; _i4++) {\n    var directive = definedDirectives[_i4];\n    requiredArgsMap[directive.name] = keyMap(directive.args.filter(isRequiredArgument), function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i6 = 0; _i6 < astDefinitions.length; _i6++) {\n    var def = astDefinitions[_i6];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      requiredArgsMap[def.name.value] = keyMap(def.arguments ? def.arguments.filter(isRequiredArgumentNode) : [], function (arg) {\n        return arg.name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(directiveNode) {\n        var directiveName = directiveNode.name.value;\n        var requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var argNodes = directiveNode.arguments || [];\n          var argNodeMap = keyMap(argNodes, function (arg) {\n            return arg.name.value;\n          });\n\n          for (var _i8 = 0, _Object$keys2 = Object.keys(requiredArgs); _i8 < _Object$keys2.length; _i8++) {\n            var argName = _Object$keys2[_i8];\n\n            if (!argNodeMap[argName]) {\n              var argType = requiredArgs[argName].type;\n              context.reportError(new GraphQLError(missingDirectiveArgMessage(directiveName, argName, isType(argType) ? inspect(argType) : print(argType)), directiveNode));\n            }\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return arg.type.kind === Kind.NON_NULL_TYPE && arg.defaultValue == null;\n}\n","import inspect from '../../jsutils/inspect';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { isNonNullType } from '../../type/definition';\nimport { typeFromAST } from '../../utilities/typeFromAST';\nimport { isTypeSubTypeOf } from '../../utilities/typeComparators';\nexport function badVarPosMessage(varName, varType, expectedType) {\n  return \"Variable \\\"$\".concat(varName, \"\\\" of type \\\"\").concat(varType, \"\\\" used in position expecting type \\\"\").concat(expectedType, \"\\\".\");\n}\n/**\n * Variables passed to field arguments conform to type\n */\n\nexport function VariablesInAllowedPosition(context) {\n  var varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        varDefMap = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\n          var _ref2 = usages[_i2];\n          var node = _ref2.node;\n          var type = _ref2.type;\n          var defaultValue = _ref2.defaultValue;\n          var varName = node.name.value;\n          var varDef = varDefMap[varName];\n\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            var schema = context.getSchema();\n            var varType = typeFromAST(schema, varDef.type);\n\n            if (varType && !allowedVariableUsage(schema, varType, varDef.defaultValue, type, defaultValue)) {\n              context.reportError(new GraphQLError(badVarPosMessage(varName, inspect(varType), inspect(type)), [varDef, node]));\n            }\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    }\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\nfunction allowedVariableUsage(schema, varType, varDefaultValue, locationType, locationDefaultValue) {\n  if (isNonNullType(locationType) && !isNonNullType(varType)) {\n    var hasNonNullVariableDefaultValue = varDefaultValue != null && varDefaultValue.kind !== Kind.NULL;\n    var hasLocationDefaultValue = locationDefaultValue !== undefined;\n\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n\n    var nullableLocationType = locationType.ofType;\n    return isTypeSubTypeOf(schema, varType, nullableLocationType);\n  }\n\n  return isTypeSubTypeOf(schema, varType, locationType);\n}\n","import find from '../../polyfills/find';\nimport objectEntries from '../../polyfills/objectEntries';\nimport inspect from '../../jsutils/inspect';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { print } from '../../language/printer';\nimport { getNamedType, isNonNullType, isLeafType, isObjectType, isListType, isInterfaceType } from '../../type/definition';\nimport { typeFromAST } from '../../utilities/typeFromAST';\nexport function fieldsConflictMessage(responseName, reason) {\n  return \"Fields \\\"\".concat(responseName, \"\\\" conflict because \").concat(reasonMessage(reason), \". \") + 'Use different aliases on the fields to fetch both if this was intentional.';\n}\n\nfunction reasonMessage(reason) {\n  if (Array.isArray(reason)) {\n    return reason.map(function (_ref) {\n      var responseName = _ref[0],\n          subreason = _ref[1];\n      return \"subfields \\\"\".concat(responseName, \"\\\" conflict because \").concat(reasonMessage(subreason));\n    }).join(' and ');\n  }\n\n  return reason;\n}\n/**\n * Overlapping fields can be merged\n *\n * A selection set is only valid if all fields (including spreading any\n * fragments) either correspond to distinct response names or can be merged\n * without ambiguity.\n */\n\n\nexport function OverlappingFieldsCanBeMerged(context) {\n  // A memoization for when two fragments are compared \"between\" each other for\n  // conflicts. Two fragments may be compared many times, so memoizing this can\n  // dramatically improve the performance of this validator.\n  var comparedFragmentPairs = new PairSet(); // A cache for the \"field map\" and list of fragment names found in any given\n  // selection set. Selection sets may be asked for this information multiple\n  // times, so this improves the performance of this validator.\n\n  var cachedFieldsAndFragmentNames = new Map();\n  return {\n    SelectionSet: function SelectionSet(selectionSet) {\n      var conflicts = findConflictsWithinSelectionSet(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, context.getParentType(), selectionSet);\n\n      for (var _i2 = 0; _i2 < conflicts.length; _i2++) {\n        var _ref3 = conflicts[_i2];\n        var _ref2$ = _ref3[0];\n        var responseName = _ref2$[0];\n        var reason = _ref2$[1];\n        var fields1 = _ref3[1];\n        var fields2 = _ref3[2];\n        context.reportError(new GraphQLError(fieldsConflictMessage(responseName, reason), fields1.concat(fields2)));\n      }\n    }\n  };\n}\n\n/**\n * Algorithm:\n *\n * Conflicts occur when two fields exist in a query which will produce the same\n * response name, but represent differing values, thus creating a conflict.\n * The algorithm below finds all conflicts via making a series of comparisons\n * between fields. In order to compare as few fields as possible, this makes\n * a series of comparisons \"within\" sets of fields and \"between\" sets of fields.\n *\n * Given any selection set, a collection produces both a set of fields by\n * also including all inline fragments, as well as a list of fragments\n * referenced by fragment spreads.\n *\n * A) Each selection set represented in the document first compares \"within\" its\n * collected set of fields, finding any conflicts between every pair of\n * overlapping fields.\n * Note: This is the *only time* that a the fields \"within\" a set are compared\n * to each other. After this only fields \"between\" sets are compared.\n *\n * B) Also, if any fragment is referenced in a selection set, then a\n * comparison is made \"between\" the original set of fields and the\n * referenced fragment.\n *\n * C) Also, if multiple fragments are referenced, then comparisons\n * are made \"between\" each referenced fragment.\n *\n * D) When comparing \"between\" a set of fields and a referenced fragment, first\n * a comparison is made between each field in the original set of fields and\n * each field in the the referenced set of fields.\n *\n * E) Also, if any fragment is referenced in the referenced selection set,\n * then a comparison is made \"between\" the original set of fields and the\n * referenced fragment (recursively referring to step D).\n *\n * F) When comparing \"between\" two fragments, first a comparison is made between\n * each field in the first referenced set of fields and each field in the the\n * second referenced set of fields.\n *\n * G) Also, any fragments referenced by the first must be compared to the\n * second, and any fragments referenced by the second must be compared to the\n * first (recursively referring to step F).\n *\n * H) When comparing two fields, if both have selection sets, then a comparison\n * is made \"between\" both selection sets, first comparing the set of fields in\n * the first selection set with the set of fields in the second.\n *\n * I) Also, if any fragment is referenced in either selection set, then a\n * comparison is made \"between\" the other set of fields and the\n * referenced fragment.\n *\n * J) Also, if two fragments are referenced in both selection sets, then a\n * comparison is made \"between\" the two fragments.\n *\n */\n// Find all conflicts found \"within\" a selection set, including those found\n// via spreading in fragments. Called when visiting each SelectionSet in the\n// GraphQL Document.\nfunction findConflictsWithinSelectionSet(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentType, selectionSet) {\n  var conflicts = [];\n\n  var _getFieldsAndFragment = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType, selectionSet),\n      fieldMap = _getFieldsAndFragment[0],\n      fragmentNames = _getFieldsAndFragment[1]; // (A) Find find all conflicts \"within\" the fields of this selection set.\n  // Note: this is the *only place* `collectConflictsWithin` is called.\n\n\n  collectConflictsWithin(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, fieldMap);\n\n  if (fragmentNames.length !== 0) {\n    // (B) Then collect conflicts between these fields and those represented by\n    // each spread fragment name found.\n    var comparedFragments = Object.create(null);\n\n    for (var i = 0; i < fragmentNames.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, comparedFragmentPairs, false, fieldMap, fragmentNames[i]); // (C) Then compare this fragment with all other fragments found in this\n      // selection set to collect conflicts between fragments spread together.\n      // This compares each item in the list of fragment names to every other\n      // item in that same list (except for itself).\n\n      for (var j = i + 1; j < fragmentNames.length; j++) {\n        collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, fragmentNames[i], fragmentNames[j]);\n      }\n    }\n  }\n\n  return conflicts;\n} // Collect all conflicts found between a set of fields and a fragment reference\n// including via spreading in any nested fragments.\n\n\nfunction collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fragmentName) {\n  // Memoize so a fragment is not compared for conflicts more than once.\n  if (comparedFragments[fragmentName]) {\n    return;\n  }\n\n  comparedFragments[fragmentName] = true;\n  var fragment = context.getFragment(fragmentName);\n\n  if (!fragment) {\n    return;\n  }\n\n  var _getReferencedFieldsA = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment),\n      fieldMap2 = _getReferencedFieldsA[0],\n      fragmentNames2 = _getReferencedFieldsA[1]; // Do not compare a fragment's fieldMap to itself.\n\n\n  if (fieldMap === fieldMap2) {\n    return;\n  } // (D) First collect any conflicts between the provided collection of fields\n  // and the collection of fields represented by the given fragment.\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fieldMap2); // (E) Then collect any conflicts between the provided collection of fields\n  // and any fragment names found in the given fragment.\n\n  for (var i = 0; i < fragmentNames2.length; i++) {\n    collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fragmentNames2[i]);\n  }\n} // Collect all conflicts found between two fragments, including via spreading in\n// any nested fragments.\n\n\nfunction collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentName1, fragmentName2) {\n  // No need to compare a fragment to itself.\n  if (fragmentName1 === fragmentName2) {\n    return;\n  } // Memoize so two fragments are not compared for conflicts more than once.\n\n\n  if (comparedFragmentPairs.has(fragmentName1, fragmentName2, areMutuallyExclusive)) {\n    return;\n  }\n\n  comparedFragmentPairs.add(fragmentName1, fragmentName2, areMutuallyExclusive);\n  var fragment1 = context.getFragment(fragmentName1);\n  var fragment2 = context.getFragment(fragmentName2);\n\n  if (!fragment1 || !fragment2) {\n    return;\n  }\n\n  var _getReferencedFieldsA2 = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment1),\n      fieldMap1 = _getReferencedFieldsA2[0],\n      fragmentNames1 = _getReferencedFieldsA2[1];\n\n  var _getReferencedFieldsA3 = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment2),\n      fieldMap2 = _getReferencedFieldsA3[0],\n      fragmentNames2 = _getReferencedFieldsA3[1]; // (F) First, collect all conflicts between these two collections of fields\n  // (not including any nested fragments).\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fieldMap2); // (G) Then collect conflicts between the first fragment and any nested\n  // fragments spread in the second fragment.\n\n  for (var j = 0; j < fragmentNames2.length; j++) {\n    collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentName1, fragmentNames2[j]);\n  } // (G) Then collect conflicts between the second fragment and any nested\n  // fragments spread in the first fragment.\n\n\n  for (var i = 0; i < fragmentNames1.length; i++) {\n    collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentNames1[i], fragmentName2);\n  }\n} // Find all conflicts found between two selection sets, including those found\n// via spreading in fragments. Called when determining if conflicts exist\n// between the sub-fields of two overlapping fields.\n\n\nfunction findConflictsBetweenSubSelectionSets(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, parentType1, selectionSet1, parentType2, selectionSet2) {\n  var conflicts = [];\n\n  var _getFieldsAndFragment2 = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType1, selectionSet1),\n      fieldMap1 = _getFieldsAndFragment2[0],\n      fragmentNames1 = _getFieldsAndFragment2[1];\n\n  var _getFieldsAndFragment3 = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType2, selectionSet2),\n      fieldMap2 = _getFieldsAndFragment3[0],\n      fragmentNames2 = _getFieldsAndFragment3[1]; // (H) First, collect all conflicts between these two collections of field.\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fieldMap2); // (I) Then collect conflicts between the first collection of fields and\n  // those referenced by each fragment name associated with the second.\n\n  if (fragmentNames2.length !== 0) {\n    var comparedFragments = Object.create(null);\n\n    for (var j = 0; j < fragmentNames2.length; j++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fragmentNames2[j]);\n    }\n  } // (I) Then collect conflicts between the second collection of fields and\n  // those referenced by each fragment name associated with the first.\n\n\n  if (fragmentNames1.length !== 0) {\n    var _comparedFragments = Object.create(null);\n\n    for (var i = 0; i < fragmentNames1.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, _comparedFragments, comparedFragmentPairs, areMutuallyExclusive, fieldMap2, fragmentNames1[i]);\n    }\n  } // (J) Also collect conflicts between any fragment names by the first and\n  // fragment names by the second. This compares each item in the first set of\n  // names to each item in the second set of names.\n\n\n  for (var _i3 = 0; _i3 < fragmentNames1.length; _i3++) {\n    for (var _j = 0; _j < fragmentNames2.length; _j++) {\n      collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentNames1[_i3], fragmentNames2[_j]);\n    }\n  }\n\n  return conflicts;\n} // Collect all Conflicts \"within\" one collection of fields.\n\n\nfunction collectConflictsWithin(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, fieldMap) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For every response name, if there are multiple fields, they\n  // must be compared to find a potential conflict.\n  for (var _i5 = 0, _objectEntries2 = objectEntries(fieldMap); _i5 < _objectEntries2.length; _i5++) {\n    var _ref5 = _objectEntries2[_i5];\n    var responseName = _ref5[0];\n    var fields = _ref5[1];\n\n    // This compares every field in the list to every other field in this list\n    // (except to itself). If the list only has one item, nothing needs to\n    // be compared.\n    if (fields.length > 1) {\n      for (var i = 0; i < fields.length; i++) {\n        for (var j = i + 1; j < fields.length; j++) {\n          var conflict = findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, // within one collection is never mutually exclusive\n          responseName, fields[i], fields[j]);\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Collect all Conflicts between two collections of fields. This is similar to,\n// but different from the `collectConflictsWithin` function above. This check\n// assumes that `collectConflictsWithin` has already been called on each\n// provided collection of fields. This is true because this validator traverses\n// each individual selection set.\n\n\nfunction collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, fieldMap1, fieldMap2) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For any response name which appears in both provided field\n  // maps, each field from the first field map must be compared to every field\n  // in the second field map to find potential conflicts.\n  for (var _i7 = 0, _Object$keys2 = Object.keys(fieldMap1); _i7 < _Object$keys2.length; _i7++) {\n    var responseName = _Object$keys2[_i7];\n    var fields2 = fieldMap2[responseName];\n\n    if (fields2) {\n      var fields1 = fieldMap1[responseName];\n\n      for (var i = 0; i < fields1.length; i++) {\n        for (var j = 0; j < fields2.length; j++) {\n          var conflict = findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, responseName, fields1[i], fields2[j]);\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Determines if there is a conflict between two particular fields, including\n// comparing their sub-fields.\n\n\nfunction findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, responseName, field1, field2) {\n  var parentType1 = field1[0],\n      node1 = field1[1],\n      def1 = field1[2];\n  var parentType2 = field2[0],\n      node2 = field2[1],\n      def2 = field2[2]; // If it is known that two fields could not possibly apply at the same\n  // time, due to the parent types, then it is safe to permit them to diverge\n  // in aliased field or arguments used as they will not present any ambiguity\n  // by differing.\n  // It is known that two parent types could never overlap if they are\n  // different Object types. Interface or Union types might overlap - if not\n  // in the current state of the schema, then perhaps in some future version,\n  // thus may not safely diverge.\n\n  var areMutuallyExclusive = parentFieldsAreMutuallyExclusive || parentType1 !== parentType2 && isObjectType(parentType1) && isObjectType(parentType2); // The return type for each field.\n\n  var type1 = def1 && def1.type;\n  var type2 = def2 && def2.type;\n\n  if (!areMutuallyExclusive) {\n    // Two aliases must refer to the same field.\n    var name1 = node1.name.value;\n    var name2 = node2.name.value;\n\n    if (name1 !== name2) {\n      return [[responseName, \"\".concat(name1, \" and \").concat(name2, \" are different fields\")], [node1], [node2]];\n    } // Two field calls must have the same arguments.\n\n\n    if (!sameArguments(node1.arguments || [], node2.arguments || [])) {\n      return [[responseName, 'they have differing arguments'], [node1], [node2]];\n    }\n  }\n\n  if (type1 && type2 && doTypesConflict(type1, type2)) {\n    return [[responseName, \"they return conflicting types \".concat(inspect(type1), \" and \").concat(inspect(type2))], [node1], [node2]];\n  } // Collect and compare sub-fields. Use the same \"visited fragment names\" list\n  // for both collections so fields in a fragment reference are never\n  // compared to themselves.\n\n\n  var selectionSet1 = node1.selectionSet;\n  var selectionSet2 = node2.selectionSet;\n\n  if (selectionSet1 && selectionSet2) {\n    var conflicts = findConflictsBetweenSubSelectionSets(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, getNamedType(type1), selectionSet1, getNamedType(type2), selectionSet2);\n    return subfieldConflicts(conflicts, responseName, node1, node2);\n  }\n}\n\nfunction sameArguments(arguments1, arguments2) {\n  if (arguments1.length !== arguments2.length) {\n    return false;\n  }\n\n  return arguments1.every(function (argument1) {\n    var argument2 = find(arguments2, function (argument) {\n      return argument.name.value === argument1.name.value;\n    });\n\n    if (!argument2) {\n      return false;\n    }\n\n    return sameValue(argument1.value, argument2.value);\n  });\n}\n\nfunction sameValue(value1, value2) {\n  return !value1 && !value2 || print(value1) === print(value2);\n} // Two types conflict if both types could not apply to a value simultaneously.\n// Composite types are ignored as their individual field types will be compared\n// later recursively. However List and Non-Null types must match.\n\n\nfunction doTypesConflict(type1, type2) {\n  if (isListType(type1)) {\n    return isListType(type2) ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n\n  if (isListType(type2)) {\n    return true;\n  }\n\n  if (isNonNullType(type1)) {\n    return isNonNullType(type2) ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n\n  if (isNonNullType(type2)) {\n    return true;\n  }\n\n  if (isLeafType(type1) || isLeafType(type2)) {\n    return type1 !== type2;\n  }\n\n  return false;\n} // Given a selection set, return the collection of fields (a mapping of response\n// name to field nodes and definitions) as well as a list of fragment names\n// referenced via fragment spreads.\n\n\nfunction getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType, selectionSet) {\n  var cached = cachedFieldsAndFragmentNames.get(selectionSet);\n\n  if (!cached) {\n    var nodeAndDefs = Object.create(null);\n    var fragmentNames = Object.create(null);\n\n    _collectFieldsAndFragmentNames(context, parentType, selectionSet, nodeAndDefs, fragmentNames);\n\n    cached = [nodeAndDefs, Object.keys(fragmentNames)];\n    cachedFieldsAndFragmentNames.set(selectionSet, cached);\n  }\n\n  return cached;\n} // Given a reference to a fragment, return the represented collection of fields\n// as well as a list of nested fragment names referenced via fragment spreads.\n\n\nfunction getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment) {\n  // Short-circuit building a type from the node if possible.\n  var cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  var fragmentType = typeFromAST(context.getSchema(), fragment.typeCondition);\n  return getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragmentType, fragment.selectionSet);\n}\n\nfunction _collectFieldsAndFragmentNames(context, parentType, selectionSet, nodeAndDefs, fragmentNames) {\n  for (var _i9 = 0, _selectionSet$selecti2 = selectionSet.selections; _i9 < _selectionSet$selecti2.length; _i9++) {\n    var selection = _selectionSet$selecti2[_i9];\n\n    switch (selection.kind) {\n      case Kind.FIELD:\n        {\n          var fieldName = selection.name.value;\n          var fieldDef = void 0;\n\n          if (isObjectType(parentType) || isInterfaceType(parentType)) {\n            fieldDef = parentType.getFields()[fieldName];\n          }\n\n          var responseName = selection.alias ? selection.alias.value : fieldName;\n\n          if (!nodeAndDefs[responseName]) {\n            nodeAndDefs[responseName] = [];\n          }\n\n          nodeAndDefs[responseName].push([parentType, selection, fieldDef]);\n          break;\n        }\n\n      case Kind.FRAGMENT_SPREAD:\n        fragmentNames[selection.name.value] = true;\n        break;\n\n      case Kind.INLINE_FRAGMENT:\n        {\n          var typeCondition = selection.typeCondition;\n          var inlineFragmentType = typeCondition ? typeFromAST(context.getSchema(), typeCondition) : parentType;\n\n          _collectFieldsAndFragmentNames(context, inlineFragmentType, selection.selectionSet, nodeAndDefs, fragmentNames);\n\n          break;\n        }\n    }\n  }\n} // Given a series of Conflicts which occurred between two sub-fields, generate\n// a single Conflict.\n\n\nfunction subfieldConflicts(conflicts, responseName, node1, node2) {\n  if (conflicts.length > 0) {\n    return [[responseName, conflicts.map(function (_ref6) {\n      var reason = _ref6[0];\n      return reason;\n    })], conflicts.reduce(function (allFields, _ref7) {\n      var fields1 = _ref7[1];\n      return allFields.concat(fields1);\n    }, [node1]), conflicts.reduce(function (allFields, _ref8) {\n      var fields2 = _ref8[2];\n      return allFields.concat(fields2);\n    }, [node2])];\n  }\n}\n/**\n * A way to keep track of pairs of things when the ordering of the pair does\n * not matter. We do this by maintaining a sort of double adjacency sets.\n */\n\n\nvar PairSet =\n/*#__PURE__*/\nfunction () {\n  function PairSet() {\n    this._data = Object.create(null);\n  }\n\n  var _proto = PairSet.prototype;\n\n  _proto.has = function has(a, b, areMutuallyExclusive) {\n    var first = this._data[a];\n    var result = first && first[b];\n\n    if (result === undefined) {\n      return false;\n    } // areMutuallyExclusive being false is a superset of being true,\n    // hence if we want to know if this PairSet \"has\" these two with no\n    // exclusivity, we have to ensure it was added as such.\n\n\n    if (areMutuallyExclusive === false) {\n      return result === false;\n    }\n\n    return true;\n  };\n\n  _proto.add = function add(a, b, areMutuallyExclusive) {\n    _pairSetAdd(this._data, a, b, areMutuallyExclusive);\n\n    _pairSetAdd(this._data, b, a, areMutuallyExclusive);\n  };\n\n  return PairSet;\n}();\n\nfunction _pairSetAdd(data, a, b, areMutuallyExclusive) {\n  var map = data[a];\n\n  if (!map) {\n    map = Object.create(null);\n    data[a] = map;\n  }\n\n  map[b] = areMutuallyExclusive;\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nexport function duplicateInputFieldMessage(fieldName) {\n  return \"There can be only one input field named \\\"\".concat(fieldName, \"\\\".\");\n}\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */\n\nexport function UniqueInputFieldNames(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(new GraphQLError(duplicateInputFieldMessage(fieldName), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    }\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nexport function schemaDefinitionNotAloneMessage() {\n  return 'Must provide only one schema definition.';\n}\nexport function canNotDefineSchemaWithinExtensionMessage() {\n  return 'Cannot define a new schema within a schema extension.';\n}\n/**\n * Lone Schema definition\n *\n * A GraphQL document is only valid if it contains only one schema definition.\n */\n\nexport function LoneSchemaDefinition(context) {\n  var oldSchema = context.getSchema();\n  var alreadyDefined = oldSchema && (oldSchema.astNode || oldSchema.getQueryType() || oldSchema.getMutationType() || oldSchema.getSubscriptionType());\n  var schemaDefinitionsCount = 0;\n  return {\n    SchemaDefinition: function SchemaDefinition(node) {\n      if (alreadyDefined) {\n        context.reportError(new GraphQLError(canNotDefineSchemaWithinExtensionMessage(), node));\n        return;\n      }\n\n      if (schemaDefinitionsCount > 0) {\n        context.reportError(new GraphQLError(schemaDefinitionNotAloneMessage(), node));\n      }\n\n      ++schemaDefinitionsCount;\n    }\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nexport function duplicateOperationTypeMessage(operation) {\n  return \"There can be only one \".concat(operation, \" type in schema.\");\n}\nexport function existedOperationTypeMessage(operation) {\n  return \"Type for \".concat(operation, \" already defined in the schema. It cannot be redefined.\");\n}\n/**\n * Unique operation types\n *\n * A GraphQL document is only valid if it has only one type per operation.\n */\n\nexport function UniqueOperationTypes(context) {\n  var schema = context.getSchema();\n  var definedOperationTypes = Object.create(null);\n  var existingOperationTypes = schema ? {\n    query: schema.getQueryType(),\n    mutation: schema.getMutationType(),\n    subscription: schema.getSubscriptionType()\n  } : {};\n  return {\n    SchemaDefinition: checkOperationTypes,\n    SchemaExtension: checkOperationTypes\n  };\n\n  function checkOperationTypes(node) {\n    if (node.operationTypes) {\n      for (var _i2 = 0, _ref2 = node.operationTypes || []; _i2 < _ref2.length; _i2++) {\n        var operationType = _ref2[_i2];\n        var operation = operationType.operation;\n        var alreadyDefinedOperationType = definedOperationTypes[operation];\n\n        if (existingOperationTypes[operation]) {\n          context.reportError(new GraphQLError(existedOperationTypeMessage(operation), operationType));\n        } else if (alreadyDefinedOperationType) {\n          context.reportError(new GraphQLError(duplicateOperationTypeMessage(operation), [alreadyDefinedOperationType, operationType]));\n        } else {\n          definedOperationTypes[operation] = operationType;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nexport function duplicateTypeNameMessage(typeName) {\n  return \"There can be only one type named \\\"\".concat(typeName, \"\\\".\");\n}\nexport function existedTypeNameMessage(typeName) {\n  return \"Type \\\"\".concat(typeName, \"\\\" already exists in the schema. It cannot also be defined in this type definition.\");\n}\n/**\n * Unique type names\n *\n * A GraphQL document is only valid if all defined types have unique names.\n */\n\nexport function UniqueTypeNames(context) {\n  var knownTypeNames = Object.create(null);\n  var schema = context.getSchema();\n  return {\n    ScalarTypeDefinition: checkTypeName,\n    ObjectTypeDefinition: checkTypeName,\n    InterfaceTypeDefinition: checkTypeName,\n    UnionTypeDefinition: checkTypeName,\n    EnumTypeDefinition: checkTypeName,\n    InputObjectTypeDefinition: checkTypeName\n  };\n\n  function checkTypeName(node) {\n    var typeName = node.name.value;\n\n    if (schema && schema.getType(typeName)) {\n      context.reportError(new GraphQLError(existedTypeNameMessage(typeName), node.name));\n      return;\n    }\n\n    if (knownTypeNames[typeName]) {\n      context.reportError(new GraphQLError(duplicateTypeNameMessage(typeName), [knownTypeNames[typeName], node.name]));\n    } else {\n      knownTypeNames[typeName] = node.name;\n    }\n\n    return false;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nimport { isEnumType } from '../../type/definition';\nexport function duplicateEnumValueNameMessage(typeName, valueName) {\n  return \"Enum value \\\"\".concat(typeName, \".\").concat(valueName, \"\\\" can only be defined once.\");\n}\nexport function existedEnumValueNameMessage(typeName, valueName) {\n  return \"Enum value \\\"\".concat(typeName, \".\").concat(valueName, \"\\\" already exists in the schema. It cannot also be defined in this type extension.\");\n}\n/**\n * Unique enum value names\n *\n * A GraphQL enum type is only valid if all its values are uniquely named.\n */\n\nexport function UniqueEnumValueNames(context) {\n  var schema = context.getSchema();\n  var existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  var knownValueNames = Object.create(null);\n  return {\n    EnumTypeDefinition: checkValueUniqueness,\n    EnumTypeExtension: checkValueUniqueness\n  };\n\n  function checkValueUniqueness(node) {\n    var typeName = node.name.value;\n\n    if (!knownValueNames[typeName]) {\n      knownValueNames[typeName] = Object.create(null);\n    }\n\n    if (node.values) {\n      var valueNames = knownValueNames[typeName];\n\n      for (var _i2 = 0, _node$values2 = node.values; _i2 < _node$values2.length; _i2++) {\n        var valueDef = _node$values2[_i2];\n        var valueName = valueDef.name.value;\n        var existingType = existingTypeMap[typeName];\n\n        if (isEnumType(existingType) && existingType.getValue(valueName)) {\n          context.reportError(new GraphQLError(existedEnumValueNameMessage(typeName, valueName), valueDef.name));\n        } else if (valueNames[valueName]) {\n          context.reportError(new GraphQLError(duplicateEnumValueNameMessage(typeName, valueName), [valueNames[valueName], valueDef.name]));\n        } else {\n          valueNames[valueName] = valueDef.name;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nimport { isObjectType, isInterfaceType, isInputObjectType } from '../../type/definition';\nexport function duplicateFieldDefinitionNameMessage(typeName, fieldName) {\n  return \"Field \\\"\".concat(typeName, \".\").concat(fieldName, \"\\\" can only be defined once.\");\n}\nexport function existedFieldDefinitionNameMessage(typeName, fieldName) {\n  return \"Field \\\"\".concat(typeName, \".\").concat(fieldName, \"\\\" already exists in the schema. It cannot also be defined in this type extension.\");\n}\n/**\n * Unique field definition names\n *\n * A GraphQL complex type is only valid if all its fields are uniquely named.\n */\n\nexport function UniqueFieldDefinitionNames(context) {\n  var schema = context.getSchema();\n  var existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  var knownFieldNames = Object.create(null);\n  return {\n    InputObjectTypeDefinition: checkFieldUniqueness,\n    InputObjectTypeExtension: checkFieldUniqueness,\n    InterfaceTypeDefinition: checkFieldUniqueness,\n    InterfaceTypeExtension: checkFieldUniqueness,\n    ObjectTypeDefinition: checkFieldUniqueness,\n    ObjectTypeExtension: checkFieldUniqueness\n  };\n\n  function checkFieldUniqueness(node) {\n    var typeName = node.name.value;\n\n    if (!knownFieldNames[typeName]) {\n      knownFieldNames[typeName] = Object.create(null);\n    }\n\n    if (node.fields) {\n      var fieldNames = knownFieldNames[typeName];\n\n      for (var _i2 = 0, _node$fields2 = node.fields; _i2 < _node$fields2.length; _i2++) {\n        var fieldDef = _node$fields2[_i2];\n        var fieldName = fieldDef.name.value;\n\n        if (hasField(existingTypeMap[typeName], fieldName)) {\n          context.reportError(new GraphQLError(existedFieldDefinitionNameMessage(typeName, fieldName), fieldDef.name));\n        } else if (fieldNames[fieldName]) {\n          context.reportError(new GraphQLError(duplicateFieldDefinitionNameMessage(typeName, fieldName), [fieldNames[fieldName], fieldDef.name]));\n        } else {\n          fieldNames[fieldName] = fieldDef.name;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nfunction hasField(type, fieldName) {\n  if (isObjectType(type) || isInterfaceType(type) || isInputObjectType(type)) {\n    return type.getFields()[fieldName];\n  }\n\n  return false;\n}\n","import { GraphQLError } from '../../error/GraphQLError';\nexport function duplicateDirectiveNameMessage(directiveName) {\n  return \"There can be only one directive named \\\"\".concat(directiveName, \"\\\".\");\n}\nexport function existedDirectiveNameMessage(directiveName) {\n  return \"Directive \\\"\".concat(directiveName, \"\\\" already exists in the schema. It cannot be redefined.\");\n}\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\n\nexport function UniqueDirectiveNames(context) {\n  var knownDirectiveNames = Object.create(null);\n  var schema = context.getSchema();\n  return {\n    DirectiveDefinition: function DirectiveDefinition(node) {\n      var directiveName = node.name.value;\n\n      if (schema && schema.getDirective(directiveName)) {\n        context.reportError(new GraphQLError(existedDirectiveNameMessage(directiveName), node.name));\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(new GraphQLError(duplicateDirectiveNameMessage(directiveName), [knownDirectiveNames[directiveName], node.name]));\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n","var _defKindToExtKind;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport didYouMean from '../../jsutils/didYouMean';\nimport suggestionList from '../../jsutils/suggestionList';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { isTypeDefinitionNode } from '../../language/predicates';\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from '../../type/definition';\nexport function extendingUnknownTypeMessage(typeName, suggestedTypes) {\n  return \"Cannot extend type \\\"\".concat(typeName, \"\\\" because it is not defined.\") + didYouMean(suggestedTypes.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  }));\n}\nexport function extendingDifferentTypeKindMessage(typeName, kind) {\n  return \"Cannot extend non-\".concat(kind, \" type \\\"\").concat(typeName, \"\\\".\");\n}\n/**\n * Possible type extension\n *\n * A type extension is only valid if the type is defined and has the same kind.\n */\n\nexport function PossibleTypeExtensions(context) {\n  var schema = context.getSchema();\n  var definedTypes = Object.create(null);\n\n  for (var _i2 = 0, _context$getDocument$2 = context.getDocument().definitions; _i2 < _context$getDocument$2.length; _i2++) {\n    var def = _context$getDocument$2[_i2];\n\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = def;\n    }\n  }\n\n  return {\n    ScalarTypeExtension: checkExtension,\n    ObjectTypeExtension: checkExtension,\n    InterfaceTypeExtension: checkExtension,\n    UnionTypeExtension: checkExtension,\n    EnumTypeExtension: checkExtension,\n    InputObjectTypeExtension: checkExtension\n  };\n\n  function checkExtension(node) {\n    var typeName = node.name.value;\n    var defNode = definedTypes[typeName];\n    var existingType = schema && schema.getType(typeName);\n\n    if (defNode) {\n      var expectedKind = defKindToExtKind[defNode.kind];\n\n      if (expectedKind !== node.kind) {\n        context.reportError(new GraphQLError(extendingDifferentTypeKindMessage(typeName, extensionKindToTypeName(expectedKind)), [defNode, node]));\n      }\n    } else if (existingType) {\n      var _expectedKind = typeToExtKind(existingType);\n\n      if (_expectedKind !== node.kind) {\n        context.reportError(new GraphQLError(extendingDifferentTypeKindMessage(typeName, extensionKindToTypeName(_expectedKind)), node));\n      }\n    } else {\n      var allTypeNames = Object.keys(definedTypes);\n\n      if (schema) {\n        allTypeNames = allTypeNames.concat(Object.keys(schema.getTypeMap()));\n      }\n\n      var suggestedTypes = suggestionList(typeName, allTypeNames);\n      context.reportError(new GraphQLError(extendingUnknownTypeMessage(typeName, suggestedTypes), node.name));\n    }\n  }\n}\nvar defKindToExtKind = (_defKindToExtKind = {}, _defineProperty(_defKindToExtKind, Kind.SCALAR_TYPE_DEFINITION, Kind.SCALAR_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.OBJECT_TYPE_DEFINITION, Kind.OBJECT_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.INTERFACE_TYPE_DEFINITION, Kind.INTERFACE_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.UNION_TYPE_DEFINITION, Kind.UNION_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.ENUM_TYPE_DEFINITION, Kind.ENUM_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.INPUT_OBJECT_TYPE_DEFINITION, Kind.INPUT_OBJECT_TYPE_EXTENSION), _defKindToExtKind);\n\nfunction typeToExtKind(type) {\n  if (isScalarType(type)) {\n    return Kind.SCALAR_TYPE_EXTENSION;\n  } else if (isObjectType(type)) {\n    return Kind.OBJECT_TYPE_EXTENSION;\n  } else if (isInterfaceType(type)) {\n    return Kind.INTERFACE_TYPE_EXTENSION;\n  } else if (isUnionType(type)) {\n    return Kind.UNION_TYPE_EXTENSION;\n  } else if (isEnumType(type)) {\n    return Kind.ENUM_TYPE_EXTENSION;\n  } else if (isInputObjectType(type)) {\n    return Kind.INPUT_OBJECT_TYPE_EXTENSION;\n  }\n}\n\nfunction extensionKindToTypeName(kind) {\n  switch (kind) {\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return 'scalar';\n\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return 'object';\n\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return 'interface';\n\n    case Kind.UNION_TYPE_EXTENSION:\n      return 'union';\n\n    case Kind.ENUM_TYPE_EXTENSION:\n      return 'enum';\n\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return 'input object';\n\n    default:\n      return 'unknown type';\n  }\n}\n","// Spec Section: \"Executable Definitions\"\nimport { ExecutableDefinitions } from './rules/ExecutableDefinitions'; // Spec Section: \"Operation Name Uniqueness\"\n\nimport { UniqueOperationNames } from './rules/UniqueOperationNames'; // Spec Section: \"Lone Anonymous Operation\"\n\nimport { LoneAnonymousOperation } from './rules/LoneAnonymousOperation'; // Spec Section: \"Subscriptions with Single Root Field\"\n\nimport { SingleFieldSubscriptions } from './rules/SingleFieldSubscriptions'; // Spec Section: \"Fragment Spread Type Existence\"\n\nimport { KnownTypeNames } from './rules/KnownTypeNames'; // Spec Section: \"Fragments on Composite Types\"\n\nimport { FragmentsOnCompositeTypes } from './rules/FragmentsOnCompositeTypes'; // Spec Section: \"Variables are Input Types\"\n\nimport { VariablesAreInputTypes } from './rules/VariablesAreInputTypes'; // Spec Section: \"Leaf Field Selections\"\n\nimport { ScalarLeafs } from './rules/ScalarLeafs'; // Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\nimport { FieldsOnCorrectType } from './rules/FieldsOnCorrectType'; // Spec Section: \"Fragment Name Uniqueness\"\n\nimport { UniqueFragmentNames } from './rules/UniqueFragmentNames'; // Spec Section: \"Fragment spread target defined\"\n\nimport { KnownFragmentNames } from './rules/KnownFragmentNames'; // Spec Section: \"Fragments must be used\"\n\nimport { NoUnusedFragments } from './rules/NoUnusedFragments'; // Spec Section: \"Fragment spread is possible\"\n\nimport { PossibleFragmentSpreads } from './rules/PossibleFragmentSpreads'; // Spec Section: \"Fragments must not form cycles\"\n\nimport { NoFragmentCycles } from './rules/NoFragmentCycles'; // Spec Section: \"Variable Uniqueness\"\n\nimport { UniqueVariableNames } from './rules/UniqueVariableNames'; // Spec Section: \"All Variable Used Defined\"\n\nimport { NoUndefinedVariables } from './rules/NoUndefinedVariables'; // Spec Section: \"All Variables Used\"\n\nimport { NoUnusedVariables } from './rules/NoUnusedVariables'; // Spec Section: \"Directives Are Defined\"\n\nimport { KnownDirectives } from './rules/KnownDirectives'; // Spec Section: \"Directives Are Unique Per Location\"\n\nimport { UniqueDirectivesPerLocation } from './rules/UniqueDirectivesPerLocation'; // Spec Section: \"Argument Names\"\n\nimport { KnownArgumentNames, KnownArgumentNamesOnDirectives } from // @internal\n'./rules/KnownArgumentNames'; // Spec Section: \"Argument Uniqueness\"\n\nimport { UniqueArgumentNames } from './rules/UniqueArgumentNames'; // Spec Section: \"Value Type Correctness\"\n\nimport { ValuesOfCorrectType } from './rules/ValuesOfCorrectType'; // Spec Section: \"Argument Optionality\"\n\nimport { ProvidedRequiredArguments, ProvidedRequiredArgumentsOnDirectives } from // @internal\n'./rules/ProvidedRequiredArguments'; // Spec Section: \"All Variable Usages Are Allowed\"\n\nimport { VariablesInAllowedPosition } from './rules/VariablesInAllowedPosition'; // Spec Section: \"Field Selection Merging\"\n\nimport { OverlappingFieldsCanBeMerged } from './rules/OverlappingFieldsCanBeMerged'; // Spec Section: \"Input Object Field Uniqueness\"\n\nimport { UniqueInputFieldNames } from './rules/UniqueInputFieldNames';\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\n\nexport var specifiedRules = Object.freeze([ExecutableDefinitions, UniqueOperationNames, LoneAnonymousOperation, SingleFieldSubscriptions, KnownTypeNames, FragmentsOnCompositeTypes, VariablesAreInputTypes, ScalarLeafs, FieldsOnCorrectType, UniqueFragmentNames, KnownFragmentNames, NoUnusedFragments, PossibleFragmentSpreads, NoFragmentCycles, UniqueVariableNames, NoUndefinedVariables, NoUnusedVariables, KnownDirectives, UniqueDirectivesPerLocation, KnownArgumentNames, UniqueArgumentNames, ValuesOfCorrectType, ProvidedRequiredArguments, VariablesInAllowedPosition, OverlappingFieldsCanBeMerged, UniqueInputFieldNames]);\nimport { LoneSchemaDefinition } from './rules/LoneSchemaDefinition';\nimport { UniqueOperationTypes } from './rules/UniqueOperationTypes';\nimport { UniqueTypeNames } from './rules/UniqueTypeNames';\nimport { UniqueEnumValueNames } from './rules/UniqueEnumValueNames';\nimport { UniqueFieldDefinitionNames } from './rules/UniqueFieldDefinitionNames';\nimport { UniqueDirectiveNames } from './rules/UniqueDirectiveNames';\nimport { PossibleTypeExtensions } from './rules/PossibleTypeExtensions'; // @internal\n\nexport var specifiedSDLRules = Object.freeze([LoneSchemaDefinition, UniqueOperationTypes, UniqueTypeNames, UniqueEnumValueNames, UniqueFieldDefinitionNames, UniqueDirectiveNames, KnownTypeNames, KnownDirectives, UniqueDirectivesPerLocation, PossibleTypeExtensions, KnownArgumentNamesOnDirectives, UniqueArgumentNames, UniqueInputFieldNames, ProvidedRequiredArgumentsOnDirectives]);\n","function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nimport { Kind } from '../language/kinds';\nimport { visit, visitWithTypeInfo } from '../language/visitor';\nimport { TypeInfo } from '../utilities/TypeInfo';\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nexport var ASTValidationContext =\n/*#__PURE__*/\nfunction () {\n  function ASTValidationContext(ast, onError) {\n    this._ast = ast;\n    this._errors = [];\n    this._fragments = undefined;\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._onError = onError;\n  }\n\n  var _proto = ASTValidationContext.prototype;\n\n  _proto.reportError = function reportError(error) {\n    this._errors.push(error);\n\n    if (this._onError) {\n      this._onError(error);\n    }\n  } // @deprecated: use onError callback instead - will be removed in v15.\n  ;\n\n  _proto.getErrors = function getErrors() {\n    return this._errors;\n  };\n\n  _proto.getDocument = function getDocument() {\n    return this._ast;\n  };\n\n  _proto.getFragment = function getFragment(name) {\n    var fragments = this._fragments;\n\n    if (!fragments) {\n      this._fragments = fragments = this.getDocument().definitions.reduce(function (frags, statement) {\n        if (statement.kind === Kind.FRAGMENT_DEFINITION) {\n          frags[statement.name.value] = statement;\n        }\n\n        return frags;\n      }, Object.create(null));\n    }\n\n    return fragments[name];\n  };\n\n  _proto.getFragmentSpreads = function getFragmentSpreads(node) {\n    var spreads = this._fragmentSpreads.get(node);\n\n    if (!spreads) {\n      spreads = [];\n      var setsToVisit = [node];\n\n      while (setsToVisit.length !== 0) {\n        var set = setsToVisit.pop();\n\n        for (var _i2 = 0, _set$selections2 = set.selections; _i2 < _set$selections2.length; _i2++) {\n          var selection = _set$selections2[_i2];\n\n          if (selection.kind === Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n\n      this._fragmentSpreads.set(node, spreads);\n    }\n\n    return spreads;\n  };\n\n  _proto.getRecursivelyReferencedFragments = function getRecursivelyReferencedFragments(operation) {\n    var fragments = this._recursivelyReferencedFragments.get(operation);\n\n    if (!fragments) {\n      fragments = [];\n      var collectedNames = Object.create(null);\n      var nodesToVisit = [operation.selectionSet];\n\n      while (nodesToVisit.length !== 0) {\n        var node = nodesToVisit.pop();\n\n        for (var _i4 = 0, _this$getFragmentSpre2 = this.getFragmentSpreads(node); _i4 < _this$getFragmentSpre2.length; _i4++) {\n          var spread = _this$getFragmentSpre2[_i4];\n          var fragName = spread.name.value;\n\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            var fragment = this.getFragment(fragName);\n\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n\n    return fragments;\n  };\n\n  return ASTValidationContext;\n}();\nexport var SDLValidationContext =\n/*#__PURE__*/\nfunction (_ASTValidationContext) {\n  _inheritsLoose(SDLValidationContext, _ASTValidationContext);\n\n  function SDLValidationContext(ast, schema, onError) {\n    var _this;\n\n    _this = _ASTValidationContext.call(this, ast, onError) || this;\n    _this._schema = schema;\n    return _this;\n  }\n\n  var _proto2 = SDLValidationContext.prototype;\n\n  _proto2.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  return SDLValidationContext;\n}(ASTValidationContext);\nexport var ValidationContext =\n/*#__PURE__*/\nfunction (_ASTValidationContext2) {\n  _inheritsLoose(ValidationContext, _ASTValidationContext2);\n\n  function ValidationContext(schema, ast, typeInfo, onError) {\n    var _this2;\n\n    _this2 = _ASTValidationContext2.call(this, ast, onError) || this;\n    _this2._schema = schema;\n    _this2._typeInfo = typeInfo;\n    _this2._variableUsages = new Map();\n    _this2._recursiveVariableUsages = new Map();\n    return _this2;\n  }\n\n  var _proto3 = ValidationContext.prototype;\n\n  _proto3.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  _proto3.getVariableUsages = function getVariableUsages(node) {\n    var usages = this._variableUsages.get(node);\n\n    if (!usages) {\n      var newUsages = [];\n      var typeInfo = new TypeInfo(this._schema);\n      visit(node, visitWithTypeInfo(typeInfo, {\n        VariableDefinition: function VariableDefinition() {\n          return false;\n        },\n        Variable: function Variable(variable) {\n          newUsages.push({\n            node: variable,\n            type: typeInfo.getInputType(),\n            defaultValue: typeInfo.getDefaultValue()\n          });\n        }\n      }));\n      usages = newUsages;\n\n      this._variableUsages.set(node, usages);\n    }\n\n    return usages;\n  };\n\n  _proto3.getRecursiveVariableUsages = function getRecursiveVariableUsages(operation) {\n    var usages = this._recursiveVariableUsages.get(operation);\n\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n\n      for (var _i6 = 0, _this$getRecursivelyR2 = this.getRecursivelyReferencedFragments(operation); _i6 < _this$getRecursivelyR2.length; _i6++) {\n        var frag = _this$getRecursivelyR2[_i6];\n        usages = usages.concat(this.getVariableUsages(frag));\n      }\n\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n\n    return usages;\n  };\n\n  _proto3.getType = function getType() {\n    return this._typeInfo.getType();\n  };\n\n  _proto3.getParentType = function getParentType() {\n    return this._typeInfo.getParentType();\n  };\n\n  _proto3.getInputType = function getInputType() {\n    return this._typeInfo.getInputType();\n  };\n\n  _proto3.getParentInputType = function getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  };\n\n  _proto3.getFieldDef = function getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  };\n\n  _proto3.getDirective = function getDirective() {\n    return this._typeInfo.getDirective();\n  };\n\n  _proto3.getArgument = function getArgument() {\n    return this._typeInfo.getArgument();\n  };\n\n  return ValidationContext;\n}(ASTValidationContext);\n","import devAssert from '../jsutils/devAssert';\nimport { GraphQLError } from '../error/GraphQLError';\nimport { visit, visitInParallel, visitWithTypeInfo } from '../language/visitor';\nimport { assertValidSchema } from '../type/validate';\nimport { TypeInfo } from '../utilities/TypeInfo';\nimport { specifiedRules, specifiedSDLRules } from './specifiedRules';\nimport { SDLValidationContext, ValidationContext } from './ValidationContext';\nexport var ABORT_VALIDATION = Object.freeze({});\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\n\nexport function validate(schema, documentAST) {\n  var rules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : specifiedRules;\n  var typeInfo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new TypeInfo(schema);\n  var options = arguments.length > 4 ? arguments[4] : undefined;\n  documentAST || devAssert(0, 'Must provide document'); // If the schema used for validation is invalid, throw an error.\n\n  assertValidSchema(schema);\n  var abortObj = Object.freeze({});\n  var errors = [];\n  var maxErrors = options && options.maxErrors;\n  var context = new ValidationContext(schema, documentAST, typeInfo, function (error) {\n    if (maxErrors != null && errors.length >= maxErrors) {\n      errors.push(new GraphQLError('Too many validation errors, error limit reached. Validation aborted.'));\n      throw abortObj;\n    }\n\n    errors.push(error);\n  }); // This uses a specialized visitor which runs multiple visitors in parallel,\n  // while maintaining the visitor skip and break API.\n\n  var visitor = visitInParallel(rules.map(function (rule) {\n    return rule(context);\n  })); // Visit the whole document with each instance of all provided rules.\n\n  try {\n    visit(documentAST, visitWithTypeInfo(typeInfo, visitor));\n  } catch (e) {\n    if (e !== abortObj) {\n      throw e;\n    }\n  }\n\n  return errors;\n} // @internal\n\nexport function validateSDL(documentAST, schemaToExtend) {\n  var rules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : specifiedSDLRules;\n  var errors = [];\n  var context = new SDLValidationContext(documentAST, schemaToExtend, function (error) {\n    errors.push(error);\n  });\n  var visitors = rules.map(function (rule) {\n    return rule(context);\n  });\n  visit(documentAST, visitInParallel(visitors));\n  return errors;\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nexport function assertValidSDL(documentAST) {\n  var errors = validateSDL(documentAST);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map(function (error) {\n      return error.message;\n    }).join('\\n\\n'));\n  }\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nexport function assertValidSDLExtension(documentAST, schema) {\n  var errors = validateSDL(documentAST, schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map(function (error) {\n      return error.message;\n    }).join('\\n\\n'));\n  }\n}\n","/**\n * Memoizes the provided three-argument function.\n */\nexport default function memoize3(fn) {\n  var cache0;\n\n  function memoized(a1, a2, a3) {\n    if (!cache0) {\n      cache0 = new WeakMap();\n    }\n\n    var cache1 = cache0.get(a1);\n    var cache2;\n\n    if (cache1) {\n      cache2 = cache1.get(a2);\n\n      if (cache2) {\n        var cachedValue = cache2.get(a3);\n\n        if (cachedValue !== undefined) {\n          return cachedValue;\n        }\n      }\n    } else {\n      cache1 = new WeakMap();\n      cache0.set(a1, cache1);\n    }\n\n    if (!cache2) {\n      cache2 = new WeakMap();\n      cache1.set(a2, cache2);\n    }\n\n    var newValue = fn(a1, a2, a3);\n    cache2.set(a3, newValue);\n    return newValue;\n  }\n\n  return memoized;\n}\n","import isPromise from './isPromise';\n\n/**\n * Similar to Array.prototype.reduce(), however the reducing callback may return\n * a Promise, in which case reduction will continue after each promise resolves.\n *\n * If the callback does not return a Promise, then this function will also not\n * return a Promise.\n */\nexport default function promiseReduce(values, callback, initialValue) {\n  return values.reduce(function (previous, value) {\n    return isPromise(previous) ? previous.then(function (resolved) {\n      return callback(resolved, value);\n    }) : callback(previous, value);\n  }, initialValue);\n}\n","/**\n * This function transforms a JS object `ObjMap<Promise<T>>` into\n * a `Promise<ObjMap<T>>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nexport default function promiseForObject(object) {\n  var keys = Object.keys(object);\n  var valuesAndPromises = keys.map(function (name) {\n    return object[name];\n  });\n  return Promise.all(valuesAndPromises).then(function (values) {\n    return values.reduce(function (resolvedObject, value, i) {\n      resolvedObject[keys[i]] = value;\n      return resolvedObject;\n    }, Object.create(null));\n  });\n}\n","/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nexport function addPath(prev, key) {\n  return {\n    prev: prev,\n    key: key\n  };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\n\nexport function pathToArray(path) {\n  var flattened = [];\n  var curr = path;\n\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n\n  return flattened.reverse();\n}\n","import { GraphQLError } from './GraphQLError';\n/**\n * Given an arbitrary Error, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\n\nexport function locatedError(originalError, nodes, path) {\n  // Note: this uses a brand-check to support GraphQL errors originating from\n  // other contexts.\n  if (originalError && Array.isArray(originalError.path)) {\n    return originalError;\n  }\n\n  return new GraphQLError(originalError && originalError.message, originalError && originalError.nodes || nodes, originalError && originalError.source, originalError && originalError.positions, path, originalError);\n}\n","import { GraphQLError } from '../error/GraphQLError';\n\n/**\n * Extracts the root type of the operation from the schema.\n */\nexport function getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    var queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new GraphQLError('Schema does not define the required query root type.', operation);\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    var mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new GraphQLError('Schema is not configured for mutations.', operation);\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    var subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new GraphQLError('Schema is not configured for subscriptions.', operation);\n    }\n\n    return subscriptionType;\n  }\n\n  throw new GraphQLError('Can only have query, mutation and subscription operations.', operation);\n}\n","/**\n * Build a string describing the path.\n */\nexport default function printPathArray(path) {\n  return path.map(function (key) {\n    return typeof key === 'number' ? '[' + key.toString() + ']' : '.' + key;\n  }).join('');\n}\n","import objectValues from '../polyfills/objectValues';\nimport keyMap from '../jsutils/keyMap';\nimport inspect from '../jsutils/inspect';\nimport invariant from '../jsutils/invariant';\nimport isInvalid from '../jsutils/isInvalid';\nimport { Kind } from '../language/kinds';\nimport { isScalarType, isEnumType, isInputObjectType, isListType, isNonNullType } from '../type/definition';\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * GraphQL Value literals.\n *\n * Returns `undefined` when the value could not be validly coerced according to\n * the provided type.\n *\n * | GraphQL Value        | JSON Value    |\n * | -------------------- | ------------- |\n * | Input Object         | Object        |\n * | List                 | Array         |\n * | Boolean              | Boolean       |\n * | String               | String        |\n * | Int / Float          | Number        |\n * | Enum Value           | Mixed         |\n * | NullValue            | null          |\n *\n */\n\nexport function valueFromAST(valueNode, type, variables) {\n  if (!valueNode) {\n    // When there is no node, then there is also no value.\n    // Importantly, this is different from returning the value null.\n    return;\n  }\n\n  if (isNonNullType(type)) {\n    if (valueNode.kind === Kind.NULL) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return valueFromAST(valueNode, type.ofType, variables);\n  }\n\n  if (valueNode.kind === Kind.NULL) {\n    // This is explicitly returning the value null.\n    return null;\n  }\n\n  if (valueNode.kind === Kind.VARIABLE) {\n    var variableName = valueNode.name.value;\n\n    if (!variables || isInvalid(variables[variableName])) {\n      // No valid return value.\n      return;\n    }\n\n    var variableValue = variables[variableName];\n\n    if (variableValue === null && isNonNullType(type)) {\n      return; // Invalid: intentionally return no value.\n    } // Note: This does no further checking that this variable is correct.\n    // This assumes that this query has been validated and the variable\n    // usage here is of the correct type.\n\n\n    return variableValue;\n  }\n\n  if (isListType(type)) {\n    var itemType = type.ofType;\n\n    if (valueNode.kind === Kind.LIST) {\n      var coercedValues = [];\n\n      for (var _i2 = 0, _valueNode$values2 = valueNode.values; _i2 < _valueNode$values2.length; _i2++) {\n        var itemNode = _valueNode$values2[_i2];\n\n        if (isMissingVariable(itemNode, variables)) {\n          // If an array contains a missing variable, it is either coerced to\n          // null or if the item type is non-null, it considered invalid.\n          if (isNonNullType(itemType)) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(null);\n        } else {\n          var itemValue = valueFromAST(itemNode, itemType, variables);\n\n          if (isInvalid(itemValue)) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(itemValue);\n        }\n      }\n\n      return coercedValues;\n    }\n\n    var coercedValue = valueFromAST(valueNode, itemType, variables);\n\n    if (isInvalid(coercedValue)) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return [coercedValue];\n  }\n\n  if (isInputObjectType(type)) {\n    if (valueNode.kind !== Kind.OBJECT) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    var coercedObj = Object.create(null);\n    var fieldNodes = keyMap(valueNode.fields, function (field) {\n      return field.name.value;\n    });\n\n    for (var _i4 = 0, _objectValues2 = objectValues(type.getFields()); _i4 < _objectValues2.length; _i4++) {\n      var field = _objectValues2[_i4];\n      var fieldNode = fieldNodes[field.name];\n\n      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {\n        if (field.defaultValue !== undefined) {\n          coercedObj[field.name] = field.defaultValue;\n        } else if (isNonNullType(field.type)) {\n          return; // Invalid: intentionally return no value.\n        }\n\n        continue;\n      }\n\n      var fieldValue = valueFromAST(fieldNode.value, field.type, variables);\n\n      if (isInvalid(fieldValue)) {\n        return; // Invalid: intentionally return no value.\n      }\n\n      coercedObj[field.name] = fieldValue;\n    }\n\n    return coercedObj;\n  }\n\n  if (isEnumType(type)) {\n    if (valueNode.kind !== Kind.ENUM) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    var enumValue = type.getValue(valueNode.value);\n\n    if (!enumValue) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return enumValue.value;\n  }\n\n  /* istanbul ignore else */\n  if (isScalarType(type)) {\n    // Scalars fulfill parsing a literal value via parseLiteral().\n    // Invalid values represent a failure to parse correctly, in which case\n    // no value is returned.\n    var result;\n\n    try {\n      result = type.parseLiteral(valueNode, variables);\n    } catch (_error) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    if (isInvalid(result)) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return result;\n  } // Not reachable. All possible input types have been considered.\n\n\n  /* istanbul ignore next */\n  invariant(false, 'Unexpected input type: ' + inspect(type));\n} // Returns true if the provided valueNode is a variable which is not defined\n// in the set of variables.\n\nfunction isMissingVariable(valueNode, variables) {\n  return valueNode.kind === Kind.VARIABLE && (!variables || isInvalid(variables[valueNode.name.value]));\n}\n","import { forEach, isCollection } from 'iterall';\nimport objectValues from '../polyfills/objectValues';\nimport inspect from '../jsutils/inspect';\nimport invariant from '../jsutils/invariant';\nimport didYouMean from '../jsutils/didYouMean';\nimport isObjectLike from '../jsutils/isObjectLike';\nimport suggestionList from '../jsutils/suggestionList';\nimport printPathArray from '../jsutils/printPathArray';\nimport { addPath, pathToArray } from '../jsutils/Path';\nimport { GraphQLError } from '../error/GraphQLError';\nimport { isScalarType, isEnumType, isInputObjectType, isListType, isNonNullType } from '../type/definition';\n\n/**\n * Coerces a JavaScript value given a GraphQL Input Type.\n */\nexport function coerceInputValue(inputValue, type) {\n  var onError = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultOnError;\n  return coerceInputValueImpl(inputValue, type, onError);\n}\n\nfunction defaultOnError(path, invalidValue, error) {\n  var errorPrefix = 'Invalid value ' + inspect(invalidValue);\n\n  if (path.length > 0) {\n    errorPrefix += \" at \\\"value\".concat(printPathArray(path), \"\\\": \");\n  }\n\n  error.message = errorPrefix + ': ' + error.message;\n  throw error;\n}\n\nfunction coerceInputValueImpl(inputValue, type, onError, path) {\n  if (isNonNullType(type)) {\n    if (inputValue != null) {\n      return coerceInputValueImpl(inputValue, type.ofType, onError, path);\n    }\n\n    onError(pathToArray(path), inputValue, new GraphQLError(\"Expected non-nullable type \".concat(inspect(type), \" not to be null.\")));\n    return;\n  }\n\n  if (inputValue == null) {\n    // Explicitly return the value null.\n    return null;\n  }\n\n  if (isListType(type)) {\n    var itemType = type.ofType;\n\n    if (isCollection(inputValue)) {\n      var coercedValue = [];\n      forEach(inputValue, function (itemValue, index) {\n        coercedValue.push(coerceInputValueImpl(itemValue, itemType, onError, addPath(path, index)));\n      });\n      return coercedValue;\n    } // Lists accept a non-list value as a list of one.\n\n\n    return [coerceInputValueImpl(inputValue, itemType, onError, path)];\n  }\n\n  if (isInputObjectType(type)) {\n    if (!isObjectLike(inputValue)) {\n      onError(pathToArray(path), inputValue, new GraphQLError(\"Expected type \".concat(type.name, \" to be an object.\")));\n      return;\n    }\n\n    var _coercedValue = {};\n    var fieldDefs = type.getFields();\n\n    for (var _i2 = 0, _objectValues2 = objectValues(fieldDefs); _i2 < _objectValues2.length; _i2++) {\n      var field = _objectValues2[_i2];\n      var fieldValue = inputValue[field.name];\n\n      if (fieldValue === undefined) {\n        if (field.defaultValue !== undefined) {\n          _coercedValue[field.name] = field.defaultValue;\n        } else if (isNonNullType(field.type)) {\n          var typeStr = inspect(field.type);\n          onError(pathToArray(path), inputValue, new GraphQLError(\"Field \".concat(field.name, \" of required type \").concat(typeStr, \" was not provided.\")));\n        }\n\n        continue;\n      }\n\n      _coercedValue[field.name] = coerceInputValueImpl(fieldValue, field.type, onError, addPath(path, field.name));\n    } // Ensure every provided field is defined.\n\n\n    for (var _i4 = 0, _Object$keys2 = Object.keys(inputValue); _i4 < _Object$keys2.length; _i4++) {\n      var fieldName = _Object$keys2[_i4];\n\n      if (!fieldDefs[fieldName]) {\n        var suggestions = suggestionList(fieldName, Object.keys(type.getFields()));\n        onError(pathToArray(path), inputValue, new GraphQLError(\"Field \\\"\".concat(fieldName, \"\\\" is not defined by type \").concat(type.name, \".\") + didYouMean(suggestions)));\n      }\n    }\n\n    return _coercedValue;\n  }\n\n  if (isScalarType(type)) {\n    var parseResult; // Scalars determine if a input value is valid via parseValue(), which can\n    // throw to indicate failure. If it throws, maintain a reference to\n    // the original error.\n\n    try {\n      parseResult = type.parseValue(inputValue);\n    } catch (error) {\n      onError(pathToArray(path), inputValue, new GraphQLError(\"Expected type \".concat(type.name, \". \") + error.message, undefined, undefined, undefined, undefined, error));\n      return;\n    }\n\n    if (parseResult === undefined) {\n      onError(pathToArray(path), inputValue, new GraphQLError(\"Expected type \".concat(type.name, \".\")));\n    }\n\n    return parseResult;\n  }\n\n  /* istanbul ignore else */\n  if (isEnumType(type)) {\n    if (typeof inputValue === 'string') {\n      var enumValue = type.getValue(inputValue);\n\n      if (enumValue) {\n        return enumValue.value;\n      }\n    }\n\n    var _suggestions = suggestionList(String(inputValue), type.getValues().map(function (enumValue) {\n      return enumValue.name;\n    }));\n\n    onError(pathToArray(path), inputValue, new GraphQLError(\"Expected type \".concat(type.name, \".\") + didYouMean(_suggestions)));\n    return;\n  } // Not reachable. All possible input types have been considered.\n\n\n  /* istanbul ignore next */\n  invariant(false, 'Unexpected input type: ' + inspect(type));\n}\n","import find from '../polyfills/find';\nimport keyMap from '../jsutils/keyMap';\nimport inspect from '../jsutils/inspect';\nimport printPathArray from '../jsutils/printPathArray';\nimport { GraphQLError } from '../error/GraphQLError';\nimport { Kind } from '../language/kinds';\nimport { print } from '../language/printer';\nimport { isInputType, isNonNullType } from '../type/definition';\nimport { typeFromAST } from '../utilities/typeFromAST';\nimport { valueFromAST } from '../utilities/valueFromAST';\nimport { coerceInputValue } from '../utilities/coerceInputValue';\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nexport function getVariableValues(schema, varDefNodes, inputs, options) {\n  var maxErrors = options && options.maxErrors;\n  var errors = [];\n\n  try {\n    var coerced = coerceVariableValues(schema, varDefNodes, inputs, function (error) {\n      if (maxErrors != null && errors.length >= maxErrors) {\n        throw new GraphQLError('Too many errors processing variables, error limit reached. Execution aborted.');\n      }\n\n      errors.push(error);\n    });\n\n    if (errors.length === 0) {\n      return {\n        coerced: coerced\n      };\n    }\n  } catch (error) {\n    errors.push(error);\n  }\n\n  return {\n    errors: errors\n  };\n}\n\nfunction coerceVariableValues(schema, varDefNodes, inputs, onError) {\n  var coercedValues = {};\n\n  var _loop = function _loop(_i2) {\n    var varDefNode = varDefNodes[_i2];\n    var varName = varDefNode.variable.name.value;\n    var varType = typeFromAST(schema, varDefNode.type);\n\n    if (!isInputType(varType)) {\n      // Must use input types for variables. This should be caught during\n      // validation, however is checked again here for safety.\n      var varTypeStr = print(varDefNode.type);\n      onError(new GraphQLError(\"Variable \\\"$\".concat(varName, \"\\\" expected value of type \\\"\").concat(varTypeStr, \"\\\" which cannot be used as an input type.\"), varDefNode.type));\n      return \"continue\";\n    }\n\n    if (!hasOwnProperty(inputs, varName)) {\n      if (varDefNode.defaultValue) {\n        coercedValues[varName] = valueFromAST(varDefNode.defaultValue, varType);\n      } else if (isNonNullType(varType)) {\n        var _varTypeStr = inspect(varType);\n\n        onError(new GraphQLError(\"Variable \\\"$\".concat(varName, \"\\\" of required type \\\"\").concat(_varTypeStr, \"\\\" was not provided.\"), varDefNode));\n      }\n\n      return \"continue\";\n    }\n\n    var value = inputs[varName];\n\n    if (value === null && isNonNullType(varType)) {\n      var _varTypeStr2 = inspect(varType);\n\n      onError(new GraphQLError(\"Variable \\\"$\".concat(varName, \"\\\" of non-null type \\\"\").concat(_varTypeStr2, \"\\\" must not be null.\"), varDefNode));\n      return \"continue\";\n    }\n\n    coercedValues[varName] = coerceInputValue(value, varType, function (path, invalidValue, error) {\n      var prefix = \"Variable \\\"$\".concat(varName, \"\\\" got invalid value \") + inspect(invalidValue);\n\n      if (path.length > 0) {\n        prefix += \" at \\\"\".concat(varName).concat(printPathArray(path), \"\\\"\");\n      }\n\n      onError(new GraphQLError(prefix + '; ' + error.message, varDefNode, undefined, undefined, undefined, error.originalError));\n    });\n  };\n\n  for (var _i2 = 0; _i2 < varDefNodes.length; _i2++) {\n    var _ret = _loop(_i2);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\n\nexport function getArgumentValues(def, node, variableValues) {\n  var coercedValues = {};\n  var argNodeMap = keyMap(node.arguments || [], function (arg) {\n    return arg.name.value;\n  });\n\n  for (var _i4 = 0, _def$args2 = def.args; _i4 < _def$args2.length; _i4++) {\n    var argDef = _def$args2[_i4];\n    var name = argDef.name;\n    var argType = argDef.type;\n    var argumentNode = argNodeMap[name];\n\n    if (!argumentNode) {\n      if (argDef.defaultValue !== undefined) {\n        coercedValues[name] = argDef.defaultValue;\n      } else if (isNonNullType(argType)) {\n        throw new GraphQLError(\"Argument \\\"\".concat(name, \"\\\" of required type \\\"\").concat(inspect(argType), \"\\\" \") + 'was not provided.', node);\n      }\n\n      continue;\n    }\n\n    var valueNode = argumentNode.value;\n    var isNull = valueNode.kind === Kind.NULL;\n\n    if (valueNode.kind === Kind.VARIABLE) {\n      var variableName = valueNode.name.value;\n\n      if (variableValues == null || !hasOwnProperty(variableValues, variableName)) {\n        if (argDef.defaultValue !== undefined) {\n          coercedValues[name] = argDef.defaultValue;\n        } else if (isNonNullType(argType)) {\n          throw new GraphQLError(\"Argument \\\"\".concat(name, \"\\\" of required type \\\"\").concat(inspect(argType), \"\\\" \") + \"was provided the variable \\\"$\".concat(variableName, \"\\\" which was not provided a runtime value.\"), valueNode);\n        }\n\n        continue;\n      }\n\n      isNull = variableValues[variableName] == null;\n    }\n\n    if (isNull && isNonNullType(argType)) {\n      throw new GraphQLError(\"Argument \\\"\".concat(name, \"\\\" of non-null type \\\"\").concat(inspect(argType), \"\\\" \") + 'must not be null.', valueNode);\n    }\n\n    var coercedValue = valueFromAST(valueNode, argType, variableValues);\n\n    if (coercedValue === undefined) {\n      // Note: ValuesOfCorrectType validation should catch this before\n      // execution. This is a runtime check to ensure execution does not\n      // continue with an invalid argument value.\n      throw new GraphQLError(\"Argument \\\"\".concat(name, \"\\\" has invalid value \").concat(print(valueNode), \".\"), valueNode);\n    }\n\n    coercedValues[name] = coercedValue;\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a directive definition\n * and a AST node which may contain directives. Optionally also accepts a map\n * of variable values.\n *\n * If the directive does not exist on the node, returns undefined.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nexport function getDirectiveValues(directiveDef, node, variableValues) {\n  var directiveNode = node.directives && find(node.directives, function (directive) {\n    return directive.name.value === directiveDef.name;\n  });\n\n  if (directiveNode) {\n    return getArgumentValues(directiveDef, directiveNode, variableValues);\n  }\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","import { forEach, isCollection } from 'iterall';\nimport inspect from '../jsutils/inspect';\nimport memoize3 from '../jsutils/memoize3';\nimport invariant from '../jsutils/invariant';\nimport devAssert from '../jsutils/devAssert';\nimport isInvalid from '../jsutils/isInvalid';\nimport isNullish from '../jsutils/isNullish';\nimport isPromise from '../jsutils/isPromise';\nimport isObjectLike from '../jsutils/isObjectLike';\nimport promiseReduce from '../jsutils/promiseReduce';\nimport promiseForObject from '../jsutils/promiseForObject';\nimport { addPath, pathToArray } from '../jsutils/Path';\nimport { GraphQLError } from '../error/GraphQLError';\nimport { locatedError } from '../error/locatedError';\nimport { Kind } from '../language/kinds';\nimport { assertValidSchema } from '../type/validate';\nimport { SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef } from '../type/introspection';\nimport { GraphQLIncludeDirective, GraphQLSkipDirective } from '../type/directives';\nimport { isObjectType, isAbstractType, isLeafType, isListType, isNonNullType } from '../type/definition';\nimport { typeFromAST } from '../utilities/typeFromAST';\nimport { getOperationRootType } from '../utilities/getOperationRootType';\nimport { getVariableValues, getArgumentValues, getDirectiveValues } from './values';\n/**\n * Terminology\n *\n * \"Definitions\" are the generic name for top-level statements in the document.\n * Examples of this include:\n * 1) Operations (such as a query)\n * 2) Fragments\n *\n * \"Operations\" are a generic name for requests in the document.\n * Examples of this include:\n * 1) query,\n * 2) mutation\n *\n * \"Selections\" are the definitions that can appear legally and at\n * single level of the query. These include:\n * 1) field references e.g \"a\"\n * 2) fragment \"spreads\" e.g. \"...c\"\n * 3) inline fragment \"spreads\" e.g. \"...on Type { a }\"\n */\n\n/**\n * Data that must be available at all points during query execution.\n *\n * Namely, schema of the type system that is currently executing,\n * and the fragments defined in the query document\n */\n\nexport function execute(argsOrSchema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, typeResolver) {\n  /* eslint-enable no-redeclare */\n  // Extract arguments from object args if provided.\n  return arguments.length === 1 ? executeImpl(argsOrSchema) : executeImpl({\n    schema: argsOrSchema,\n    document: document,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    variableValues: variableValues,\n    operationName: operationName,\n    fieldResolver: fieldResolver,\n    typeResolver: typeResolver\n  });\n}\n\nfunction executeImpl(args) {\n  var schema = args.schema,\n      document = args.document,\n      rootValue = args.rootValue,\n      contextValue = args.contextValue,\n      variableValues = args.variableValues,\n      operationName = args.operationName,\n      fieldResolver = args.fieldResolver,\n      typeResolver = args.typeResolver; // If arguments are missing or incorrect, throw an error.\n\n  assertValidExecutionArguments(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n\n  var exeContext = buildExecutionContext(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, typeResolver); // Return early errors if execution context failed.\n\n  if (Array.isArray(exeContext)) {\n    return {\n      errors: exeContext\n    };\n  } // Return a Promise that will eventually resolve to the data described by\n  // The \"Response\" section of the GraphQL specification.\n  //\n  // If errors are encountered while executing a GraphQL field, only that\n  // field and its descendants will be omitted, and sibling fields will still\n  // be executed. An execution which encounters errors will still result in a\n  // resolved Promise.\n\n\n  var data = executeOperation(exeContext, exeContext.operation, rootValue);\n  return buildResponse(exeContext, data);\n}\n/**\n * Given a completed execution context and data, build the { errors, data }\n * response defined by the \"Response\" section of the GraphQL specification.\n */\n\n\nfunction buildResponse(exeContext, data) {\n  if (isPromise(data)) {\n    return data.then(function (resolved) {\n      return buildResponse(exeContext, resolved);\n    });\n  }\n\n  return exeContext.errors.length === 0 ? {\n    data: data\n  } : {\n    errors: exeContext.errors,\n    data: data\n  };\n}\n/**\n * Essential assertions before executing to provide developer feedback for\n * improper use of the GraphQL library.\n */\n\n\nexport function assertValidExecutionArguments(schema, document, rawVariableValues) {\n  document || devAssert(0, 'Must provide document'); // If the schema used for execution is invalid, throw an error.\n\n  assertValidSchema(schema); // Variables, if provided, must be an object.\n\n  rawVariableValues == null || isObjectLike(rawVariableValues) || devAssert(0, 'Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.');\n}\n/**\n * Constructs a ExecutionContext object from the arguments passed to\n * execute, which we will pass throughout the other execution methods.\n *\n * Throws a GraphQLError if a valid execution context cannot be created.\n */\n\nexport function buildExecutionContext(schema, document, rootValue, contextValue, rawVariableValues, operationName, fieldResolver, typeResolver) {\n  var operation;\n  var hasMultipleAssumedOperations = false;\n  var fragments = Object.create(null);\n\n  for (var _i2 = 0, _document$definitions2 = document.definitions; _i2 < _document$definitions2.length; _i2++) {\n    var definition = _document$definitions2[_i2];\n\n    switch (definition.kind) {\n      case Kind.OPERATION_DEFINITION:\n        if (!operationName && operation) {\n          hasMultipleAssumedOperations = true;\n        } else if (!operationName || definition.name && definition.name.value === operationName) {\n          operation = definition;\n        }\n\n        break;\n\n      case Kind.FRAGMENT_DEFINITION:\n        fragments[definition.name.value] = definition;\n        break;\n    }\n  }\n\n  if (!operation) {\n    if (operationName) {\n      return [new GraphQLError(\"Unknown operation named \\\"\".concat(operationName, \"\\\".\"))];\n    }\n\n    return [new GraphQLError('Must provide an operation.')];\n  }\n\n  if (hasMultipleAssumedOperations) {\n    return [new GraphQLError('Must provide operation name if query contains multiple operations.')];\n  }\n\n  var coercedVariableValues = getVariableValues(schema, operation.variableDefinitions || [], rawVariableValues || {}, {\n    maxErrors: 50\n  });\n\n  if (coercedVariableValues.errors) {\n    return coercedVariableValues.errors;\n  }\n\n  return {\n    schema: schema,\n    fragments: fragments,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    operation: operation,\n    variableValues: coercedVariableValues.coerced,\n    fieldResolver: fieldResolver || defaultFieldResolver,\n    typeResolver: typeResolver || defaultTypeResolver,\n    errors: []\n  };\n}\n/**\n * Implements the \"Evaluating operations\" section of the spec.\n */\n\nfunction executeOperation(exeContext, operation, rootValue) {\n  var type = getOperationRootType(exeContext.schema, operation);\n  var fields = collectFields(exeContext, type, operation.selectionSet, Object.create(null), Object.create(null));\n  var path = undefined; // Errors from sub-fields of a NonNull type may propagate to the top level,\n  // at which point we still log the error and null the parent field, which\n  // in this case is the entire response.\n  //\n  // Similar to completeValueCatchingError.\n\n  try {\n    var result = operation.operation === 'mutation' ? executeFieldsSerially(exeContext, type, rootValue, path, fields) : executeFields(exeContext, type, rootValue, path, fields);\n\n    if (isPromise(result)) {\n      return result.then(undefined, function (error) {\n        exeContext.errors.push(error);\n        return Promise.resolve(null);\n      });\n    }\n\n    return result;\n  } catch (error) {\n    exeContext.errors.push(error);\n    return null;\n  }\n}\n/**\n * Implements the \"Evaluating selection sets\" section of the spec\n * for \"write\" mode.\n */\n\n\nfunction executeFieldsSerially(exeContext, parentType, sourceValue, path, fields) {\n  return promiseReduce(Object.keys(fields), function (results, responseName) {\n    var fieldNodes = fields[responseName];\n    var fieldPath = addPath(path, responseName);\n    var result = resolveField(exeContext, parentType, sourceValue, fieldNodes, fieldPath);\n\n    if (result === undefined) {\n      return results;\n    }\n\n    if (isPromise(result)) {\n      return result.then(function (resolvedResult) {\n        results[responseName] = resolvedResult;\n        return results;\n      });\n    }\n\n    results[responseName] = result;\n    return results;\n  }, Object.create(null));\n}\n/**\n * Implements the \"Evaluating selection sets\" section of the spec\n * for \"read\" mode.\n */\n\n\nfunction executeFields(exeContext, parentType, sourceValue, path, fields) {\n  var results = Object.create(null);\n  var containsPromise = false;\n\n  for (var _i4 = 0, _Object$keys2 = Object.keys(fields); _i4 < _Object$keys2.length; _i4++) {\n    var responseName = _Object$keys2[_i4];\n    var fieldNodes = fields[responseName];\n    var fieldPath = addPath(path, responseName);\n    var result = resolveField(exeContext, parentType, sourceValue, fieldNodes, fieldPath);\n\n    if (result !== undefined) {\n      results[responseName] = result;\n\n      if (!containsPromise && isPromise(result)) {\n        containsPromise = true;\n      }\n    }\n  } // If there are no promises, we can just return the object\n\n\n  if (!containsPromise) {\n    return results;\n  } // Otherwise, results is a map from field name to the result of resolving that\n  // field, which is possibly a promise. Return a promise that will return this\n  // same map, but with any promises replaced with the values they resolved to.\n\n\n  return promiseForObject(results);\n}\n/**\n * Given a selectionSet, adds all of the fields in that selection to\n * the passed in map of fields, and returns it at the end.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field which\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * Object type returned by that field.\n */\n\n\nexport function collectFields(exeContext, runtimeType, selectionSet, fields, visitedFragmentNames) {\n  for (var _i6 = 0, _selectionSet$selecti2 = selectionSet.selections; _i6 < _selectionSet$selecti2.length; _i6++) {\n    var selection = _selectionSet$selecti2[_i6];\n\n    switch (selection.kind) {\n      case Kind.FIELD:\n        {\n          if (!shouldIncludeNode(exeContext, selection)) {\n            continue;\n          }\n\n          var name = getFieldEntryKey(selection);\n\n          if (!fields[name]) {\n            fields[name] = [];\n          }\n\n          fields[name].push(selection);\n          break;\n        }\n\n      case Kind.INLINE_FRAGMENT:\n        {\n          if (!shouldIncludeNode(exeContext, selection) || !doesFragmentConditionMatch(exeContext, selection, runtimeType)) {\n            continue;\n          }\n\n          collectFields(exeContext, runtimeType, selection.selectionSet, fields, visitedFragmentNames);\n          break;\n        }\n\n      case Kind.FRAGMENT_SPREAD:\n        {\n          var fragName = selection.name.value;\n\n          if (visitedFragmentNames[fragName] || !shouldIncludeNode(exeContext, selection)) {\n            continue;\n          }\n\n          visitedFragmentNames[fragName] = true;\n          var fragment = exeContext.fragments[fragName];\n\n          if (!fragment || !doesFragmentConditionMatch(exeContext, fragment, runtimeType)) {\n            continue;\n          }\n\n          collectFields(exeContext, runtimeType, fragment.selectionSet, fields, visitedFragmentNames);\n          break;\n        }\n    }\n  }\n\n  return fields;\n}\n/**\n * Determines if a field should be included based on the @include and @skip\n * directives, where @skip has higher precedence than @include.\n */\n\nfunction shouldIncludeNode(exeContext, node) {\n  var skip = getDirectiveValues(GraphQLSkipDirective, node, exeContext.variableValues);\n\n  if (skip && skip.if === true) {\n    return false;\n  }\n\n  var include = getDirectiveValues(GraphQLIncludeDirective, node, exeContext.variableValues);\n\n  if (include && include.if === false) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\n\n\nfunction doesFragmentConditionMatch(exeContext, fragment, type) {\n  var typeConditionNode = fragment.typeCondition;\n\n  if (!typeConditionNode) {\n    return true;\n  }\n\n  var conditionalType = typeFromAST(exeContext.schema, typeConditionNode);\n\n  if (conditionalType === type) {\n    return true;\n  }\n\n  if (isAbstractType(conditionalType)) {\n    return exeContext.schema.isPossibleType(conditionalType, type);\n  }\n\n  return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\n\n\nfunction getFieldEntryKey(node) {\n  return node.alias ? node.alias.value : node.name.value;\n}\n/**\n * Resolves the field on the given source object. In particular, this\n * figures out the value that the field returns by calling its resolve function,\n * then calls completeValue to complete promises, serialize scalars, or execute\n * the sub-selection-set for objects.\n */\n\n\nfunction resolveField(exeContext, parentType, source, fieldNodes, path) {\n  var fieldNode = fieldNodes[0];\n  var fieldName = fieldNode.name.value;\n  var fieldDef = getFieldDef(exeContext.schema, parentType, fieldName);\n\n  if (!fieldDef) {\n    return;\n  }\n\n  var resolveFn = fieldDef.resolve || exeContext.fieldResolver;\n  var info = buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path); // Get the resolve function, regardless of if its result is normal\n  // or abrupt (error).\n\n  var result = resolveFieldValueOrError(exeContext, fieldDef, fieldNodes, resolveFn, source, info);\n  return completeValueCatchingError(exeContext, fieldDef.type, fieldNodes, info, path, result);\n}\n\nexport function buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path) {\n  // The resolve function's optional fourth argument is a collection of\n  // information about the current execution state.\n  return {\n    fieldName: fieldDef.name,\n    fieldNodes: fieldNodes,\n    returnType: fieldDef.type,\n    parentType: parentType,\n    path: path,\n    schema: exeContext.schema,\n    fragments: exeContext.fragments,\n    rootValue: exeContext.rootValue,\n    operation: exeContext.operation,\n    variableValues: exeContext.variableValues\n  };\n} // Isolates the \"ReturnOrAbrupt\" behavior to not de-opt the `resolveField`\n// function. Returns the result of resolveFn or the abrupt-return Error object.\n\nexport function resolveFieldValueOrError(exeContext, fieldDef, fieldNodes, resolveFn, source, info) {\n  try {\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    // TODO: find a way to memoize, in case this field is within a List type.\n    var args = getArgumentValues(fieldDef, fieldNodes[0], exeContext.variableValues); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    var _contextValue = exeContext.contextValue;\n    var result = resolveFn(source, args, _contextValue, info);\n    return isPromise(result) ? result.then(undefined, asErrorInstance) : result;\n  } catch (error) {\n    return asErrorInstance(error);\n  }\n} // Sometimes a non-error is thrown, wrap it as an Error instance to ensure a\n// consistent Error interface.\n\nfunction asErrorInstance(error) {\n  if (error instanceof Error) {\n    return error;\n  }\n\n  return new Error('Unexpected error value: ' + inspect(error));\n} // This is a small wrapper around completeValue which detects and logs errors\n// in the execution context.\n\n\nfunction completeValueCatchingError(exeContext, returnType, fieldNodes, info, path, result) {\n  try {\n    var completed;\n\n    if (isPromise(result)) {\n      completed = result.then(function (resolved) {\n        return completeValue(exeContext, returnType, fieldNodes, info, path, resolved);\n      });\n    } else {\n      completed = completeValue(exeContext, returnType, fieldNodes, info, path, result);\n    }\n\n    if (isPromise(completed)) {\n      // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n      // to take a second callback for the error case.\n      return completed.then(undefined, function (error) {\n        return handleFieldError(error, fieldNodes, path, returnType, exeContext);\n      });\n    }\n\n    return completed;\n  } catch (error) {\n    return handleFieldError(error, fieldNodes, path, returnType, exeContext);\n  }\n}\n\nfunction handleFieldError(rawError, fieldNodes, path, returnType, exeContext) {\n  var error = locatedError(asErrorInstance(rawError), fieldNodes, pathToArray(path)); // If the field type is non-nullable, then it is resolved without any\n  // protection from errors, however it still properly locates the error.\n\n  if (isNonNullType(returnType)) {\n    throw error;\n  } // Otherwise, error protection is applied, logging the error and resolving\n  // a null value for this field if one is encountered.\n\n\n  exeContext.errors.push(error);\n  return null;\n}\n/**\n * Implements the instructions for completeValue as defined in the\n * \"Field entries\" section of the spec.\n *\n * If the field type is Non-Null, then this recursively completes the value\n * for the inner type. It throws a field error if that completion returns null,\n * as per the \"Nullability\" section of the spec.\n *\n * If the field type is a List, then this recursively completes the value\n * for the inner type on each item in the list.\n *\n * If the field type is a Scalar or Enum, ensures the completed value is a legal\n * value of the type by calling the `serialize` method of GraphQL type\n * definition.\n *\n * If the field is an abstract type, determine the runtime type of the value\n * and then complete based on that type\n *\n * Otherwise, the field type expects a sub-selection set, and will complete the\n * value by evaluating all sub-selections.\n */\n\n\nfunction completeValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If result is an Error, throw a located error.\n  if (result instanceof Error) {\n    throw result;\n  } // If field type is NonNull, complete for inner type, and throw field error\n  // if result is null.\n\n\n  if (isNonNullType(returnType)) {\n    var completed = completeValue(exeContext, returnType.ofType, fieldNodes, info, path, result);\n\n    if (completed === null) {\n      throw new Error(\"Cannot return null for non-nullable field \".concat(info.parentType.name, \".\").concat(info.fieldName, \".\"));\n    }\n\n    return completed;\n  } // If result value is null-ish (null, undefined, or NaN) then return null.\n\n\n  if (isNullish(result)) {\n    return null;\n  } // If field type is List, complete each item in the list with the inner type\n\n\n  if (isListType(returnType)) {\n    return completeListValue(exeContext, returnType, fieldNodes, info, path, result);\n  } // If field type is a leaf type, Scalar or Enum, serialize to a valid value,\n  // returning null if serialization is not possible.\n\n\n  if (isLeafType(returnType)) {\n    return completeLeafValue(returnType, result);\n  } // If field type is an abstract type, Interface or Union, determine the\n  // runtime Object type and complete for that type.\n\n\n  if (isAbstractType(returnType)) {\n    return completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result);\n  } // If field type is Object, execute and complete all sub-selections.\n\n\n  /* istanbul ignore else */\n  if (isObjectType(returnType)) {\n    return completeObjectValue(exeContext, returnType, fieldNodes, info, path, result);\n  } // Not reachable. All possible output types have been considered.\n\n\n  /* istanbul ignore next */\n  invariant(false, 'Cannot complete value of unexpected output type: ' + inspect(returnType));\n}\n/**\n * Complete a list value by completing each item in the list with the\n * inner type\n */\n\n\nfunction completeListValue(exeContext, returnType, fieldNodes, info, path, result) {\n  if (!isCollection(result)) {\n    throw new GraphQLError(\"Expected Iterable, but did not find one for field \".concat(info.parentType.name, \".\").concat(info.fieldName, \".\"));\n  } // This is specified as a simple map, however we're optimizing the path\n  // where the list contains no Promises by avoiding creating another Promise.\n\n\n  var itemType = returnType.ofType;\n  var containsPromise = false;\n  var completedResults = [];\n  forEach(result, function (item, index) {\n    // No need to modify the info object containing the path,\n    // since from here on it is not ever accessed by resolver functions.\n    var fieldPath = addPath(path, index);\n    var completedItem = completeValueCatchingError(exeContext, itemType, fieldNodes, info, fieldPath, item);\n\n    if (!containsPromise && isPromise(completedItem)) {\n      containsPromise = true;\n    }\n\n    completedResults.push(completedItem);\n  });\n  return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n/**\n * Complete a Scalar or Enum by serializing to a valid value, returning\n * null if serialization is not possible.\n */\n\n\nfunction completeLeafValue(returnType, result) {\n  var serializedResult = returnType.serialize(result);\n\n  if (isInvalid(serializedResult)) {\n    throw new Error(\"Expected a value of type \\\"\".concat(inspect(returnType), \"\\\" but \") + \"received: \".concat(inspect(result)));\n  }\n\n  return serializedResult;\n}\n/**\n * Complete a value of an abstract type by determining the runtime object type\n * of that value, then complete the value for that type.\n */\n\n\nfunction completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result) {\n  var resolveTypeFn = returnType.resolveType || exeContext.typeResolver;\n  var contextValue = exeContext.contextValue;\n  var runtimeType = resolveTypeFn(result, contextValue, info, returnType);\n\n  if (isPromise(runtimeType)) {\n    return runtimeType.then(function (resolvedRuntimeType) {\n      return completeObjectValue(exeContext, ensureValidRuntimeType(resolvedRuntimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result);\n    });\n  }\n\n  return completeObjectValue(exeContext, ensureValidRuntimeType(runtimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result);\n}\n\nfunction ensureValidRuntimeType(runtimeTypeOrName, exeContext, returnType, fieldNodes, info, result) {\n  var runtimeType = typeof runtimeTypeOrName === 'string' ? exeContext.schema.getType(runtimeTypeOrName) : runtimeTypeOrName;\n\n  if (!isObjectType(runtimeType)) {\n    throw new GraphQLError(\"Abstract type \".concat(returnType.name, \" must resolve to an Object type at runtime for field \").concat(info.parentType.name, \".\").concat(info.fieldName, \" with \") + \"value \".concat(inspect(result), \", received \\\"\").concat(inspect(runtimeType), \"\\\". \") + \"Either the \".concat(returnType.name, \" type should provide a \\\"resolveType\\\" function or each possible type should provide an \\\"isTypeOf\\\" function.\"), fieldNodes);\n  }\n\n  if (!exeContext.schema.isPossibleType(returnType, runtimeType)) {\n    throw new GraphQLError(\"Runtime Object type \\\"\".concat(runtimeType.name, \"\\\" is not a possible type for \\\"\").concat(returnType.name, \"\\\".\"), fieldNodes);\n  }\n\n  return runtimeType;\n}\n/**\n * Complete an Object value by executing all sub-selections.\n */\n\n\nfunction completeObjectValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If there is an isTypeOf predicate function, call it with the\n  // current result. If isTypeOf returns false, then raise an error rather\n  // than continuing execution.\n  if (returnType.isTypeOf) {\n    var isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);\n\n    if (isPromise(isTypeOf)) {\n      return isTypeOf.then(function (resolvedIsTypeOf) {\n        if (!resolvedIsTypeOf) {\n          throw invalidReturnTypeError(returnType, result, fieldNodes);\n        }\n\n        return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result);\n      });\n    }\n\n    if (!isTypeOf) {\n      throw invalidReturnTypeError(returnType, result, fieldNodes);\n    }\n  }\n\n  return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result);\n}\n\nfunction invalidReturnTypeError(returnType, result, fieldNodes) {\n  return new GraphQLError(\"Expected value of type \\\"\".concat(returnType.name, \"\\\" but got: \").concat(inspect(result), \".\"), fieldNodes);\n}\n\nfunction collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result) {\n  // Collect sub-fields to execute to complete this value.\n  var subFieldNodes = collectSubfields(exeContext, returnType, fieldNodes);\n  return executeFields(exeContext, returnType, result, path, subFieldNodes);\n}\n/**\n * A memoized collection of relevant subfields with regard to the return\n * type. Memoizing ensures the subfields are not repeatedly calculated, which\n * saves overhead when resolving lists of values.\n */\n\n\nvar collectSubfields = memoize3(_collectSubfields);\n\nfunction _collectSubfields(exeContext, returnType, fieldNodes) {\n  var subFieldNodes = Object.create(null);\n  var visitedFragmentNames = Object.create(null);\n\n  for (var _i8 = 0; _i8 < fieldNodes.length; _i8++) {\n    var node = fieldNodes[_i8];\n\n    if (node.selectionSet) {\n      subFieldNodes = collectFields(exeContext, returnType, node.selectionSet, subFieldNodes, visitedFragmentNames);\n    }\n  }\n\n  return subFieldNodes;\n}\n/**\n * If a resolveType function is not given, then a default resolve behavior is\n * used which attempts two strategies:\n *\n * First, See if the provided value has a `__typename` field defined, if so, use\n * that value as name of the resolved type.\n *\n * Otherwise, test each possible type for the abstract type by calling\n * isTypeOf for the object being coerced, returning the first type that matches.\n */\n\n\nexport var defaultTypeResolver = function defaultTypeResolver(value, contextValue, info, abstractType) {\n  // First, look for `__typename`.\n  if (isObjectLike(value) && typeof value.__typename === 'string') {\n    return value.__typename;\n  } // Otherwise, test each possible type.\n\n\n  var possibleTypes = info.schema.getPossibleTypes(abstractType);\n  var promisedIsTypeOfResults = [];\n\n  for (var i = 0; i < possibleTypes.length; i++) {\n    var type = possibleTypes[i];\n\n    if (type.isTypeOf) {\n      var isTypeOfResult = type.isTypeOf(value, contextValue, info);\n\n      if (isPromise(isTypeOfResult)) {\n        promisedIsTypeOfResults[i] = isTypeOfResult;\n      } else if (isTypeOfResult) {\n        return type;\n      }\n    }\n  }\n\n  if (promisedIsTypeOfResults.length) {\n    return Promise.all(promisedIsTypeOfResults).then(function (isTypeOfResults) {\n      for (var _i9 = 0; _i9 < isTypeOfResults.length; _i9++) {\n        if (isTypeOfResults[_i9]) {\n          return possibleTypes[_i9];\n        }\n      }\n    });\n  }\n};\n/**\n * If a resolve function is not given, then a default resolve behavior is used\n * which takes the property of the source object of the same name as the field\n * and returns it as the result, or if it's a function, returns the result\n * of calling that function while passing along args and context value.\n */\n\nexport var defaultFieldResolver = function defaultFieldResolver(source, args, contextValue, info) {\n  // ensure source is a value for which property access is acceptable.\n  if (isObjectLike(source) || typeof source === 'function') {\n    var property = source[info.fieldName];\n\n    if (typeof property === 'function') {\n      return source[info.fieldName](args, contextValue, info);\n    }\n\n    return property;\n  }\n};\n/**\n * This method looks up the field on the given type definition.\n * It has special casing for the two introspection fields, __schema\n * and __typename. __typename is special because it can always be\n * queried as a field, even in situations where no other fields\n * are allowed, like on a Union. __schema could get automatically\n * added to the query type, but that would require mutating type\n * definitions, which would cause issues.\n */\n\nexport function getFieldDef(schema, parentType, fieldName) {\n  if (fieldName === SchemaMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return SchemaMetaFieldDef;\n  } else if (fieldName === TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return TypeMetaFieldDef;\n  } else if (fieldName === TypeNameMetaFieldDef.name) {\n    return TypeNameMetaFieldDef;\n  }\n\n  return parentType.getFields()[fieldName];\n}\n","import isPromise from './jsutils/isPromise';\nimport { parse } from './language/parser';\nimport { validate } from './validation/validate';\nimport { validateSchema } from './type/validate';\nimport { execute } from './execution/execute';\n/**\n * This is the primary entry point function for fulfilling GraphQL operations\n * by parsing, validating, and executing a GraphQL document along side a\n * GraphQL schema.\n *\n * More sophisticated GraphQL servers, such as those which persist queries,\n * may wish to separate the validation and execution phases to a static time\n * tooling step, and a server runtime step.\n *\n * Accepts either an object with named arguments, or individual arguments:\n *\n * schema:\n *    The GraphQL type system to use when validating and executing a query.\n * source:\n *    A GraphQL language formatted string representing the requested operation.\n * rootValue:\n *    The value provided as the first argument to resolver functions on the top\n *    level type (e.g. the query object type).\n * contextValue:\n *    The context value is provided as an argument to resolver functions after\n *    field arguments. It is used to pass shared information useful at any point\n *    during executing this query, for example the currently logged in user and\n *    connections to databases or other services.\n * variableValues:\n *    A mapping of variable name to runtime value to use for all variables\n *    defined in the requestString.\n * operationName:\n *    The name of the operation to use if requestString contains multiple\n *    possible operations. Can be omitted if requestString contains only\n *    one operation.\n * fieldResolver:\n *    A resolver function to use when one is not provided by the schema.\n *    If not provided, the default field resolver is used (which looks for a\n *    value or method on the source value with the field's name).\n * typeResolver:\n *    A type resolver function to use when none is provided by the schema.\n *    If not provided, the default type resolver is used (which looks for a\n *    `__typename` field or alternatively calls the `isTypeOf` method).\n */\n\nexport function graphql(argsOrSchema, source, rootValue, contextValue, variableValues, operationName, fieldResolver, typeResolver) {\n  var _arguments = arguments;\n\n  /* eslint-enable no-redeclare */\n  // Always return a Promise for a consistent API.\n  return new Promise(function (resolve) {\n    return resolve( // Extract arguments from object args if provided.\n    _arguments.length === 1 ? graphqlImpl(argsOrSchema) : graphqlImpl({\n      schema: argsOrSchema,\n      source: source,\n      rootValue: rootValue,\n      contextValue: contextValue,\n      variableValues: variableValues,\n      operationName: operationName,\n      fieldResolver: fieldResolver,\n      typeResolver: typeResolver\n    }));\n  });\n}\n/**\n * The graphqlSync function also fulfills GraphQL operations by parsing,\n * validating, and executing a GraphQL document along side a GraphQL schema.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nexport function graphqlSync(argsOrSchema, source, rootValue, contextValue, variableValues, operationName, fieldResolver, typeResolver) {\n  /* eslint-enable no-redeclare */\n  // Extract arguments from object args if provided.\n  var result = arguments.length === 1 ? graphqlImpl(argsOrSchema) : graphqlImpl({\n    schema: argsOrSchema,\n    source: source,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    variableValues: variableValues,\n    operationName: operationName,\n    fieldResolver: fieldResolver,\n    typeResolver: typeResolver\n  }); // Assert that the execution was synchronous.\n\n  if (isPromise(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n\nfunction graphqlImpl(args) {\n  var schema = args.schema,\n      source = args.source,\n      rootValue = args.rootValue,\n      contextValue = args.contextValue,\n      variableValues = args.variableValues,\n      operationName = args.operationName,\n      fieldResolver = args.fieldResolver,\n      typeResolver = args.typeResolver; // Validate Schema\n\n  var schemaValidationErrors = validateSchema(schema);\n\n  if (schemaValidationErrors.length > 0) {\n    return {\n      errors: schemaValidationErrors\n    };\n  } // Parse\n\n\n  var document;\n\n  try {\n    document = parse(source);\n  } catch (syntaxError) {\n    return {\n      errors: [syntaxError]\n    };\n  } // Validate\n\n\n  var validationErrors = validate(schema, document);\n\n  if (validationErrors.length > 0) {\n    return {\n      errors: validationErrors\n    };\n  } // Execute\n\n\n  return execute({\n    schema: schema,\n    document: document,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    variableValues: variableValues,\n    operationName: operationName,\n    fieldResolver: fieldResolver,\n    typeResolver: typeResolver\n  });\n}\n","export { // Predicate\nisSchema, // Assertion\nassertSchema, // GraphQL Schema definition\nGraphQLSchema } from './schema';\nexport { // Predicates\nisType, isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isListType, isNonNullType, isInputType, isOutputType, isLeafType, isCompositeType, isAbstractType, isWrappingType, isNullableType, isNamedType, isRequiredArgument, isRequiredInputField, // Assertions\nassertType, assertScalarType, assertObjectType, assertInterfaceType, assertUnionType, assertEnumType, assertInputObjectType, assertListType, assertNonNullType, assertInputType, assertOutputType, assertLeafType, assertCompositeType, assertAbstractType, assertWrappingType, assertNullableType, assertNamedType, // Un-modifiers\ngetNullableType, getNamedType, // Definitions\nGraphQLScalarType, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType, // Type Wrappers\nGraphQLList, GraphQLNonNull } from './definition';\nexport { // Predicate\nisDirective, // Assertion\nassertDirective, // Directives Definition\nGraphQLDirective, // Built-in Directives defined by the Spec\nisSpecifiedDirective, specifiedDirectives, GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective, // Constant Deprecation Reason\nDEFAULT_DEPRECATION_REASON } from './directives';\n// Common built-in scalar instances.\nexport { // Predicate\nisSpecifiedScalarType, // Standard GraphQL Scalars\nspecifiedScalarTypes, GraphQLInt, GraphQLFloat, GraphQLString, GraphQLBoolean, GraphQLID } from './scalars';\nexport { // Predicate\nisIntrospectionType, // GraphQL Types for introspection.\nintrospectionTypes, __Schema, __Directive, __DirectiveLocation, __Type, __Field, __InputValue, __EnumValue, __TypeKind, // \"Enum\" of Type Kinds\nTypeKind, // Meta-field definitions.\nSchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef } from './introspection';\n// Validate GraphQL schema.\nexport { validateSchema, assertValidSchema } from './validate';\n","export { Source } from './source';\nexport { getLocation } from './location';\nexport { printLocation, printSourceLocation } from './printLocation';\nexport { Kind } from './kinds';\nexport { TokenKind } from './tokenKind';\nexport { createLexer } from './lexer';\nexport { parse, parseValue, parseType } from './parser';\nexport { print } from './printer';\nexport { visit, visitInParallel, visitWithTypeInfo, getVisitFn, BREAK } from './visitor';\nexport { isDefinitionNode, isExecutableDefinitionNode, isSelectionNode, isValueNode, isTypeNode, isTypeSystemDefinitionNode, isTypeDefinitionNode, isTypeSystemExtensionNode, isTypeExtensionNode } from './predicates';\nexport { DirectiveLocation } from './directiveLocation';\n","export { pathToArray as responsePathAsArray } from '../jsutils/Path';\nexport { execute, defaultFieldResolver, defaultTypeResolver } from './execute';\nexport { getDirectiveValues } from './values';\n","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { $$asyncIterator, getAsyncIterator } from 'iterall';\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nexport default function mapAsyncIterator(iterable, callback, rejectCallback) {\n  var iterator = getAsyncIterator(iterable);\n  var $return;\n  var abruptClose; // $FlowFixMe(>=0.68.0)\n\n  if (typeof iterator.return === 'function') {\n    $return = iterator.return;\n\n    abruptClose = function abruptClose(error) {\n      var rethrow = function rethrow() {\n        return Promise.reject(error);\n      };\n\n      return $return.call(iterator).then(rethrow, rethrow);\n    };\n  }\n\n  function mapResult(result) {\n    return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n  }\n\n  var mapReject;\n\n  if (rejectCallback) {\n    // Capture rejectCallback to ensure it cannot be null.\n    var reject = rejectCallback;\n\n    mapReject = function mapReject(error) {\n      return asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    };\n  }\n  /* TODO: Flow doesn't support symbols as keys:\n     https://github.com/facebook/flow/issues/3258 */\n\n\n  return _defineProperty({\n    next: function next() {\n      return iterator.next().then(mapResult, mapReject);\n    },\n    return: function _return() {\n      return $return ? $return.call(iterator).then(mapResult, mapReject) : Promise.resolve({\n        value: undefined,\n        done: true\n      });\n    },\n    throw: function _throw(error) {\n      // $FlowFixMe(>=0.68.0)\n      if (typeof iterator.throw === 'function') {\n        return iterator.throw(error).then(mapResult, mapReject);\n      }\n\n      return Promise.reject(error).catch(abruptClose);\n    }\n  }, $$asyncIterator, function () {\n    return this;\n  });\n}\n\nfunction asyncMapValue(value, callback) {\n  return new Promise(function (resolve) {\n    return resolve(callback(value));\n  });\n}\n\nfunction iteratorResult(value) {\n  return {\n    value: value,\n    done: false\n  };\n}\n","import { isAsyncIterable } from 'iterall';\nimport inspect from '../jsutils/inspect';\nimport { addPath, pathToArray } from '../jsutils/Path';\nimport { GraphQLError } from '../error/GraphQLError';\nimport { locatedError } from '../error/locatedError';\nimport { assertValidExecutionArguments, buildExecutionContext, buildResolveInfo, collectFields, execute, getFieldDef, resolveFieldValueOrError } from '../execution/execute';\nimport { getOperationRootType } from '../utilities/getOperationRootType';\nimport mapAsyncIterator from './mapAsyncIterator';\nexport function subscribe(argsOrSchema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, subscribeFieldResolver) {\n  /* eslint-enable no-redeclare */\n  // Extract arguments from object args if provided.\n  return arguments.length === 1 ? subscribeImpl(argsOrSchema) : subscribeImpl({\n    schema: argsOrSchema,\n    document: document,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    variableValues: variableValues,\n    operationName: operationName,\n    fieldResolver: fieldResolver,\n    subscribeFieldResolver: subscribeFieldResolver\n  });\n}\n/**\n * This function checks if the error is a GraphQLError. If it is, report it as\n * an ExecutionResult, containing only errors and no data. Otherwise treat the\n * error as a system-class error and re-throw it.\n */\n\nfunction reportGraphQLError(error) {\n  if (error instanceof GraphQLError) {\n    return {\n      errors: [error]\n    };\n  }\n\n  throw error;\n}\n\nfunction subscribeImpl(args) {\n  var schema = args.schema,\n      document = args.document,\n      rootValue = args.rootValue,\n      contextValue = args.contextValue,\n      variableValues = args.variableValues,\n      operationName = args.operationName,\n      fieldResolver = args.fieldResolver,\n      subscribeFieldResolver = args.subscribeFieldResolver;\n  var sourcePromise = createSourceEventStream(schema, document, rootValue, contextValue, variableValues, operationName, subscribeFieldResolver); // For each payload yielded from a subscription, map it over the normal\n  // GraphQL `execute` function, with `payload` as the rootValue.\n  // This implements the \"MapSourceToResponseEvent\" algorithm described in\n  // the GraphQL specification. The `execute` function provides the\n  // \"ExecuteSubscriptionEvent\" algorithm, as it is nearly identical to the\n  // \"ExecuteQuery\" algorithm, for which `execute` is also used.\n\n  var mapSourceToResponse = function mapSourceToResponse(payload) {\n    return execute(schema, document, payload, contextValue, variableValues, operationName, fieldResolver);\n  }; // Resolve the Source Stream, then map every source value to a\n  // ExecutionResult value as described above.\n\n\n  return sourcePromise.then(function (resultOrStream) {\n    return (// Note: Flow can't refine isAsyncIterable, so explicit casts are used.\n      isAsyncIterable(resultOrStream) ? mapAsyncIterator(resultOrStream, mapSourceToResponse, reportGraphQLError) : resultOrStream\n    );\n  });\n}\n/**\n * Implements the \"CreateSourceEventStream\" algorithm described in the\n * GraphQL specification, resolving the subscription source event stream.\n *\n * Returns a Promise which resolves to either an AsyncIterable (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to the AsyncIterable for the\n * event stream returned by the resolver.\n *\n * A Source Event Stream represents a sequence of events, each of which triggers\n * a GraphQL execution for that event.\n *\n * This may be useful when hosting the stateful subscription service in a\n * different process or machine than the stateless GraphQL execution engine,\n * or otherwise separating these two steps. For more on this, see the\n * \"Supporting Subscriptions at Scale\" information in the GraphQL specification.\n */\n\n\nexport function createSourceEventStream(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  // If arguments are missing or incorrectly typed, this is an internal\n  // developer mistake which should throw an early error.\n  assertValidExecutionArguments(schema, document, variableValues);\n\n  try {\n    // If a valid context cannot be created due to incorrect arguments,\n    // this will throw an error.\n    var exeContext = buildExecutionContext(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver); // Return early errors if execution context failed.\n\n    if (Array.isArray(exeContext)) {\n      return Promise.resolve({\n        errors: exeContext\n      });\n    }\n\n    var type = getOperationRootType(schema, exeContext.operation);\n    var fields = collectFields(exeContext, type, exeContext.operation.selectionSet, Object.create(null), Object.create(null));\n    var responseNames = Object.keys(fields);\n    var responseName = responseNames[0];\n    var fieldNodes = fields[responseName];\n    var fieldNode = fieldNodes[0];\n    var fieldName = fieldNode.name.value;\n    var fieldDef = getFieldDef(schema, type, fieldName);\n\n    if (!fieldDef) {\n      throw new GraphQLError(\"The subscription field \\\"\".concat(fieldName, \"\\\" is not defined.\"), fieldNodes);\n    } // Call the `subscribe()` resolver or the default resolver to produce an\n    // AsyncIterable yielding raw payloads.\n\n\n    var resolveFn = fieldDef.subscribe || exeContext.fieldResolver;\n    var path = addPath(undefined, responseName);\n    var info = buildResolveInfo(exeContext, fieldDef, fieldNodes, type, path); // resolveFieldValueOrError implements the \"ResolveFieldEventStream\"\n    // algorithm from GraphQL specification. It differs from\n    // \"ResolveFieldValue\" due to providing a different `resolveFn`.\n\n    var result = resolveFieldValueOrError(exeContext, fieldDef, fieldNodes, resolveFn, rootValue, info); // Coerce to Promise for easier error handling and consistent return type.\n\n    return Promise.resolve(result).then(function (eventStream) {\n      // If eventStream is an Error, rethrow a located error.\n      if (eventStream instanceof Error) {\n        return {\n          errors: [locatedError(eventStream, fieldNodes, pathToArray(path))]\n        };\n      } // Assert field returned an event stream, otherwise yield an error.\n\n\n      if (isAsyncIterable(eventStream)) {\n        // Note: isAsyncIterable above ensures this will be correct.\n        return eventStream;\n      }\n\n      throw new Error('Subscription field must return Async Iterable. Received: ' + inspect(eventStream));\n    });\n  } catch (error) {\n    // As with reportGraphQLError above, if the error is a GraphQLError, report\n    // it as an ExecutionResult; otherwise treat it as a system-class error and\n    // re-throw it.\n    return error instanceof GraphQLError ? Promise.resolve({\n      errors: [error]\n    }) : Promise.reject(error);\n  }\n}\n","export { subscribe, createSourceEventStream } from './subscribe';\n","export { validate } from './validate';\nexport { ValidationContext } from './ValidationContext';\n// All validation rules in the GraphQL Specification.\nexport { specifiedRules } from './specifiedRules'; // Spec Section: \"Executable Definitions\"\n\nexport { ExecutableDefinitions as ExecutableDefinitionsRule } from './rules/ExecutableDefinitions'; // Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\nexport { FieldsOnCorrectType as FieldsOnCorrectTypeRule } from './rules/FieldsOnCorrectType'; // Spec Section: \"Fragments on Composite Types\"\n\nexport { FragmentsOnCompositeTypes as FragmentsOnCompositeTypesRule } from './rules/FragmentsOnCompositeTypes'; // Spec Section: \"Argument Names\"\n\nexport { KnownArgumentNames as KnownArgumentNamesRule } from './rules/KnownArgumentNames'; // Spec Section: \"Directives Are Defined\"\n\nexport { KnownDirectives as KnownDirectivesRule } from './rules/KnownDirectives'; // Spec Section: \"Fragment spread target defined\"\n\nexport { KnownFragmentNames as KnownFragmentNamesRule } from './rules/KnownFragmentNames'; // Spec Section: \"Fragment Spread Type Existence\"\n\nexport { KnownTypeNames as KnownTypeNamesRule } from './rules/KnownTypeNames'; // Spec Section: \"Lone Anonymous Operation\"\n\nexport { LoneAnonymousOperation as LoneAnonymousOperationRule } from './rules/LoneAnonymousOperation'; // Spec Section: \"Fragments must not form cycles\"\n\nexport { NoFragmentCycles as NoFragmentCyclesRule } from './rules/NoFragmentCycles'; // Spec Section: \"All Variable Used Defined\"\n\nexport { NoUndefinedVariables as NoUndefinedVariablesRule } from './rules/NoUndefinedVariables'; // Spec Section: \"Fragments must be used\"\n\nexport { NoUnusedFragments as NoUnusedFragmentsRule } from './rules/NoUnusedFragments'; // Spec Section: \"All Variables Used\"\n\nexport { NoUnusedVariables as NoUnusedVariablesRule } from './rules/NoUnusedVariables'; // Spec Section: \"Field Selection Merging\"\n\nexport { OverlappingFieldsCanBeMerged as OverlappingFieldsCanBeMergedRule } from './rules/OverlappingFieldsCanBeMerged'; // Spec Section: \"Fragment spread is possible\"\n\nexport { PossibleFragmentSpreads as PossibleFragmentSpreadsRule } from './rules/PossibleFragmentSpreads'; // Spec Section: \"Argument Optionality\"\n\nexport { ProvidedRequiredArguments as ProvidedRequiredArgumentsRule } from './rules/ProvidedRequiredArguments'; // Spec Section: \"Leaf Field Selections\"\n\nexport { ScalarLeafs as ScalarLeafsRule } from './rules/ScalarLeafs'; // Spec Section: \"Subscriptions with Single Root Field\"\n\nexport { SingleFieldSubscriptions as SingleFieldSubscriptionsRule } from './rules/SingleFieldSubscriptions'; // Spec Section: \"Argument Uniqueness\"\n\nexport { UniqueArgumentNames as UniqueArgumentNamesRule } from './rules/UniqueArgumentNames'; // Spec Section: \"Directives Are Unique Per Location\"\n\nexport { UniqueDirectivesPerLocation as UniqueDirectivesPerLocationRule } from './rules/UniqueDirectivesPerLocation'; // Spec Section: \"Fragment Name Uniqueness\"\n\nexport { UniqueFragmentNames as UniqueFragmentNamesRule } from './rules/UniqueFragmentNames'; // Spec Section: \"Input Object Field Uniqueness\"\n\nexport { UniqueInputFieldNames as UniqueInputFieldNamesRule } from './rules/UniqueInputFieldNames'; // Spec Section: \"Operation Name Uniqueness\"\n\nexport { UniqueOperationNames as UniqueOperationNamesRule } from './rules/UniqueOperationNames'; // Spec Section: \"Variable Uniqueness\"\n\nexport { UniqueVariableNames as UniqueVariableNamesRule } from './rules/UniqueVariableNames'; // Spec Section: \"Values Type Correctness\"\n\nexport { ValuesOfCorrectType as ValuesOfCorrectTypeRule } from './rules/ValuesOfCorrectType'; // Spec Section: \"Variables are Input Types\"\n\nexport { VariablesAreInputTypes as VariablesAreInputTypesRule } from './rules/VariablesAreInputTypes'; // Spec Section: \"All Variable Usages Are Allowed\"\n\nexport { VariablesInAllowedPosition as VariablesInAllowedPositionRule } from './rules/VariablesInAllowedPosition'; // SDL-specific validation rules\n\nexport { LoneSchemaDefinition as LoneSchemaDefinitionRule } from './rules/LoneSchemaDefinition';\nexport { UniqueOperationTypes as UniqueOperationTypesRule } from './rules/UniqueOperationTypes';\nexport { UniqueTypeNames as UniqueTypeNamesRule } from './rules/UniqueTypeNames';\nexport { UniqueEnumValueNames as UniqueEnumValueNamesRule } from './rules/UniqueEnumValueNames';\nexport { UniqueFieldDefinitionNames as UniqueFieldDefinitionNamesRule } from './rules/UniqueFieldDefinitionNames';\nexport { UniqueDirectiveNames as UniqueDirectiveNamesRule } from './rules/UniqueDirectiveNames';\nexport { PossibleTypeExtensions as PossibleTypeExtensionsRule } from './rules/PossibleTypeExtensions';\n","import devAssert from '../jsutils/devAssert';\n\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n */\nexport function formatError(error) {\n  error || devAssert(0, 'Received null or undefined error.');\n  var message = error.message || 'An unknown error occurred.';\n  var locations = error.locations;\n  var path = error.path;\n  var extensions = error.extensions;\n  return extensions ? {\n    message: message,\n    locations: locations,\n    path: path,\n    extensions: extensions\n  } : {\n    message: message,\n    locations: locations,\n    path: path\n  };\n}\n/**\n * @see https://github.com/graphql/graphql-spec/blob/master/spec/Section%207%20--%20Response.md#errors\n */\n","export { GraphQLError, printError } from './GraphQLError';\nexport { syntaxError } from './syntaxError';\nexport { locatedError } from './locatedError';\nexport { formatError } from './formatError';\n","export function getIntrospectionQuery(options) {\n  var descriptions = !(options && options.descriptions === false);\n  return \"\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          \".concat(descriptions ? 'description' : '', \"\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      \").concat(descriptions ? 'description' : '', \"\\n      fields(includeDeprecated: true) {\\n        name\\n        \").concat(descriptions ? 'description' : '', \"\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        \").concat(descriptions ? 'description' : '', \"\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      \").concat(descriptions ? 'description' : '', \"\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \");\n}\n/**\n * Deprecated, call getIntrospectionQuery directly.\n *\n * This function will be removed in v15\n */\n\nexport var introspectionQuery = getIntrospectionQuery();\n","import { Kind } from '../language/kinds';\n\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\nexport function getOperationAST(documentAST, operationName) {\n  var operation = null;\n\n  for (var _i2 = 0, _documentAST$definiti2 = documentAST.definitions; _i2 < _documentAST$definiti2.length; _i2++) {\n    var definition = _documentAST$definiti2[_i2];\n\n    if (definition.kind === Kind.OPERATION_DEFINITION) {\n      if (!operationName) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n\n        operation = definition;\n      } else if (definition.name && definition.name.value === operationName) {\n        return definition;\n      }\n    }\n  }\n\n  return operation;\n}\n","import invariant from '../jsutils/invariant';\nimport isPromise from '../jsutils/isPromise';\nimport { parse } from '../language/parser';\nimport { execute } from '../execution/execute';\nimport { getIntrospectionQuery } from './introspectionQuery';\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\n\nexport function introspectionFromSchema(schema, options) {\n  var queryAST = parse(getIntrospectionQuery(options));\n  var result = execute(schema, queryAST);\n\n  /* istanbul ignore next */\n  !isPromise(result) && !result.errors && result.data || invariant(0);\n  return result.data;\n}\n","import objectValues from '../polyfills/objectValues';\nimport inspect from '../jsutils/inspect';\nimport devAssert from '../jsutils/devAssert';\nimport keyValMap from '../jsutils/keyValMap';\nimport isObjectLike from '../jsutils/isObjectLike';\nimport { parseValue } from '../language/parser';\nimport { GraphQLDirective } from '../type/directives';\nimport { specifiedScalarTypes } from '../type/scalars';\nimport { introspectionTypes, TypeKind } from '../type/introspection';\nimport { GraphQLSchema } from '../type/schema';\nimport { isInputType, isOutputType, GraphQLScalarType, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLNonNull, assertNullableType, assertObjectType, assertInterfaceType } from '../type/definition';\nimport { valueFromAST } from './valueFromAST';\n\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n *\n * This function expects a complete introspection result. Don't forget to check\n * the \"errors\" field of a server response before calling this function.\n */\nexport function buildClientSchema(introspection, options) {\n  isObjectLike(introspection) && isObjectLike(introspection.__schema) || devAssert(0, 'Invalid or incomplete introspection result. Ensure that you are passing \"data\" property of introspection response and no \"errors\" was returned alongside: ' + inspect(introspection)); // Get the schema from the introspection result.\n\n  var schemaIntrospection = introspection.__schema; // Iterate through all types, getting the type definition for each.\n\n  var typeMap = keyValMap(schemaIntrospection.types, function (typeIntrospection) {\n    return typeIntrospection.name;\n  }, function (typeIntrospection) {\n    return buildType(typeIntrospection);\n  });\n\n  for (var _i2 = 0, _ref2 = [].concat(specifiedScalarTypes, introspectionTypes); _i2 < _ref2.length; _i2++) {\n    var stdType = _ref2[_i2];\n\n    if (typeMap[stdType.name]) {\n      typeMap[stdType.name] = stdType;\n    }\n  } // Get the root Query, Mutation, and Subscription types.\n\n\n  var queryType = schemaIntrospection.queryType ? getObjectType(schemaIntrospection.queryType) : null;\n  var mutationType = schemaIntrospection.mutationType ? getObjectType(schemaIntrospection.mutationType) : null;\n  var subscriptionType = schemaIntrospection.subscriptionType ? getObjectType(schemaIntrospection.subscriptionType) : null; // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n\n  var directives = schemaIntrospection.directives ? schemaIntrospection.directives.map(buildDirective) : []; // Then produce and return a Schema with these types.\n\n  return new GraphQLSchema({\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: objectValues(typeMap),\n    directives: directives,\n    assumeValid: options && options.assumeValid,\n    allowedLegacyNames: options && options.allowedLegacyNames\n  }); // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n\n  function getType(typeRef) {\n    if (typeRef.kind === TypeKind.LIST) {\n      var itemRef = typeRef.ofType;\n\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      return GraphQLList(getType(itemRef));\n    }\n\n    if (typeRef.kind === TypeKind.NON_NULL) {\n      var nullableRef = typeRef.ofType;\n\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      var nullableType = getType(nullableRef);\n      return GraphQLNonNull(assertNullableType(nullableType));\n    }\n\n    if (!typeRef.name) {\n      throw new Error('Unknown type reference: ' + inspect(typeRef));\n    }\n\n    return getNamedType(typeRef.name);\n  }\n\n  function getNamedType(typeName) {\n    var type = typeMap[typeName];\n\n    if (!type) {\n      throw new Error(\"Invalid or incomplete schema, unknown type: \".concat(typeName, \". Ensure that a full introspection query is used in order to build a client schema.\"));\n    }\n\n    return type;\n  }\n\n  function getInputType(typeRef) {\n    var type = getType(typeRef);\n\n    if (isInputType(type)) {\n      return type;\n    }\n\n    throw new Error('Introspection must provide input type for arguments, but received: ' + inspect(type) + '.');\n  }\n\n  function getOutputType(typeRef) {\n    var type = getType(typeRef);\n\n    if (isOutputType(type)) {\n      return type;\n    }\n\n    throw new Error('Introspection must provide output type for fields, but received: ' + inspect(type) + '.');\n  }\n\n  function getObjectType(typeRef) {\n    var type = getType(typeRef);\n    return assertObjectType(type);\n  }\n\n  function getInterfaceType(typeRef) {\n    var type = getType(typeRef);\n    return assertInterfaceType(type);\n  } // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n\n\n  function buildType(type) {\n    if (type && type.name && type.kind) {\n      switch (type.kind) {\n        case TypeKind.SCALAR:\n          return buildScalarDef(type);\n\n        case TypeKind.OBJECT:\n          return buildObjectDef(type);\n\n        case TypeKind.INTERFACE:\n          return buildInterfaceDef(type);\n\n        case TypeKind.UNION:\n          return buildUnionDef(type);\n\n        case TypeKind.ENUM:\n          return buildEnumDef(type);\n\n        case TypeKind.INPUT_OBJECT:\n          return buildInputObjectDef(type);\n      }\n    }\n\n    throw new Error('Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema:' + inspect(type));\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description\n    });\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    if (!objectIntrospection.interfaces) {\n      throw new Error('Introspection result missing interfaces: ' + inspect(objectIntrospection));\n    }\n\n    return new GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: function interfaces() {\n        return objectIntrospection.interfaces.map(getInterfaceType);\n      },\n      fields: function fields() {\n        return buildFieldDefMap(objectIntrospection);\n      }\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      fields: function fields() {\n        return buildFieldDefMap(interfaceIntrospection);\n      }\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    if (!unionIntrospection.possibleTypes) {\n      throw new Error('Introspection result missing possibleTypes: ' + inspect(unionIntrospection));\n    }\n\n    return new GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: function types() {\n        return unionIntrospection.possibleTypes.map(getObjectType);\n      }\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    if (!enumIntrospection.enumValues) {\n      throw new Error('Introspection result missing enumValues: ' + inspect(enumIntrospection));\n    }\n\n    return new GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: keyValMap(enumIntrospection.enumValues, function (valueIntrospection) {\n        return valueIntrospection.name;\n      }, function (valueIntrospection) {\n        return {\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason\n        };\n      })\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    if (!inputObjectIntrospection.inputFields) {\n      throw new Error('Introspection result missing inputFields: ' + inspect(inputObjectIntrospection));\n    }\n\n    return new GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: function fields() {\n        return buildInputValueDefMap(inputObjectIntrospection.inputFields);\n      }\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    if (!typeIntrospection.fields) {\n      throw new Error('Introspection result missing fields: ' + inspect(typeIntrospection));\n    }\n\n    return keyValMap(typeIntrospection.fields, function (fieldIntrospection) {\n      return fieldIntrospection.name;\n    }, function (fieldIntrospection) {\n      if (!fieldIntrospection.args) {\n        throw new Error('Introspection result missing field args: ' + inspect(fieldIntrospection));\n      }\n\n      return {\n        description: fieldIntrospection.description,\n        deprecationReason: fieldIntrospection.deprecationReason,\n        type: getOutputType(fieldIntrospection.type),\n        args: buildInputValueDefMap(fieldIntrospection.args)\n      };\n    });\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return keyValMap(inputValueIntrospections, function (inputValue) {\n      return inputValue.name;\n    }, buildInputValue);\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    var type = getInputType(inputValueIntrospection.type);\n    var defaultValue = inputValueIntrospection.defaultValue ? valueFromAST(parseValue(inputValueIntrospection.defaultValue), type) : undefined;\n    return {\n      description: inputValueIntrospection.description,\n      type: type,\n      defaultValue: defaultValue\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    if (!directiveIntrospection.args) {\n      throw new Error('Introspection result missing directive args: ' + inspect(directiveIntrospection));\n    }\n\n    if (!directiveIntrospection.locations) {\n      throw new Error('Introspection result missing directive locations: ' + inspect(directiveIntrospection));\n    }\n\n    return new GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      locations: directiveIntrospection.locations.slice(),\n      args: buildInputValueDefMap(directiveIntrospection.args)\n    });\n  }\n}\n","/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n */\nexport function dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(lines);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.join('\\n');\n} // @internal\n\nexport function getBlockStringIndentation(lines) {\n  var commonIndent = null;\n\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    if (commonIndent === null || indent < commonIndent) {\n      commonIndent = indent;\n\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  return commonIndent === null ? 0 : commonIndent;\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\n\n\nexport function printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n","import objectValues from '../polyfills/objectValues';\nimport keyMap from '../jsutils/keyMap';\nimport inspect from '../jsutils/inspect';\nimport invariant from '../jsutils/invariant';\nimport devAssert from '../jsutils/devAssert';\nimport keyValMap from '../jsutils/keyValMap';\nimport { Kind } from '../language/kinds';\nimport { TokenKind } from '../language/tokenKind';\nimport { parse } from '../language/parser';\nimport { isTypeDefinitionNode } from '../language/predicates';\nimport { dedentBlockStringValue } from '../language/blockString';\nimport { assertValidSDL } from '../validation/validate';\nimport { getDirectiveValues } from '../execution/values';\nimport { specifiedScalarTypes } from '../type/scalars';\nimport { introspectionTypes } from '../type/introspection';\nimport { GraphQLSchema } from '../type/schema';\nimport { GraphQLDirective, GraphQLSkipDirective, GraphQLIncludeDirective, GraphQLDeprecatedDirective } from '../type/directives';\nimport { GraphQLScalarType, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLNonNull } from '../type/definition';\nimport { valueFromAST } from './valueFromAST';\n\n/**\n * This takes the ast of a schema document produced by the parse function in\n * src/language/parser.js.\n *\n * If no schema definition is provided, then it will look for types named Query\n * and Mutation.\n *\n * Given that AST it constructs a GraphQLSchema. The resulting schema\n * has no resolve methods, so execution will use default resolvers.\n *\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nexport function buildASTSchema(documentAST, options) {\n  documentAST && documentAST.kind === Kind.DOCUMENT || devAssert(0, 'Must provide valid Document AST');\n\n  if (!options || !(options.assumeValid || options.assumeValidSDL)) {\n    assertValidSDL(documentAST);\n  }\n\n  var schemaDef;\n  var typeDefs = [];\n  var directiveDefs = [];\n\n  for (var _i2 = 0, _documentAST$definiti2 = documentAST.definitions; _i2 < _documentAST$definiti2.length; _i2++) {\n    var def = _documentAST$definiti2[_i2];\n\n    if (def.kind === Kind.SCHEMA_DEFINITION) {\n      schemaDef = def;\n    } else if (isTypeDefinitionNode(def)) {\n      typeDefs.push(def);\n    } else if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      directiveDefs.push(def);\n    }\n  }\n\n  var astBuilder = new ASTDefinitionBuilder(options, function (typeName) {\n    var type = typeMap[typeName];\n\n    if (type === undefined) {\n      throw new Error(\"Type \\\"\".concat(typeName, \"\\\" not found in document.\"));\n    }\n\n    return type;\n  });\n  var typeMap = keyByNameNode(typeDefs, function (node) {\n    return astBuilder.buildType(node);\n  });\n  var operationTypes = schemaDef ? getOperationTypes(schemaDef) : {\n    query: 'Query',\n    mutation: 'Mutation',\n    subscription: 'Subscription'\n  };\n  var directives = directiveDefs.map(function (def) {\n    return astBuilder.buildDirective(def);\n  }); // If specified directives were not explicitly declared, add them.\n\n  if (!directives.some(function (directive) {\n    return directive.name === 'skip';\n  })) {\n    directives.push(GraphQLSkipDirective);\n  }\n\n  if (!directives.some(function (directive) {\n    return directive.name === 'include';\n  })) {\n    directives.push(GraphQLIncludeDirective);\n  }\n\n  if (!directives.some(function (directive) {\n    return directive.name === 'deprecated';\n  })) {\n    directives.push(GraphQLDeprecatedDirective);\n  }\n\n  return new GraphQLSchema({\n    // Note: While this could make early assertions to get the correctly\n    // typed values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    query: operationTypes.query ? typeMap[operationTypes.query] : null,\n    mutation: operationTypes.mutation ? typeMap[operationTypes.mutation] : null,\n    subscription: operationTypes.subscription ? typeMap[operationTypes.subscription] : null,\n    types: objectValues(typeMap),\n    directives: directives,\n    astNode: schemaDef,\n    assumeValid: options && options.assumeValid,\n    allowedLegacyNames: options && options.allowedLegacyNames\n  });\n\n  function getOperationTypes(schema) {\n    var opTypes = {};\n\n    for (var _i4 = 0, _schema$operationType2 = schema.operationTypes; _i4 < _schema$operationType2.length; _i4++) {\n      var operationType = _schema$operationType2[_i4];\n      opTypes[operationType.operation] = operationType.type.name.value;\n    }\n\n    return opTypes;\n  }\n}\nvar stdTypeMap = keyMap(specifiedScalarTypes.concat(introspectionTypes), function (type) {\n  return type.name;\n});\nexport var ASTDefinitionBuilder =\n/*#__PURE__*/\nfunction () {\n  function ASTDefinitionBuilder(options, resolveType) {\n    this._options = options;\n    this._resolveType = resolveType;\n  }\n\n  var _proto = ASTDefinitionBuilder.prototype;\n\n  _proto.getNamedType = function getNamedType(node) {\n    var name = node.name.value;\n    return stdTypeMap[name] || this._resolveType(name);\n  };\n\n  _proto.getWrappedType = function getWrappedType(node) {\n    if (node.kind === Kind.LIST_TYPE) {\n      return new GraphQLList(this.getWrappedType(node.type));\n    }\n\n    if (node.kind === Kind.NON_NULL_TYPE) {\n      return new GraphQLNonNull(this.getWrappedType(node.type));\n    }\n\n    return this.getNamedType(node);\n  };\n\n  _proto.buildDirective = function buildDirective(directive) {\n    var _this = this;\n\n    var locations = directive.locations.map(function (_ref) {\n      var value = _ref.value;\n      return value;\n    });\n    return new GraphQLDirective({\n      name: directive.name.value,\n      description: getDescription(directive, this._options),\n      locations: locations,\n      isRepeatable: directive.repeatable,\n      args: keyByNameNode(directive.arguments || [], function (arg) {\n        return _this.buildArg(arg);\n      }),\n      astNode: directive\n    });\n  };\n\n  _proto.buildField = function buildField(field) {\n    var _this2 = this;\n\n    return {\n      // Note: While this could make assertions to get the correctly typed\n      // value, that would throw immediately while type system validation\n      // with validateSchema() will produce more actionable results.\n      type: this.getWrappedType(field.type),\n      description: getDescription(field, this._options),\n      args: keyByNameNode(field.arguments || [], function (arg) {\n        return _this2.buildArg(arg);\n      }),\n      deprecationReason: getDeprecationReason(field),\n      astNode: field\n    };\n  };\n\n  _proto.buildArg = function buildArg(value) {\n    // Note: While this could make assertions to get the correctly typed\n    // value, that would throw immediately while type system validation\n    // with validateSchema() will produce more actionable results.\n    var type = this.getWrappedType(value.type);\n    return {\n      type: type,\n      description: getDescription(value, this._options),\n      defaultValue: valueFromAST(value.defaultValue, type),\n      astNode: value\n    };\n  };\n\n  _proto.buildInputField = function buildInputField(value) {\n    // Note: While this could make assertions to get the correctly typed\n    // value, that would throw immediately while type system validation\n    // with validateSchema() will produce more actionable results.\n    var type = this.getWrappedType(value.type);\n    return {\n      type: type,\n      description: getDescription(value, this._options),\n      defaultValue: valueFromAST(value.defaultValue, type),\n      astNode: value\n    };\n  };\n\n  _proto.buildEnumValue = function buildEnumValue(value) {\n    return {\n      description: getDescription(value, this._options),\n      deprecationReason: getDeprecationReason(value),\n      astNode: value\n    };\n  };\n\n  _proto.buildType = function buildType(astNode) {\n    var name = astNode.name.value;\n\n    if (stdTypeMap[name]) {\n      return stdTypeMap[name];\n    }\n\n    switch (astNode.kind) {\n      case Kind.OBJECT_TYPE_DEFINITION:\n        return this._makeTypeDef(astNode);\n\n      case Kind.INTERFACE_TYPE_DEFINITION:\n        return this._makeInterfaceDef(astNode);\n\n      case Kind.ENUM_TYPE_DEFINITION:\n        return this._makeEnumDef(astNode);\n\n      case Kind.UNION_TYPE_DEFINITION:\n        return this._makeUnionDef(astNode);\n\n      case Kind.SCALAR_TYPE_DEFINITION:\n        return this._makeScalarDef(astNode);\n\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n        return this._makeInputObjectDef(astNode);\n    } // Not reachable. All possible type definition nodes have been considered.\n\n\n    /* istanbul ignore next */\n    invariant(false, 'Unexpected type definition node: ' + inspect(astNode));\n  };\n\n  _proto._makeTypeDef = function _makeTypeDef(astNode) {\n    var _this3 = this;\n\n    var interfaceNodes = astNode.interfaces;\n    var fieldNodes = astNode.fields; // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n\n    var interfaces = interfaceNodes && interfaceNodes.length > 0 ? function () {\n      return interfaceNodes.map(function (ref) {\n        return _this3.getNamedType(ref);\n      });\n    } : [];\n    var fields = fieldNodes && fieldNodes.length > 0 ? function () {\n      return keyByNameNode(fieldNodes, function (field) {\n        return _this3.buildField(field);\n      });\n    } : Object.create(null);\n    return new GraphQLObjectType({\n      name: astNode.name.value,\n      description: getDescription(astNode, this._options),\n      interfaces: interfaces,\n      fields: fields,\n      astNode: astNode\n    });\n  };\n\n  _proto._makeInterfaceDef = function _makeInterfaceDef(astNode) {\n    var _this4 = this;\n\n    var fieldNodes = astNode.fields;\n    var fields = fieldNodes && fieldNodes.length > 0 ? function () {\n      return keyByNameNode(fieldNodes, function (field) {\n        return _this4.buildField(field);\n      });\n    } : Object.create(null);\n    return new GraphQLInterfaceType({\n      name: astNode.name.value,\n      description: getDescription(astNode, this._options),\n      fields: fields,\n      astNode: astNode\n    });\n  };\n\n  _proto._makeEnumDef = function _makeEnumDef(astNode) {\n    var _this5 = this;\n\n    var valueNodes = astNode.values || [];\n    return new GraphQLEnumType({\n      name: astNode.name.value,\n      description: getDescription(astNode, this._options),\n      values: keyByNameNode(valueNodes, function (value) {\n        return _this5.buildEnumValue(value);\n      }),\n      astNode: astNode\n    });\n  };\n\n  _proto._makeUnionDef = function _makeUnionDef(astNode) {\n    var _this6 = this;\n\n    var typeNodes = astNode.types; // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n\n    var types = typeNodes && typeNodes.length > 0 ? function () {\n      return typeNodes.map(function (ref) {\n        return _this6.getNamedType(ref);\n      });\n    } : [];\n    return new GraphQLUnionType({\n      name: astNode.name.value,\n      description: getDescription(astNode, this._options),\n      types: types,\n      astNode: astNode\n    });\n  };\n\n  _proto._makeScalarDef = function _makeScalarDef(astNode) {\n    return new GraphQLScalarType({\n      name: astNode.name.value,\n      description: getDescription(astNode, this._options),\n      astNode: astNode\n    });\n  };\n\n  _proto._makeInputObjectDef = function _makeInputObjectDef(def) {\n    var _this7 = this;\n\n    var fields = def.fields;\n    return new GraphQLInputObjectType({\n      name: def.name.value,\n      description: getDescription(def, this._options),\n      fields: fields ? function () {\n        return keyByNameNode(fields, function (field) {\n          return _this7.buildInputField(field);\n        });\n      } : Object.create(null),\n      astNode: def\n    });\n  };\n\n  return ASTDefinitionBuilder;\n}();\n\nfunction keyByNameNode(list, valFn) {\n  return keyValMap(list, function (_ref2) {\n    var name = _ref2.name;\n    return name.value;\n  }, valFn);\n}\n/**\n * Given a field or enum value node, returns the string value for the\n * deprecation reason.\n */\n\n\nfunction getDeprecationReason(node) {\n  var deprecated = getDirectiveValues(GraphQLDeprecatedDirective, node);\n  return deprecated && deprecated.reason;\n}\n/**\n * Given an ast node, returns its string description.\n * @deprecated: provided to ease adoption and will be removed in v16.\n *\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\n\n\nexport function getDescription(node, options) {\n  if (node.description) {\n    return node.description.value;\n  }\n\n  if (options && options.commentDescriptions) {\n    var rawValue = getLeadingCommentBlock(node);\n\n    if (rawValue !== undefined) {\n      return dedentBlockStringValue('\\n' + rawValue);\n    }\n  }\n}\n\nfunction getLeadingCommentBlock(node) {\n  var loc = node.loc;\n\n  if (!loc) {\n    return;\n  }\n\n  var comments = [];\n  var token = loc.startToken.prev;\n\n  while (token && token.kind === TokenKind.COMMENT && token.next && token.prev && token.line + 1 === token.next.line && token.line !== token.prev.line) {\n    var value = String(token.value);\n    comments.push(value);\n    token = token.prev;\n  }\n\n  return comments.reverse().join('\\n');\n}\n/**\n * A helper function to build a GraphQLSchema directly from a source\n * document.\n */\n\n\nexport function buildSchema(source, options) {\n  return buildASTSchema(parse(source, options), options);\n}\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport flatMap from '../polyfills/flatMap';\nimport objectValues from '../polyfills/objectValues';\nimport inspect from '../jsutils/inspect';\nimport mapValue from '../jsutils/mapValue';\nimport invariant from '../jsutils/invariant';\nimport devAssert from '../jsutils/devAssert';\nimport keyValMap from '../jsutils/keyValMap';\nimport { Kind } from '../language/kinds';\nimport { isTypeDefinitionNode, isTypeExtensionNode } from '../language/predicates';\nimport { assertValidSDLExtension } from '../validation/validate';\nimport { GraphQLDirective } from '../type/directives';\nimport { isSpecifiedScalarType } from '../type/scalars';\nimport { isIntrospectionType } from '../type/introspection';\nimport { assertSchema, GraphQLSchema } from '../type/schema';\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isListType, isNonNullType, isEnumType, isInputObjectType, GraphQLList, GraphQLNonNull, GraphQLScalarType, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType } from '../type/definition';\nimport { ASTDefinitionBuilder } from './buildASTSchema';\n\n/**\n * Produces a new schema given an existing schema and a document which may\n * contain GraphQL type extensions and definitions. The original schema will\n * remain unaltered.\n *\n * Because a schema represents a graph of references, a schema cannot be\n * extended without effectively making an entire copy. We do not know until it's\n * too late if subgraphs remain unchanged.\n *\n * This algorithm copies the provided schema, applying extensions while\n * producing the copy. The original schema remains unaltered.\n *\n * Accepts options as a third argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nexport function extendSchema(schema, documentAST, options) {\n  assertSchema(schema);\n  documentAST && documentAST.kind === Kind.DOCUMENT || devAssert(0, 'Must provide valid Document AST');\n\n  if (!options || !(options.assumeValid || options.assumeValidSDL)) {\n    assertValidSDLExtension(documentAST, schema);\n  } // Collect the type definitions and extensions found in the document.\n\n\n  var typeDefs = [];\n  var typeExtsMap = Object.create(null); // New directives and types are separate because a directives and types can\n  // have the same name. For example, a type named \"skip\".\n\n  var directiveDefs = [];\n  var schemaDef; // Schema extensions are collected which may add additional operation types.\n\n  var schemaExts = [];\n\n  for (var _i2 = 0, _documentAST$definiti2 = documentAST.definitions; _i2 < _documentAST$definiti2.length; _i2++) {\n    var def = _documentAST$definiti2[_i2];\n\n    if (def.kind === Kind.SCHEMA_DEFINITION) {\n      schemaDef = def;\n    } else if (def.kind === Kind.SCHEMA_EXTENSION) {\n      schemaExts.push(def);\n    } else if (isTypeDefinitionNode(def)) {\n      typeDefs.push(def);\n    } else if (isTypeExtensionNode(def)) {\n      var extendedTypeName = def.name.value;\n      var existingTypeExts = typeExtsMap[extendedTypeName];\n      typeExtsMap[extendedTypeName] = existingTypeExts ? existingTypeExts.concat([def]) : [def];\n    } else if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      directiveDefs.push(def);\n    }\n  } // If this document contains no new types, extensions, or directives then\n  // return the same unmodified GraphQLSchema instance.\n\n\n  if (Object.keys(typeExtsMap).length === 0 && typeDefs.length === 0 && directiveDefs.length === 0 && schemaExts.length === 0 && !schemaDef) {\n    return schema;\n  }\n\n  var schemaConfig = schema.toConfig();\n  var astBuilder = new ASTDefinitionBuilder(options, function (typeName) {\n    var type = typeMap[typeName];\n\n    if (type === undefined) {\n      throw new Error(\"Unknown type: \\\"\".concat(typeName, \"\\\".\"));\n    }\n\n    return type;\n  });\n  var typeMap = keyValMap(typeDefs, function (node) {\n    return node.name.value;\n  }, function (node) {\n    return astBuilder.buildType(node);\n  });\n\n  for (var _i4 = 0, _schemaConfig$types2 = schemaConfig.types; _i4 < _schemaConfig$types2.length; _i4++) {\n    var existingType = _schemaConfig$types2[_i4];\n    typeMap[existingType.name] = extendNamedType(existingType);\n  } // Get the extended root operation types.\n\n\n  var operationTypes = {\n    query: schemaConfig.query && schemaConfig.query.name,\n    mutation: schemaConfig.mutation && schemaConfig.mutation.name,\n    subscription: schemaConfig.subscription && schemaConfig.subscription.name\n  };\n\n  if (schemaDef) {\n    for (var _i6 = 0, _schemaDef$operationT2 = schemaDef.operationTypes; _i6 < _schemaDef$operationT2.length; _i6++) {\n      var _ref2 = _schemaDef$operationT2[_i6];\n      var operation = _ref2.operation;\n      var type = _ref2.type;\n      operationTypes[operation] = type.name.value;\n    }\n  } // Then, incorporate schema definition and all schema extensions.\n\n\n  for (var _i8 = 0; _i8 < schemaExts.length; _i8++) {\n    var schemaExt = schemaExts[_i8];\n\n    if (schemaExt.operationTypes) {\n      for (var _i10 = 0, _schemaExt$operationT2 = schemaExt.operationTypes; _i10 < _schemaExt$operationT2.length; _i10++) {\n        var _ref4 = _schemaExt$operationT2[_i10];\n        var _operation = _ref4.operation;\n        var _type = _ref4.type;\n        operationTypes[_operation] = _type.name.value;\n      }\n    }\n  } // Support both original legacy names and extended legacy names.\n\n\n  var allowedLegacyNames = schemaConfig.allowedLegacyNames.concat(options && options.allowedLegacyNames || []); // Then produce and return a Schema with these types.\n\n  return new GraphQLSchema({\n    // Note: While this could make early assertions to get the correctly\n    // typed values, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    query: getMaybeTypeByName(operationTypes.query),\n    mutation: getMaybeTypeByName(operationTypes.mutation),\n    subscription: getMaybeTypeByName(operationTypes.subscription),\n    types: objectValues(typeMap),\n    directives: getMergedDirectives(),\n    astNode: schemaDef || schemaConfig.astNode,\n    extensionASTNodes: schemaConfig.extensionASTNodes.concat(schemaExts),\n    allowedLegacyNames: allowedLegacyNames\n  }); // Below are functions used for producing this schema that have closed over\n  // this scope and have access to the schema, cache, and newly defined types.\n\n  function replaceType(type) {\n    if (isListType(type)) {\n      return new GraphQLList(replaceType(type.ofType));\n    } else if (isNonNullType(type)) {\n      return new GraphQLNonNull(replaceType(type.ofType));\n    }\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    return typeMap[type.name];\n  }\n\n  function getMaybeTypeByName(typeName) {\n    return typeName ? typeMap[typeName] : null;\n  }\n\n  function getMergedDirectives() {\n    var existingDirectives = schema.getDirectives().map(extendDirective);\n    existingDirectives || devAssert(0, 'schema must have default directives');\n    return existingDirectives.concat(directiveDefs.map(function (node) {\n      return astBuilder.buildDirective(node);\n    }));\n  }\n\n  function extendNamedType(type) {\n    if (isIntrospectionType(type) || isSpecifiedScalarType(type)) {\n      // Builtin types are not extended.\n      return type;\n    } else if (isScalarType(type)) {\n      return extendScalarType(type);\n    } else if (isObjectType(type)) {\n      return extendObjectType(type);\n    } else if (isInterfaceType(type)) {\n      return extendInterfaceType(type);\n    } else if (isUnionType(type)) {\n      return extendUnionType(type);\n    } else if (isEnumType(type)) {\n      return extendEnumType(type);\n    } else if (isInputObjectType(type)) {\n      return extendInputObjectType(type);\n    } // Not reachable. All possible types have been considered.\n\n\n    /* istanbul ignore next */\n    invariant(false, 'Unexpected type: ' + inspect(type));\n  }\n\n  function extendDirective(directive) {\n    var config = directive.toConfig();\n    return new GraphQLDirective(_objectSpread({}, config, {\n      args: mapValue(config.args, extendArg)\n    }));\n  }\n\n  function extendInputObjectType(type) {\n    var config = type.toConfig();\n    var extensions = typeExtsMap[config.name] || [];\n    var fieldNodes = flatMap(extensions, function (node) {\n      return node.fields || [];\n    });\n    return new GraphQLInputObjectType(_objectSpread({}, config, {\n      fields: function fields() {\n        return _objectSpread({}, mapValue(config.fields, function (field) {\n          return _objectSpread({}, field, {\n            type: replaceType(field.type)\n          });\n        }), {}, keyValMap(fieldNodes, function (field) {\n          return field.name.value;\n        }, function (field) {\n          return astBuilder.buildInputField(field);\n        }));\n      },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendEnumType(type) {\n    var config = type.toConfig();\n    var extensions = typeExtsMap[type.name] || [];\n    var valueNodes = flatMap(extensions, function (node) {\n      return node.values || [];\n    });\n    return new GraphQLEnumType(_objectSpread({}, config, {\n      values: _objectSpread({}, config.values, {}, keyValMap(valueNodes, function (value) {\n        return value.name.value;\n      }, function (value) {\n        return astBuilder.buildEnumValue(value);\n      })),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendScalarType(type) {\n    var config = type.toConfig();\n    var extensions = typeExtsMap[config.name] || [];\n    return new GraphQLScalarType(_objectSpread({}, config, {\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendObjectType(type) {\n    var config = type.toConfig();\n    var extensions = typeExtsMap[config.name] || [];\n    var interfaceNodes = flatMap(extensions, function (node) {\n      return node.interfaces || [];\n    });\n    var fieldNodes = flatMap(extensions, function (node) {\n      return node.fields || [];\n    });\n    return new GraphQLObjectType(_objectSpread({}, config, {\n      interfaces: function interfaces() {\n        return [].concat(type.getInterfaces().map(replaceNamedType), interfaceNodes.map(function (node) {\n          return astBuilder.getNamedType(node);\n        }));\n      },\n      fields: function fields() {\n        return _objectSpread({}, mapValue(config.fields, extendField), {}, keyValMap(fieldNodes, function (node) {\n          return node.name.value;\n        }, function (node) {\n          return astBuilder.buildField(node);\n        }));\n      },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendInterfaceType(type) {\n    var config = type.toConfig();\n    var extensions = typeExtsMap[config.name] || [];\n    var fieldNodes = flatMap(extensions, function (node) {\n      return node.fields || [];\n    });\n    return new GraphQLInterfaceType(_objectSpread({}, config, {\n      fields: function fields() {\n        return _objectSpread({}, mapValue(config.fields, extendField), {}, keyValMap(fieldNodes, function (node) {\n          return node.name.value;\n        }, function (node) {\n          return astBuilder.buildField(node);\n        }));\n      },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendUnionType(type) {\n    var config = type.toConfig();\n    var extensions = typeExtsMap[config.name] || [];\n    var typeNodes = flatMap(extensions, function (node) {\n      return node.types || [];\n    });\n    return new GraphQLUnionType(_objectSpread({}, config, {\n      types: function types() {\n        return [].concat(type.getTypes().map(replaceNamedType), typeNodes.map(function (node) {\n          return astBuilder.getNamedType(node);\n        }));\n      },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendField(field) {\n    return _objectSpread({}, field, {\n      type: replaceType(field.type),\n      args: mapValue(field.args, extendArg)\n    });\n  }\n\n  function extendArg(arg) {\n    return _objectSpread({}, arg, {\n      type: replaceType(arg.type)\n    });\n  }\n}\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport objectValues from '../polyfills/objectValues';\nimport inspect from '../jsutils/inspect';\nimport invariant from '../jsutils/invariant';\nimport keyValMap from '../jsutils/keyValMap';\nimport { GraphQLSchema } from '../type/schema';\nimport { GraphQLDirective } from '../type/directives';\nimport { isIntrospectionType } from '../type/introspection';\nimport { GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLNonNull, isListType, isNonNullType, isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from '../type/definition';\n/**\n * Sort GraphQLSchema.\n */\n\nexport function lexicographicSortSchema(schema) {\n  var schemaConfig = schema.toConfig();\n  var typeMap = keyValMap(sortByName(schemaConfig.types), function (type) {\n    return type.name;\n  }, sortNamedType);\n  return new GraphQLSchema(_objectSpread({}, schemaConfig, {\n    types: objectValues(typeMap),\n    directives: sortByName(schemaConfig.directives).map(sortDirective),\n    query: replaceMaybeType(schemaConfig.query),\n    mutation: replaceMaybeType(schemaConfig.mutation),\n    subscription: replaceMaybeType(schemaConfig.subscription)\n  }));\n\n  function replaceType(type) {\n    if (isListType(type)) {\n      return new GraphQLList(replaceType(type.ofType));\n    } else if (isNonNullType(type)) {\n      return new GraphQLNonNull(replaceType(type.ofType));\n    }\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    return typeMap[type.name];\n  }\n\n  function replaceMaybeType(maybeType) {\n    return maybeType && replaceNamedType(maybeType);\n  }\n\n  function sortDirective(directive) {\n    var config = directive.toConfig();\n    return new GraphQLDirective(_objectSpread({}, config, {\n      locations: sortBy(config.locations, function (x) {\n        return x;\n      }),\n      args: sortArgs(config.args)\n    }));\n  }\n\n  function sortArgs(args) {\n    return sortObjMap(args, function (arg) {\n      return _objectSpread({}, arg, {\n        type: replaceType(arg.type)\n      });\n    });\n  }\n\n  function sortFields(fieldsMap) {\n    return sortObjMap(fieldsMap, function (field) {\n      return _objectSpread({}, field, {\n        type: replaceType(field.type),\n        args: sortArgs(field.args)\n      });\n    });\n  }\n\n  function sortInputFields(fieldsMap) {\n    return sortObjMap(fieldsMap, function (field) {\n      return _objectSpread({}, field, {\n        type: replaceType(field.type)\n      });\n    });\n  }\n\n  function sortTypes(arr) {\n    return sortByName(arr).map(replaceNamedType);\n  }\n\n  function sortNamedType(type) {\n    if (isScalarType(type) || isIntrospectionType(type)) {\n      return type;\n    } else if (isObjectType(type)) {\n      var config = type.toConfig();\n      return new GraphQLObjectType(_objectSpread({}, config, {\n        interfaces: function interfaces() {\n          return sortTypes(config.interfaces);\n        },\n        fields: function fields() {\n          return sortFields(config.fields);\n        }\n      }));\n    } else if (isInterfaceType(type)) {\n      var _config = type.toConfig();\n\n      return new GraphQLInterfaceType(_objectSpread({}, _config, {\n        fields: function fields() {\n          return sortFields(_config.fields);\n        }\n      }));\n    } else if (isUnionType(type)) {\n      var _config2 = type.toConfig();\n\n      return new GraphQLUnionType(_objectSpread({}, _config2, {\n        types: function types() {\n          return sortTypes(_config2.types);\n        }\n      }));\n    } else if (isEnumType(type)) {\n      var _config3 = type.toConfig();\n\n      return new GraphQLEnumType(_objectSpread({}, _config3, {\n        values: sortObjMap(_config3.values)\n      }));\n    } else if (isInputObjectType(type)) {\n      var _config4 = type.toConfig();\n\n      return new GraphQLInputObjectType(_objectSpread({}, _config4, {\n        fields: function fields() {\n          return sortInputFields(_config4.fields);\n        }\n      }));\n    } // Not reachable. All possible types have been considered.\n\n\n    /* istanbul ignore next */\n    invariant(false, 'Unexpected type: ' + inspect(type));\n  }\n}\n\nfunction sortObjMap(map, sortValueFn) {\n  var sortedMap = Object.create(null);\n  var sortedKeys = sortBy(Object.keys(map), function (x) {\n    return x;\n  });\n\n  for (var _i2 = 0; _i2 < sortedKeys.length; _i2++) {\n    var key = sortedKeys[_i2];\n    var value = map[key];\n    sortedMap[key] = sortValueFn ? sortValueFn(value) : value;\n  }\n\n  return sortedMap;\n}\n\nfunction sortByName(array) {\n  return sortBy(array, function (obj) {\n    return obj.name;\n  });\n}\n\nfunction sortBy(array, mapToKey) {\n  return array.slice().sort(function (obj1, obj2) {\n    var key1 = mapToKey(obj1);\n    var key2 = mapToKey(obj2);\n    return key1.localeCompare(key2);\n  });\n}\n","import flatMap from '../polyfills/flatMap';\nimport objectValues from '../polyfills/objectValues';\nimport inspect from '../jsutils/inspect';\nimport invariant from '../jsutils/invariant';\nimport { print } from '../language/printer';\nimport { printBlockString } from '../language/blockString';\nimport { isIntrospectionType } from '../type/introspection';\nimport { GraphQLString, isSpecifiedScalarType } from '../type/scalars';\nimport { GraphQLDirective, DEFAULT_DEPRECATION_REASON, isSpecifiedDirective } from '../type/directives';\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from '../type/definition';\nimport { astFromValue } from '../utilities/astFromValue';\n\n/**\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nexport function printSchema(schema, options) {\n  return printFilteredSchema(schema, function (n) {\n    return !isSpecifiedDirective(n);\n  }, isDefinedType, options);\n}\nexport function printIntrospectionSchema(schema, options) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType, options);\n}\n\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n  var directives = schema.getDirectives().filter(directiveFilter);\n  var typeMap = schema.getTypeMap();\n  var types = objectValues(typeMap).sort(function (type1, type2) {\n    return type1.name.localeCompare(type2.name);\n  }).filter(typeFilter);\n  return [printSchemaDefinition(schema)].concat(directives.map(function (directive) {\n    return printDirective(directive, options);\n  }), types.map(function (type) {\n    return printType(type, options);\n  })).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nfunction printSchemaDefinition(schema) {\n  if (isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  var operationTypes = [];\n  var queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(\"  query: \".concat(queryType.name));\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(\"  mutation: \".concat(mutationType.name));\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(\"  subscription: \".concat(subscriptionType.name));\n  }\n\n  return \"schema {\\n\".concat(operationTypes.join('\\n'), \"\\n}\");\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *   }\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\n\nfunction isSchemaOfCommonNames(schema) {\n  var queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nexport function printType(type, options) {\n  if (isScalarType(type)) {\n    return printScalar(type, options);\n  } else if (isObjectType(type)) {\n    return printObject(type, options);\n  } else if (isInterfaceType(type)) {\n    return printInterface(type, options);\n  } else if (isUnionType(type)) {\n    return printUnion(type, options);\n  } else if (isEnumType(type)) {\n    return printEnum(type, options);\n  } else if (isInputObjectType(type)) {\n    return printInputObject(type, options);\n  } // Not reachable. All possible types have been considered.\n\n\n  /* istanbul ignore next */\n  invariant(false, 'Unexpected type: ' + inspect(type));\n}\n\nfunction printScalar(type, options) {\n  return printDescription(options, type) + \"scalar \".concat(type.name);\n}\n\nfunction printObject(type, options) {\n  var interfaces = type.getInterfaces();\n  var implementedInterfaces = interfaces.length ? ' implements ' + interfaces.map(function (i) {\n    return i.name;\n  }).join(' & ') : '';\n  return printDescription(options, type) + \"type \".concat(type.name).concat(implementedInterfaces) + printFields(options, type);\n}\n\nfunction printInterface(type, options) {\n  return printDescription(options, type) + \"interface \".concat(type.name) + printFields(options, type);\n}\n\nfunction printUnion(type, options) {\n  var types = type.getTypes();\n  var possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(options, type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type, options) {\n  var values = type.getValues().map(function (value, i) {\n    return printDescription(options, value, '  ', !i) + '  ' + value.name + printDeprecated(value);\n  });\n  return printDescription(options, type) + \"enum \".concat(type.name) + printBlock(values);\n}\n\nfunction printInputObject(type, options) {\n  var fields = objectValues(type.getFields()).map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + printInputValue(f);\n  });\n  return printDescription(options, type) + \"input \".concat(type.name) + printBlock(fields);\n}\n\nfunction printFields(options, type) {\n  var fields = objectValues(type.getFields()).map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + f.name + printArgs(options, f.args, '  ') + ': ' + String(f.type) + printDeprecated(f);\n  });\n  return printBlock(fields);\n}\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(options, args) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n\n  if (args.every(function (arg) {\n    return !arg.description;\n  })) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map(function (arg, i) {\n    return printDescription(options, arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg);\n  }).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  var defaultAST = astFromValue(arg.defaultValue, arg.type);\n  var argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += \" = \".concat(print(defaultAST));\n  }\n\n  return argDecl;\n}\n\nfunction printDirective(directive, options) {\n  return printDescription(options, directive) + 'directive @' + directive.name + printArgs(options, directive.args) + (directive.isRepeatable ? ' repeatable' : '') + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(fieldOrEnumVal) {\n  if (!fieldOrEnumVal.isDeprecated) {\n    return '';\n  }\n\n  var reason = fieldOrEnumVal.deprecationReason;\n  var reasonAST = astFromValue(reason, GraphQLString);\n\n  if (reasonAST && reason !== '' && reason !== DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated(reason: ' + print(reasonAST) + ')';\n  }\n\n  return ' @deprecated';\n}\n\nfunction printDescription(options, def) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var firstInBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n  if (!def.description) {\n    return '';\n  }\n\n  var lines = descriptionLines(def.description, 120 - indentation.length);\n\n  if (options && options.commentDescriptions) {\n    return printDescriptionWithComments(lines, indentation, firstInBlock);\n  }\n\n  var text = lines.join('\\n');\n  var preferMultipleLines = text.length > 70;\n  var blockString = printBlockString(text, '', preferMultipleLines);\n  var prefix = indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n\nfunction printDescriptionWithComments(lines, indentation, firstInBlock) {\n  var description = indentation && !firstInBlock ? '\\n' : '';\n\n  for (var _i2 = 0; _i2 < lines.length; _i2++) {\n    var line = lines[_i2];\n\n    if (line === '') {\n      description += indentation + '#\\n';\n    } else {\n      description += indentation + '# ' + line + '\\n';\n    }\n  }\n\n  return description;\n}\n\nfunction descriptionLines(description, maxLen) {\n  var rawLines = description.split('\\n');\n  return flatMap(rawLines, function (line) {\n    if (line.length < maxLen + 5) {\n      return line;\n    } // For > 120 character long lines, cut at space boundaries into sublines\n    // of ~80 chars.\n\n\n    return breakLine(line, maxLen);\n  });\n}\n\nfunction breakLine(line, maxLen) {\n  var parts = line.split(new RegExp(\"((?: |^).{15,\".concat(maxLen - 40, \"}(?= |$))\")));\n\n  if (parts.length < 4) {\n    return [line];\n  }\n\n  var sublines = [parts[0] + parts[1] + parts[2]];\n\n  for (var i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1]);\n  }\n\n  return sublines;\n}\n","/* istanbul ignore file */\nimport inspect from '../jsutils/inspect';\nimport printPathArray from '../jsutils/printPathArray';\nimport { pathToArray } from '../jsutils/Path';\nimport { GraphQLError } from '../error/GraphQLError';\nimport { coerceInputValue } from './coerceInputValue';\n\n/**\n * Deprecated. Use coerceInputValue() directly for richer information.\n *\n * This function will be removed in v15\n */\nexport function coerceValue(inputValue, type, blameNode, path) {\n  var errors = [];\n  var value = coerceInputValue(inputValue, type, function (errorPath, invalidValue, error) {\n    var errorPrefix = 'Invalid value ' + inspect(invalidValue);\n    var pathArray = [].concat(pathToArray(path), errorPath);\n\n    if (pathArray.length > 0) {\n      errorPrefix += \" at \\\"value\".concat(printPathArray(pathArray), \"\\\"\");\n    }\n\n    errors.push(new GraphQLError(errorPrefix + ': ' + error.message, blameNode, undefined, undefined, undefined, error.originalError));\n  });\n  return errors.length > 0 ? {\n    errors: errors,\n    value: undefined\n  } : {\n    errors: undefined,\n    value: value\n  };\n}\n","/* istanbul ignore file */\nimport { coerceValue } from './coerceValue';\n/**\n * Deprecated. Use coerceInputValue() directly for richer information.\n *\n * This function will be removed in v15\n */\n\nexport function isValidJSValue(value, type) {\n  var errors = coerceValue(value, type).errors;\n  return errors ? errors.map(function (error) {\n    return error.message;\n  }) : [];\n}\n","import { Kind } from '../language/kinds';\nimport { visit, visitWithTypeInfo } from '../language/visitor';\nimport { ValuesOfCorrectType } from '../validation/rules/ValuesOfCorrectType';\nimport { ValidationContext } from '../validation/ValidationContext';\nimport { GraphQLSchema } from '../type/schema';\nimport { TypeInfo } from './TypeInfo';\n/**\n * Utility which determines if a value literal node is valid for an input type.\n *\n * Deprecated. Rely on validation for documents containing literal values.\n *\n * This function will be removed in v15\n */\n\nexport function isValidLiteralValue(type, valueNode) {\n  var emptySchema = new GraphQLSchema({});\n  var emptyDoc = {\n    kind: Kind.DOCUMENT,\n    definitions: []\n  };\n  var typeInfo = new TypeInfo(emptySchema, undefined, type);\n  var context = new ValidationContext(emptySchema, emptyDoc, typeInfo);\n  var visitor = ValuesOfCorrectType(context);\n  visit(valueNode, visitWithTypeInfo(typeInfo, visitor));\n  return context.getErrors();\n}\n","import flatMap from '../polyfills/flatMap';\n\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\nexport function concatAST(asts) {\n  return {\n    kind: 'Document',\n    definitions: flatMap(asts, function (ast) {\n      return ast.definitions;\n    })\n  };\n}\n","import { visit } from '../language/visitor';\n\n/**\n * separateOperations accepts a single AST document which may contain many\n * operations and fragments and returns a collection of AST documents each of\n * which contains a single operation as well the fragment definitions it\n * refers to.\n */\nexport function separateOperations(documentAST) {\n  var operations = [];\n  var fragments = Object.create(null);\n  var positions = new Map();\n  var depGraph = Object.create(null);\n  var fromName;\n  var idx = 0; // Populate metadata and build a dependency graph.\n\n  visit(documentAST, {\n    OperationDefinition: function OperationDefinition(node) {\n      fromName = opName(node);\n      operations.push(node);\n      positions.set(node, idx++);\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fromName = node.name.value;\n      fragments[fromName] = node;\n      positions.set(node, idx++);\n    },\n    FragmentSpread: function FragmentSpread(node) {\n      var toName = node.name.value;\n      (depGraph[fromName] || (depGraph[fromName] = Object.create(null)))[toName] = true;\n    }\n  }); // For each operation, produce a new synthesized AST which includes only what\n  // is necessary for completing that operation.\n\n  var separatedDocumentASTs = Object.create(null);\n\n  for (var _i2 = 0; _i2 < operations.length; _i2++) {\n    var operation = operations[_i2];\n    var operationName = opName(operation);\n    var dependencies = Object.create(null);\n    collectTransitiveDependencies(dependencies, depGraph, operationName); // The list of definition nodes to be included for this operation, sorted\n    // to retain the same order as the original document.\n\n    var definitions = [operation];\n\n    for (var _i4 = 0, _Object$keys2 = Object.keys(dependencies); _i4 < _Object$keys2.length; _i4++) {\n      var name = _Object$keys2[_i4];\n      definitions.push(fragments[name]);\n    }\n\n    definitions.sort(function (n1, n2) {\n      return (positions.get(n1) || 0) - (positions.get(n2) || 0);\n    });\n    separatedDocumentASTs[operationName] = {\n      kind: 'Document',\n      definitions: definitions\n    };\n  }\n\n  return separatedDocumentASTs;\n}\n\n// Provides the empty string for anonymous operations.\nfunction opName(operation) {\n  return operation.name ? operation.name.value : '';\n} // From a dependency graph, collects a list of transitive dependencies by\n// recursing through a dependency graph.\n\n\nfunction collectTransitiveDependencies(collected, depGraph, fromName) {\n  var immediateDeps = depGraph[fromName];\n\n  if (immediateDeps) {\n    for (var _i6 = 0, _Object$keys4 = Object.keys(immediateDeps); _i6 < _Object$keys4.length; _i6++) {\n      var toName = _Object$keys4[_i6];\n\n      if (!collected[toName]) {\n        collected[toName] = true;\n        collectTransitiveDependencies(collected, depGraph, toName);\n      }\n    }\n  }\n}\n","import inspect from '../jsutils/inspect';\nimport { Source } from '../language/source';\nimport { TokenKind } from '../language/tokenKind';\nimport { createLexer, isPunctuatorToken } from '../language/lexer';\nimport { dedentBlockStringValue, getBlockStringIndentation } from '../language/blockString';\n/**\n * Strips characters that are not significant to the validity or execution\n * of a GraphQL document:\n *   - UnicodeBOM\n *   - WhiteSpace\n *   - LineTerminator\n *   - Comment\n *   - Comma\n *   - BlockString indentation\n *\n * Note: It is required to have a delimiter character between neighboring\n * non-punctuator tokens and this function always uses single space as delimiter.\n *\n * It is guaranteed that both input and output documents if parsed would result\n * in the exact same AST except for nodes location.\n *\n * Warning: It is guaranteed that this function will always produce stable results.\n * However, it's not guaranteed that it will stay the same between different\n * releases due to bugfixes or changes in the GraphQL specification.\n *\n * Query example:\n *\n * query SomeQuery($foo: String!, $bar: String) {\n *   someField(foo: $foo, bar: $bar) {\n *     a\n *     b {\n *       c\n *       d\n *     }\n *   }\n * }\n *\n * Becomes:\n *\n * query SomeQuery($foo:String!$bar:String){someField(foo:$foo bar:$bar){a b{c d}}}\n *\n * SDL example:\n *\n * \"\"\"\n * Type description\n * \"\"\"\n * type Foo {\n *   \"\"\"\n *   Field description\n *   \"\"\"\n *   bar: String\n * }\n *\n * Becomes:\n *\n * \"\"\"Type description\"\"\" type Foo{\"\"\"Field description\"\"\" bar:String}\n */\n\nexport function stripIgnoredCharacters(source) {\n  var sourceObj = typeof source === 'string' ? new Source(source) : source;\n\n  if (!(sourceObj instanceof Source)) {\n    throw new TypeError(\"Must provide string or Source. Received: \".concat(inspect(sourceObj)));\n  }\n\n  var body = sourceObj.body;\n  var lexer = createLexer(sourceObj);\n  var strippedBody = '';\n  var wasLastAddedTokenNonPunctuator = false;\n\n  while (lexer.advance().kind !== TokenKind.EOF) {\n    var currentToken = lexer.token;\n    var tokenKind = currentToken.kind;\n    /**\n     * Every two non-punctuator tokens should have space between them.\n     * Also prevent case of non-punctuator token following by spread resulting\n     * in invalid token (e.g. `1...` is invalid Float token).\n     */\n\n    var isNonPunctuator = !isPunctuatorToken(currentToken);\n\n    if (wasLastAddedTokenNonPunctuator) {\n      if (isNonPunctuator || currentToken.kind === TokenKind.SPREAD) {\n        strippedBody += ' ';\n      }\n    }\n\n    var tokenBody = body.slice(currentToken.start, currentToken.end);\n\n    if (tokenKind === TokenKind.BLOCK_STRING) {\n      strippedBody += dedentBlockString(tokenBody);\n    } else {\n      strippedBody += tokenBody;\n    }\n\n    wasLastAddedTokenNonPunctuator = isNonPunctuator;\n  }\n\n  return strippedBody;\n}\n\nfunction dedentBlockString(blockStr) {\n  // skip leading and trailing triple quotations\n  var rawStr = blockStr.slice(3, -3);\n  var body = dedentBlockStringValue(rawStr);\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n\n  if (getBlockStringIndentation(lines) > 0) {\n    body = '\\n' + body;\n  }\n\n  var lastChar = body[body.length - 1];\n  var hasTrailingQuote = lastChar === '\"' && body.slice(-4) !== '\\\\\"\"\"';\n\n  if (hasTrailingQuote || lastChar === '\\\\') {\n    body += '\\n';\n  }\n\n  return '\"\"\"' + body + '\"\"\"';\n}\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport objectValues from '../polyfills/objectValues';\nimport keyMap from '../jsutils/keyMap';\nimport inspect from '../jsutils/inspect';\nimport invariant from '../jsutils/invariant';\nimport { print } from '../language/printer';\nimport { visit } from '../language/visitor';\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isNonNullType, isListType, isNamedType, isRequiredArgument, isRequiredInputField } from '../type/definition';\nimport { astFromValue } from './astFromValue';\nexport var BreakingChangeType = Object.freeze({\n  TYPE_REMOVED: 'TYPE_REMOVED',\n  TYPE_CHANGED_KIND: 'TYPE_CHANGED_KIND',\n  TYPE_REMOVED_FROM_UNION: 'TYPE_REMOVED_FROM_UNION',\n  VALUE_REMOVED_FROM_ENUM: 'VALUE_REMOVED_FROM_ENUM',\n  REQUIRED_INPUT_FIELD_ADDED: 'REQUIRED_INPUT_FIELD_ADDED',\n  INTERFACE_REMOVED_FROM_OBJECT: 'INTERFACE_REMOVED_FROM_OBJECT',\n  FIELD_REMOVED: 'FIELD_REMOVED',\n  FIELD_CHANGED_KIND: 'FIELD_CHANGED_KIND',\n  REQUIRED_ARG_ADDED: 'REQUIRED_ARG_ADDED',\n  ARG_REMOVED: 'ARG_REMOVED',\n  ARG_CHANGED_KIND: 'ARG_CHANGED_KIND',\n  DIRECTIVE_REMOVED: 'DIRECTIVE_REMOVED',\n  DIRECTIVE_ARG_REMOVED: 'DIRECTIVE_ARG_REMOVED',\n  REQUIRED_DIRECTIVE_ARG_ADDED: 'REQUIRED_DIRECTIVE_ARG_ADDED',\n  DIRECTIVE_LOCATION_REMOVED: 'DIRECTIVE_LOCATION_REMOVED'\n});\nexport var DangerousChangeType = Object.freeze({\n  VALUE_ADDED_TO_ENUM: 'VALUE_ADDED_TO_ENUM',\n  TYPE_ADDED_TO_UNION: 'TYPE_ADDED_TO_UNION',\n  OPTIONAL_INPUT_FIELD_ADDED: 'OPTIONAL_INPUT_FIELD_ADDED',\n  OPTIONAL_ARG_ADDED: 'OPTIONAL_ARG_ADDED',\n  INTERFACE_ADDED_TO_OBJECT: 'INTERFACE_ADDED_TO_OBJECT',\n  ARG_DEFAULT_VALUE_CHANGE: 'ARG_DEFAULT_VALUE_CHANGE'\n});\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nexport function findBreakingChanges(oldSchema, newSchema) {\n  var breakingChanges = findSchemaChanges(oldSchema, newSchema).filter(function (change) {\n    return change.type in BreakingChangeType;\n  });\n  return breakingChanges;\n}\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\n\nexport function findDangerousChanges(oldSchema, newSchema) {\n  var dangerousChanges = findSchemaChanges(oldSchema, newSchema).filter(function (change) {\n    return change.type in DangerousChangeType;\n  });\n  return dangerousChanges;\n}\n\nfunction findSchemaChanges(oldSchema, newSchema) {\n  return [].concat(findTypeChanges(oldSchema, newSchema), findDirectiveChanges(oldSchema, newSchema));\n}\n\nfunction findDirectiveChanges(oldSchema, newSchema) {\n  var schemaChanges = [];\n  var directivesDiff = diff(oldSchema.getDirectives(), newSchema.getDirectives());\n\n  for (var _i2 = 0, _directivesDiff$remov2 = directivesDiff.removed; _i2 < _directivesDiff$remov2.length; _i2++) {\n    var oldDirective = _directivesDiff$remov2[_i2];\n    schemaChanges.push({\n      type: BreakingChangeType.DIRECTIVE_REMOVED,\n      description: \"\".concat(oldDirective.name, \" was removed.\")\n    });\n  }\n\n  for (var _i4 = 0, _directivesDiff$persi2 = directivesDiff.persisted; _i4 < _directivesDiff$persi2.length; _i4++) {\n    var _ref2 = _directivesDiff$persi2[_i4];\n    var _oldDirective = _ref2[0];\n    var newDirective = _ref2[1];\n    var argsDiff = diff(_oldDirective.args, newDirective.args);\n\n    for (var _i6 = 0, _argsDiff$added2 = argsDiff.added; _i6 < _argsDiff$added2.length; _i6++) {\n      var newArg = _argsDiff$added2[_i6];\n\n      if (isRequiredArgument(newArg)) {\n        schemaChanges.push({\n          type: BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,\n          description: \"A required arg \".concat(newArg.name, \" on directive \").concat(_oldDirective.name, \" was added.\")\n        });\n      }\n    }\n\n    for (var _i8 = 0, _argsDiff$removed2 = argsDiff.removed; _i8 < _argsDiff$removed2.length; _i8++) {\n      var oldArg = _argsDiff$removed2[_i8];\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n        description: \"\".concat(oldArg.name, \" was removed from \").concat(_oldDirective.name, \".\")\n      });\n    }\n\n    for (var _i10 = 0, _oldDirective$locatio2 = _oldDirective.locations; _i10 < _oldDirective$locatio2.length; _i10++) {\n      var location = _oldDirective$locatio2[_i10];\n\n      if (newDirective.locations.indexOf(location) === -1) {\n        schemaChanges.push({\n          type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n          description: \"\".concat(location, \" was removed from \").concat(_oldDirective.name, \".\")\n        });\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findTypeChanges(oldSchema, newSchema) {\n  var schemaChanges = [];\n  var typesDiff = diff(objectValues(oldSchema.getTypeMap()), objectValues(newSchema.getTypeMap()));\n\n  for (var _i12 = 0, _typesDiff$removed2 = typesDiff.removed; _i12 < _typesDiff$removed2.length; _i12++) {\n    var oldType = _typesDiff$removed2[_i12];\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED,\n      description: \"\".concat(oldType.name, \" was removed.\")\n    });\n  }\n\n  for (var _i14 = 0, _typesDiff$persisted2 = typesDiff.persisted; _i14 < _typesDiff$persisted2.length; _i14++) {\n    var _ref4 = _typesDiff$persisted2[_i14];\n    var _oldType = _ref4[0];\n    var newType = _ref4[1];\n\n    if (isEnumType(_oldType) && isEnumType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findEnumTypeChanges(_oldType, newType));\n    } else if (isUnionType(_oldType) && isUnionType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findUnionTypeChanges(_oldType, newType));\n    } else if (isInputObjectType(_oldType) && isInputObjectType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findInputObjectTypeChanges(_oldType, newType));\n    } else if (isObjectType(_oldType) && isObjectType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findObjectTypeChanges(_oldType, newType));\n    } else if (isInterfaceType(_oldType) && isInterfaceType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findFieldChanges(_oldType, newType));\n    } else if (_oldType.constructor !== newType.constructor) {\n      schemaChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description: \"\".concat(_oldType.name, \" changed from \") + \"\".concat(typeKindName(_oldType), \" to \").concat(typeKindName(newType), \".\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findInputObjectTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var fieldsDiff = diff(objectValues(oldType.getFields()), objectValues(newType.getFields()));\n\n  for (var _i16 = 0, _fieldsDiff$added2 = fieldsDiff.added; _i16 < _fieldsDiff$added2.length; _i16++) {\n    var newField = _fieldsDiff$added2[_i16];\n\n    if (isRequiredInputField(newField)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,\n        description: \"A required field \".concat(newField.name, \" on input type \").concat(oldType.name, \" was added.\")\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,\n        description: \"An optional field \".concat(newField.name, \" on input type \").concat(oldType.name, \" was added.\")\n      });\n    }\n  }\n\n  for (var _i18 = 0, _fieldsDiff$removed2 = fieldsDiff.removed; _i18 < _fieldsDiff$removed2.length; _i18++) {\n    var oldField = _fieldsDiff$removed2[_i18];\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" was removed.\")\n    });\n  }\n\n  for (var _i20 = 0, _fieldsDiff$persisted2 = fieldsDiff.persisted; _i20 < _fieldsDiff$persisted2.length; _i20++) {\n    var _ref6 = _fieldsDiff$persisted2[_i20];\n    var _oldField = _ref6[0];\n    var _newField = _ref6[1];\n    var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(_oldField.type, _newField.type);\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(_oldField.name, \" changed type from \") + \"\".concat(String(_oldField.type), \" to \").concat(String(_newField.type), \".\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findUnionTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var possibleTypesDiff = diff(oldType.getTypes(), newType.getTypes());\n\n  for (var _i22 = 0, _possibleTypesDiff$ad2 = possibleTypesDiff.added; _i22 < _possibleTypesDiff$ad2.length; _i22++) {\n    var newPossibleType = _possibleTypesDiff$ad2[_i22];\n    schemaChanges.push({\n      type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n      description: \"\".concat(newPossibleType.name, \" was added to union type \").concat(oldType.name, \".\")\n    });\n  }\n\n  for (var _i24 = 0, _possibleTypesDiff$re2 = possibleTypesDiff.removed; _i24 < _possibleTypesDiff$re2.length; _i24++) {\n    var oldPossibleType = _possibleTypesDiff$re2[_i24];\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n      description: \"\".concat(oldPossibleType.name, \" was removed from union type \").concat(oldType.name, \".\")\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findEnumTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var valuesDiff = diff(oldType.getValues(), newType.getValues());\n\n  for (var _i26 = 0, _valuesDiff$added2 = valuesDiff.added; _i26 < _valuesDiff$added2.length; _i26++) {\n    var newValue = _valuesDiff$added2[_i26];\n    schemaChanges.push({\n      type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n      description: \"\".concat(newValue.name, \" was added to enum type \").concat(oldType.name, \".\")\n    });\n  }\n\n  for (var _i28 = 0, _valuesDiff$removed2 = valuesDiff.removed; _i28 < _valuesDiff$removed2.length; _i28++) {\n    var oldValue = _valuesDiff$removed2[_i28];\n    schemaChanges.push({\n      type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n      description: \"\".concat(oldValue.name, \" was removed from enum type \").concat(oldType.name, \".\")\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findObjectTypeChanges(oldType, newType) {\n  var schemaChanges = findFieldChanges(oldType, newType);\n  var interfacesDiff = diff(oldType.getInterfaces(), newType.getInterfaces());\n\n  for (var _i30 = 0, _interfacesDiff$added2 = interfacesDiff.added; _i30 < _interfacesDiff$added2.length; _i30++) {\n    var newInterface = _interfacesDiff$added2[_i30];\n    schemaChanges.push({\n      type: DangerousChangeType.INTERFACE_ADDED_TO_OBJECT,\n      description: \"\".concat(newInterface.name, \" added to interfaces implemented by \").concat(oldType.name, \".\")\n    });\n  }\n\n  for (var _i32 = 0, _interfacesDiff$remov2 = interfacesDiff.removed; _i32 < _interfacesDiff$remov2.length; _i32++) {\n    var oldInterface = _interfacesDiff$remov2[_i32];\n    schemaChanges.push({\n      type: BreakingChangeType.INTERFACE_REMOVED_FROM_OBJECT,\n      description: \"\".concat(oldType.name, \" no longer implements interface \").concat(oldInterface.name, \".\")\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findFieldChanges(oldType, newType) {\n  var schemaChanges = [];\n  var fieldsDiff = diff(objectValues(oldType.getFields()), objectValues(newType.getFields()));\n\n  for (var _i34 = 0, _fieldsDiff$removed4 = fieldsDiff.removed; _i34 < _fieldsDiff$removed4.length; _i34++) {\n    var oldField = _fieldsDiff$removed4[_i34];\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" was removed.\")\n    });\n  }\n\n  for (var _i36 = 0, _fieldsDiff$persisted4 = fieldsDiff.persisted; _i36 < _fieldsDiff$persisted4.length; _i36++) {\n    var _ref8 = _fieldsDiff$persisted4[_i36];\n    var _oldField2 = _ref8[0];\n    var newField = _ref8[1];\n    schemaChanges.push.apply(schemaChanges, findArgChanges(oldType, _oldField2, newField));\n    var isSafe = isChangeSafeForObjectOrInterfaceField(_oldField2.type, newField.type);\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(_oldField2.name, \" changed type from \") + \"\".concat(String(_oldField2.type), \" to \").concat(String(newField.type), \".\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findArgChanges(oldType, oldField, newField) {\n  var schemaChanges = [];\n  var argsDiff = diff(oldField.args, newField.args);\n\n  for (var _i38 = 0, _argsDiff$removed4 = argsDiff.removed; _i38 < _argsDiff$removed4.length; _i38++) {\n    var oldArg = _argsDiff$removed4[_i38];\n    schemaChanges.push({\n      type: BreakingChangeType.ARG_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(oldArg.name, \" was removed.\")\n    });\n  }\n\n  for (var _i40 = 0, _argsDiff$persisted2 = argsDiff.persisted; _i40 < _argsDiff$persisted2.length; _i40++) {\n    var _ref10 = _argsDiff$persisted2[_i40];\n    var _oldArg = _ref10[0];\n    var newArg = _ref10[1];\n    var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(_oldArg.type, newArg.type);\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.ARG_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" has changed type from \") + \"\".concat(String(_oldArg.type), \" to \").concat(String(newArg.type), \".\")\n      });\n    } else if (_oldArg.defaultValue !== undefined) {\n      if (newArg.defaultValue === undefined) {\n        schemaChanges.push({\n          type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n          description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" defaultValue was removed.\")\n        });\n      } else {\n        // Since we looking only for client's observable changes we should\n        // compare default values in the same representation as they are\n        // represented inside introspection.\n        var oldValueStr = stringifyValue(_oldArg.defaultValue, _oldArg.type);\n        var newValueStr = stringifyValue(newArg.defaultValue, newArg.type);\n\n        if (oldValueStr !== newValueStr) {\n          schemaChanges.push({\n            type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n            description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" has changed defaultValue from \").concat(oldValueStr, \" to \").concat(newValueStr, \".\")\n          });\n        }\n      }\n    }\n  }\n\n  for (var _i42 = 0, _argsDiff$added4 = argsDiff.added; _i42 < _argsDiff$added4.length; _i42++) {\n    var _newArg = _argsDiff$added4[_i42];\n\n    if (isRequiredArgument(_newArg)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_ARG_ADDED,\n        description: \"A required arg \".concat(_newArg.name, \" on \").concat(oldType.name, \".\").concat(oldField.name, \" was added.\")\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_ARG_ADDED,\n        description: \"An optional arg \".concat(_newArg.name, \" on \").concat(oldType.name, \".\").concat(oldField.name, \" was added.\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if (isListType(oldType)) {\n    return (// if they're both lists, make sure the underlying types are compatible\n      isListType(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType) || // moving from nullable to non-null of the same underlying type is safe\n      isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n    );\n  }\n\n  if (isNonNullType(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType);\n  }\n\n  return (// if they're both named types, see if their names are equivalent\n    isNamedType(newType) && oldType.name === newType.name || // moving from nullable to non-null of the same underlying type is safe\n    isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n  );\n}\n\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if (isListType(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return isListType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType);\n  }\n\n  if (isNonNullType(oldType)) {\n    return (// if they're both non-null, make sure the underlying types are\n      // compatible\n      isNonNullType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType) || // moving from non-null to nullable of the same underlying type is safe\n      !isNonNullType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType)\n    );\n  } // if they're both named types, see if their names are equivalent\n\n\n  return isNamedType(newType) && oldType.name === newType.name;\n}\n\nfunction typeKindName(type) {\n  if (isScalarType(type)) {\n    return 'a Scalar type';\n  }\n\n  if (isObjectType(type)) {\n    return 'an Object type';\n  }\n\n  if (isInterfaceType(type)) {\n    return 'an Interface type';\n  }\n\n  if (isUnionType(type)) {\n    return 'a Union type';\n  }\n\n  if (isEnumType(type)) {\n    return 'an Enum type';\n  }\n\n  /* istanbul ignore else */\n  if (isInputObjectType(type)) {\n    return 'an Input type';\n  } // Not reachable. All possible named types have been considered.\n\n\n  /* istanbul ignore next */\n  invariant(false, 'Unexpected type: ' + inspect(type));\n}\n\nfunction stringifyValue(value, type) {\n  var ast = astFromValue(value, type);\n\n  /* istanbul ignore next */\n  ast != null || invariant(0);\n  var sortedAST = visit(ast, {\n    ObjectValue: function ObjectValue(objectNode) {\n      var fields = [].concat(objectNode.fields).sort(function (fieldA, fieldB) {\n        return fieldA.name.value.localeCompare(fieldB.name.value);\n      });\n      return _objectSpread({}, objectNode, {\n        fields: fields\n      });\n    }\n  });\n  return print(sortedAST);\n}\n\nfunction diff(oldArray, newArray) {\n  var added = [];\n  var removed = [];\n  var persisted = [];\n  var oldMap = keyMap(oldArray, function (_ref11) {\n    var name = _ref11.name;\n    return name;\n  });\n  var newMap = keyMap(newArray, function (_ref12) {\n    var name = _ref12.name;\n    return name;\n  });\n\n  for (var _i44 = 0; _i44 < oldArray.length; _i44++) {\n    var oldItem = oldArray[_i44];\n    var newItem = newMap[oldItem.name];\n\n    if (newItem === undefined) {\n      removed.push(oldItem);\n    } else {\n      persisted.push([oldItem, newItem]);\n    }\n  }\n\n  for (var _i46 = 0; _i46 < newArray.length; _i46++) {\n    var _newItem = newArray[_i46];\n\n    if (oldMap[_newItem.name] === undefined) {\n      added.push(_newItem);\n    }\n  }\n\n  return {\n    added: added,\n    persisted: persisted,\n    removed: removed\n  };\n}\n","import { GraphQLError } from '../error/GraphQLError';\nimport { visit, visitWithTypeInfo } from '../language/visitor';\nimport { getNamedType } from '../type/definition';\nimport { TypeInfo } from './TypeInfo';\n/**\n * A validation rule which reports deprecated usages.\n *\n * Returns a list of GraphQLError instances describing each deprecated use.\n */\n\nexport function findDeprecatedUsages(schema, ast) {\n  var errors = [];\n  var typeInfo = new TypeInfo(schema);\n  visit(ast, visitWithTypeInfo(typeInfo, {\n    Field: function Field(node) {\n      var fieldDef = typeInfo.getFieldDef();\n\n      if (fieldDef && fieldDef.isDeprecated) {\n        var parentType = typeInfo.getParentType();\n\n        if (parentType) {\n          var reason = fieldDef.deprecationReason;\n          errors.push(new GraphQLError(\"The field \".concat(parentType.name, \".\").concat(fieldDef.name, \" is deprecated.\") + (reason ? ' ' + reason : ''), node));\n        }\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var enumVal = typeInfo.getEnumValue();\n\n      if (enumVal && enumVal.isDeprecated) {\n        var type = getNamedType(typeInfo.getInputType());\n\n        if (type) {\n          var reason = enumVal.deprecationReason;\n          errors.push(new GraphQLError(\"The enum value \".concat(type.name, \".\").concat(enumVal.name, \" is deprecated.\") + (reason ? ' ' + reason : ''), node));\n        }\n      }\n    }\n  }));\n  return errors;\n}\n","// The GraphQL query recommended for a full schema introspection.\nexport { // Produce the GraphQL query recommended for a full schema introspection.\n// Accepts optional IntrospectionOptions.\ngetIntrospectionQuery, // @deprecated, use getIntrospectionQuery() - will be removed in v15.\nintrospectionQuery } from './introspectionQuery';\n// Gets the target Operation from a Document.\nexport { getOperationAST } from './getOperationAST'; // Gets the Type for the target Operation AST.\n\nexport { getOperationRootType } from './getOperationRootType'; // Convert a GraphQLSchema to an IntrospectionQuery.\n\nexport { introspectionFromSchema } from './introspectionFromSchema'; // Build a GraphQLSchema from an introspection result.\n\nexport { buildClientSchema } from './buildClientSchema'; // Build a GraphQLSchema from GraphQL Schema language.\n\nexport { buildASTSchema, buildSchema, // @deprecated: Get the description from a schema AST node and supports legacy\n// syntax for specifying descriptions - will be removed in v16.\ngetDescription } from './buildASTSchema';\n// Extends an existing GraphQLSchema from a parsed GraphQL Schema language AST.\nexport { extendSchema } from './extendSchema'; // Sort a GraphQLSchema.\n\nexport { lexicographicSortSchema } from './lexicographicSortSchema'; // Print a GraphQLSchema to GraphQL Schema language.\n\nexport { printSchema, printType, printIntrospectionSchema } from './schemaPrinter'; // Create a GraphQLType from a GraphQL language AST.\n\nexport { typeFromAST } from './typeFromAST'; // Create a JavaScript value from a GraphQL language AST with a type.\n\nexport { valueFromAST } from './valueFromAST'; // Create a JavaScript value from a GraphQL language AST without a type.\n\nexport { valueFromASTUntyped } from './valueFromASTUntyped'; // Create a GraphQL language AST from a JavaScript value.\n\nexport { astFromValue } from './astFromValue'; // A helper to use within recursive-descent visitors which need to be aware of\n// the GraphQL type system.\n\nexport { TypeInfo } from './TypeInfo'; // Coerces a JavaScript value to a GraphQL type, or produces errors.\n\nexport { coerceInputValue } from './coerceInputValue'; // @deprecated use coerceInputValue - will be removed in v15.\n\nexport { coerceValue } from './coerceValue'; // @deprecated use coerceInputValue - will be removed in v15.\n\nexport { isValidJSValue } from './isValidJSValue'; // @deprecated use validation - will be removed in v15\n\nexport { isValidLiteralValue } from './isValidLiteralValue'; // Concatenates multiple AST together.\n\nexport { concatAST } from './concatAST'; // Separates an AST into an AST per Operation.\n\nexport { separateOperations } from './separateOperations'; // Strips characters that are not significant to the validity or execution\n// of a GraphQL document.\n\nexport { stripIgnoredCharacters } from './stripIgnoredCharacters'; // Comparators for types\n\nexport { isEqualType, isTypeSubTypeOf, doTypesOverlap } from './typeComparators'; // Asserts that a string is a valid GraphQL name\n\nexport { assertValidName, isValidNameError } from './assertValidName'; // Compares two GraphQLSchemas and detects breaking changes.\n\nexport { BreakingChangeType, DangerousChangeType, findBreakingChanges, findDangerousChanges } from './findBreakingChanges';\n// Report all deprecated usage within a GraphQL document.\nexport { findDeprecatedUsages } from './findDeprecatedUsages';\n","/**\n * GraphQL.js provides a reference implementation for the GraphQL specification\n * but is also a useful utility for operating on GraphQL files and building\n * sophisticated tools.\n *\n * This primary module exports a general purpose function for fulfilling all\n * steps of the GraphQL specification in a single operation, but also includes\n * utilities for every part of the GraphQL specification:\n *\n *   - Parsing the GraphQL language.\n *   - Building a GraphQL type schema.\n *   - Validating a GraphQL request against a type schema.\n *   - Executing a GraphQL request against a type schema.\n *\n * This also includes utility functions for operating on GraphQL types and\n * GraphQL documents to facilitate building tools.\n *\n * You may also import from each sub-directory directly. For example, the\n * following two import statements are equivalent:\n *\n *     import { parse } from 'graphql';\n *     import { parse } from 'graphql/language';\n */\n// The GraphQL.js version info.\nexport { version, versionInfo } from './version'; // The primary entry point into fulfilling a GraphQL request.\n\nexport { graphql, graphqlSync } from './graphql'; // Create and operate on GraphQL type definitions and schema.\n\nexport { // Definitions\nGraphQLSchema, GraphQLDirective, GraphQLScalarType, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLNonNull, // Standard GraphQL Scalars\nspecifiedScalarTypes, GraphQLInt, GraphQLFloat, GraphQLString, GraphQLBoolean, GraphQLID, // Built-in Directives defined by the Spec\nspecifiedDirectives, GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective, // \"Enum\" of Type Kinds\nTypeKind, // Constant Deprecation Reason\nDEFAULT_DEPRECATION_REASON, // GraphQL Types for introspection.\nintrospectionTypes, __Schema, __Directive, __DirectiveLocation, __Type, __Field, __InputValue, __EnumValue, __TypeKind, // Meta-field definitions.\nSchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef, // Predicates\nisSchema, isDirective, isType, isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isListType, isNonNullType, isInputType, isOutputType, isLeafType, isCompositeType, isAbstractType, isWrappingType, isNullableType, isNamedType, isRequiredArgument, isRequiredInputField, isSpecifiedScalarType, isIntrospectionType, isSpecifiedDirective, // Assertions\nassertSchema, assertDirective, assertType, assertScalarType, assertObjectType, assertInterfaceType, assertUnionType, assertEnumType, assertInputObjectType, assertListType, assertNonNullType, assertInputType, assertOutputType, assertLeafType, assertCompositeType, assertAbstractType, assertWrappingType, assertNullableType, assertNamedType, // Un-modifiers\ngetNullableType, getNamedType, // Validate GraphQL schema.\nvalidateSchema, assertValidSchema } from './type';\n// Parse and operate on GraphQL language source files.\nexport { Source, getLocation, // Print source location\nprintLocation, printSourceLocation, // Lex\ncreateLexer, TokenKind, // Parse\nparse, parseValue, parseType, // Print\nprint, // Visit\nvisit, visitInParallel, visitWithTypeInfo, getVisitFn, BREAK, Kind, DirectiveLocation, // Predicates\nisDefinitionNode, isExecutableDefinitionNode, isSelectionNode, isValueNode, isTypeNode, isTypeSystemDefinitionNode, isTypeDefinitionNode, isTypeSystemExtensionNode, isTypeExtensionNode } from './language';\n// Execute GraphQL queries.\nexport { execute, defaultFieldResolver, defaultTypeResolver, responsePathAsArray, getDirectiveValues } from './execution';\nexport { subscribe, createSourceEventStream } from './subscription';\n// Validate GraphQL documents.\nexport { validate, ValidationContext, // All validation rules in the GraphQL Specification.\nspecifiedRules, // Individual validation rules.\nExecutableDefinitionsRule, FieldsOnCorrectTypeRule, FragmentsOnCompositeTypesRule, KnownArgumentNamesRule, KnownDirectivesRule, KnownFragmentNamesRule, KnownTypeNamesRule, LoneAnonymousOperationRule, NoFragmentCyclesRule, NoUndefinedVariablesRule, NoUnusedFragmentsRule, NoUnusedVariablesRule, OverlappingFieldsCanBeMergedRule, PossibleFragmentSpreadsRule, ProvidedRequiredArgumentsRule, ScalarLeafsRule, SingleFieldSubscriptionsRule, UniqueArgumentNamesRule, UniqueDirectivesPerLocationRule, UniqueFragmentNamesRule, UniqueInputFieldNamesRule, UniqueOperationNamesRule, UniqueVariableNamesRule, ValuesOfCorrectTypeRule, VariablesAreInputTypesRule, VariablesInAllowedPositionRule, // SDL-specific validation rules\nLoneSchemaDefinitionRule, UniqueOperationTypesRule, UniqueTypeNamesRule, UniqueEnumValueNamesRule, UniqueFieldDefinitionNamesRule, UniqueDirectiveNamesRule, PossibleTypeExtensionsRule } from './validation';\n// Create, format, and print GraphQL errors.\nexport { GraphQLError, syntaxError, locatedError, printError, formatError } from './error';\n// Utilities for operating on GraphQL type schema and parsed sources.\nexport { // Produce the GraphQL query recommended for a full schema introspection.\n// Accepts optional IntrospectionOptions.\ngetIntrospectionQuery, // @deprecated: use getIntrospectionQuery - will be removed in v15.\nintrospectionQuery, // Gets the target Operation from a Document.\ngetOperationAST, // Gets the Type for the target Operation AST.\ngetOperationRootType, // Convert a GraphQLSchema to an IntrospectionQuery.\nintrospectionFromSchema, // Build a GraphQLSchema from an introspection result.\nbuildClientSchema, // Build a GraphQLSchema from a parsed GraphQL Schema language AST.\nbuildASTSchema, // Build a GraphQLSchema from a GraphQL schema language document.\nbuildSchema, // @deprecated: Get the description from a schema AST node and supports legacy\n// syntax for specifying descriptions - will be removed in v16.\ngetDescription, // Extends an existing GraphQLSchema from a parsed GraphQL Schema\n// language AST.\nextendSchema, // Sort a GraphQLSchema.\nlexicographicSortSchema, // Print a GraphQLSchema to GraphQL Schema language.\nprintSchema, // Print a GraphQLType to GraphQL Schema language.\nprintType, // Prints the built-in introspection schema in the Schema Language\n// format.\nprintIntrospectionSchema, // Create a GraphQLType from a GraphQL language AST.\ntypeFromAST, // Create a JavaScript value from a GraphQL language AST with a Type.\nvalueFromAST, // Create a JavaScript value from a GraphQL language AST without a Type.\nvalueFromASTUntyped, // Create a GraphQL language AST from a JavaScript value.\nastFromValue, // A helper to use within recursive-descent visitors which need to be aware of\n// the GraphQL type system.\nTypeInfo, // Coerces a JavaScript value to a GraphQL type, or produces errors.\ncoerceInputValue, // @deprecated use coerceInputValue - will be removed in v15\ncoerceValue, // @deprecated use coerceInputValue - will be removed in v15\nisValidJSValue, // @deprecated use validation - will be removed in v15\nisValidLiteralValue, // Concatenates multiple AST together.\nconcatAST, // Separates an AST into an AST per Operation.\nseparateOperations, // Strips characters that are not significant to the validity or execution\n// of a GraphQL document.\nstripIgnoredCharacters, // Comparators for types\nisEqualType, isTypeSubTypeOf, doTypesOverlap, // Asserts a string is a valid GraphQL name.\nassertValidName, // Determine if a string is a valid GraphQL name.\nisValidNameError, // Compares two GraphQLSchemas and detects breaking changes.\nBreakingChangeType, DangerousChangeType, findBreakingChanges, findDangerousChanges, // Report all deprecated usage within a GraphQL document.\nfindDeprecatedUsages } from './utilities';\n","const genericMessage = \"Invariant Violation\";\nconst {\n  setPrototypeOf = function (obj: any, proto: any) {\n    obj.__proto__ = proto;\n    return obj;\n  },\n} = Object as any;\n\nexport class InvariantError extends Error {\n  framesToPop = 1;\n  name = genericMessage;\n  constructor(message: string | number = genericMessage) {\n    super(\n      typeof message === \"number\"\n        ? `${genericMessage}: ${message} (see https://github.com/apollographql/invariant-packages)`\n        : message\n    );\n    setPrototypeOf(this, InvariantError.prototype);\n  }\n}\n\nexport function invariant(\n  condition: any,\n  message?: string | number,\n): asserts condition {\n  if (!condition) {\n    throw new InvariantError(message);\n  }\n}\n\nconst verbosityLevels = [\"debug\", \"log\", \"warn\", \"error\", \"silent\"] as const;\nexport type VerbosityLevel = (typeof verbosityLevels)[number];\nexport type ConsoleMethodName = Exclude<VerbosityLevel, \"silent\">;\nlet verbosityLevel = verbosityLevels.indexOf(\"log\");\n\nfunction wrapConsoleMethod<M extends ConsoleMethodName>(name: M) {\n  return function () {\n    if (verbosityLevels.indexOf(name) >= verbosityLevel) {\n      // Default to console.log if this host environment happens not to provide\n      // all the console.* methods we need.\n      const method = console[name] || console.log;\n      return method.apply(console, arguments as any);\n    }\n  } as (typeof console)[M];\n}\n\nexport namespace invariant {\n  export const debug = wrapConsoleMethod(\"debug\");\n  export const log = wrapConsoleMethod(\"log\");\n  export const warn = wrapConsoleMethod(\"warn\");\n  export const error = wrapConsoleMethod(\"error\");\n}\n\nexport function setVerbosity(level: VerbosityLevel): VerbosityLevel {\n  const old = verbosityLevels[verbosityLevel];\n  verbosityLevel = Math.max(0, verbosityLevels.indexOf(level));\n  return old;\n}\n\nexport default invariant;\n","export function maybe<T>(thunk: () => T): T | undefined {\n  try { return thunk() } catch {}\n}\n","import { maybe } from \"./maybe\";\n\ndeclare global {\n  // Despite our attempts to reuse the React Native __DEV__ constant instead of\n  // inventing something new and Apollo-specific, declaring a useful type for\n  // __DEV__ unfortunately conflicts (TS2451) with the global declaration in\n  // @types/react-native/index.d.ts.\n  //\n  // To hide that harmless conflict, we @ts-ignore this line, which should\n  // continue to provide a type for __DEV__ elsewhere in the Apollo Client\n  // codebase, even when @types/react-native is not in use.\n  //\n  // However, because TypeScript drops @ts-ignore comments when generating .d.ts\n  // files (https://github.com/microsoft/TypeScript/issues/38628), we also\n  // sanitize the dist/utilities/globals/global.d.ts file to avoid declaring\n  // __DEV__ globally altogether when @apollo/client is installed in the\n  // node_modules directory of an application.\n  //\n  // @ts-ignore\n  const __DEV__: boolean | undefined;\n}\n\nexport default (\n  maybe(() => globalThis) ||\n  maybe(() => window) ||\n  maybe(() => self) ||\n  maybe(() => global) ||\n  // We don't expect the Function constructor ever to be invoked at runtime, as\n  // long as at least one of globalThis, window, self, or global is defined, so\n  // we are under no obligation to make it easy for static analysis tools to\n  // detect syntactic usage of the Function constructor. If you think you can\n  // improve your static analysis to detect this obfuscation, think again. This\n  // is an arms race you cannot win, at least not in JavaScript.\n  maybe(function() { return maybe.constructor(\"return this\")() })\n) as typeof globalThis & {\n  __DEV__: typeof __DEV__;\n};\n","import global from \"./global\";\nimport { maybe } from \"./maybe\";\n\n// To keep string-based find/replace minifiers from messing with __DEV__ inside\n// string literals or properties like global.__DEV__, we construct the \"__DEV__\"\n// string in a roundabout way that won't be altered by find/replace strategies.\nconst __ = \"__\";\nconst GLOBAL_KEY = [__, __].join(\"DEV\");\n\nfunction getDEV() {\n  try {\n    return Boolean(__DEV__);\n  } catch {\n    Object.defineProperty(global, GLOBAL_KEY, {\n      // In a buildless browser environment, maybe(() => process.env.NODE_ENV)\n      // evaluates as undefined, so __DEV__ becomes true by default, but can be\n      // initialized to false instead by a script/module that runs earlier.\n      value: maybe(() => process.env.NODE_ENV) !== \"production\",\n      enumerable: false,\n      configurable: true,\n      writable: true,\n    });\n    // Using computed property access rather than global.__DEV__ here prevents\n    // string-based find/replace strategies from munging this to global.false:\n    return (global as any)[GLOBAL_KEY];\n  }\n}\n\nexport default getDEV();\n","function maybe(thunk) {\n  try { return thunk() } catch (_) {}\n}\n\nvar safeGlobal = (\n  maybe(function() { return globalThis }) ||\n  maybe(function() { return window }) ||\n  maybe(function() { return self }) ||\n  maybe(function() { return global }) ||\n  // We don't expect the Function constructor ever to be invoked at runtime, as\n  // long as at least one of globalThis, window, self, or global is defined, so\n  // we are under no obligation to make it easy for static analysis tools to\n  // detect syntactic usage of the Function constructor. If you think you can\n  // improve your static analysis to detect this obfuscation, think again. This\n  // is an arms race you cannot win, at least not in JavaScript.\n  maybe(function() { return maybe.constructor(\"return this\")() })\n);\n\nvar needToRemove = false;\n\nexport function install() {\n  if (safeGlobal &&\n      !maybe(function() { return process.env.NODE_ENV }) &&\n      !maybe(function() { return process })) {\n    Object.defineProperty(safeGlobal, \"process\", {\n      value: {\n        env: {\n          // This default needs to be \"production\" instead of \"development\", to\n          // avoid the problem https://github.com/graphql/graphql-js/pull/2894\n          // will eventually solve, once merged and released.\n          NODE_ENV: \"production\",\n        },\n      },\n      // Let anyone else change global.process as they see fit, but hide it from\n      // Object.keys(global) enumeration.\n      configurable: true,\n      enumerable: false,\n      writable: true,\n    });\n    needToRemove = true;\n  }\n}\n\n// Call install() at least once, when this module is imported.\ninstall();\n\nexport function remove() {\n  if (needToRemove) {\n    delete safeGlobal.process;\n    needToRemove = false;\n  }\n}\n","// The ordering of these imports is important, because it ensures the temporary\n// process.env.NODE_ENV polyfill is defined globally (if necessary) before we\n// import { Source } from 'graphql'. The instanceOf function that we really care\n// about (the one that uses process.env.NODE_ENV) is not exported from the\n// top-level graphql package, but graphql/language/source uses instanceOf, and\n// has relatively few dependencies, so importing it here should not increase\n// bundle sizes as much as other options.\nimport { remove } from 'ts-invariant/process';\nimport { Source } from 'graphql';\n\nexport function removeTemporaryGlobals() {\n  // Using Source here here just to make sure it won't be tree-shaken away.\n  return typeof Source === \"function\" ? remove() : remove();\n}\n","import { invariant, InvariantError } from \"ts-invariant\";\n\n// Just in case the graphql package switches from process.env.NODE_ENV to\n// __DEV__, make sure __DEV__ is polyfilled before importing graphql.\nimport DEV from \"./DEV\";\nexport { DEV }\nexport function checkDEV() {\n  invariant(\"boolean\" === typeof DEV, DEV);\n}\n\n// Import graphql/jsutils/instanceOf safely, working around its unchecked usage\n// of process.env.NODE_ENV and https://github.com/graphql/graphql-js/pull/2894.\nimport { removeTemporaryGlobals } from \"./fix-graphql\";\n\n// Synchronously undo the global process.env.NODE_ENV polyfill that we created\n// temporarily while importing the offending graphql/jsutils/instanceOf module.\nremoveTemporaryGlobals();\n\nexport { maybe } from \"./maybe\";\nexport { default as global } from \"./global\";\nexport { invariant, InvariantError }\n\n// Ensure __DEV__ was properly initialized, and prevent tree-shaking bundlers\n// from mistakenly pruning the ./DEV module (see issue #8674).\ncheckDEV();\n","// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\n// object keys weakly, yet can also hold non-object keys, unlike the\n// native `WeakMap`.\n\n// If no makeData function is supplied, the looked-up data will be an empty,\n// null-prototype Object.\nconst defaultMakeData = () => Object.create(null);\n\n// Useful for processing arguments objects as well as arrays.\nconst { forEach, slice } = Array.prototype;\n\nexport class Trie<Data> {\n  // Since a `WeakMap` cannot hold primitive values as keys, we need a\n  // backup `Map` instance to hold primitive keys. Both `this._weakMap`\n  // and `this._strongMap` are lazily initialized.\n  private weak?: WeakMap<any, Trie<Data>>;\n  private strong?: Map<any, Trie<Data>>;\n  private data?: Data;\n\n  constructor(\n    private weakness = true,\n    private makeData: (array: any[]) => Data = defaultMakeData,\n  ) {}\n\n  public lookup<T extends any[]>(...array: T): Data {\n    return this.lookupArray(array);\n  }\n\n  public lookupArray<T extends IArguments | any[]>(array: T): Data {\n    let node: Trie<Data> = this;\n    forEach.call(array, key => node = node.getChildTrie(key));\n    return node.data || (node.data = this.makeData(slice.call(array)));\n  }\n\n  private getChildTrie(key: any) {\n    const map = this.weakness && isObjRef(key)\n      ? this.weak || (this.weak = new WeakMap<any, Trie<Data>>())\n      : this.strong || (this.strong = new Map<any, Trie<Data>>());\n    let child = map.get(key);\n    if (!child) map.set(key, child = new Trie<Data>(this.weakness, this.makeData));\n    return child;\n  }\n}\n\nfunction isObjRef(value: any) {\n  switch (typeof value) {\n  case \"object\":\n    if (value === null) break;\n    // Fall through to return true...\n  case \"function\":\n    return true;\n  }\n  return false;\n}\n","import { Slot } from \"./slot\";\nexport { Slot }\nexport const { bind, noContext } = Slot;\n\n// Relying on the @types/node declaration of global.setTimeout can make\n// things tricky for dowstream projects (see PR #7).\ndeclare function setTimeout(\n  callback: (...args: any[]) => any,\n  ms?: number,\n  ...args: any[]\n): any;\n\n// Like global.setTimeout, except the callback runs with captured context.\nexport { setTimeoutWithContext as setTimeout };\nfunction setTimeoutWithContext(callback: () => any, delay: number) {\n  return setTimeout(bind(callback), delay);\n}\n\n// Turn any generator function into an async function (using yield instead\n// of await), with context automatically preserved across yields.\nexport function asyncFromGen<\n  TArgs extends any[],\n  TYield = any,\n  TReturn = any,\n  TNext = any,\n>(\n  genFn: (...args: TArgs) => Generator<TYield, TReturn, TNext>\n) {\n  return function (this: any) {\n    const gen = genFn.apply(this, arguments as any);\n\n    type Method = (\n      this: Generator<TYield, TReturn, TNext>,\n      arg: any,\n    ) => IteratorResult<TYield, TReturn>;\n\n    const boundNext: Method = bind(gen.next);\n    const boundThrow: Method = bind(gen.throw!);\n\n    return new Promise((resolve, reject) => {\n      function invoke(method: Method, argument: any) {\n        try {\n          var result: any = method.call(gen, argument);\n        } catch (error) {\n          return reject(error);\n        }\n        const next = result.done ? resolve : invokeNext;\n        if (isPromiseLike(result.value)) {\n          result.value.then(next, result.done ? reject : invokeThrow);\n        } else {\n          next(result.value);\n        }\n      }\n      const invokeNext = (value?: any) => invoke(boundNext, value);\n      const invokeThrow = (error: any) => invoke(boundThrow, error);\n      invokeNext();\n    });\n  } as (...args: TArgs) => Promise<any>;\n}\n\nfunction isPromiseLike(value: any): value is PromiseLike<any> {\n  return value && typeof value.then === \"function\";\n}\n\n// If you use the fibers npm package to implement coroutines in Node.js,\n// you should call this function at least once to ensure context management\n// remains coherent across any yields.\nconst wrappedFibers: Function[] = [];\nexport function wrapYieldingFiberMethods<F extends Function>(Fiber: F): F {\n  // There can be only one implementation of Fiber per process, so this array\n  // should never grow longer than one element.\n  if (wrappedFibers.indexOf(Fiber) < 0) {\n    const wrap = (obj: any, method: string) => {\n      const fn = obj[method];\n      obj[method] = function () {\n        return noContext(fn, arguments as any, this);\n      };\n    }\n    // These methods can yield, according to\n    // https://github.com/laverdet/node-fibers/blob/ddebed9b8ae3883e57f822e2108e6943e5c8d2a8/fibers.js#L97-L100\n    wrap(Fiber, \"yield\");\n    wrap(Fiber.prototype, \"run\");\n    wrap(Fiber.prototype, \"throwInto\");\n    wrappedFibers.push(Fiber);\n  }\n  return Fiber;\n}\n","type Context = {\n  parent: Context | null;\n  slots: { [slotId: string]: any };\n}\n\n// This currentContext variable will only be used if the makeSlotClass\n// function is called, which happens only if this is the first copy of the\n// @wry/context package to be imported.\nlet currentContext: Context | null = null;\n\n// This unique internal object is used to denote the absence of a value\n// for a given Slot, and is never exposed to outside code.\nconst MISSING_VALUE: any = {};\n\nlet idCounter = 1;\n\n// Although we can't do anything about the cost of duplicated code from\n// accidentally bundling multiple copies of the @wry/context package, we can\n// avoid creating the Slot class more than once using makeSlotClass.\nconst makeSlotClass = () => class Slot<TValue> {\n  // If you have a Slot object, you can find out its slot.id, but you cannot\n  // guess the slot.id of a Slot you don't have access to, thanks to the\n  // randomized suffix.\n  public readonly id = [\n    \"slot\",\n    idCounter++,\n    Date.now(),\n    Math.random().toString(36).slice(2),\n  ].join(\":\");\n\n  public hasValue() {\n    for (let context = currentContext; context; context = context.parent) {\n      // We use the Slot object iself as a key to its value, which means the\n      // value cannot be obtained without a reference to the Slot object.\n      if (this.id in context.slots) {\n        const value = context.slots[this.id];\n        if (value === MISSING_VALUE) break;\n        if (context !== currentContext) {\n          // Cache the value in currentContext.slots so the next lookup will\n          // be faster. This caching is safe because the tree of contexts and\n          // the values of the slots are logically immutable.\n          currentContext!.slots[this.id] = value;\n        }\n        return true;\n      }\n    }\n    if (currentContext) {\n      // If a value was not found for this Slot, it's never going to be found\n      // no matter how many times we look it up, so we might as well cache\n      // the absence of the value, too.\n      currentContext.slots[this.id] = MISSING_VALUE;\n    }\n    return false;\n  }\n\n  public getValue(): TValue | undefined {\n    if (this.hasValue()) {\n      return currentContext!.slots[this.id] as TValue;\n    }\n  }\n\n  public withValue<TResult, TArgs extends any[], TThis = any>(\n    value: TValue,\n    callback: (this: TThis, ...args: TArgs) => TResult,\n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args?: TArgs,\n    thisArg?: TThis,\n  ): TResult {\n    const slots = {\n      __proto__: null,\n      [this.id]: value,\n    };\n    const parent = currentContext;\n    currentContext = { parent, slots };\n    try {\n      // Function.prototype.apply allows the arguments array argument to be\n      // omitted or undefined, so args! is fine here.\n      return callback.apply(thisArg!, args!);\n    } finally {\n      currentContext = parent;\n    }\n  }\n\n  // Capture the current context and wrap a callback function so that it\n  // reestablishes the captured context when called.\n  static bind<TArgs extends any[], TResult, TThis = any>(\n    callback: (this: TThis, ...args: TArgs) => TResult,\n  ) {\n    const context = currentContext;\n    return function (this: TThis) {\n      const saved = currentContext;\n      try {\n        currentContext = context;\n        return callback.apply(this, arguments as any);\n      } finally {\n        currentContext = saved;\n      }\n    } as typeof callback;\n  }\n\n  // Immediately run a callback function without any captured context.\n  static noContext<TResult, TArgs extends any[], TThis = any>(\n    callback: (this: TThis, ...args: TArgs) => TResult,\n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args?: TArgs,\n    thisArg?: TThis,\n  ) {\n    if (currentContext) {\n      const saved = currentContext;\n      try {\n        currentContext = null;\n        // Function.prototype.apply allows the arguments array argument to be\n        // omitted or undefined, so args! is fine here.\n        return callback.apply(thisArg!, args!);\n      } finally {\n        currentContext = saved;\n      }\n    } else {\n      return callback.apply(thisArg!, args!);\n    }\n  }\n};\n\nfunction maybe<T>(fn: () => T): T | undefined {\n  try {\n    return fn();\n  } catch (ignored) {}\n}\n\n// We store a single global implementation of the Slot class as a permanent\n// non-enumerable property of the globalThis object. This obfuscation does\n// nothing to prevent access to the Slot class, but at least it ensures the\n// implementation (i.e. currentContext) cannot be tampered with, and all copies\n// of the @wry/context package (hopefully just one) will share the same Slot\n// implementation. Since the first copy of the @wry/context package to be\n// imported wins, this technique imposes a steep cost for any future breaking\n// changes to the Slot class.\nconst globalKey = \"@wry/context:Slot\";\n\nconst host =\n  // Prefer globalThis when available.\n  // https://github.com/benjamn/wryware/issues/347\n  maybe(() => globalThis) ||\n  // Fall back to global, which works in Node.js and may be converted by some\n  // bundlers to the appropriate identifier (window, self, ...) depending on the\n  // bundling target. https://github.com/endojs/endo/issues/576#issuecomment-1178515224\n  maybe(() => global) ||\n  // Otherwise, use a dummy host that's local to this module. We used to fall\n  // back to using the Array constructor as a namespace, but that was flagged in\n  // https://github.com/benjamn/wryware/issues/347, and can be avoided.\n  Object.create(null) as typeof Array;\n\n// Whichever globalHost we're using, make TypeScript happy about the additional\n// globalKey property.\nconst globalHost: typeof host & {\n  [globalKey]?: typeof Slot;\n} = host;\n\nexport const Slot: ReturnType<typeof makeSlotClass> =\n  globalHost[globalKey] ||\n  // Earlier versions of this package stored the globalKey property on the Array\n  // constructor, so we check there as well, to prevent Slot class duplication.\n  (Array as typeof globalHost)[globalKey] ||\n  (function (Slot) {\n    try {\n      Object.defineProperty(globalHost, globalKey, {\n        value: Slot,\n        enumerable: false,\n        writable: false,\n        // When it was possible for globalHost to be the Array constructor (a\n        // legacy Slot dedup strategy), it was important for the property to be\n        // configurable:true so it could be deleted. That does not seem to be as\n        // important when globalHost is the global object, but I don't want to\n        // cause similar problems again, and configurable:true seems safest.\n        // https://github.com/endojs/endo/issues/576#issuecomment-1178274008\n        configurable: true\n      });\n    } finally {\n      return Slot;\n    }\n  })(makeSlotClass());\n","interface Node<K, V> {\n  key: K;\n  value: V;\n  newer: Node<K, V> | null;\n  older: Node<K, V> | null;\n}\n\nfunction defaultDispose() {}\n\nexport class Cache<K = any, V = any> {\n  private map = new Map<K, Node<K, V>>();\n  private newest: Node<K, V> | null = null;\n  private oldest: Node<K, V> | null = null;\n\n  constructor(\n    private max = Infinity,\n    public dispose: (value: V, key: K) => void = defaultDispose,\n  ) {}\n\n  public has(key: K): boolean {\n    return this.map.has(key);\n  }\n\n  public get(key: K): V | undefined {\n    const node = this.getNode(key);\n    return node && node.value;\n  }\n\n  private getNode(key: K): Node<K, V> | undefined {\n    const node = this.map.get(key);\n\n    if (node && node !== this.newest) {\n      const { older, newer } = node;\n\n      if (newer) {\n        newer.older = older;\n      }\n\n      if (older) {\n        older.newer = newer;\n      }\n\n      node.older = this.newest;\n      node.older!.newer = node;\n\n      node.newer = null;\n      this.newest = node;\n\n      if (node === this.oldest) {\n        this.oldest = newer;\n      }\n    }\n\n    return node;\n  }\n\n  public set(key: K, value: V): V {\n    let node = this.getNode(key);\n    if (node) {\n      return node.value = value;\n    }\n\n    node = {\n      key,\n      value,\n      newer: null,\n      older: this.newest\n    };\n\n    if (this.newest) {\n      this.newest.newer = node;\n    }\n\n    this.newest = node;\n    this.oldest = this.oldest || node;\n\n    this.map.set(key, node);\n\n    return node.value;\n  }\n\n  public clean() {\n    while (this.oldest && this.map.size > this.max) {\n      this.delete(this.oldest.key);\n    }\n  }\n\n  public delete(key: K): boolean {\n    const node = this.map.get(key);\n    if (node) {\n      if (node === this.newest) {\n        this.newest = node.older;\n      }\n\n      if (node === this.oldest) {\n        this.oldest = node.newer;\n      }\n\n      if (node.newer) {\n        node.newer.older = node.older;\n      }\n\n      if (node.older) {\n        node.older.newer = node.newer;\n      }\n\n      this.map.delete(key);\n      this.dispose(node.value, key);\n\n      return true;\n    }\n\n    return false;\n  }\n}\n","export const {\n  hasOwnProperty,\n} = Object.prototype;\n\nexport const {\n  // This Array.from polyfill is restricted to working with Set<any> for now,\n  // but we can improve the polyfill and add other input types, as needed. Note\n  // that this fallback implementation will only be used if the host environment\n  // does not support a native Array.from function. In most modern JS runtimes,\n  // the toArray function exported here will be === Array.from.\n  from: toArray = (collection: Set<any>) => {\n    const array: any[] = [];\n    collection.forEach(item => array.push(item));\n    return array;\n  },\n} = Array;\n\nexport type Unsubscribable = {\n  unsubscribe?: void | (() => any);\n}\n\nexport function maybeUnsubscribe(entryOrDep: Unsubscribable) {\n  const { unsubscribe } = entryOrDep;\n  if (typeof unsubscribe === \"function\") {\n    entryOrDep.unsubscribe = void 0;\n    unsubscribe();\n  }\n}\n","import { parentEntrySlot } from \"./context\";\nimport { OptimisticWrapOptions } from \"./index\";\nimport { Dep } from \"./dep\";\nimport { maybeUnsubscribe, toArray, Unsubscribable } from \"./helpers\";\n\nconst emptySetPool: Set<any>[] = [];\nconst POOL_TARGET_SIZE = 100;\n\n// Since this package might be used browsers, we should avoid using the\n// Node built-in assert module.\nfunction assert(condition: any, optionalMessage?: string) {\n  if (! condition) {\n    throw new Error(optionalMessage || \"assertion failure\");\n  }\n}\n\n// Since exceptions are cached just like normal values, we need an efficient\n// way of representing unknown, ordinary, and exceptional values.\ntype Value<T> =\n  | []           // unknown\n  | [T]          // known value\n  | [void, any]; // known exception\n\nfunction valueIs(a: Value<any>, b: Value<any>) {\n  const len = a.length;\n  return (\n    // Unknown values are not equal to each other.\n    len > 0 &&\n    // Both values must be ordinary (or both exceptional) to be equal.\n    len === b.length &&\n    // The underlying value or exception must be the same.\n    a[len - 1] === b[len - 1]\n  );\n}\n\nfunction valueGet<T>(value: Value<T>): T {\n  switch (value.length) {\n    case 0: throw new Error(\"unknown value\");\n    case 1: return value[0];\n    case 2: throw value[1];\n  }\n}\n\nfunction valueCopy<T>(value: Value<T>): Value<T> {\n  return value.slice(0) as Value<T>;\n}\n\nexport type AnyEntry = Entry<any, any>;\n\nexport class Entry<TArgs extends any[], TValue> {\n  public static count = 0;\n\n  public subscribe: OptimisticWrapOptions<TArgs>[\"subscribe\"];\n  public unsubscribe: Unsubscribable[\"unsubscribe\"];\n\n  public readonly parents = new Set<AnyEntry>();\n  public readonly childValues = new Map<AnyEntry, Value<any>>();\n\n  // When this Entry has children that are dirty, this property becomes\n  // a Set containing other Entry objects, borrowed from emptySetPool.\n  // When the set becomes empty, it gets recycled back to emptySetPool.\n  public dirtyChildren: Set<AnyEntry> | null = null;\n\n  public dirty = true;\n  public recomputing = false;\n  public readonly value: Value<TValue> = [];\n\n  constructor(\n    public readonly fn: (...args: TArgs) => TValue,\n  ) {\n    ++Entry.count;\n  }\n\n  public peek(): TValue | undefined {\n    if (this.value.length === 1 && !mightBeDirty(this)) {\n      rememberParent(this);\n      return this.value[0];\n    }\n  }\n\n  // This is the most important method of the Entry API, because it\n  // determines whether the cached this.value can be returned immediately,\n  // or must be recomputed. The overall performance of the caching system\n  // depends on the truth of the following observations: (1) this.dirty is\n  // usually false, (2) this.dirtyChildren is usually null/empty, and thus\n  // (3) valueGet(this.value) is usually returned without recomputation.\n  public recompute(args: TArgs): TValue {\n    assert(! this.recomputing, \"already recomputing\");\n    rememberParent(this);\n    return mightBeDirty(this)\n      ? reallyRecompute(this, args)\n      : valueGet(this.value);\n  }\n\n  public setDirty() {\n    if (this.dirty) return;\n    this.dirty = true;\n    this.value.length = 0;\n    reportDirty(this);\n    // We can go ahead and unsubscribe here, since any further dirty\n    // notifications we receive will be redundant, and unsubscribing may\n    // free up some resources, e.g. file watchers.\n    maybeUnsubscribe(this);\n  }\n\n  public dispose() {\n    this.setDirty();\n\n    // Sever any dependency relationships with our own children, so those\n    // children don't retain this parent Entry in their child.parents sets,\n    // thereby preventing it from being fully garbage collected.\n    forgetChildren(this);\n\n    // Because this entry has been kicked out of the cache (in index.js),\n    // we've lost the ability to find out if/when this entry becomes dirty,\n    // whether that happens through a subscription, because of a direct call\n    // to entry.setDirty(), or because one of its children becomes dirty.\n    // Because of this loss of future information, we have to assume the\n    // worst (that this entry might have become dirty very soon), so we must\n    // immediately mark this entry's parents as dirty. Normally we could\n    // just call entry.setDirty() rather than calling parent.setDirty() for\n    // each parent, but that would leave this entry in parent.childValues\n    // and parent.dirtyChildren, which would prevent the child from being\n    // truly forgotten.\n    eachParent(this, (parent, child) => {\n      parent.setDirty();\n      forgetChild(parent, this);\n    });\n  }\n\n  public forget() {\n    // The code that creates Entry objects in index.ts will replace this method\n    // with one that actually removes the Entry from the cache, which will also\n    // trigger the entry.dispose method.\n    this.dispose();\n  }\n\n  private deps: Set<Dep<any>> | null = null;\n\n  public dependOn(dep: Dep<any>) {\n    dep.add(this);\n    if (! this.deps) {\n      this.deps = emptySetPool.pop() || new Set<Set<AnyEntry>>();\n    }\n    this.deps.add(dep);\n  }\n\n  public forgetDeps() {\n    if (this.deps) {\n      toArray(this.deps).forEach(dep => dep.delete(this));\n      this.deps.clear();\n      emptySetPool.push(this.deps);\n      this.deps = null;\n    }\n  }\n}\n\nfunction rememberParent(child: AnyEntry) {\n  const parent = parentEntrySlot.getValue();\n  if (parent) {\n    child.parents.add(parent);\n\n    if (! parent.childValues.has(child)) {\n      parent.childValues.set(child, []);\n    }\n\n    if (mightBeDirty(child)) {\n      reportDirtyChild(parent, child);\n    } else {\n      reportCleanChild(parent, child);\n    }\n\n    return parent;\n  }\n}\n\nfunction reallyRecompute(entry: AnyEntry, args: any[]) {\n  forgetChildren(entry);\n\n  // Set entry as the parent entry while calling recomputeNewValue(entry).\n  parentEntrySlot.withValue(entry, recomputeNewValue, [entry, args]);\n\n  if (maybeSubscribe(entry, args)) {\n    // If we successfully recomputed entry.value and did not fail to\n    // (re)subscribe, then this Entry is no longer explicitly dirty.\n    setClean(entry);\n  }\n\n  return valueGet(entry.value);\n}\n\nfunction recomputeNewValue(entry: AnyEntry, args: any[]) {\n  entry.recomputing = true;\n  // Set entry.value as unknown.\n  entry.value.length = 0;\n  try {\n    // If entry.fn succeeds, entry.value will become a normal Value.\n    entry.value[0] = entry.fn.apply(null, args);\n  } catch (e) {\n    // If entry.fn throws, entry.value will become exceptional.\n    entry.value[1] = e;\n  }\n  // Either way, this line is always reached.\n  entry.recomputing = false;\n}\n\nfunction mightBeDirty(entry: AnyEntry) {\n  return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);\n}\n\nfunction setClean(entry: AnyEntry) {\n  entry.dirty = false;\n\n  if (mightBeDirty(entry)) {\n    // This Entry may still have dirty children, in which case we can't\n    // let our parents know we're clean just yet.\n    return;\n  }\n\n  reportClean(entry);\n}\n\nfunction reportDirty(child: AnyEntry) {\n  eachParent(child, reportDirtyChild);\n}\n\nfunction reportClean(child: AnyEntry) {\n  eachParent(child, reportCleanChild);\n}\n\nfunction eachParent(\n  child: AnyEntry,\n  callback: (parent: AnyEntry, child: AnyEntry) => any,\n) {\n  const parentCount = child.parents.size;\n  if (parentCount) {\n    const parents = toArray(child.parents);\n    for (let i = 0; i < parentCount; ++i) {\n      callback(parents[i], child);\n    }\n  }\n}\n\n// Let a parent Entry know that one of its children may be dirty.\nfunction reportDirtyChild(parent: AnyEntry, child: AnyEntry) {\n  // Must have called rememberParent(child) before calling\n  // reportDirtyChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(mightBeDirty(child));\n  const parentWasClean = !mightBeDirty(parent);\n\n  if (! parent.dirtyChildren) {\n    parent.dirtyChildren = emptySetPool.pop() || new Set;\n\n  } else if (parent.dirtyChildren.has(child)) {\n    // If we already know this child is dirty, then we must have already\n    // informed our own parents that we are dirty, so we can terminate\n    // the recursion early.\n    return;\n  }\n\n  parent.dirtyChildren.add(child);\n\n  // If parent was clean before, it just became (possibly) dirty (according to\n  // mightBeDirty), since we just added child to parent.dirtyChildren.\n  if (parentWasClean) {\n    reportDirty(parent);\n  }\n}\n\n// Let a parent Entry know that one of its children is no longer dirty.\nfunction reportCleanChild(parent: AnyEntry, child: AnyEntry) {\n  // Must have called rememberChild(child) before calling\n  // reportCleanChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(! mightBeDirty(child));\n\n  const childValue = parent.childValues.get(child)!;\n  if (childValue.length === 0) {\n    parent.childValues.set(child, valueCopy(child.value));\n  } else if (! valueIs(childValue, child.value)) {\n    parent.setDirty();\n  }\n\n  removeDirtyChild(parent, child);\n\n  if (mightBeDirty(parent)) {\n    return;\n  }\n\n  reportClean(parent);\n}\n\nfunction removeDirtyChild(parent: AnyEntry, child: AnyEntry) {\n  const dc = parent.dirtyChildren;\n  if (dc) {\n    dc.delete(child);\n    if (dc.size === 0) {\n      if (emptySetPool.length < POOL_TARGET_SIZE) {\n        emptySetPool.push(dc);\n      }\n      parent.dirtyChildren = null;\n    }\n  }\n}\n\n// Removes all children from this entry and returns an array of the\n// removed children.\nfunction forgetChildren(parent: AnyEntry) {\n  if (parent.childValues.size > 0) {\n    parent.childValues.forEach((_value, child) => {\n      forgetChild(parent, child);\n    });\n  }\n\n  // Remove this parent Entry from any sets to which it was added by the\n  // addToSet method.\n  parent.forgetDeps();\n\n  // After we forget all our children, this.dirtyChildren must be empty\n  // and therefore must have been reset to null.\n  assert(parent.dirtyChildren === null);\n}\n\nfunction forgetChild(parent: AnyEntry, child: AnyEntry) {\n  child.parents.delete(parent);\n  parent.childValues.delete(child);\n  removeDirtyChild(parent, child);\n}\n\nfunction maybeSubscribe(entry: AnyEntry, args: any[]) {\n  if (typeof entry.subscribe === \"function\") {\n    try {\n      maybeUnsubscribe(entry); // Prevent double subscriptions.\n      entry.unsubscribe = entry.subscribe.apply(null, args);\n    } catch (e) {\n      // If this Entry has a subscribe function and it threw an exception\n      // (or an unsubscribe function it previously returned now throws),\n      // return false to indicate that we were not able to subscribe (or\n      // unsubscribe), and this Entry should remain dirty.\n      entry.setDirty();\n      return false;\n    }\n  }\n\n  // Returning true indicates either that there was no entry.subscribe\n  // function or that it succeeded.\n  return true;\n}\n","import { AnyEntry } from \"./entry\";\nimport { OptimisticWrapOptions } from \"./index\";\nimport { parentEntrySlot } from \"./context\";\nimport { hasOwnProperty, Unsubscribable, maybeUnsubscribe, toArray } from \"./helpers\";\n\ntype EntryMethodName = keyof typeof EntryMethods;\nconst EntryMethods = {\n  setDirty: true, // Mark parent Entry as needing to be recomputed (default)\n  dispose: true,  // Detach parent Entry from parents and children, but leave in LRU cache\n  forget: true,   // Fully remove parent Entry from LRU cache and computation graph\n};\n\nexport type OptimisticDependencyFunction<TKey> =\n  ((key: TKey) => void) & {\n    dirty: (key: TKey, entryMethodName?: EntryMethodName) => void;\n  };\n\nexport type Dep<TKey> = Set<AnyEntry> & {\n  subscribe: OptimisticWrapOptions<[TKey]>[\"subscribe\"];\n} & Unsubscribable;\n\nexport function dep<TKey>(options?: {\n  subscribe: Dep<TKey>[\"subscribe\"];\n}) {\n  const depsByKey = new Map<TKey, Dep<TKey>>();\n  const subscribe = options && options.subscribe;\n\n  function depend(key: TKey) {\n    const parent = parentEntrySlot.getValue();\n    if (parent) {\n      let dep = depsByKey.get(key);\n      if (!dep) {\n        depsByKey.set(key, dep = new Set as Dep<TKey>);\n      }\n      parent.dependOn(dep);\n      if (typeof subscribe === \"function\") {\n        maybeUnsubscribe(dep);\n        dep.unsubscribe = subscribe(key);\n      }\n    }\n  }\n\n  depend.dirty = function dirty(\n    key: TKey,\n    entryMethodName?: EntryMethodName,\n  ) {\n    const dep = depsByKey.get(key);\n    if (dep) {\n      const m: EntryMethodName = (\n        entryMethodName &&\n        hasOwnProperty.call(EntryMethods, entryMethodName)\n      ) ? entryMethodName : \"setDirty\";\n      // We have to use toArray(dep).forEach instead of dep.forEach, because\n      // modifying a Set while iterating over it can cause elements in the Set\n      // to be removed from the Set before they've been iterated over.\n      toArray(dep).forEach(entry => entry[m]());\n      depsByKey.delete(key);\n      maybeUnsubscribe(dep);\n    }\n  };\n\n  return depend as OptimisticDependencyFunction<TKey>;\n}\n","import { invariant } from '../globals';\n\n// Provides the methods that allow QueryManager to handle the `skip` and\n// `include` directives within GraphQL.\nimport {\n  SelectionNode,\n  VariableNode,\n  BooleanValueNode,\n  DirectiveNode,\n  DocumentNode,\n  ArgumentNode,\n  ValueNode,\n  ASTNode,\n  visit,\n  BREAK,\n} from 'graphql';\n\nexport type DirectiveInfo = {\n  [fieldName: string]: { [argName: string]: any };\n};\n\nexport function shouldInclude(\n  { directives }: SelectionNode,\n  variables?: Record<string, any>,\n): boolean {\n  if (!directives || !directives.length) {\n    return true;\n  }\n  return getInclusionDirectives(\n    directives\n  ).every(({ directive, ifArgument }) => {\n    let evaledValue: boolean = false;\n    if (ifArgument.value.kind === 'Variable') {\n      evaledValue = variables && variables[(ifArgument.value as VariableNode).name.value];\n      invariant(\n        evaledValue !== void 0,\n        `Invalid variable referenced in @${directive.name.value} directive.`,\n      );\n    } else {\n      evaledValue = (ifArgument.value as BooleanValueNode).value;\n    }\n    return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n  });\n}\n\nexport function getDirectiveNames(root: ASTNode) {\n  const names: string[] = [];\n\n  visit(root, {\n    Directive(node: DirectiveNode) {\n      names.push(node.name.value);\n    },\n  });\n\n  return names;\n}\n\nexport const hasAnyDirectives = (\n  names: string[],\n  root: ASTNode,\n) => hasDirectives(names, root, false);\n\nexport const hasAllDirectives = (\n  names: string[],\n  root: ASTNode,\n) => hasDirectives(names, root, true);\n\nexport function hasDirectives(\n  names: string[],\n  root: ASTNode,\n  all?: boolean,\n) {\n  const nameSet = new Set(names);\n  const uniqueCount = nameSet.size;\n\n  visit(root, {\n    Directive(node) {\n      if (\n        nameSet.delete(node.name.value) &&\n        (!all || !nameSet.size)\n      ) {\n        return BREAK;\n      }\n    },\n  });\n\n  // If we found all the names, nameSet will be empty. If we only care about\n  // finding some of them, the < condition is sufficient.\n  return all ? !nameSet.size : nameSet.size < uniqueCount;\n}\n\nexport function hasClientExports(document: DocumentNode) {\n  return document && hasDirectives(['client', 'export'], document, true);\n}\n\nexport type InclusionDirectives = Array<{\n  directive: DirectiveNode;\n  ifArgument: ArgumentNode;\n}>;\n\nfunction isInclusionDirective({ name: { value } }: DirectiveNode): boolean {\n  return value === 'skip' || value === 'include';\n}\n\nexport function getInclusionDirectives(\n  directives: ReadonlyArray<DirectiveNode>,\n): InclusionDirectives {\n  const result: InclusionDirectives = [];\n\n  if (directives && directives.length) {\n    directives.forEach(directive => {\n      if (!isInclusionDirective(directive)) return;\n\n      const directiveArguments = directive.arguments;\n      const directiveName = directive.name.value;\n\n      invariant(\n        directiveArguments && directiveArguments.length === 1,\n        `Incorrect number of arguments for the @${directiveName} directive.`,\n      );\n\n      const ifArgument = directiveArguments![0];\n      invariant(\n        ifArgument.name && ifArgument.name.value === 'if',\n        `Invalid argument for the @${directiveName} directive.`,\n      );\n\n      const ifValue: ValueNode = ifArgument.value;\n\n      // means it has to be a variable value if this is a valid @skip or @include directive\n      invariant(\n        ifValue &&\n          (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'),\n        `Argument for the @${directiveName} directive must be a variable or a boolean value.`,\n      );\n\n      result.push({ directive, ifArgument });\n    });\n  }\n\n  return result;\n}\n\n","import { invariant, InvariantError } from '../globals';\n\nimport {\n  DocumentNode,\n  FragmentDefinitionNode,\n  InlineFragmentNode,\n  SelectionNode,\n} from 'graphql';\n\n// TODO(brian): A hack until this issue is resolved (https://github.com/graphql/graphql-js/issues/3356)\ntype Kind = any;\ntype OperationTypeNode = any;\n/**\n * Returns a query document which adds a single query operation that only\n * spreads the target fragment inside of it.\n *\n * So for example a document of:\n *\n * ```graphql\n * fragment foo on Foo { a b c }\n * ```\n *\n * Turns into:\n *\n * ```graphql\n * { ...foo }\n *\n * fragment foo on Foo { a b c }\n * ```\n *\n * The target fragment will either be the only fragment in the document, or a\n * fragment specified by the provided `fragmentName`. If there is more than one\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\n */\nexport function getFragmentQueryDocument(\n  document: DocumentNode,\n  fragmentName?: string,\n): DocumentNode {\n  let actualFragmentName = fragmentName;\n\n  // Build an array of all our fragment definitions that will be used for\n  // validations. We also do some validations on the other definitions in the\n  // document while building this list.\n  const fragments: Array<FragmentDefinitionNode> = [];\n  document.definitions.forEach(definition => {\n    // Throw an error if we encounter an operation definition because we will\n    // define our own operation definition later on.\n    if (definition.kind === 'OperationDefinition') {\n      throw new InvariantError(\n        `Found a ${definition.operation} operation${\n          definition.name ? ` named '${definition.name.value}'` : ''\n        }. ` +\n          'No operations are allowed when using a fragment as a query. Only fragments are allowed.',\n      );\n    }\n    // Add our definition to the fragments array if it is a fragment\n    // definition.\n    if (definition.kind === 'FragmentDefinition') {\n      fragments.push(definition);\n    }\n  });\n\n  // If the user did not give us a fragment name then let us try to get a\n  // name from a single fragment in the definition.\n  if (typeof actualFragmentName === 'undefined') {\n    invariant(\n      fragments.length === 1,\n      `Found ${\n        fragments.length\n      } fragments. \\`fragmentName\\` must be provided when there is not exactly 1 fragment.`,\n    );\n    actualFragmentName = fragments[0].name.value;\n  }\n\n  // Generate a query document with an operation that simply spreads the\n  // fragment inside of it.\n  const query: DocumentNode = {\n    ...document,\n    definitions: [\n      {\n        kind: 'OperationDefinition' as Kind,\n        // OperationTypeNode is an enum\n        operation: 'query' as OperationTypeNode,\n        selectionSet: {\n          kind: 'SelectionSet' as Kind,\n          selections: [\n            {\n              kind: 'FragmentSpread' as Kind,\n              name: {\n                kind: 'Name' as Kind,\n                value: actualFragmentName,\n              },\n            },\n          ],\n        },\n      },\n      ...document.definitions,\n    ],\n  };\n\n  return query;\n}\n\n/**\n * This is an interface that describes a map from fragment names to fragment definitions.\n */\nexport interface FragmentMap {\n  [fragmentName: string]: FragmentDefinitionNode;\n}\n\nexport type FragmentMapFunction =\n  (fragmentName: string) => FragmentDefinitionNode | null;\n\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(\n  fragments: FragmentDefinitionNode[] = [],\n): FragmentMap {\n  const symTable: FragmentMap = {};\n  fragments.forEach(fragment => {\n    symTable[fragment.name.value] = fragment;\n  });\n  return symTable;\n}\n\nexport function getFragmentFromSelection(\n  selection: SelectionNode,\n  fragmentMap?: FragmentMap | FragmentMapFunction,\n): InlineFragmentNode | FragmentDefinitionNode | null {\n  switch (selection.kind) {\n    case 'InlineFragment':\n      return selection;\n    case 'FragmentSpread': {\n      const fragmentName = selection.name.value;\n      if (typeof fragmentMap === \"function\") {\n        return fragmentMap(fragmentName);\n      }\n      const fragment = fragmentMap && fragmentMap[fragmentName];\n      invariant(fragment, `No fragment named ${fragmentName}`);\n      return fragment || null;\n    }\n    default:\n      return null;\n  }\n}\n","export function isNonNullObject(obj: any): obj is Record<string | number, any> {\n  return obj !== null && typeof obj === 'object';\n}\n","import { InvariantError } from '../globals';\n\nimport {\n  DirectiveNode,\n  FieldNode,\n  IntValueNode,\n  FloatValueNode,\n  StringValueNode,\n  BooleanValueNode,\n  ObjectValueNode,\n  ListValueNode,\n  EnumValueNode,\n  NullValueNode,\n  VariableNode,\n  InlineFragmentNode,\n  ValueNode,\n  SelectionNode,\n  NameNode,\n  SelectionSetNode,\n  DocumentNode,\n} from 'graphql';\n\nimport { isNonNullObject } from '../common/objects';\nimport { FragmentMap, getFragmentFromSelection } from './fragments';\n\nexport interface Reference {\n  readonly __ref: string;\n}\n\nexport function makeReference(id: string): Reference {\n  return { __ref: String(id) };\n}\n\nexport function isReference(obj: any): obj is Reference {\n  return Boolean(obj && typeof obj === 'object' && typeof obj.__ref === 'string');\n}\n\nexport type StoreValue =\n  | number\n  | string\n  | string[]\n  | Reference\n  | Reference[]\n  | null\n  | undefined\n  | void\n  | Object;\n\nexport interface StoreObject {\n  __typename?: string;\n  [storeFieldName: string]: StoreValue;\n}\n\nexport function isDocumentNode(value: any): value is DocumentNode {\n  return (\n    isNonNullObject(value) &&\n    (value as DocumentNode).kind === \"Document\" &&\n    Array.isArray((value as DocumentNode).definitions)\n  );\n}\n\nfunction isStringValue(value: ValueNode): value is StringValueNode {\n  return value.kind === 'StringValue';\n}\n\nfunction isBooleanValue(value: ValueNode): value is BooleanValueNode {\n  return value.kind === 'BooleanValue';\n}\n\nfunction isIntValue(value: ValueNode): value is IntValueNode {\n  return value.kind === 'IntValue';\n}\n\nfunction isFloatValue(value: ValueNode): value is FloatValueNode {\n  return value.kind === 'FloatValue';\n}\n\nfunction isVariable(value: ValueNode): value is VariableNode {\n  return value.kind === 'Variable';\n}\n\nfunction isObjectValue(value: ValueNode): value is ObjectValueNode {\n  return value.kind === 'ObjectValue';\n}\n\nfunction isListValue(value: ValueNode): value is ListValueNode {\n  return value.kind === 'ListValue';\n}\n\nfunction isEnumValue(value: ValueNode): value is EnumValueNode {\n  return value.kind === 'EnumValue';\n}\n\nfunction isNullValue(value: ValueNode): value is NullValueNode {\n  return value.kind === 'NullValue';\n}\n\nexport function valueToObjectRepresentation(\n  argObj: any,\n  name: NameNode,\n  value: ValueNode,\n  variables?: Object,\n) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    const nestedArgObj = {};\n    value.fields.map(obj =>\n      valueToObjectRepresentation(nestedArgObj, obj.name, obj.value, variables),\n    );\n    argObj[name.value] = nestedArgObj;\n  } else if (isVariable(value)) {\n    const variableValue = (variables || ({} as any))[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(listValue => {\n      const nestedArgArrayObj = {};\n      valueToObjectRepresentation(\n        nestedArgArrayObj,\n        name,\n        listValue,\n        variables,\n      );\n      return (nestedArgArrayObj as any)[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = (value as EnumValueNode).value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw new InvariantError(\n      `The inline argument \"${name.value}\" of kind \"${(value as any).kind}\"` +\n        'is not supported. Use variables instead of inline arguments to ' +\n        'overcome this limitation.',\n    );\n  }\n}\n\nexport function storeKeyNameFromField(\n  field: FieldNode,\n  variables?: Object,\n): string {\n  let directivesObj: any = null;\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(directive => {\n      directivesObj[directive.name.value] = {};\n\n      if (directive.arguments) {\n        directive.arguments.forEach(({ name, value }) =>\n          valueToObjectRepresentation(\n            directivesObj[directive.name.value],\n            name,\n            value,\n            variables,\n          ),\n        );\n      }\n    });\n  }\n\n  let argObj: any = null;\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n  }\n\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\n\nexport type Directives = {\n  [directiveName: string]: {\n    [argName: string]: any;\n  };\n};\n\nconst KNOWN_DIRECTIVES: string[] = [\n  'connection',\n  'include',\n  'skip',\n  'client',\n  'rest',\n  'export',\n];\n\nexport const getStoreKeyName = Object.assign(function (\n  fieldName: string,\n  args?: Record<string, any> | null,\n  directives?: Directives,\n): string {\n  if (\n    args &&\n    directives &&\n    directives['connection'] &&\n    directives['connection']['key']\n  ) {\n    if (\n      directives['connection']['filter'] &&\n      (directives['connection']['filter'] as string[]).length > 0\n    ) {\n      const filterKeys = directives['connection']['filter']\n        ? (directives['connection']['filter'] as string[])\n        : [];\n      filterKeys.sort();\n\n      const filteredArgs = {} as { [key: string]: any };\n      filterKeys.forEach(key => {\n        filteredArgs[key] = args[key];\n      });\n\n      return `${directives['connection']['key']}(${stringify(\n        filteredArgs,\n      )})`;\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n\n  let completeFieldName: string = fieldName;\n\n  if (args) {\n    // We can't use `JSON.stringify` here since it's non-deterministic,\n    // and can lead to different store key names being created even though\n    // the `args` object used during creation has the same properties/values.\n    const stringifiedArgs: string = stringify(args);\n    completeFieldName += `(${stringifiedArgs})`;\n  }\n\n  if (directives) {\n    Object.keys(directives).forEach(key => {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += `@${key}(${stringify(directives[key])})`;\n      } else {\n        completeFieldName += `@${key}`;\n      }\n    });\n  }\n\n  return completeFieldName;\n}, {\n  setStringify(s: typeof stringify) {\n    const previous = stringify;\n    stringify = s;\n    return previous;\n  },\n});\n\n// Default stable JSON.stringify implementation. Can be updated/replaced with\n// something better by calling getStoreKeyName.setStringify.\nlet stringify = function defaultStringify(value: any): string {\n  return JSON.stringify(value, stringifyReplacer);\n};\n\nfunction stringifyReplacer(_key: string, value: any): any {\n  if (isNonNullObject(value) && !Array.isArray(value)) {\n    value = Object.keys(value).sort().reduce((copy, key) => {\n      copy[key] = value[key];\n      return copy;\n    }, {} as Record<string, any>);\n  }\n  return value;\n}\n\nexport function argumentsObjectFromField(\n  field: FieldNode | DirectiveNode,\n  variables?: Record<string, any>,\n): Object | null {\n  if (field.arguments && field.arguments.length) {\n    const argObj: Object = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n    return argObj;\n  }\n  return null;\n}\n\nexport function resultKeyNameFromField(field: FieldNode): string {\n  return field.alias ? field.alias.value : field.name.value;\n}\n\nexport function getTypenameFromResult(\n  result: Record<string, any>,\n  selectionSet: SelectionSetNode,\n  fragmentMap?: FragmentMap,\n): string | undefined {\n  if (typeof result.__typename === 'string') {\n    return result.__typename;\n  }\n\n  for (const selection of selectionSet.selections) {\n    if (isField(selection)) {\n      if (selection.name.value === '__typename') {\n        return result[resultKeyNameFromField(selection)];\n      }\n    } else {\n      const typename = getTypenameFromResult(\n        result,\n        getFragmentFromSelection(selection, fragmentMap)!.selectionSet,\n        fragmentMap,\n      );\n      if (typeof typename === 'string') {\n        return typename;\n      }\n    }\n  }\n}\n\nexport function isField(selection: SelectionNode): selection is FieldNode {\n  return selection.kind === 'Field';\n}\n\nexport function isInlineFragment(\n  selection: SelectionNode,\n): selection is InlineFragmentNode {\n  return selection.kind === 'InlineFragment';\n}\n\nexport type VariableValue = (node: VariableNode) => any;\n","import { invariant, InvariantError } from '../globals';\n\nimport {\n  DocumentNode,\n  OperationDefinitionNode,\n  FragmentDefinitionNode,\n  ValueNode,\n} from 'graphql';\n\nimport { valueToObjectRepresentation } from './storeUtils';\n\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc: DocumentNode) {\n  invariant(\n    doc && doc.kind === 'Document',\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`,\n  );\n\n  const operations = doc.definitions\n    .filter(d => d.kind !== 'FragmentDefinition')\n    .map(definition => {\n      if (definition.kind !== 'OperationDefinition') {\n        throw new InvariantError(\n          `Schema type definitions not allowed in queries. Found: \"${\n            definition.kind\n          }\"`,\n        );\n      }\n      return definition;\n    });\n\n  invariant(\n    operations.length <= 1,\n    `Ambiguous GraphQL document: contains ${operations.length} operations`,\n  );\n\n  return doc;\n}\n\nexport function getOperationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode | undefined {\n  checkDocument(doc);\n  return doc.definitions.filter(\n    definition => definition.kind === 'OperationDefinition',\n  )[0] as OperationDefinitionNode;\n}\n\nexport function getOperationName(doc: DocumentNode): string | null {\n  return (\n    doc.definitions\n      .filter(\n        definition =>\n          definition.kind === 'OperationDefinition' && definition.name,\n      )\n      .map((x: OperationDefinitionNode) => x!.name!.value)[0] || null\n  );\n}\n\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(\n  doc: DocumentNode,\n): FragmentDefinitionNode[] {\n  return doc.definitions.filter(\n    definition => definition.kind === 'FragmentDefinition',\n  ) as FragmentDefinitionNode[];\n}\n\nexport function getQueryDefinition(doc: DocumentNode): OperationDefinitionNode {\n  const queryDef = getOperationDefinition(doc) as OperationDefinitionNode;\n\n  invariant(\n    queryDef && queryDef.operation === 'query',\n    'Must contain a query definition.',\n  );\n\n  return queryDef;\n}\n\nexport function getFragmentDefinition(\n  doc: DocumentNode,\n): FragmentDefinitionNode {\n  invariant(\n    doc.kind === 'Document',\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`,\n  );\n\n  invariant(\n    doc.definitions.length <= 1,\n    'Fragment must have exactly one definition.',\n  );\n\n  const fragmentDef = doc.definitions[0] as FragmentDefinitionNode;\n\n  invariant(\n    fragmentDef.kind === 'FragmentDefinition',\n    'Must be a fragment definition.',\n  );\n\n  return fragmentDef as FragmentDefinitionNode;\n}\n\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(\n  queryDoc: DocumentNode,\n): OperationDefinitionNode | FragmentDefinitionNode {\n  checkDocument(queryDoc);\n\n  let fragmentDefinition;\n\n  for (let definition of queryDoc.definitions) {\n    if (definition.kind === 'OperationDefinition') {\n      const operation = (definition as OperationDefinitionNode).operation;\n      if (\n        operation === 'query' ||\n        operation === 'mutation' ||\n        operation === 'subscription'\n      ) {\n        return definition as OperationDefinitionNode;\n      }\n    }\n    if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n      // we do this because we want to allow multiple fragment definitions\n      // to precede an operation definition.\n      fragmentDefinition = definition as FragmentDefinitionNode;\n    }\n  }\n\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n\n  throw new InvariantError(\n    'Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.',\n  );\n}\n\nexport function getDefaultValues(\n  definition: OperationDefinitionNode | undefined,\n): Record<string, any> {\n  const defaultValues = Object.create(null);\n  const defs = definition && definition.variableDefinitions;\n  if (defs && defs.length) {\n    defs.forEach(def => {\n      if (def.defaultValue) {\n        valueToObjectRepresentation(\n          defaultValues,\n          def.variable.name,\n          def.defaultValue as ValueNode,\n        );\n      }\n    });\n  }\n  return defaultValues;\n}\n","export function filterInPlace<T>(\n  array: T[],\n  test: (elem: T) => boolean,\n  context?: any,\n): T[] {\n  let target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}\n","import { invariant } from '../globals';\n\nimport {\n  DocumentNode,\n  SelectionNode,\n  SelectionSetNode,\n  OperationDefinitionNode,\n  FieldNode,\n  DirectiveNode,\n  FragmentDefinitionNode,\n  ArgumentNode,\n  FragmentSpreadNode,\n  VariableDefinitionNode,\n  VariableNode,\n  visit,\n  ASTNode,\n} from 'graphql';\n\n// TODO(brian): A hack until this issue is resolved (https://github.com/graphql/graphql-js/issues/3356)\ntype Kind = any;\n\nimport {\n  checkDocument,\n  getOperationDefinition,\n  getFragmentDefinition,\n  getFragmentDefinitions,\n  getMainDefinition,\n} from './getFromAST';\nimport { filterInPlace } from '../common/filterInPlace';\nimport { isField, isInlineFragment } from './storeUtils';\nimport {\n  createFragmentMap,\n  FragmentMap,\n} from './fragments';\n\nexport type RemoveNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n  remove?: boolean;\n};\n\nexport type GetNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n};\n\nexport type RemoveDirectiveConfig = RemoveNodeConfig<DirectiveNode>;\nexport type GetDirectiveConfig = GetNodeConfig<DirectiveNode>;\nexport type RemoveArgumentsConfig = RemoveNodeConfig<ArgumentNode>;\nexport type GetFragmentSpreadConfig = GetNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentSpreadConfig = RemoveNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentDefinitionConfig = RemoveNodeConfig<\n  FragmentDefinitionNode\n>;\nexport type RemoveVariableDefinitionConfig = RemoveNodeConfig<\n  VariableDefinitionNode\n>;\n\nconst TYPENAME_FIELD: FieldNode = {\n  kind: 'Field' as Kind,\n  name: {\n    kind: 'Name' as Kind,\n    value: '__typename',\n  },\n};\n\nfunction isEmpty(\n  op: OperationDefinitionNode | FragmentDefinitionNode,\n  fragmentMap: FragmentMap,\n): boolean {\n  return !op || op.selectionSet.selections.every(\n    selection => selection.kind === 'FragmentSpread' &&\n      isEmpty(fragmentMap[selection.name.value], fragmentMap)\n  );\n}\n\nfunction nullIfDocIsEmpty(doc: DocumentNode) {\n  return isEmpty(\n    getOperationDefinition(doc) || getFragmentDefinition(doc),\n    createFragmentMap(getFragmentDefinitions(doc)),\n  )\n    ? null\n    : doc;\n}\n\nfunction getDirectiveMatcher(\n  directives: (RemoveDirectiveConfig | GetDirectiveConfig)[],\n) {\n  return function directiveMatcher(directive: DirectiveNode) {\n    return directives.some(\n      dir =>\n        (dir.name && dir.name === directive.name.value) ||\n        (dir.test && dir.test(directive)),\n    );\n  };\n}\n\nexport function removeDirectivesFromDocument(\n  directives: RemoveDirectiveConfig[],\n  doc: DocumentNode,\n): DocumentNode | null {\n  const variablesInUse: Record<string, boolean> = Object.create(null);\n  let variablesToRemove: RemoveArgumentsConfig[] = [];\n\n  const fragmentSpreadsInUse: Record<string, boolean> = Object.create(null);\n  let fragmentSpreadsToRemove: RemoveFragmentSpreadConfig[] = [];\n\n  let modifiedDoc = nullIfDocIsEmpty(\n    visit(doc, {\n      Variable: {\n        enter(node, _key, parent) {\n          // Store each variable that's referenced as part of an argument\n          // (excluding operation definition variables), so we know which\n          // variables are being used. If we later want to remove a variable\n          // we'll first check to see if it's being used, before continuing with\n          // the removal.\n          if (\n            (parent as VariableDefinitionNode).kind !== 'VariableDefinition'\n          ) {\n            variablesInUse[node.name.value] = true;\n          }\n        },\n      },\n\n      Field: {\n        enter(node) {\n          if (directives && node.directives) {\n            // If `remove` is set to true for a directive, and a directive match\n            // is found for a field, remove the field as well.\n            const shouldRemoveField = directives.some(\n              directive => directive.remove,\n            );\n\n            if (\n              shouldRemoveField &&\n              node.directives &&\n              node.directives.some(getDirectiveMatcher(directives))\n            ) {\n              if (node.arguments) {\n                // Store field argument variables so they can be removed\n                // from the operation definition.\n                node.arguments.forEach(arg => {\n                  if (arg.value.kind === 'Variable') {\n                    variablesToRemove.push({\n                      name: (arg.value as VariableNode).name.value,\n                    });\n                  }\n                });\n              }\n\n              if (node.selectionSet) {\n                // Store fragment spread names so they can be removed from the\n                // document.\n                getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(\n                  frag => {\n                    fragmentSpreadsToRemove.push({\n                      name: frag.name.value,\n                    });\n                  },\n                );\n              }\n\n              // Remove the field.\n              return null;\n            }\n          }\n        },\n      },\n\n      FragmentSpread: {\n        enter(node) {\n          // Keep track of referenced fragment spreads. This is used to\n          // determine if top level fragment definitions should be removed.\n          fragmentSpreadsInUse[node.name.value] = true;\n        },\n      },\n\n      Directive: {\n        enter(node) {\n          // If a matching directive is found, remove it.\n          if (getDirectiveMatcher(directives)(node)) {\n            return null;\n          }\n        },\n      },\n    }),\n  );\n\n  // If we've removed fields with arguments, make sure the associated\n  // variables are also removed from the rest of the document, as long as they\n  // aren't being used elsewhere.\n  if (\n    modifiedDoc &&\n    filterInPlace(variablesToRemove, v => !!v.name && !variablesInUse[v.name]).length\n  ) {\n    modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n  }\n\n  // If we've removed selection sets with fragment spreads, make sure the\n  // associated fragment definitions are also removed from the rest of the\n  // document, as long as they aren't being used elsewhere.\n  if (\n    modifiedDoc &&\n    filterInPlace(fragmentSpreadsToRemove, fs => !!fs.name && !fragmentSpreadsInUse[fs.name])\n      .length\n  ) {\n    modifiedDoc = removeFragmentSpreadFromDocument(\n      fragmentSpreadsToRemove,\n      modifiedDoc,\n    );\n  }\n\n  return modifiedDoc;\n}\n\nexport const addTypenameToDocument = Object.assign(function <\n  TNode extends ASTNode\n>(\n  doc: TNode\n): TNode {\n  return visit(doc, {\n    SelectionSet: {\n      enter(node, _key, parent) {\n        // Don't add __typename to OperationDefinitions.\n        if (\n          parent &&\n          (parent as OperationDefinitionNode).kind === 'OperationDefinition'\n        ) {\n          return;\n        }\n\n        // No changes if no selections.\n        const { selections } = node;\n        if (!selections) {\n          return;\n        }\n\n        // If selections already have a __typename, or are part of an\n        // introspection query, do nothing.\n        const skip = selections.some(selection => {\n          return (\n            isField(selection) &&\n            (selection.name.value === '__typename' ||\n              selection.name.value.lastIndexOf('__', 0) === 0)\n          );\n        });\n        if (skip) {\n          return;\n        }\n\n        // If this SelectionSet is @export-ed as an input variable, it should\n        // not have a __typename field (see issue #4691).\n        const field = parent as FieldNode;\n        if (\n          isField(field) &&\n          field.directives &&\n          field.directives.some(d => d.name.value === 'export')\n        ) {\n          return;\n        }\n\n        // Create and return a new SelectionSet with a __typename Field.\n        return {\n          ...node,\n          selections: [...selections, TYPENAME_FIELD],\n        };\n      },\n    },\n  });\n}, {\n  added(field: FieldNode): boolean {\n    return field === TYPENAME_FIELD;\n  },\n});\n\nconst connectionRemoveConfig = {\n  test: (directive: DirectiveNode) => {\n    const willRemove = directive.name.value === 'connection';\n    if (willRemove) {\n      if (\n        !directive.arguments ||\n        !directive.arguments.some(arg => arg.name.value === 'key')\n      ) {\n        invariant.warn(\n          'Removing an @connection directive even though it does not have a key. ' +\n            'You may want to use the key parameter to specify a store key.',\n        );\n      }\n    }\n\n    return willRemove;\n  },\n};\n\nexport function removeConnectionDirectiveFromDocument(doc: DocumentNode) {\n  return removeDirectivesFromDocument(\n    [connectionRemoveConfig],\n    checkDocument(doc),\n  );\n}\n\nfunction hasDirectivesInSelectionSet(\n  directives: GetDirectiveConfig[],\n  selectionSet: SelectionSetNode | undefined,\n  nestedCheck = true,\n): boolean {\n  return (\n    !!selectionSet &&\n    selectionSet.selections &&\n    selectionSet.selections.some(selection =>\n      hasDirectivesInSelection(directives, selection, nestedCheck),\n    )\n  );\n}\n\nfunction hasDirectivesInSelection(\n  directives: GetDirectiveConfig[],\n  selection: SelectionNode,\n  nestedCheck = true,\n): boolean {\n  if (!isField(selection)) {\n    return true;\n  }\n\n  if (!selection.directives) {\n    return false;\n  }\n\n  return (\n    selection.directives.some(getDirectiveMatcher(directives)) ||\n    (nestedCheck &&\n      hasDirectivesInSelectionSet(\n        directives,\n        selection.selectionSet,\n        nestedCheck,\n      ))\n  );\n}\n\nfunction getArgumentMatcher(config: RemoveArgumentsConfig[]) {\n  return function argumentMatcher(argument: ArgumentNode) {\n    return config.some(\n      (aConfig: RemoveArgumentsConfig) =>\n        argument.value &&\n        argument.value.kind === 'Variable' &&\n        argument.value.name &&\n        (aConfig.name === argument.value.name.value ||\n          (aConfig.test && aConfig.test(argument))),\n    );\n  };\n}\n\nexport function removeArgumentsFromDocument(\n  config: RemoveArgumentsConfig[],\n  doc: DocumentNode,\n): DocumentNode | null {\n  const argMatcher = getArgumentMatcher(config);\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      OperationDefinition: {\n        enter(node) {\n          return {\n            ...node,\n            // Remove matching top level variables definitions.\n            variableDefinitions: node.variableDefinitions ? node.variableDefinitions.filter(\n              varDef =>\n                !config.some(arg => arg.name === varDef.variable.name.value),\n            ) : [],\n          };\n        },\n      },\n\n      Field: {\n        enter(node) {\n          // If `remove` is set to true for an argument, and an argument match\n          // is found for a field, remove the field as well.\n          const shouldRemoveField = config.some(argConfig => argConfig.remove);\n\n          if (shouldRemoveField) {\n            let argMatchCount = 0;\n            if (node.arguments) {\n              node.arguments.forEach(arg => {\n                if (argMatcher(arg)) {\n                  argMatchCount += 1;\n                }\n              });\n            }\n\n            if (argMatchCount === 1) {\n              return null;\n            }\n          }\n        },\n      },\n\n      Argument: {\n        enter(node) {\n          // Remove all matching arguments.\n          if (argMatcher(node)) {\n            return null;\n          }\n        },\n      },\n    }),\n  );\n}\n\nexport function removeFragmentSpreadFromDocument(\n  config: RemoveFragmentSpreadConfig[],\n  doc: DocumentNode,\n): DocumentNode | null {\n  function enter(\n    node: FragmentSpreadNode | FragmentDefinitionNode,\n  ): null | void {\n    if (config.some(def => def.name === node.name.value)) {\n      return null;\n    }\n  }\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      FragmentSpread: { enter },\n      FragmentDefinition: { enter },\n    }),\n  );\n}\n\nfunction getAllFragmentSpreadsFromSelectionSet(\n  selectionSet: SelectionSetNode,\n): FragmentSpreadNode[] {\n  const allFragments: FragmentSpreadNode[] = [];\n\n  selectionSet.selections.forEach(selection => {\n    if (\n      (isField(selection) || isInlineFragment(selection)) &&\n      selection.selectionSet\n    ) {\n      getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(\n        frag => allFragments.push(frag),\n      );\n    } else if (selection.kind === 'FragmentSpread') {\n      allFragments.push(selection);\n    }\n  });\n\n  return allFragments;\n}\n\n// If the incoming document is a query, return it as is. Otherwise, build a\n// new document containing a query operation based on the selection set\n// of the previous main operation.\nexport function buildQueryFromSelectionSet(\n  document: DocumentNode,\n): DocumentNode {\n  const definition = getMainDefinition(document);\n  const definitionOperation = (<OperationDefinitionNode>definition).operation;\n\n  if (definitionOperation === 'query') {\n    // Already a query, so return the existing document.\n    return document;\n  }\n\n  // Build a new query using the selection set of the main operation.\n  const modifiedDoc = visit(document, {\n    OperationDefinition: {\n      enter(node) {\n        return {\n          ...node,\n          operation: 'query',\n        };\n      },\n    },\n  });\n  return modifiedDoc;\n}\n\n// Remove fields / selection sets that include an @client directive.\nexport function removeClientSetsFromDocument(\n  document: DocumentNode,\n): DocumentNode | null {\n  checkDocument(document);\n\n  let modifiedDoc = removeDirectivesFromDocument(\n    [\n      {\n        test: (directive: DirectiveNode) => directive.name.value === 'client',\n        remove: true,\n      },\n    ],\n    document,\n  );\n\n  // After a fragment definition has had its @client related document\n  // sets removed, if the only field it has left is a __typename field,\n  // remove the entire fragment operation to prevent it from being fired\n  // on the server.\n  if (modifiedDoc) {\n    modifiedDoc = visit(modifiedDoc, {\n      FragmentDefinition: {\n        enter(node) {\n          if (node.selectionSet) {\n            const isTypenameOnly = node.selectionSet.selections.every(\n              selection =>\n                isField(selection) && selection.name.value === '__typename',\n            );\n            if (isTypenameOnly) {\n              return null;\n            }\n          }\n        },\n      },\n    });\n  }\n\n  return modifiedDoc;\n}\n","import { isNonNullObject } from \"./objects\";\n\nconst { hasOwnProperty } = Object.prototype;\n\n// These mergeDeep and mergeDeepArray utilities merge any number of objects\n// together, sharing as much memory as possible with the source objects, while\n// remaining careful to avoid modifying any source objects.\n\n// Logically, the return type of mergeDeep should be the intersection of\n// all the argument types. The binary call signature is by far the most\n// common, but we support 0- through 5-ary as well. After that, the\n// resulting type is just the inferred array element type. Note to nerds:\n// there is a more clever way of doing this that converts the tuple type\n// first to a union type (easy enough: T[number]) and then converts the\n// union to an intersection type using distributive conditional type\n// inference, but that approach has several fatal flaws (boolean becomes\n// true & false, and the inferred type ends up as unknown in many cases),\n// in addition to being nearly impossible to explain/understand.\nexport type TupleToIntersection<T extends any[]> =\n  T extends [infer A] ? A :\n  T extends [infer A, infer B] ? A & B :\n  T extends [infer A, infer B, infer C] ? A & B & C :\n  T extends [infer A, infer B, infer C, infer D] ? A & B & C & D :\n  T extends [infer A, infer B, infer C, infer D, infer E] ? A & B & C & D & E :\n  T extends (infer U)[] ? U : any;\n\nexport function mergeDeep<T extends any[]>(\n  ...sources: T\n): TupleToIntersection<T> {\n  return mergeDeepArray(sources);\n}\n\n// In almost any situation where you could succeed in getting the\n// TypeScript compiler to infer a tuple type for the sources array, you\n// could just use mergeDeep instead of mergeDeepArray, so instead of\n// trying to convert T[] to an intersection type we just infer the array\n// element type, which works perfectly when the sources array has a\n// consistent element type.\nexport function mergeDeepArray<T>(sources: T[]): T {\n  let target = sources[0] || ({} as T);\n  const count = sources.length;\n  if (count > 1) {\n    const merger = new DeepMerger();\n    for (let i = 1; i < count; ++i) {\n      target = merger.merge(target, sources[i]);\n    }\n  }\n  return target;\n}\n\nexport type ReconcilerFunction<TContextArgs extends any[]> = (\n  this: DeepMerger<TContextArgs>,\n  target: Record<string | number, any>,\n  source: Record<string | number, any>,\n  property: string | number,\n  ...context: TContextArgs\n) => any;\n\nconst defaultReconciler: ReconcilerFunction<any[]> =\n  function (target, source, property) {\n    return this.merge(target[property], source[property]);\n  };\n\nexport class DeepMerger<TContextArgs extends any[]> {\n  constructor(\n    private reconciler: ReconcilerFunction<TContextArgs> = defaultReconciler,\n  ) {}\n\n  public merge(target: any, source: any, ...context: TContextArgs): any {\n    if (isNonNullObject(source) && isNonNullObject(target)) {\n      Object.keys(source).forEach(sourceKey => {\n        if (hasOwnProperty.call(target, sourceKey)) {\n          const targetValue = target[sourceKey];\n          if (source[sourceKey] !== targetValue) {\n            const result = this.reconciler(target, source, sourceKey, ...context);\n            // A well-implemented reconciler may return targetValue to indicate\n            // the merge changed nothing about the structure of the target.\n            if (result !== targetValue) {\n              target = this.shallowCopyForMerge(target);\n              target[sourceKey] = result;\n            }\n          }\n        } else {\n          // If there is no collision, the target can safely share memory with\n          // the source, and the recursion can terminate here.\n          target = this.shallowCopyForMerge(target);\n          target[sourceKey] = source[sourceKey];\n        }\n      });\n\n      return target;\n    }\n\n    // If source (or target) is not an object, let source replace target.\n    return source;\n  }\n\n  public isObject = isNonNullObject;\n\n  private pastCopies = new Set<any>();\n\n  public shallowCopyForMerge<T>(value: T): T {\n    if (isNonNullObject(value)) {\n      if (!this.pastCopies.has(value)) {\n        if (Array.isArray(value)) {\n          value = (value as any).slice(0);\n        } else {\n          value = {\n            __proto__: Object.getPrototypeOf(value),\n            ...value,\n          };\n        }\n        this.pastCopies.add(value);\n      }\n    }\n    return value;\n  }\n}\n","import { __rest } from \"tslib\";\n\nimport { FieldPolicy, Reference } from '../../cache';\nimport { mergeDeep } from '../common/mergeDeep';\n\ntype KeyArgs = FieldPolicy<any>[\"keyArgs\"];\n\n// A very basic pagination field policy that always concatenates new\n// results onto the existing array, without examining options.args.\nexport function concatPagination<T = Reference>(\n  keyArgs: KeyArgs = false,\n): FieldPolicy<T[]> {\n  return {\n    keyArgs,\n    merge(existing, incoming) {\n      return existing ? [\n        ...existing,\n        ...incoming,\n      ] : incoming;\n    },\n  };\n}\n\n// A basic field policy that uses options.args.{offset,limit} to splice\n// the incoming data into the existing array. If your arguments are called\n// something different (like args.{start,count}), feel free to copy/paste\n// this implementation and make the appropriate changes.\nexport function offsetLimitPagination<T = Reference>(\n  keyArgs: KeyArgs = false,\n): FieldPolicy<T[]> {\n  return {\n    keyArgs,\n    merge(existing, incoming, { args }) {\n      const merged = existing ? existing.slice(0) : [];\n\n      if (incoming) {\n        if (args) {\n          // Assume an offset of 0 if args.offset omitted.\n          const { offset = 0 } = args;\n          for (let i = 0; i < incoming.length; ++i) {\n            merged[offset + i] = incoming[i];\n          }\n        } else {\n          // It's unusual (probably a mistake) for a paginated field not\n          // to receive any arguments, so you might prefer to throw an\n          // exception here, instead of recovering by appending incoming\n          // onto the existing array.\n          merged.push.apply(merged, incoming);\n        }\n      }\n\n      return merged;\n    },\n  };\n}\n\n// Whether TRelayEdge<TNode> is a normalized Reference or a non-normalized\n// object, it needs a .cursor property where the relayStylePagination\n// merge function can store cursor strings taken from pageInfo. Storing an\n// extra reference.cursor property should be safe, and is easier than\n// attempting to update the cursor field of the normalized StoreObject\n// that the reference refers to, or managing edge wrapper objects\n// (something I attempted in #7023, but abandoned because of #7088).\nexport type TRelayEdge<TNode> = {\n  cursor?: string;\n  node: TNode;\n} | (Reference & { cursor?: string });\n\nexport type TRelayPageInfo = {\n  hasPreviousPage: boolean;\n  hasNextPage: boolean;\n  startCursor: string;\n  endCursor: string;\n};\n\nexport type TExistingRelay<TNode> = Readonly<{\n  edges: TRelayEdge<TNode>[];\n  pageInfo: TRelayPageInfo;\n}>;\n\nexport type TIncomingRelay<TNode> = {\n  edges?: TRelayEdge<TNode>[];\n  pageInfo?: TRelayPageInfo;\n};\n\nexport type RelayFieldPolicy<TNode> = FieldPolicy<\n  TExistingRelay<TNode> | null,\n  TIncomingRelay<TNode> | null,\n  TIncomingRelay<TNode> | null\n>;\n\n// As proof of the flexibility of field policies, this function generates\n// one that handles Relay-style pagination, without Apollo Client knowing\n// anything about connections, edges, cursors, or pageInfo objects.\nexport function relayStylePagination<TNode extends Reference = Reference>(\n  keyArgs: KeyArgs = false,\n): RelayFieldPolicy<TNode> {\n  return {\n    keyArgs,\n\n    read(existing, { canRead, readField }) {\n      if (!existing) return existing;\n\n      const edges: TRelayEdge<TNode>[] = [];\n      let firstEdgeCursor = \"\";\n      let lastEdgeCursor = \"\";\n      existing.edges.forEach(edge => {\n        // Edges themselves could be Reference objects, so it's important\n        // to use readField to access the edge.edge.node property.\n        if (canRead(readField(\"node\", edge))) {\n          edges.push(edge);\n          if (edge.cursor) {\n            firstEdgeCursor = firstEdgeCursor || edge.cursor || \"\";\n            lastEdgeCursor = edge.cursor || lastEdgeCursor;\n          }\n        }\n      });\n\n      const {\n        startCursor,\n        endCursor,\n      } = existing.pageInfo || {};\n\n      return {\n        // Some implementations return additional Connection fields, such\n        // as existing.totalCount. These fields are saved by the merge\n        // function, so the read function should also preserve them.\n        ...getExtras(existing),\n        edges,\n        pageInfo: {\n          ...existing.pageInfo,\n          // If existing.pageInfo.{start,end}Cursor are undefined or \"\", default\n          // to firstEdgeCursor and/or lastEdgeCursor.\n          startCursor: startCursor || firstEdgeCursor,\n          endCursor: endCursor || lastEdgeCursor,\n        },\n      };\n    },\n\n    merge(existing, incoming, { args, isReference, readField }) {\n      if (!existing) {\n        existing = makeEmptyData();\n      }\n\n      if (!incoming) {\n        return existing;\n      }\n\n      const incomingEdges = incoming.edges ? incoming.edges.map(edge => {\n        if (isReference(edge = { ...edge })) {\n          // In case edge is a Reference, we read out its cursor field and\n          // store it as an extra property of the Reference object.\n          edge.cursor = readField<string>(\"cursor\", edge);\n        }\n        return edge;\n      }) : [];\n\n      if (incoming.pageInfo) {\n        const { pageInfo } = incoming;\n        const { startCursor, endCursor } = pageInfo;\n        const firstEdge = incomingEdges[0];\n        const lastEdge = incomingEdges[incomingEdges.length - 1];\n        // In case we did not request the cursor field for edges in this\n        // query, we can still infer cursors from pageInfo.\n        if (firstEdge && startCursor) {\n          firstEdge.cursor = startCursor;\n        }\n        if (lastEdge && endCursor) {\n          lastEdge.cursor = endCursor;\n        }\n        // Cursors can also come from edges, so we default\n        // pageInfo.{start,end}Cursor to {first,last}Edge.cursor.\n        const firstCursor = firstEdge && firstEdge.cursor;\n        if (firstCursor && !startCursor) {\n          incoming = mergeDeep(incoming, {\n            pageInfo: {\n              startCursor: firstCursor,\n            },\n          });\n        }\n        const lastCursor = lastEdge && lastEdge.cursor;\n        if (lastCursor && !endCursor) {\n          incoming = mergeDeep(incoming, {\n            pageInfo: {\n              endCursor: lastCursor,\n            },\n          });\n        }\n      }\n\n      let prefix = existing.edges;\n      let suffix: typeof prefix = [];\n\n      if (args && args.after) {\n        // This comparison does not need to use readField(\"cursor\", edge),\n        // because we stored the cursor field of any Reference edges as an\n        // extra property of the Reference object.\n        const index = prefix.findIndex(edge => edge.cursor === args.after);\n        if (index >= 0) {\n          prefix = prefix.slice(0, index + 1);\n          // suffix = []; // already true\n        }\n      } else if (args && args.before) {\n        const index = prefix.findIndex(edge => edge.cursor === args.before);\n        suffix = index < 0 ? prefix : prefix.slice(index);\n        prefix = [];\n      } else if (incoming.edges) {\n        // If we have neither args.after nor args.before, the incoming\n        // edges cannot be spliced into the existing edges, so they must\n        // replace the existing edges. See #6592 for a motivating example.\n        prefix = [];\n      }\n\n      const edges = [\n        ...prefix,\n        ...incomingEdges,\n        ...suffix,\n      ];\n\n      const pageInfo: TRelayPageInfo = {\n        // The ordering of these two ...spreads may be surprising, but it\n        // makes sense because we want to combine PageInfo properties with a\n        // preference for existing values, *unless* the existing values are\n        // overridden by the logic below, which is permitted only when the\n        // incoming page falls at the beginning or end of the data.\n        ...incoming.pageInfo,\n        ...existing.pageInfo,\n      };\n\n      if (incoming.pageInfo) {\n        const {\n          hasPreviousPage, hasNextPage,\n          startCursor, endCursor,\n          ...extras\n        } = incoming.pageInfo;\n\n        // If incoming.pageInfo had any extra non-standard properties,\n        // assume they should take precedence over any existing properties\n        // of the same name, regardless of where this page falls with\n        // respect to the existing data.\n        Object.assign(pageInfo, extras);\n\n        // Keep existing.pageInfo.has{Previous,Next}Page unless the\n        // placement of the incoming edges means incoming.hasPreviousPage\n        // or incoming.hasNextPage should become the new values for those\n        // properties in existing.pageInfo. Note that these updates are\n        // only permitted when the beginning or end of the incoming page\n        // coincides with the beginning or end of the existing data, as\n        // determined using prefix.length and suffix.length.\n        if (!prefix.length) {\n          if (void 0 !== hasPreviousPage) pageInfo.hasPreviousPage = hasPreviousPage;\n          if (void 0 !== startCursor) pageInfo.startCursor = startCursor;\n        }\n        if (!suffix.length) {\n          if (void 0 !== hasNextPage) pageInfo.hasNextPage = hasNextPage;\n          if (void 0 !== endCursor) pageInfo.endCursor = endCursor;\n        }\n      }\n\n      return {\n        ...getExtras(existing),\n        ...getExtras(incoming),\n        edges,\n        pageInfo,\n      };\n    },\n  };\n}\n\n// Returns any unrecognized properties of the given object.\nconst getExtras = (obj: Record<string, any>) => __rest(obj, notExtras);\nconst notExtras = [\"edges\", \"pageInfo\"];\n\nfunction makeEmptyData(): TExistingRelay<any> {\n  return {\n    edges: [],\n    pageInfo: {\n      hasPreviousPage: false,\n      hasNextPage: true,\n      startCursor: \"\",\n      endCursor: \"\",\n    },\n  };\n}\n","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = /*#__PURE__*/function () {\n  function Subscription(observer, subscriber) {\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  var _proto = Subscription.prototype;\n\n  _proto.unsubscribe = function unsubscribe() {\n    if (this._state !== 'closed') {\n      closeSubscription(this);\n      cleanupSubscription(this);\n    }\n  };\n\n  _createClass(Subscription, [{\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = /*#__PURE__*/function () {\n  function SubscriptionObserver(subscription) {\n    this._subscription = subscription;\n  }\n\n  var _proto2 = SubscriptionObserver.prototype;\n\n  _proto2.next = function next(value) {\n    onNotify(this._subscription, 'next', value);\n  };\n\n  _proto2.error = function error(value) {\n    onNotify(this._subscription, 'error', value);\n  };\n\n  _proto2.complete = function complete() {\n    onNotify(this._subscription, 'complete');\n  };\n\n  _createClass(SubscriptionObserver, [{\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = /*#__PURE__*/function () {\n  function Observable(subscriber) {\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  var _proto3 = Observable.prototype;\n\n  _proto3.subscribe = function subscribe(observer) {\n    if (typeof observer !== 'object' || observer === null) {\n      observer = {\n        next: observer,\n        error: arguments[1],\n        complete: arguments[2]\n      };\n    }\n\n    return new Subscription(observer, this._subscriber);\n  };\n\n  _proto3.forEach = function forEach(fn) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      if (typeof fn !== 'function') {\n        reject(new TypeError(fn + ' is not a function'));\n        return;\n      }\n\n      function done() {\n        subscription.unsubscribe();\n        resolve();\n      }\n\n      var subscription = _this.subscribe({\n        next: function (value) {\n          try {\n            fn(value, done);\n          } catch (e) {\n            reject(e);\n            subscription.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n    });\n  };\n\n  _proto3.map = function map(fn) {\n    var _this2 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      return _this2.subscribe({\n        next: function (value) {\n          try {\n            value = fn(value);\n          } catch (e) {\n            return observer.error(e);\n          }\n\n          observer.next(value);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          observer.complete();\n        }\n      });\n    });\n  };\n\n  _proto3.filter = function filter(fn) {\n    var _this3 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      return _this3.subscribe({\n        next: function (value) {\n          try {\n            if (!fn(value)) return;\n          } catch (e) {\n            return observer.error(e);\n          }\n\n          observer.next(value);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          observer.complete();\n        }\n      });\n    });\n  };\n\n  _proto3.reduce = function reduce(fn) {\n    var _this4 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    var hasSeed = arguments.length > 1;\n    var hasValue = false;\n    var seed = arguments[1];\n    var acc = seed;\n    return new C(function (observer) {\n      return _this4.subscribe({\n        next: function (value) {\n          var first = !hasValue;\n          hasValue = true;\n\n          if (!first || hasSeed) {\n            try {\n              acc = fn(acc, value);\n            } catch (e) {\n              return observer.error(e);\n            }\n          } else {\n            acc = value;\n          }\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n          observer.next(acc);\n          observer.complete();\n        }\n      });\n    });\n  };\n\n  _proto3.concat = function concat() {\n    var _this5 = this;\n\n    for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n      sources[_key] = arguments[_key];\n    }\n\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      var subscription;\n      var index = 0;\n\n      function startNext(next) {\n        subscription = next.subscribe({\n          next: function (v) {\n            observer.next(v);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (index === sources.length) {\n              subscription = undefined;\n              observer.complete();\n            } else {\n              startNext(C.from(sources[index++]));\n            }\n          }\n        });\n      }\n\n      startNext(_this5);\n      return function () {\n        if (subscription) {\n          subscription.unsubscribe();\n          subscription = undefined;\n        }\n      };\n    });\n  };\n\n  _proto3.flatMap = function flatMap(fn) {\n    var _this6 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      var subscriptions = [];\n\n      var outer = _this6.subscribe({\n        next: function (value) {\n          if (fn) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n          }\n\n          var inner = C.from(value).subscribe({\n            next: function (value) {\n              observer.next(value);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              var i = subscriptions.indexOf(inner);\n              if (i >= 0) subscriptions.splice(i, 1);\n              completeIfDone();\n            }\n          });\n          subscriptions.push(inner);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          completeIfDone();\n        }\n      });\n\n      function completeIfDone() {\n        if (outer.closed && subscriptions.length === 0) observer.complete();\n      }\n\n      return function () {\n        subscriptions.forEach(function (s) {\n          return s.unsubscribe();\n        });\n        outer.unsubscribe();\n      };\n    });\n  };\n\n  _proto3[SymbolObservable] = function () {\n    return this;\n  };\n\n  Observable.from = function from(x) {\n    var C = typeof this === 'function' ? this : Observable;\n    if (x == null) throw new TypeError(x + ' is not an object');\n    var method = getMethod(x, SymbolObservable);\n\n    if (method) {\n      var observable = method.call(x);\n      if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n      if (isObservable(observable) && observable.constructor === C) return observable;\n      return new C(function (observer) {\n        return observable.subscribe(observer);\n      });\n    }\n\n    if (hasSymbol('iterator')) {\n      method = getMethod(x, SymbolIterator);\n\n      if (method) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(method.call(x)), _step; !(_step = _iterator()).done;) {\n              var item = _step.value;\n              observer.next(item);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n    }\n\n    if (Array.isArray(x)) {\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < x.length; ++i) {\n            observer.next(x[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n\n    throw new TypeError(x + ' is not observable');\n  };\n\n  Observable.of = function of() {\n    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      items[_key2] = arguments[_key2];\n    }\n\n    var C = typeof this === 'function' ? this : Observable;\n    return new C(function (observer) {\n      enqueue(function () {\n        if (observer.closed) return;\n\n        for (var i = 0; i < items.length; ++i) {\n          observer.next(items[i]);\n          if (observer.closed) return;\n        }\n\n        observer.complete();\n      });\n    });\n  };\n\n  _createClass(Observable, null, [{\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}\n\nexport { Observable };\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\n\t\t\tif (typeof Symbol.for === 'function') {\n\t\t\t\t// This just needs to be something that won't trample other user's Symbol.for use\n\t\t\t\t// It also will guide people to the source of their issues, if this is problematic.\n\t\t\t\t// META: It's a resource locator!\n\t\t\t\tresult = Symbol.for('https://github.com/benlesh/symbol-observable');\n\t\t\t} else {\n\t\t\t\t// Symbol.for didn't exist! The best we can do at this point is a totally \n\t\t\t\t// unique symbol. Note that the string argument here is a descriptor, not\n\t\t\t\t// an identifier. This symbol is unique.\n\t\t\t\tresult = Symbol('https://github.com/benlesh/symbol-observable');\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tSymbol.observable = result;\n\t\t\t} catch (err) {\n\t\t\t\t// Do nothing. In some environments, users have frozen `Symbol` for security reasons,\n\t\t\t\t// if it is frozen assigning to it will throw. In this case, we don't care, because\n\t\t\t\t// they will need to use the returned value from the ponyfill.\n\t\t\t}\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import {\n  Observable,\n  Observer,\n  Subscription as ObservableSubscription,\n  Subscriber,\n} from 'zen-observable-ts';\n\n// This simplified polyfill attempts to follow the ECMAScript Observable\n// proposal (https://github.com/zenparsing/es-observable)\nimport 'symbol-observable';\n\nexport type {\n  Observer,\n  ObservableSubscription,\n  Subscriber,\n};\n\n// The zen-observable package defines Observable.prototype[Symbol.observable]\n// when Symbol is supported, but RxJS interop depends on also setting this fake\n// '@@observable' string as a polyfill for Symbol.observable.\nconst { prototype } = Observable;\nconst fakeObsSymbol = '@@observable' as keyof typeof prototype;\nif (!prototype[fakeObsSymbol]) {\n  prototype[fakeObsSymbol] = function () { return this; };\n}\n\nexport { Observable };\n","const { toString } = Object.prototype;\n\n/**\n * Deeply clones a value to create a new instance.\n */\nexport function cloneDeep<T>(value: T): T {\n  return cloneDeepHelper(value);\n}\n\nfunction cloneDeepHelper<T>(val: T, seen?: Map<any, any>): T {\n  switch (toString.call(val)) {\n  case \"[object Array]\": {\n    seen = seen || new Map;\n    if (seen.has(val)) return seen.get(val);\n    const copy: T & any[] = (val as any).slice(0);\n    seen.set(val, copy);\n    copy.forEach(function (child, i) {\n      copy[i] = cloneDeepHelper(child, seen);\n    });\n    return copy;\n  }\n\n  case \"[object Object]\": {\n    seen = seen || new Map;\n    if (seen.has(val)) return seen.get(val);\n    // High fidelity polyfills of Object.create and Object.getPrototypeOf are\n    // possible in all JS environments, so we will assume they exist/work.\n    const copy = Object.create(Object.getPrototypeOf(val));\n    seen.set(val, copy);\n    Object.keys(val as T & Record<string, any>).forEach(key => {\n      copy[key] = cloneDeepHelper((val as any)[key], seen);\n    });\n    return copy;\n  }\n\n  default:\n    return val;\n  }\n}\n","import '../globals'; // For __DEV__\nimport { isNonNullObject } from './objects';\n\nfunction deepFreeze(value: any) {\n  const workSet = new Set([value]);\n  workSet.forEach(obj => {\n    if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n      Object.getOwnPropertyNames(obj).forEach(name => {\n        if (isNonNullObject(obj[name])) workSet.add(obj[name]);\n      });\n    }\n  });\n  return value;\n}\n\nfunction shallowFreeze<T extends object>(obj: T): T | null {\n  if (__DEV__ && !Object.isFrozen(obj)) {\n    try {\n      Object.freeze(obj);\n    } catch (e) {\n      // Some types like Uint8Array and Node.js's Buffer cannot be frozen, but\n      // they all throw a TypeError when you try, so we re-throw any exceptions\n      // that are not TypeErrors, since that would be unexpected.\n      if (e instanceof TypeError) return null;\n      throw e;\n    }\n  }\n  return obj;\n}\n\nexport function maybeDeepFreeze<T>(obj: T): T {\n  if (__DEV__) {\n    deepFreeze(obj);\n  }\n  return obj;\n}\n","import { Observer } from \"./Observable\";\n\nexport function iterateObserversSafely<E, A>(\n  observers: Set<Observer<E>>,\n  method: keyof Observer<E>,\n  argument?: A,\n) {\n  // In case observers is modified during iteration, we need to commit to the\n  // original elements, which also provides an opportunity to filter them down\n  // to just the observers with the given method.\n  const observersWithMethod: Observer<E>[] = [];\n  observers.forEach(obs => obs[method] && observersWithMethod.push(obs));\n  observersWithMethod.forEach(obs => (obs as any)[method](argument));\n}\n","import { Observable, Observer } from \"./Observable\";\n\n// Like Observable.prototype.map, except that the mapping function can\n// optionally return a Promise (or be async).\nexport function asyncMap<V, R>(\n  observable: Observable<V>,\n  mapFn: (value: V) => R | PromiseLike<R>,\n  catchFn?: (error: any) => R | PromiseLike<R>,\n): Observable<R> {\n  return new Observable<R>(observer => {\n    const { next, error, complete } = observer;\n    let activeCallbackCount = 0;\n    let completed = false;\n    let promiseQueue = {\n      // Normally we would initialize promiseQueue to Promise.resolve(), but\n      // in this case, for backwards compatibility, we need to be careful to\n      // invoke the first callback synchronously.\n      then(callback: () => any) {\n        return new Promise(resolve => resolve(callback()));\n      },\n    } as Promise<void>;\n\n    function makeCallback(\n      examiner: typeof mapFn | typeof catchFn,\n      delegate: typeof next | typeof error,\n    ): (arg: any) => void {\n      if (examiner) {\n        return arg => {\n          ++activeCallbackCount;\n          const both = () => examiner(arg);\n          promiseQueue = promiseQueue.then(both, both).then(\n            result => {\n              --activeCallbackCount;\n              next && next.call(observer, result);\n              if (completed) {\n                handler.complete!();\n              }\n            },\n            error => {\n              --activeCallbackCount;\n              throw error;\n            },\n          ).catch(caught => {\n            error && error.call(observer, caught);\n          });\n        };\n      } else {\n        return arg => delegate && delegate.call(observer, arg);\n      }\n    }\n\n    const handler: Observer<V> = {\n      next: makeCallback(mapFn, next),\n      error: makeCallback(catchFn, error),\n      complete() {\n        completed = true;\n        if (!activeCallbackCount) {\n          complete && complete.call(observer);\n        }\n      },\n    };\n\n    const sub = observable.subscribe(handler);\n    return () => sub.unsubscribe();\n  });\n}\n","import { maybe } from \"../globals\";\n\nexport const canUseWeakMap =\n  typeof WeakMap === 'function' &&\n  maybe(() => navigator.product) !== 'ReactNative';\n\nexport const canUseWeakSet = typeof WeakSet === 'function';\n\nexport const canUseSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.for === 'function';\n\nexport const canUseAsyncIteratorSymbol = canUseSymbol && Symbol.asyncIterator;\n\nexport const canUseDOM =\n  typeof maybe(() => window.document.createElement) === \"function\";\n\nconst usingJSDOM: boolean =\n  // Following advice found in this comment from @domenic (maintainer of jsdom):\n  // https://github.com/jsdom/jsdom/issues/1537#issuecomment-229405327\n  //\n  // Since we control the version of Jest and jsdom used when running Apollo\n  // Client tests, and that version is recent enought to include \" jsdom/x.y.z\"\n  // at the end of the user agent string, I believe this case is all we need to\n  // check. Testing for \"Node.js\" was recommended for backwards compatibility\n  // with older version of jsdom, but we don't have that problem.\n  maybe(() => navigator.userAgent.indexOf(\"jsdom\") >= 0) || false;\n\n// Our tests should all continue to pass if we remove this !usingJSDOM\n// condition, thereby allowing useLayoutEffect when using jsdom. Unfortunately,\n// if we allow useLayoutEffect, then useSyncExternalStore generates many\n// warnings about useLayoutEffect doing nothing on the server. While these\n// warnings are harmless, this !usingJSDOM condition seems to be the best way to\n// prevent them (i.e. skipping useLayoutEffect when using jsdom).\nexport const canUseLayoutEffect = canUseDOM && !usingJSDOM;\n","import { Observable } from \"./Observable\";\nimport { canUseSymbol } from \"../common/canUse\";\n\n// Generic implementations of Observable.prototype methods like map and\n// filter need to know how to create a new Observable from an Observable\n// subclass (like Concast or ObservableQuery). Those methods assume\n// (perhaps unwisely?) that they can call the subtype's constructor with a\n// Subscriber function, even though the subclass constructor might expect\n// different parameters. Defining this static Symbol.species property on\n// the subclass is a hint to generic Observable code to use the default\n// constructor instead of trying to do `new Subclass(observer => ...)`.\nexport function fixObservableSubclass<\n  S extends new (...args: any[]) => Observable<any>,\n>(subclass: S): S {\n  function set(key: symbol | string) {\n    // Object.defineProperty is necessary because the Symbol.species\n    // property is a getter by default in modern JS environments, so we\n    // can't assign to it with a normal assignment expression.\n    Object.defineProperty(subclass, key, { value: Observable });\n  }\n  if (canUseSymbol && Symbol.species) {\n    set(Symbol.species);\n  }\n  // The \"@@species\" string is used as a fake Symbol.species value in some\n  // polyfill systems (including the SymbolSpecies variable used by\n  // zen-observable), so we should set it as well, to be safe.\n  set(\"@@species\");\n  return subclass;\n}\n","import { Observable, Observer, ObservableSubscription, Subscriber } from \"./Observable\";\nimport { iterateObserversSafely } from \"./iteration\";\nimport { fixObservableSubclass } from \"./subclassing\";\n\ntype MaybeAsync<T> = T | PromiseLike<T>;\n\nfunction isPromiseLike<T>(value: MaybeAsync<T>): value is PromiseLike<T> {\n  return value && typeof (value as any).then === \"function\";\n}\n\n// Any individual Source<T> can be an Observable<T> or a promise for one.\ntype Source<T> = MaybeAsync<Observable<T>>;\n\nexport type ConcastSourcesIterable<T> = Iterable<Source<T>>;\nexport type ConcastSourcesArray<T> = Array<Source<T>>;\n\n// A Concast<T> observable concatenates the given sources into a single\n// non-overlapping sequence of Ts, automatically unwrapping any promises,\n// and broadcasts the T elements of that sequence to any number of\n// subscribers, all without creating a bunch of intermediary Observable\n// wrapper objects.\n//\n// Even though any number of observers can subscribe to the Concast, each\n// source observable is guaranteed to receive at most one subscribe call,\n// and the results are multicast to all observers.\n//\n// In addition to broadcasting every next/error message to this.observers,\n// the Concast stores the most recent message using this.latest, so any\n// new observers can immediately receive the latest message, even if it\n// was originally delivered in the past. This behavior means we can assume\n// every active observer in this.observers has received the same most\n// recent message.\n//\n// With the exception of this.latest replay, a Concast is a \"hot\"\n// observable in the sense that it does not replay past results from the\n// beginning of time for each new observer.\n//\n// Could we have used some existing RxJS class instead? Concast<T> is\n// similar to a BehaviorSubject<T>, because it is multicast and redelivers\n// the latest next/error message to new subscribers. Unlike Subject<T>,\n// Concast<T> does not expose an Observer<T> interface (this.handlers is\n// intentionally private), since Concast<T> gets its inputs from the\n// concatenated sources. If we ever switch to RxJS, there may be some\n// value in reusing their code, but for now we use zen-observable, which\n// does not contain any Subject implementations.\nexport class Concast<T> extends Observable<T> {\n  // Active observers receiving broadcast messages. Thanks to this.latest,\n  // we can assume all observers in this Set have received the same most\n  // recent message, though possibly at different times in the past.\n  private observers = new Set<Observer<T>>();\n\n  // This property starts off undefined to indicate the initial\n  // subscription has not yet begun, then points to each source\n  // subscription in turn, and finally becomes null after the sources have\n  // been exhausted. After that, it stays null.\n  private sub?: ObservableSubscription | null;\n\n  // Not only can the individual elements of the iterable be promises, but\n  // also the iterable itself can be wrapped in a promise.\n  constructor(sources: MaybeAsync<ConcastSourcesIterable<T>> | Subscriber<T>) {\n    super(observer => {\n      this.addObserver(observer);\n      return () => this.removeObserver(observer);\n    });\n\n    // Suppress rejection warnings for this.promise, since it's perfectly\n    // acceptable to pay no attention to this.promise if you're consuming\n    // the results through the normal observable API.\n    this.promise.catch(_ => {});\n\n    // If someone accidentally tries to create a Concast using a subscriber\n    // function, recover by creating an Observable from that subscriber and\n    // using it as the source.\n    if (typeof sources === \"function\") {\n      sources = [new Observable(sources)];\n    }\n\n    if (isPromiseLike(sources)) {\n      sources.then(\n        iterable => this.start(iterable),\n        this.handlers.error,\n      );\n    } else {\n      this.start(sources);\n    }\n  }\n\n  // A consumable array of source observables, incrementally consumed each time\n  // this.handlers.complete is called. This private field is not initialized\n  // until the concast.start method is called, which can happen asynchronously\n  // if a Promise is passed to the Concast constructor, so undefined is a\n  // possible value for this.sources before concast.start is called.\n  private sources: Source<T>[] | undefined;\n\n  private start(sources: ConcastSourcesIterable<T>) {\n    if (this.sub !== void 0) return;\n\n    // In practice, sources is most often simply an Array of observables.\n    // TODO Consider using sources[Symbol.iterator]() to take advantage\n    // of the laziness of non-Array iterables.\n    this.sources = Array.from(sources);\n\n    // Calling this.handlers.complete() kicks off consumption of the first\n    // source observable. It's tempting to do this step lazily in\n    // addObserver, but this.promise can be accessed without calling\n    // addObserver, so consumption needs to begin eagerly.\n    this.handlers.complete();\n  }\n\n  private deliverLastMessage(observer: Observer<T>) {\n    if (this.latest) {\n      const nextOrError = this.latest[0];\n      const method = observer[nextOrError];\n      if (method) {\n        method.call(observer, this.latest[1]);\n      }\n      // If the subscription is already closed, and the last message was\n      // a 'next' message, simulate delivery of the final 'complete'\n      // message again.\n      if (this.sub === null &&\n          nextOrError === \"next\" &&\n          observer.complete) {\n        observer.complete();\n      }\n    }\n  }\n\n  public addObserver(observer: Observer<T>) {\n    if (!this.observers.has(observer)) {\n      // Immediately deliver the most recent message, so we can always\n      // be sure all observers have the latest information.\n      this.deliverLastMessage(observer);\n      this.observers.add(observer);\n    }\n  }\n\n  public removeObserver(observer: Observer<T>) {\n    if (\n      this.observers.delete(observer) &&\n      this.observers.size < 1\n    ) {\n      // In case there are still any listeners in this.nextResultListeners, and\n      // no error or completion has been broadcast yet, make sure those\n      // observers have a chance to run and then remove themselves from\n      // this.observers.\n      this.handlers.complete();\n    }\n  }\n\n  // Any Concast object can be trivially converted to a Promise, without\n  // having to create a new wrapper Observable. This promise provides an\n  // easy way to observe the final state of the Concast.\n  private resolve: (result?: T | PromiseLike<T>) => void;\n  private reject: (reason: any) => void;\n  public readonly promise = new Promise<T>((resolve, reject) => {\n    this.resolve = resolve;\n    this.reject = reject;\n  });\n\n  // Name and argument of the most recently invoked observer method, used\n  // to deliver latest results immediately to new observers.\n  private latest?: [\"next\", T] | [\"error\", any];\n\n  // Bound handler functions that can be reused for every internal\n  // subscription.\n  private handlers = {\n    next: (result: T) => {\n      if (this.sub !== null) {\n        this.latest = [\"next\", result];\n        this.notify(\"next\", result);\n        iterateObserversSafely(this.observers, \"next\", result);\n      }\n    },\n\n    error: (error: any) => {\n      const { sub } = this;\n      if (sub !== null) {\n        // Delay unsubscribing from the underlying subscription slightly,\n        // so that immediately subscribing another observer can keep the\n        // subscription active.\n        if (sub) setTimeout(() => sub.unsubscribe());\n        this.sub = null;\n        this.latest = [\"error\", error];\n        this.reject(error);\n        this.notify(\"error\", error);\n        iterateObserversSafely(this.observers, \"error\", error);\n      }\n    },\n\n    complete: () => {\n      const { sub, sources = [] } = this;\n      if (sub !== null) {\n        // If complete is called before concast.start, this.sources may be\n        // undefined, so we use a default value of [] for sources. That works\n        // here because it falls into the if (!value) {...} block, which\n        // appropriately terminates the Concast, even if this.sources might\n        // eventually have been initialized to a non-empty array.\n        const value = sources.shift();\n        if (!value) {\n          if (sub) setTimeout(() => sub.unsubscribe());\n          this.sub = null;\n          if (this.latest &&\n              this.latest[0] === \"next\") {\n            this.resolve(this.latest[1]);\n          } else {\n            this.resolve();\n          }\n          this.notify(\"complete\");\n          // We do not store this.latest = [\"complete\"], because doing so\n          // discards useful information about the previous next (or\n          // error) message. Instead, if new observers subscribe after\n          // this Concast has completed, they will receive the final\n          // 'next' message (unless there was an error) immediately\n          // followed by a 'complete' message (see addObserver).\n          iterateObserversSafely(this.observers, \"complete\");\n        } else if (isPromiseLike(value)) {\n          value.then(obs => this.sub = obs.subscribe(this.handlers));\n        } else {\n          this.sub = value.subscribe(this.handlers);\n        }\n      }\n    },\n  };\n\n  private nextResultListeners = new Set<NextResultListener>();\n\n  private notify(\n    method: Parameters<NextResultListener>[0],\n    arg?: Parameters<NextResultListener>[1],\n  ) {\n    const { nextResultListeners } = this;\n    if (nextResultListeners.size) {\n      // Replacing this.nextResultListeners first ensures it does not grow while\n      // we are iterating over it, potentially leading to infinite loops.\n      this.nextResultListeners = new Set;\n      nextResultListeners.forEach(listener => listener(method, arg));\n    }\n  }\n\n  // We need a way to run callbacks just *before* the next result (or error or\n  // completion) is delivered by this Concast, so we can be sure any code that\n  // runs as a result of delivering that result/error observes the effects of\n  // running the callback(s). It was tempting to reuse the Observer type instead\n  // of introducing NextResultListener, but that messes with the sizing and\n  // maintenance of this.observers, and ends up being more code overall.\n  beforeNext(callback: NextResultListener) {\n    let called = false;\n    this.nextResultListeners.add((method, arg) => {\n      if (!called) {\n        called = true;\n        callback(method, arg);\n      }\n    });\n  }\n\n  // A public way to abort observation and broadcast.\n  public cancel = (reason: any) => {\n    this.reject(reason);\n    this.sources = [];\n    this.handlers.complete();\n  }\n}\n\ntype NextResultListener = (\n  method: \"next\" | \"error\" | \"complete\",\n  arg?: any,\n) => any;\n\n// Necessary because the Concast constructor has a different signature\n// than the Observable constructor.\nfixObservableSubclass(Concast);\n","export function isNonEmptyArray<T>(value?: ArrayLike<T>): value is Array<T> {\n  return Array.isArray(value) && value.length > 0;\n}\n","import {\n  ExecutionPatchIncrementalResult,\n  ExecutionPatchInitialResult,\n  ExecutionPatchResult,\n  FetchResult,\n} from \"../../link/core\";\nimport { isNonEmptyArray } from \"./arrays\";\nimport { DeepMerger } from \"./mergeDeep\";\n\nexport function isExecutionPatchIncrementalResult<T>(\n  value: FetchResult<T>\n): value is ExecutionPatchIncrementalResult {\n  return \"incremental\" in value;\n}\n\nexport function isExecutionPatchInitialResult<T>(\n  value: FetchResult<T>\n): value is ExecutionPatchInitialResult<T> {\n  return \"hasNext\" in value && \"data\" in value;\n}\n\nexport function isExecutionPatchResult<T>(\n  value: FetchResult<T>\n): value is ExecutionPatchResult<T> {\n  return (\n    isExecutionPatchIncrementalResult(value) ||\n    isExecutionPatchInitialResult(value)\n  );\n}\n\nexport function mergeIncrementalData<TData extends object>(\n  prevResult: TData,\n  result: ExecutionPatchResult<TData>\n) {\n  let mergedData = prevResult;\n  const merger = new DeepMerger();\n  if (\n    isExecutionPatchIncrementalResult(result) &&\n    isNonEmptyArray(result.incremental)\n  ) {\n    result.incremental.forEach(({ data, path }) => {\n      for (let i = path.length - 1; i >= 0; --i) {\n        const key = path[i];\n        const isNumericKey = !isNaN(+key);\n        const parent: Record<string | number, any> = isNumericKey ? [] : {};\n        parent[key] = data;\n        data = parent as typeof data;\n      }\n      mergedData = merger.merge(mergedData, data);\n    });\n  }\n  return mergedData as TData;\n}\n","import { FetchResult } from \"../../link/core\";\nimport { isNonEmptyArray } from \"../../utilities/common/arrays\";\nimport { isExecutionPatchIncrementalResult } from \"../../utilities/common/incrementalResult\";\n\nexport function graphQLResultHasError<T>(result: FetchResult<T>): boolean {\n  const errors = getGraphQLErrorsFromResult(result);\n  return isNonEmptyArray(errors);\n}\n\nexport function getGraphQLErrorsFromResult<T>(result: FetchResult<T>) {\n  const graphQLErrors = isNonEmptyArray(result.errors)\n    ? result.errors.slice(0)\n    : [];\n\n  if (\n    isExecutionPatchIncrementalResult(result) &&\n    isNonEmptyArray(result.incremental)\n  ) {\n    result.incremental.forEach((incrementalResult) => {\n      if (incrementalResult.errors) {\n        graphQLErrors.push(...incrementalResult.errors);\n      }\n    });\n  }\n  return graphQLErrors;\n}\n","import { TupleToIntersection } from './mergeDeep';\n\n/**\n * Merges the provided objects shallowly and removes\n * all properties with an `undefined` value\n */\nexport function compact<TArgs extends any[]>(\n  ...objects: TArgs\n): TupleToIntersection<TArgs> {\n  const result = Object.create(null);\n\n  objects.forEach(obj => {\n    if (!obj) return;\n    Object.keys(obj).forEach(key => {\n      const value = (obj as any)[key];\n      if (value !== void 0) {\n        result[key] = value;\n      }\n    });\n  });\n\n  return result;\n}\n","const prefixCounts = new Map<string, number>();\n\n// These IDs won't be globally unique, but they will be unique within this\n// process, thanks to the counter, and unguessable thanks to the random suffix.\nexport function makeUniqueId(prefix: string) {\n  const count = prefixCounts.get(prefix) || 1;\n  prefixCounts.set(prefix, count + 1);\n  return `${prefix}:${count}:${Math.random().toString(36).slice(2)}`;\n}\n","import { makeUniqueId } from \"./makeUniqueId\";\n\nexport function stringifyForDisplay(value: any): string {\n  const undefId = makeUniqueId(\"stringifyForDisplay\");\n  return JSON.stringify(value, (key, value) => {\n    return value === void 0 ? undefId : value;\n  }).split(JSON.stringify(undefId)).join(\"<undefined>\");\n}\n","import type {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n  OperationVariables,\n} from \"../../core\";\n\nimport { compact } from \"./compact\";\n\ntype OptionsUnion<TData, TVariables extends OperationVariables, TContext> =\n  | WatchQueryOptions<TVariables, TData>\n  | QueryOptions<TVariables, TData>\n  | MutationOptions<TData, TVariables, TContext>;\n\nexport function mergeOptions<\n  TOptions extends Partial<OptionsUnion<any, any, any>>\n>(\n  defaults: TOptions | Partial<TOptions> | undefined,\n  options: TOptions | Partial<TOptions>,\n): TOptions {\n  return compact(defaults, options, options.variables && {\n    variables: {\n      ...(defaults && defaults.variables),\n      ...options.variables,\n    },\n  });\n}\n","export { DEV, maybe } from './globals';\n\nexport {\n  DirectiveInfo,\n  InclusionDirectives,\n  shouldInclude,\n  hasDirectives,\n  hasAnyDirectives,\n  hasAllDirectives,\n  hasClientExports,\n  getDirectiveNames,\n  getInclusionDirectives,\n} from './graphql/directives';\n\nexport {\n  FragmentMap,\n  FragmentMapFunction,\n  createFragmentMap,\n  getFragmentQueryDocument,\n  getFragmentFromSelection,\n} from './graphql/fragments';\n\nexport {\n  checkDocument,\n  getOperationDefinition,\n  getOperationName,\n  getFragmentDefinitions,\n  getQueryDefinition,\n  getFragmentDefinition,\n  getMainDefinition,\n  getDefaultValues,\n} from './graphql/getFromAST';\n\nexport {\n  StoreObject,\n  Reference,\n  StoreValue,\n  Directives,\n  VariableValue,\n  makeReference,\n  isDocumentNode,\n  isReference,\n  isField,\n  isInlineFragment,\n  valueToObjectRepresentation,\n  storeKeyNameFromField,\n  argumentsObjectFromField,\n  resultKeyNameFromField,\n  getStoreKeyName,\n  getTypenameFromResult,\n} from './graphql/storeUtils';\n\nexport {\n  RemoveNodeConfig,\n  GetNodeConfig,\n  RemoveDirectiveConfig,\n  GetDirectiveConfig,\n  RemoveArgumentsConfig,\n  GetFragmentSpreadConfig,\n  RemoveFragmentSpreadConfig,\n  RemoveFragmentDefinitionConfig,\n  RemoveVariableDefinitionConfig,\n  addTypenameToDocument,\n  buildQueryFromSelectionSet,\n  removeDirectivesFromDocument,\n  removeConnectionDirectiveFromDocument,\n  removeArgumentsFromDocument,\n  removeFragmentSpreadFromDocument,\n  removeClientSetsFromDocument,\n} from './graphql/transform';\n\nexport {\n  concatPagination,\n  offsetLimitPagination,\n  relayStylePagination,\n} from './policies/pagination';\n\nexport {\n  Observable,\n  Observer,\n  ObservableSubscription\n} from './observables/Observable';\n\nexport * from './common/mergeDeep';\nexport * from './common/cloneDeep';\nexport * from './common/maybeDeepFreeze';\nexport * from './observables/iteration';\nexport * from './observables/asyncMap';\nexport * from './observables/Concast';\nexport * from './observables/subclassing';\nexport * from './common/arrays';\nexport * from './common/objects';\nexport * from './common/errorHandling';\nexport * from './common/canUse';\nexport * from './common/compact';\nexport * from './common/makeUniqueId';\nexport * from './common/stringifyForDisplay';\nexport * from './common/mergeOptions';\n\nexport * from './types/IsStrictlyAny';\n","import { DocumentNode } from 'graphql';\nimport { wrap } from 'optimism';\n\nimport {\n  StoreObject,\n  Reference,\n  getFragmentQueryDocument,\n} from '../../utilities';\nimport { DataProxy } from './types/DataProxy';\nimport { Cache } from './types/Cache';\n\nexport type Transaction<T> = (c: ApolloCache<T>) => void;\n\nexport abstract class ApolloCache<TSerialized> implements DataProxy {\n  // required to implement\n  // core API\n  public abstract read<TData = any, TVariables = any>(\n    query: Cache.ReadOptions<TVariables, TData>,\n  ): TData | null;\n  public abstract write<TData = any, TVariables = any>(\n    write: Cache.WriteOptions<TData, TVariables>,\n  ): Reference | undefined;\n  public abstract diff<T>(query: Cache.DiffOptions): Cache.DiffResult<T>;\n  public abstract watch<TData = any, TVariables = any>(\n    watch: Cache.WatchOptions<TData, TVariables>,\n  ): () => void;\n\n  // Empty the cache and restart all current watches (unless\n  // options.discardWatches is true).\n  public abstract reset(options?: Cache.ResetOptions): Promise<void>;\n\n  // Remove whole objects from the cache by passing just options.id, or\n  // specific fields by passing options.field and/or options.args. If no\n  // options.args are provided, all fields matching options.field (even\n  // those with arguments) will be removed. Returns true iff any data was\n  // removed from the cache.\n  public abstract evict(options: Cache.EvictOptions): boolean;\n\n  // initializer / offline / ssr API\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public abstract restore(\n    serializedState: TSerialized,\n  ): ApolloCache<TSerialized>;\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public abstract extract(optimistic?: boolean): TSerialized;\n\n  // Optimistic API\n\n  public abstract removeOptimistic(id: string): void;\n\n  // Transactional API\n\n  // The batch method is intended to replace/subsume both performTransaction\n  // and recordOptimisticTransaction, but performTransaction came first, so we\n  // provide a default batch implementation that's just another way of calling\n  // performTransaction. Subclasses of ApolloCache (such as InMemoryCache) can\n  // override the batch method to do more interesting things with its options.\n  public batch<U>(options: Cache.BatchOptions<this, U>): U {\n    const optimisticId =\n      typeof options.optimistic === \"string\" ? options.optimistic :\n      options.optimistic === false ? null : void 0;\n    let updateResult: U;\n    this.performTransaction(\n      () => updateResult = options.update(this),\n      optimisticId,\n    );\n    return updateResult!;\n  }\n\n  public abstract performTransaction(\n    transaction: Transaction<TSerialized>,\n    // Although subclasses may implement recordOptimisticTransaction\n    // however they choose, the default implementation simply calls\n    // performTransaction with a string as the second argument, allowing\n    // performTransaction to handle both optimistic and non-optimistic\n    // (broadcast-batching) transactions. Passing null for optimisticId is\n    // also allowed, and indicates that performTransaction should apply\n    // the transaction non-optimistically (ignoring optimistic data).\n    optimisticId?: string | null,\n  ): void;\n\n  public recordOptimisticTransaction(\n    transaction: Transaction<TSerialized>,\n    optimisticId: string,\n  ) {\n    this.performTransaction(transaction, optimisticId);\n  }\n\n  // Optional API\n\n  // Called once per input document, allowing the cache to make static changes\n  // to the query, such as adding __typename fields.\n  public transformDocument(document: DocumentNode): DocumentNode {\n    return document;\n  }\n\n  // Called before each ApolloLink request, allowing the cache to make dynamic\n  // changes to the query, such as filling in missing fragment definitions.\n  public transformForLink(document: DocumentNode): DocumentNode {\n    return document;\n  }\n\n  public identify(object: StoreObject | Reference): string | undefined {\n    return;\n  }\n\n  public gc(): string[] {\n    return [];\n  }\n\n  public modify(options: Cache.ModifyOptions): boolean {\n    return false;\n  }\n\n  // DataProxy API\n  /**\n   *\n   * @param options\n   * @param optimistic\n   */\n  public readQuery<QueryType, TVariables = any>(\n    options: Cache.ReadQueryOptions<QueryType, TVariables>,\n    optimistic = !!options.optimistic,\n  ): QueryType | null {\n    return this.read({\n      ...options,\n      rootId: options.id || 'ROOT_QUERY',\n      optimistic,\n    });\n  }\n\n  // Make sure we compute the same (===) fragment query document every\n  // time we receive the same fragment in readFragment.\n  private getFragmentDoc = wrap(getFragmentQueryDocument);\n\n  public readFragment<FragmentType, TVariables = any>(\n    options: Cache.ReadFragmentOptions<FragmentType, TVariables>,\n    optimistic = !!options.optimistic,\n  ): FragmentType | null {\n    return this.read({\n      ...options,\n      query: this.getFragmentDoc(options.fragment, options.fragmentName),\n      rootId: options.id,\n      optimistic,\n    });\n  }\n\n  public writeQuery<TData = any, TVariables = any>({\n    id,\n    data,\n    ...options\n  }: Cache.WriteQueryOptions<TData, TVariables>): Reference | undefined {\n    return this.write(Object.assign(options, {\n      dataId: id || 'ROOT_QUERY',\n      result: data,\n    }));\n  }\n\n  public writeFragment<TData = any, TVariables = any>({\n    id,\n    data,\n    fragment,\n    fragmentName,\n    ...options\n  }: Cache.WriteFragmentOptions<TData, TVariables>): Reference | undefined {\n    return this.write(Object.assign(options, {\n      query: this.getFragmentDoc(fragment, fragmentName),\n      dataId: id,\n      result: data,\n    }));\n  }\n\n  public updateQuery<TData = any, TVariables = any>(\n    options: Cache.UpdateQueryOptions<TData, TVariables>,\n    update: (data: TData | null) => TData | null | void,\n  ): TData | null {\n    return this.batch({\n      update(cache) {\n        const value = cache.readQuery<TData, TVariables>(options);\n        const data = update(value);\n        if (data === void 0 || data === null) return value;\n        cache.writeQuery<TData, TVariables>({ ...options, data });\n        return data;\n      },\n    });\n  }\n\n  public updateFragment<TData = any, TVariables = any>(\n    options: Cache.UpdateFragmentOptions<TData, TVariables>,\n    update: (data: TData | null) => TData | null | void,\n  ): TData | null {\n    return this.batch({\n      update(cache) {\n        const value = cache.readFragment<TData, TVariables>(options);\n        const data = update(value);\n        if (data === void 0 || data === null) return value;\n        cache.writeFragment<TData, TVariables>({ ...options, data });\n        return data;\n      },\n    });\n  }\n}\n","import { DataProxy } from './DataProxy';\nimport { Modifier, Modifiers } from './common';\nimport { ApolloCache } from '../cache';\n\nexport namespace Cache {\n  export type WatchCallback<TData = any> = (\n    diff: Cache.DiffResult<TData>,\n    lastDiff?: Cache.DiffResult<TData>,\n  ) => void;\n\n  export interface ReadOptions<TVariables = any, TData = any>\n    extends DataProxy.Query<TVariables, TData> {\n    rootId?: string;\n    previousResult?: any;\n    optimistic: boolean;\n    returnPartialData?: boolean;\n    canonizeResults?: boolean;\n  }\n\n  export interface WriteOptions<TResult = any, TVariables = any>\n    extends Omit<DataProxy.Query<TVariables, TResult>, \"id\">,\n            Omit<DataProxy.WriteOptions<TResult>, \"data\">\n  {\n    dataId?: string;\n    result: TResult;\n  }\n\n  export interface DiffOptions<\n    TData = any,\n    TVariables = any,\n  > extends Omit<ReadOptions<TVariables, TData>, \"rootId\"> {\n    // The DiffOptions interface is currently just an alias for\n    // ReadOptions, though DiffOptions used to be responsible for\n    // declaring the returnPartialData option.\n  }\n\n  export interface WatchOptions<\n    TData = any,\n    TVariables = any,\n  > extends DiffOptions<TData, TVariables> {\n    watcher?: object;\n    immediate?: boolean;\n    callback: WatchCallback<TData>;\n    lastDiff?: DiffResult<TData>;\n  }\n\n  export interface EvictOptions {\n    id?: string;\n    fieldName?: string;\n    args?: Record<string, any>;\n    broadcast?: boolean;\n  }\n\n  // Although you can call cache.reset() without options, its behavior can be\n  // configured by passing a Cache.ResetOptions object.\n  export interface ResetOptions {\n    discardWatches?: boolean;\n  }\n\n  export interface ModifyOptions {\n    id?: string;\n    fields: Modifiers | Modifier<any>;\n    optimistic?: boolean;\n    broadcast?: boolean;\n  }\n\n  export interface BatchOptions<\n    TCache extends ApolloCache<any>,\n    TUpdateResult = void,\n  > {\n    // Same as the first parameter of performTransaction, except the cache\n    // argument will have the subclass type rather than ApolloCache.\n    update(cache: TCache): TUpdateResult;\n\n    // Passing a string for this option creates a new optimistic layer, with the\n    // given string as its layer.id, just like passing a string for the\n    // optimisticId parameter of performTransaction. Passing true is the same as\n    // passing undefined to performTransaction (running the batch operation\n    // against the current top layer of the cache), and passing false is the\n    // same as passing null (running the operation against root/non-optimistic\n    // cache data).\n    optimistic?: string | boolean;\n\n    // If you specify the ID of an optimistic layer using this option, that\n    // layer will be removed as part of the batch transaction, triggering at\n    // most one broadcast for both the transaction and the removal of the layer.\n    // Note: this option is needed because calling cache.removeOptimistic during\n    // the transaction function may not be not safe, since any modifications to\n    // cache layers may be discarded after the transaction finishes.\n    removeOptimistic?: string;\n\n    // If you want to find out which watched queries were invalidated during\n    // this batch operation, pass this optional callback function. Returning\n    // false from the callback will prevent broadcasting this result.\n    onWatchUpdated?: (\n      this: TCache,\n      watch: Cache.WatchOptions,\n      diff: Cache.DiffResult<any>,\n      lastDiff: Cache.DiffResult<any> | undefined,\n    ) => any;\n  }\n\n  export import DiffResult = DataProxy.DiffResult;\n  export import ReadQueryOptions = DataProxy.ReadQueryOptions;\n  export import ReadFragmentOptions = DataProxy.ReadFragmentOptions;\n  export import WriteQueryOptions = DataProxy.WriteQueryOptions;\n  export import WriteFragmentOptions = DataProxy.WriteFragmentOptions;\n  export import UpdateQueryOptions = DataProxy.UpdateQueryOptions;\n  export import UpdateFragmentOptions = DataProxy.UpdateFragmentOptions;\n  export import Fragment = DataProxy.Fragment;\n}\n","import { DocumentNode, FieldNode } from 'graphql';\n\nimport {\n  Reference,\n  StoreObject,\n  StoreValue,\n  isReference,\n} from '../../../utilities';\n\nimport { StorageType } from '../../inmemory/policies';\n\n// The Readonly<T> type only really works for object types, since it marks\n// all of the object's properties as readonly, but there are many cases when\n// a generic type parameter like TExisting might be a string or some other\n// primitive type, in which case we need to avoid wrapping it with Readonly.\n// SafeReadonly<string> collapses to just string, which makes string\n// assignable to SafeReadonly<any>, whereas string is not assignable to\n// Readonly<any>, somewhat surprisingly.\nexport type SafeReadonly<T> = T extends object ? Readonly<T> : T;\n\nexport type MissingTree = string | {\n  readonly [key: string]: MissingTree;\n};\n\nexport class MissingFieldError extends Error {\n  constructor(\n    public readonly message: string,\n    public readonly path: MissingTree | Array<string | number>,\n    public readonly query: DocumentNode,\n    public readonly variables?: Record<string, any>,\n  ) {\n    // 'Error' breaks prototype chain here\n    super(message);\n\n    if (Array.isArray(this.path)) {\n      this.missing = this.message;\n      for (let i = this.path.length - 1; i >= 0; --i) {\n        this.missing = { [this.path[i]]: this.missing };\n      }\n    } else {\n      this.missing = this.path;\n    }\n\n    // We're not using `Object.setPrototypeOf` here as it isn't fully supported\n    // on Android (see issue #3236).\n    (this as any).__proto__ = MissingFieldError.prototype;\n  }\n\n  public readonly missing: MissingTree;\n}\n\nexport interface FieldSpecifier {\n  typename?: string;\n  fieldName: string;\n  field?: FieldNode;\n  args?: Record<string, any>;\n  variables?: Record<string, any>;\n}\n\nexport interface ReadFieldOptions extends FieldSpecifier {\n  from?: StoreObject | Reference;\n}\n\nexport interface ReadFieldFunction {\n  <V = StoreValue>(options: ReadFieldOptions): SafeReadonly<V> | undefined;\n  <V = StoreValue>(\n    fieldName: string,\n    from?: StoreObject | Reference,\n  ): SafeReadonly<V> | undefined;\n}\n\nexport type ToReferenceFunction = (\n  objOrIdOrRef: StoreObject | string | Reference,\n  mergeIntoStore?: boolean,\n) => Reference | undefined;\n\nexport type CanReadFunction = (value: StoreValue) => boolean;\n\nexport type ModifierDetails = {\n  DELETE: any;\n  INVALIDATE: any;\n  fieldName: string;\n  storeFieldName: string;\n  readField: ReadFieldFunction;\n  canRead: CanReadFunction;\n  isReference: typeof isReference;\n  toReference: ToReferenceFunction;\n  storage: StorageType;\n}\n\nexport type Modifier<T> = (value: T, details: ModifierDetails) => T;\n\nexport type Modifiers = {\n  [fieldName: string]: Modifier<any>;\n};\n","const { toString, hasOwnProperty } = Object.prototype;\nconst fnToStr = Function.prototype.toString;\nconst previousComparisons = new Map<object, Set<object>>();\n\n/**\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\n */\nexport function equal(a: any, b: any): boolean {\n  try {\n    return check(a, b);\n  } finally {\n    previousComparisons.clear();\n  }\n}\n\n// Allow default imports as well.\nexport default equal;\n\nfunction check(a: any, b: any): boolean {\n  // If the two values are strictly equal, our job is easy.\n  if (a === b) {\n    return true;\n  }\n\n  // Object.prototype.toString returns a representation of the runtime type of\n  // the given value that is considerably more precise than typeof.\n  const aTag = toString.call(a);\n  const bTag = toString.call(b);\n\n  // If the runtime types of a and b are different, they could maybe be equal\n  // under some interpretation of equality, but for simplicity and performance\n  // we just return false instead.\n  if (aTag !== bTag) {\n    return false;\n  }\n\n  switch (aTag) {\n    case '[object Array]':\n      // Arrays are a lot like other objects, but we can cheaply compare their\n      // lengths as a short-cut before comparing their elements.\n      if (a.length !== b.length) return false;\n      // Fall through to object case...\n    case '[object Object]': {\n      if (previouslyCompared(a, b)) return true;\n\n      const aKeys = definedKeys(a);\n      const bKeys = definedKeys(b);\n\n      // If `a` and `b` have a different number of enumerable keys, they\n      // must be different.\n      const keyCount = aKeys.length;\n      if (keyCount !== bKeys.length) return false;\n\n      // Now make sure they have the same keys.\n      for (let k = 0; k < keyCount; ++k) {\n        if (!hasOwnProperty.call(b, aKeys[k])) {\n          return false;\n        }\n      }\n\n      // Finally, check deep equality of all child properties.\n      for (let k = 0; k < keyCount; ++k) {\n        const key = aKeys[k];\n        if (!check(a[key], b[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Error]':\n      return a.name === b.name && a.message === b.message;\n\n    case '[object Number]':\n      // Handle NaN, which is !== itself.\n      if (a !== a) return b !== b;\n      // Fall through to shared +a === +b case...\n    case '[object Boolean]':\n    case '[object Date]':\n      return +a === +b;\n\n    case '[object RegExp]':\n    case '[object String]':\n      return a == `${b}`;\n\n    case '[object Map]':\n    case '[object Set]': {\n      if (a.size !== b.size) return false;\n      if (previouslyCompared(a, b)) return true;\n\n      const aIterator = a.entries();\n      const isMap = aTag === '[object Map]';\n\n      while (true) {\n        const info = aIterator.next();\n        if (info.done) break;\n\n        // If a instanceof Set, aValue === aKey.\n        const [aKey, aValue] = info.value;\n\n        // So this works the same way for both Set and Map.\n        if (!b.has(aKey)) {\n          return false;\n        }\n\n        // However, we care about deep equality of values only when dealing\n        // with Map structures.\n        if (isMap && !check(aValue, b.get(aKey))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Uint16Array]':\n    case '[object Uint8Array]': // Buffer, in Node.js.\n    case '[object Uint32Array]':\n    case '[object Int32Array]':\n    case '[object Int8Array]':\n    case '[object Int16Array]':\n    case '[object ArrayBuffer]':\n      // DataView doesn't need these conversions, but the equality check is\n      // otherwise the same.\n      a = new Uint8Array(a);\n      b = new Uint8Array(b);\n      // Fall through...\n    case '[object DataView]': {\n      let len = a.byteLength;\n      if (len === b.byteLength) {\n        while (len-- && a[len] === b[len]) {\n          // Keep looping as long as the bytes are equal.\n        }\n      }\n      return len === -1;\n    }\n\n    case '[object AsyncFunction]':\n    case '[object GeneratorFunction]':\n    case '[object AsyncGeneratorFunction]':\n    case '[object Function]': {\n      const aCode = fnToStr.call(a);\n      if (aCode !== fnToStr.call(b)) {\n        return false;\n      }\n\n      // We consider non-native functions equal if they have the same code\n      // (native functions require === because their code is censored).\n      // Note that this behavior is not entirely sound, since !== function\n      // objects with the same code can behave differently depending on\n      // their closure scope. However, any function can behave differently\n      // depending on the values of its input arguments (including this)\n      // and its calling context (including its closure scope), even\n      // though the function object is === to itself; and it is entirely\n      // possible for functions that are not === to behave exactly the\n      // same under all conceivable circumstances. Because none of these\n      // factors are statically decidable in JavaScript, JS function\n      // equality is not well-defined. This ambiguity allows us to\n      // consider the best possible heuristic among various imperfect\n      // options, and equating non-native functions that have the same\n      // code has enormous practical benefits, such as when comparing\n      // functions that are repeatedly passed as fresh function\n      // expressions within objects that are otherwise deeply equal. Since\n      // any function created from the same syntactic expression (in the\n      // same code location) will always stringify to the same code\n      // according to fnToStr.call, we can reasonably expect these\n      // repeatedly passed function expressions to have the same code, and\n      // thus behave \"the same\" (with all the caveats mentioned above),\n      // even though the runtime function objects are !== to one another.\n      return !endsWith(aCode, nativeCodeSuffix);\n    }\n  }\n\n  // Otherwise the values are not equal.\n  return false;\n}\n\nfunction definedKeys<TObject extends object>(obj: TObject) {\n  // Remember that the second argument to Array.prototype.filter will be\n  // used as `this` within the callback function.\n  return Object.keys(obj).filter(isDefinedKey, obj);\n}\nfunction isDefinedKey<TObject extends object>(\n  this: TObject,\n  key: keyof TObject,\n) {\n  return this[key] !== void 0;\n}\n\nconst nativeCodeSuffix = \"{ [native code] }\";\n\nfunction endsWith(full: string, suffix: string) {\n  const fromIndex = full.length - suffix.length;\n  return fromIndex >= 0 &&\n    full.indexOf(suffix, fromIndex) === fromIndex;\n}\n\nfunction previouslyCompared(a: object, b: object): boolean {\n  // Though cyclic references can make an object graph appear infinite from the\n  // perspective of a depth-first traversal, the graph still contains a finite\n  // number of distinct object references. We use the previousComparisons cache\n  // to avoid comparing the same pair of object references more than once, which\n  // guarantees termination (even if we end up comparing every object in one\n  // graph to every object in the other graph, which is extremely unlikely),\n  // while still allowing weird isomorphic structures (like rings with different\n  // lengths) a chance to pass the equality test.\n  let bSet = previousComparisons.get(a);\n  if (bSet) {\n    // Return true here because we can be sure false will be returned somewhere\n    // else if the objects are not equivalent.\n    if (bSet.has(b)) return true;\n  } else {\n    previousComparisons.set(a, bSet = new Set);\n  }\n  bSet.add(b);\n  return false;\n}\n","import { DocumentNode, FragmentDefinitionNode, SelectionSetNode } from 'graphql';\n\nimport {\n  NormalizedCache,\n  InMemoryCacheConfig,\n} from './types';\n\nimport { KeyFieldsContext } from './policies';\nimport { FragmentRegistryAPI } from './fragmentRegistry';\n\nimport {\n  Reference,\n  isReference,\n  StoreValue,\n  StoreObject,\n  isField,\n  DeepMerger,\n  resultKeyNameFromField,\n  shouldInclude,\n  isNonNullObject,\n  compact,\n  FragmentMap,\n  FragmentMapFunction,\n  createFragmentMap,\n  getFragmentDefinitions,\n} from '../../utilities';\n\nexport const {\n  hasOwnProperty: hasOwn,\n} = Object.prototype;\n\nexport function isNullish(value: any): value is null | undefined {\n  return value === null || value === void 0;\n}\n\nexport const isArray: (a: any) => a is any[] | readonly any[] = Array.isArray;\n\nexport function defaultDataIdFromObject(\n  { __typename, id, _id }: Readonly<StoreObject>,\n  context?: KeyFieldsContext,\n): string | undefined {\n  if (typeof __typename === \"string\") {\n    if (context) {\n      context.keyObject =\n        !isNullish(id) ? { id } :\n        !isNullish(_id) ? { _id } :\n        void 0;\n    }\n\n    // If there is no object.id, fall back to object._id.\n    if (isNullish(id) && !isNullish(_id)) {\n      id = _id;\n    }\n\n    if (!isNullish(id)) {\n      return `${__typename}:${(\n        typeof id === \"number\" ||\n        typeof id === \"string\"\n      ) ? id : JSON.stringify(id)}`;\n    }\n  }\n}\n\nconst defaultConfig = {\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  resultCaching: true,\n  // Thanks to the shouldCanonizeResults helper, this should be the only line\n  // you have to change to reenable canonization by default in the future.\n  canonizeResults: false,\n};\n\nexport function normalizeConfig(config: InMemoryCacheConfig) {\n  return compact(defaultConfig, config);\n}\n\nexport function shouldCanonizeResults(\n  config: Pick<InMemoryCacheConfig, \"canonizeResults\">,\n): boolean {\n  const value = config.canonizeResults;\n  return value === void 0 ? defaultConfig.canonizeResults : value;\n}\n\nexport function getTypenameFromStoreObject(\n  store: NormalizedCache,\n  objectOrReference: StoreObject | Reference,\n): string | undefined {\n  return isReference(objectOrReference)\n    ? store.get(objectOrReference.__ref, \"__typename\") as string\n    : objectOrReference && objectOrReference.__typename;\n}\n\nexport const TypeOrFieldNameRegExp = /^[_a-z][_0-9a-z]*/i;\n\nexport function fieldNameFromStoreName(storeFieldName: string): string {\n  const match = storeFieldName.match(TypeOrFieldNameRegExp);\n  return match ? match[0] : storeFieldName;\n}\n\nexport function selectionSetMatchesResult(\n  selectionSet: SelectionSetNode,\n  result: Record<string, any>,\n  variables?: Record<string, any>,\n): boolean {\n  if (isNonNullObject(result)) {\n    return isArray(result)\n      ? result.every(item => selectionSetMatchesResult(selectionSet, item, variables))\n      : selectionSet.selections.every(field => {\n        if (isField(field) && shouldInclude(field, variables)) {\n          const key = resultKeyNameFromField(field);\n          return hasOwn.call(result, key) &&\n            (!field.selectionSet ||\n             selectionSetMatchesResult(field.selectionSet, result[key], variables));\n        }\n        // If the selection has been skipped with @skip(true) or\n        // @include(false), it should not count against the matching. If\n        // the selection is not a field, it must be a fragment (inline or\n        // named). We will determine if selectionSetMatchesResult for that\n        // fragment when we get to it, so for now we return true.\n        return true;\n      });\n  }\n  return false;\n}\n\nexport function storeValueIsStoreObject(\n  value: StoreValue,\n): value is StoreObject {\n  return isNonNullObject(value) &&\n    !isReference(value) &&\n    !isArray(value);\n}\n\nexport function makeProcessedFieldsMerger() {\n  return new DeepMerger;\n}\n\nexport function extractFragmentContext(\n  document: DocumentNode,\n  fragments?: FragmentRegistryAPI,\n): {\n  fragmentMap: FragmentMap;\n  lookupFragment: FragmentMapFunction;\n} {\n  // FragmentMap consisting only of fragments defined directly in document, not\n  // including other fragments registered in the FragmentRegistry.\n  const fragmentMap = createFragmentMap(getFragmentDefinitions(document));\n  return {\n    fragmentMap,\n    lookupFragment(name) {\n      let def: FragmentDefinitionNode | null = fragmentMap[name];\n      if (!def && fragments) {\n        def = fragments.lookup(name);\n      }\n      return def || null;\n    },\n  };\n}\n","import { invariant } from '../../utilities/globals';\nimport { dep, OptimisticDependencyFunction } from 'optimism';\nimport { equal } from '@wry/equality';\nimport { Trie } from '@wry/trie';\n\nimport {\n  isReference,\n  StoreValue,\n  StoreObject,\n  Reference,\n  makeReference,\n  DeepMerger,\n  maybeDeepFreeze,\n  canUseWeakMap,\n  isNonNullObject,\n} from '../../utilities';\nimport { NormalizedCache, NormalizedCacheObject } from './types';\nimport { hasOwn, fieldNameFromStoreName } from './helpers';\nimport { Policies, StorageType } from './policies';\nimport { Cache } from '../core/types/Cache';\nimport {\n  SafeReadonly,\n  Modifier,\n  Modifiers,\n  ReadFieldOptions,\n  ToReferenceFunction,\n  CanReadFunction,\n} from '../core/types/common';\n\nconst DELETE: any = Object.create(null);\nconst delModifier: Modifier<any> = () => DELETE;\nconst INVALIDATE: any = Object.create(null);\n\nexport abstract class EntityStore implements NormalizedCache {\n  protected data: NormalizedCacheObject = Object.create(null);\n\n  constructor(\n    public readonly policies: Policies,\n    public readonly group: CacheGroup,\n  ) {}\n\n  public abstract addLayer(\n    layerId: string,\n    replay: (layer: EntityStore) => any,\n  ): Layer;\n\n  public abstract removeLayer(layerId: string): EntityStore;\n\n  // Although the EntityStore class is abstract, it contains concrete\n  // implementations of the various NormalizedCache interface methods that\n  // are inherited by the Root and Layer subclasses.\n\n  public toObject(): NormalizedCacheObject {\n    return { ...this.data };\n  }\n\n  public has(dataId: string): boolean {\n    return this.lookup(dataId, true) !== void 0;\n  }\n\n  public get(dataId: string, fieldName: string): StoreValue {\n    this.group.depend(dataId, fieldName);\n    if (hasOwn.call(this.data, dataId)) {\n      const storeObject = this.data[dataId];\n      if (storeObject && hasOwn.call(storeObject, fieldName)) {\n        return storeObject[fieldName];\n      }\n    }\n    if (fieldName === \"__typename\" &&\n        hasOwn.call(this.policies.rootTypenamesById, dataId)) {\n      return this.policies.rootTypenamesById[dataId];\n    }\n    if (this instanceof Layer) {\n      return this.parent.get(dataId, fieldName);\n    }\n  }\n\n  protected lookup(dataId: string, dependOnExistence?: boolean): StoreObject | undefined {\n    // The has method (above) calls lookup with dependOnExistence = true, so\n    // that it can later be invalidated when we add or remove a StoreObject for\n    // this dataId. Any consumer who cares about the contents of the StoreObject\n    // should not rely on this dependency, since the contents could change\n    // without the object being added or removed.\n    if (dependOnExistence) this.group.depend(dataId, \"__exists\");\n\n    if (hasOwn.call(this.data, dataId)) {\n      return this.data[dataId];\n    }\n\n    if (this instanceof Layer) {\n      return this.parent.lookup(dataId, dependOnExistence);\n    }\n\n    if (this.policies.rootTypenamesById[dataId]) {\n      return Object.create(null);\n    }\n  }\n\n  public merge(\n    older: string | StoreObject,\n    newer: StoreObject | string,\n  ): void {\n    let dataId: string | undefined;\n\n    // Convert unexpected references to ID strings.\n    if (isReference(older)) older = older.__ref;\n    if (isReference(newer)) newer = newer.__ref;\n\n    const existing: StoreObject | undefined =\n      typeof older === \"string\"\n        ? this.lookup(dataId = older)\n        : older;\n\n    const incoming: StoreObject | undefined =\n      typeof newer === \"string\"\n        ? this.lookup(dataId = newer)\n        : newer;\n\n    // If newer was a string ID, but that ID was not defined in this store,\n    // then there are no fields to be merged, so we're done.\n    if (!incoming) return;\n\n    invariant(\n      typeof dataId === \"string\",\n      \"store.merge expects a string ID\",\n    );\n\n    const merged: StoreObject =\n      new DeepMerger(storeObjectReconciler).merge(existing, incoming);\n\n    // Even if merged === existing, existing may have come from a lower\n    // layer, so we always need to set this.data[dataId] on this level.\n    this.data[dataId] = merged;\n\n    if (merged !== existing) {\n      delete this.refs[dataId];\n      if (this.group.caching) {\n        const fieldsToDirty: Record<string, 1> = Object.create(null);\n\n        // If we added a new StoreObject where there was previously none, dirty\n        // anything that depended on the existence of this dataId, such as the\n        // EntityStore#has method.\n        if (!existing) fieldsToDirty.__exists = 1;\n\n        // Now invalidate dependents who called getFieldValue for any fields\n        // that are changing as a result of this merge.\n        Object.keys(incoming).forEach(storeFieldName => {\n          if (!existing || existing[storeFieldName] !== merged[storeFieldName]) {\n            // Always dirty the full storeFieldName, which may include\n            // serialized arguments following the fieldName prefix.\n            fieldsToDirty[storeFieldName] = 1;\n\n            // Also dirty fieldNameFromStoreName(storeFieldName) if it's\n            // different from storeFieldName and this field does not have\n            // keyArgs configured, because that means the cache can't make\n            // any assumptions about how field values with the same field\n            // name but different arguments might be interrelated, so it\n            // must err on the side of invalidating all field values that\n            // share the same short fieldName, regardless of arguments.\n            const fieldName = fieldNameFromStoreName(storeFieldName);\n            if (fieldName !== storeFieldName &&\n                !this.policies.hasKeyArgs(merged.__typename, fieldName)) {\n              fieldsToDirty[fieldName] = 1;\n            }\n\n            // If merged[storeFieldName] has become undefined, and this is the\n            // Root layer, actually delete the property from the merged object,\n            // which is guaranteed to have been created fresh in this method.\n            if (merged[storeFieldName] === void 0 && !(this instanceof Layer)) {\n              delete merged[storeFieldName];\n            }\n          }\n        });\n\n        if (fieldsToDirty.__typename &&\n            !(existing && existing.__typename) &&\n            // Since we return default root __typename strings\n            // automatically from store.get, we don't need to dirty the\n            // ROOT_QUERY.__typename field if merged.__typename is equal\n            // to the default string (usually \"Query\").\n            this.policies.rootTypenamesById[dataId] === merged.__typename) {\n          delete fieldsToDirty.__typename;\n        }\n\n        Object.keys(fieldsToDirty).forEach(\n          fieldName => this.group.dirty(dataId as string, fieldName));\n      }\n    }\n  }\n\n  public modify(\n    dataId: string,\n    fields: Modifier<any> | Modifiers,\n  ): boolean {\n    const storeObject = this.lookup(dataId);\n\n    if (storeObject) {\n      const changedFields: Record<string, any> = Object.create(null);\n      let needToMerge = false;\n      let allDeleted = true;\n\n      const sharedDetails = {\n        DELETE,\n        INVALIDATE,\n        isReference,\n        toReference: this.toReference,\n        canRead: this.canRead,\n        readField: <V = StoreValue>(\n          fieldNameOrOptions: string | ReadFieldOptions,\n          from?: StoreObject | Reference,\n        ) => this.policies.readField<V>(\n          typeof fieldNameOrOptions === \"string\" ? {\n            fieldName: fieldNameOrOptions,\n            from: from || makeReference(dataId),\n          } : fieldNameOrOptions,\n          { store: this },\n        ),\n      };\n\n      Object.keys(storeObject).forEach(storeFieldName => {\n        const fieldName = fieldNameFromStoreName(storeFieldName);\n        let fieldValue = storeObject[storeFieldName];\n        if (fieldValue === void 0) return;\n        const modify: Modifier<StoreValue> = typeof fields === \"function\"\n          ? fields\n          : fields[storeFieldName] || fields[fieldName];\n        if (modify) {\n          let newValue = modify === delModifier ? DELETE :\n            modify(maybeDeepFreeze(fieldValue), {\n              ...sharedDetails,\n              fieldName,\n              storeFieldName,\n              storage: this.getStorage(dataId, storeFieldName),\n            });\n          if (newValue === INVALIDATE) {\n            this.group.dirty(dataId, storeFieldName);\n          } else {\n            if (newValue === DELETE) newValue = void 0;\n            if (newValue !== fieldValue) {\n              changedFields[storeFieldName] = newValue;\n              needToMerge = true;\n              fieldValue = newValue;\n            }\n          }\n        }\n        if (fieldValue !== void 0) {\n          allDeleted = false;\n        }\n      });\n\n      if (needToMerge) {\n        this.merge(dataId, changedFields);\n\n        if (allDeleted) {\n          if (this instanceof Layer) {\n            this.data[dataId] = void 0;\n          } else {\n            delete this.data[dataId];\n          }\n          this.group.dirty(dataId, \"__exists\");\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  // If called with only one argument, removes the entire entity\n  // identified by dataId. If called with a fieldName as well, removes all\n  // fields of that entity whose names match fieldName according to the\n  // fieldNameFromStoreName helper function. If called with a fieldName\n  // and variables, removes all fields of that entity whose names match fieldName\n  // and whose arguments when cached exactly match the variables passed.\n  public delete(\n    dataId: string,\n    fieldName?: string,\n    args?: Record<string, any>,\n  ) {\n    const storeObject = this.lookup(dataId);\n    if (storeObject) {\n      const typename = this.getFieldValue<string>(storeObject, \"__typename\");\n      const storeFieldName = fieldName && args\n        ? this.policies.getStoreFieldName({ typename, fieldName, args })\n        : fieldName;\n      return this.modify(dataId, storeFieldName ? {\n        [storeFieldName]: delModifier,\n      } : delModifier);\n    }\n    return false;\n  }\n\n  public evict(\n    options: Cache.EvictOptions,\n    limit: EntityStore,\n  ): boolean {\n    let evicted = false;\n    if (options.id) {\n      if (hasOwn.call(this.data, options.id)) {\n        evicted = this.delete(options.id, options.fieldName, options.args);\n      }\n      if (this instanceof Layer && this !== limit) {\n        evicted = this.parent.evict(options, limit) || evicted;\n      }\n      // Always invalidate the field to trigger rereading of watched\n      // queries, even if no cache data was modified by the eviction,\n      // because queries may depend on computed fields with custom read\n      // functions, whose values are not stored in the EntityStore.\n      if (options.fieldName || evicted) {\n        this.group.dirty(options.id, options.fieldName || \"__exists\");\n      }\n    }\n    return evicted;\n  }\n\n  public clear(): void {\n    this.replace(null);\n  }\n\n  public extract(): NormalizedCacheObject {\n    const obj = this.toObject();\n    const extraRootIds: string[] = [];\n    this.getRootIdSet().forEach(id => {\n      if (!hasOwn.call(this.policies.rootTypenamesById, id)) {\n        extraRootIds.push(id);\n      }\n    });\n    if (extraRootIds.length) {\n      obj.__META = { extraRootIds: extraRootIds.sort() };\n    }\n    return obj;\n  }\n\n  public replace(newData: NormalizedCacheObject | null): void {\n    Object.keys(this.data).forEach(dataId => {\n      if (!(newData && hasOwn.call(newData, dataId))) {\n        this.delete(dataId);\n      }\n    });\n    if (newData) {\n      const { __META, ...rest } = newData;\n      Object.keys(rest).forEach(dataId => {\n        this.merge(dataId, rest[dataId] as StoreObject);\n      });\n      if (__META) {\n        __META.extraRootIds.forEach(this.retain, this);\n      }\n    }\n  }\n\n  public abstract getStorage(\n    idOrObj: string | StoreObject,\n    ...storeFieldNames: (string | number)[]\n  ): StorageType;\n\n  // Maps root entity IDs to the number of times they have been retained, minus\n  // the number of times they have been released. Retained entities keep other\n  // entities they reference (even indirectly) from being garbage collected.\n  private rootIds: {\n    [rootId: string]: number;\n  } = Object.create(null);\n\n  public retain(rootId: string): number {\n    return this.rootIds[rootId] = (this.rootIds[rootId] || 0) + 1;\n  }\n\n  public release(rootId: string): number {\n    if (this.rootIds[rootId] > 0) {\n      const count = --this.rootIds[rootId];\n      if (!count) delete this.rootIds[rootId];\n      return count;\n    }\n    return 0;\n  }\n\n  // Return a Set<string> of all the ID strings that have been retained by\n  // this layer/root *and* any layers/roots beneath it.\n  public getRootIdSet(ids = new Set<string>()) {\n    Object.keys(this.rootIds).forEach(ids.add, ids);\n    if (this instanceof Layer) {\n      this.parent.getRootIdSet(ids);\n    } else {\n      // Official singleton IDs like ROOT_QUERY and ROOT_MUTATION are\n      // always considered roots for garbage collection, regardless of\n      // their retainment counts in this.rootIds.\n      Object.keys(this.policies.rootTypenamesById).forEach(ids.add, ids);\n    }\n    return ids;\n  }\n\n  // The goal of garbage collection is to remove IDs from the Root layer of the\n  // store that are no longer reachable starting from any IDs that have been\n  // explicitly retained (see retain and release, above). Returns an array of\n  // dataId strings that were removed from the store.\n  public gc() {\n    const ids = this.getRootIdSet();\n    const snapshot = this.toObject();\n    ids.forEach(id => {\n      if (hasOwn.call(snapshot, id)) {\n        // Because we are iterating over an ECMAScript Set, the IDs we add here\n        // will be visited in later iterations of the forEach loop only if they\n        // were not previously contained by the Set.\n        Object.keys(this.findChildRefIds(id)).forEach(ids.add, ids);\n        // By removing IDs from the snapshot object here, we protect them from\n        // getting removed from the root store layer below.\n        delete snapshot[id];\n      }\n    });\n    const idsToRemove = Object.keys(snapshot);\n    if (idsToRemove.length) {\n      let root: EntityStore = this;\n      while (root instanceof Layer) root = root.parent;\n      idsToRemove.forEach(id => root.delete(id));\n    }\n    return idsToRemove;\n  }\n\n  // Lazily tracks { __ref: <dataId> } strings contained by this.data[dataId].\n  private refs: {\n    [dataId: string]: Record<string, true>;\n  } = Object.create(null);\n\n  public findChildRefIds(dataId: string): Record<string, true> {\n    if (!hasOwn.call(this.refs, dataId)) {\n      const found = this.refs[dataId] = Object.create(null);\n      const root = this.data[dataId];\n      if (!root) return found;\n\n      const workSet = new Set<Record<string | number, any>>([root]);\n      // Within the store, only arrays and objects can contain child entity\n      // references, so we can prune the traversal using this predicate:\n      workSet.forEach(obj => {\n        if (isReference(obj)) {\n          found[obj.__ref] = true;\n          // In rare cases, a { __ref } Reference object may have other fields.\n          // This often indicates a mismerging of References with StoreObjects,\n          // but garbage collection should not be fooled by a stray __ref\n          // property in a StoreObject (ignoring all the other fields just\n          // because the StoreObject looks like a Reference). To avoid this\n          // premature termination of findChildRefIds recursion, we fall through\n          // to the code below, which will handle any other properties of obj.\n        }\n        if (isNonNullObject(obj)) {\n          Object.keys(obj).forEach(key => {\n            const child = obj[key];\n            // No need to add primitive values to the workSet, since they cannot\n            // contain reference objects.\n            if (isNonNullObject(child)) {\n              workSet.add(child);\n            }\n          });\n        }\n      });\n    }\n    return this.refs[dataId];\n  }\n\n  // Used to compute cache keys specific to this.group.\n  public makeCacheKey(...args: any[]): object;\n  public makeCacheKey() {\n    return this.group.keyMaker.lookupArray(arguments);\n  }\n\n  // Bound function that can be passed around to provide easy access to fields\n  // of Reference objects as well as ordinary objects.\n  public getFieldValue = <T = StoreValue>(\n    objectOrReference: StoreObject | Reference | undefined,\n    storeFieldName: string,\n  ) => maybeDeepFreeze(\n    isReference(objectOrReference)\n      ? this.get(objectOrReference.__ref, storeFieldName)\n      : objectOrReference && objectOrReference[storeFieldName]\n  ) as SafeReadonly<T>;\n\n  // Returns true for non-normalized StoreObjects and non-dangling\n  // References, indicating that readField(name, objOrRef) has a chance of\n  // working. Useful for filtering out dangling references from lists.\n  public canRead: CanReadFunction = objOrRef => {\n    return isReference(objOrRef)\n      ? this.has(objOrRef.__ref)\n      : typeof objOrRef === \"object\";\n  };\n\n  // Bound function that converts an id or an object with a __typename and\n  // primary key fields to a Reference object. If called with a Reference object,\n  // that same Reference object is returned. Pass true for mergeIntoStore to persist\n  // an object into the store.\n  public toReference: ToReferenceFunction = (\n    objOrIdOrRef,\n    mergeIntoStore,\n  ) => {\n    if (typeof objOrIdOrRef === \"string\") {\n      return makeReference(objOrIdOrRef);\n    }\n\n    if (isReference(objOrIdOrRef)) {\n      return objOrIdOrRef;\n    }\n\n    const [id] = this.policies.identify(objOrIdOrRef);\n\n    if (id) {\n      const ref = makeReference(id);\n      if (mergeIntoStore) {\n        this.merge(id, objOrIdOrRef);\n      }\n      return ref;\n    }\n  };\n}\n\nexport type FieldValueGetter = EntityStore[\"getFieldValue\"];\n\n// A single CacheGroup represents a set of one or more EntityStore objects,\n// typically the Root store in a CacheGroup by itself, and all active Layer\n// stores in a group together. A single EntityStore object belongs to only\n// one CacheGroup, store.group. The CacheGroup is responsible for tracking\n// dependencies, so store.group is helpful for generating unique keys for\n// cached results that need to be invalidated when/if those dependencies\n// change. If we used the EntityStore objects themselves as cache keys (that\n// is, store rather than store.group), the cache would become unnecessarily\n// fragmented by all the different Layer objects. Instead, the CacheGroup\n// approach allows all optimistic Layer objects in the same linked list to\n// belong to one CacheGroup, with the non-optimistic Root object belonging\n// to another CacheGroup, allowing resultCaching dependencies to be tracked\n// separately for optimistic and non-optimistic entity data.\nclass CacheGroup {\n  private d: OptimisticDependencyFunction<string> | null = null;\n\n  // Used by the EntityStore#makeCacheKey method to compute cache keys\n  // specific to this CacheGroup.\n  public keyMaker: Trie<object>;\n\n  constructor(\n    public readonly caching: boolean,\n    private parent: CacheGroup | null = null,\n  ) {\n    this.resetCaching();\n  }\n\n  public resetCaching() {\n    this.d = this.caching ? dep<string>() : null;\n    this.keyMaker = new Trie(canUseWeakMap);\n  }\n\n  public depend(dataId: string, storeFieldName: string) {\n    if (this.d) {\n      this.d(makeDepKey(dataId, storeFieldName));\n      const fieldName = fieldNameFromStoreName(storeFieldName);\n      if (fieldName !== storeFieldName) {\n        // Fields with arguments that contribute extra identifying\n        // information to the fieldName (thus forming the storeFieldName)\n        // depend not only on the full storeFieldName but also on the\n        // short fieldName, so the field can be invalidated using either\n        // level of specificity.\n        this.d(makeDepKey(dataId, fieldName));\n      }\n      if (this.parent) {\n        this.parent.depend(dataId, storeFieldName);\n      }\n    }\n  }\n\n  public dirty(dataId: string, storeFieldName: string) {\n    if (this.d) {\n      this.d.dirty(\n        makeDepKey(dataId, storeFieldName),\n        // When storeFieldName === \"__exists\", that means the entity identified\n        // by dataId has either disappeared from the cache or was newly added,\n        // so the result caching system would do well to \"forget everything it\n        // knows\" about that object. To achieve that kind of invalidation, we\n        // not only dirty the associated result cache entry, but also remove it\n        // completely from the dependency graph. For the optimism implementation\n        // details, see https://github.com/benjamn/optimism/pull/195.\n        storeFieldName === \"__exists\" ? \"forget\" : \"setDirty\",\n      );\n    }\n  }\n}\n\nfunction makeDepKey(dataId: string, storeFieldName: string) {\n  // Since field names cannot have '#' characters in them, this method\n  // of joining the field name and the ID should be unambiguous, and much\n  // cheaper than JSON.stringify([dataId, fieldName]).\n  return storeFieldName + '#' + dataId;\n}\n\nexport function maybeDependOnExistenceOfEntity(\n  store: NormalizedCache,\n  entityId: string,\n) {\n  if (supportsResultCaching(store)) {\n    // We use this pseudo-field __exists elsewhere in the EntityStore code to\n    // represent changes in the existence of the entity object identified by\n    // entityId. This dependency gets reliably dirtied whenever an object with\n    // this ID is deleted (or newly created) within this group, so any result\n    // cache entries (for example, StoreReader#executeSelectionSet results) that\n    // depend on __exists for this entityId will get dirtied as well, leading to\n    // the eventual recomputation (instead of reuse) of those result objects the\n    // next time someone reads them from the cache.\n    store.group.depend(entityId, \"__exists\");\n  }\n}\n\nexport namespace EntityStore {\n  // Refer to this class as EntityStore.Root outside this namespace.\n  export class Root extends EntityStore {\n    constructor({\n      policies,\n      resultCaching = true,\n      seed,\n    }: {\n      policies: Policies;\n      resultCaching?: boolean;\n      seed?: NormalizedCacheObject;\n    }) {\n      super(policies, new CacheGroup(resultCaching));\n      if (seed) this.replace(seed);\n    }\n\n    public readonly stump = new Stump(this);\n\n    public addLayer(\n      layerId: string,\n      replay: (layer: EntityStore) => any,\n    ): Layer {\n      // Adding an optimistic Layer on top of the Root actually adds the Layer\n      // on top of the Stump, so the Stump always comes between the Root and\n      // any Layer objects that we've added.\n      return this.stump.addLayer(layerId, replay);\n    }\n\n    public removeLayer(): Root {\n      // Never remove the root layer.\n      return this;\n    }\n\n    public readonly storageTrie = new Trie<StorageType>(canUseWeakMap);\n    public getStorage(): StorageType {\n      return this.storageTrie.lookupArray(arguments);\n    }\n  }\n}\n\n// Not exported, since all Layer instances are created by the addLayer method\n// of the EntityStore.Root class.\nclass Layer extends EntityStore {\n  constructor(\n    public readonly id: string,\n    public readonly parent: EntityStore,\n    public readonly replay: (layer: EntityStore) => any,\n    public readonly group: CacheGroup,\n  ) {\n    super(parent.policies, group);\n    replay(this);\n  }\n\n  public addLayer(\n    layerId: string,\n    replay: (layer: EntityStore) => any,\n  ): Layer {\n    return new Layer(layerId, this, replay, this.group);\n  }\n\n  public removeLayer(layerId: string): EntityStore {\n    // Remove all instances of the given id, not just the first one.\n    const parent = this.parent.removeLayer(layerId);\n\n    if (layerId === this.id) {\n      if (this.group.caching) {\n        // Dirty every ID we're removing. Technically we might be able to avoid\n        // dirtying fields that have values in higher layers, but we don't have\n        // easy access to higher layers here, and we're about to recreate those\n        // layers anyway (see parent.addLayer below).\n        Object.keys(this.data).forEach(dataId => {\n          const ownStoreObject = this.data[dataId];\n          const parentStoreObject = parent[\"lookup\"](dataId);\n          if (!parentStoreObject) {\n            // The StoreObject identified by dataId was defined in this layer\n            // but will be undefined in the parent layer, so we can delete the\n            // whole entity using this.delete(dataId). Since we're about to\n            // throw this layer away, the only goal of this deletion is to dirty\n            // the removed fields.\n            this.delete(dataId);\n          } else if (!ownStoreObject) {\n            // This layer had an entry for dataId but it was undefined, which\n            // means the entity was deleted in this layer, and it's about to\n            // become undeleted when we remove this layer, so we need to dirty\n            // all fields that are about to be reexposed.\n            this.group.dirty(dataId, \"__exists\");\n            Object.keys(parentStoreObject).forEach(storeFieldName => {\n              this.group.dirty(dataId, storeFieldName);\n            });\n          } else if (ownStoreObject !== parentStoreObject) {\n            // If ownStoreObject is not exactly the same as parentStoreObject,\n            // dirty any fields whose values will change as a result of this\n            // removal.\n            Object.keys(ownStoreObject).forEach(storeFieldName => {\n              if (!equal(ownStoreObject[storeFieldName],\n                         parentStoreObject[storeFieldName])) {\n                this.group.dirty(dataId, storeFieldName);\n              }\n            });\n          }\n        });\n      }\n\n      return parent;\n    }\n\n    // No changes are necessary if the parent chain remains identical.\n    if (parent === this.parent) return this;\n\n    // Recreate this layer on top of the new parent.\n    return parent.addLayer(this.id, this.replay);\n  }\n\n  public toObject(): NormalizedCacheObject {\n    return {\n      ...this.parent.toObject(),\n      ...this.data,\n    };\n  }\n\n  public findChildRefIds(dataId: string): Record<string, true> {\n    const fromParent = this.parent.findChildRefIds(dataId);\n    return hasOwn.call(this.data, dataId) ? {\n      ...fromParent,\n      ...super.findChildRefIds(dataId),\n    } : fromParent;\n  }\n\n  public getStorage(): StorageType {\n    let p: EntityStore = this.parent;\n    while ((p as Layer).parent) p = (p as Layer).parent;\n    return p.getStorage.apply(p, arguments);\n  }\n}\n\n// Represents a Layer permanently installed just above the Root, which allows\n// reading optimistically (and registering optimistic dependencies) even when\n// no optimistic layers are currently active. The stump.group CacheGroup object\n// is shared by any/all Layer objects added on top of the Stump.\nclass Stump extends Layer {\n  constructor(root: EntityStore.Root) {\n    super(\n      \"EntityStore.Stump\",\n      root,\n      () => {},\n      new CacheGroup(root.group.caching, root.group),\n    );\n  }\n\n  public removeLayer() {\n    // Never remove the Stump layer.\n    return this;\n  }\n\n  public merge() {\n    // We never want to write any data into the Stump, so we forward any merge\n    // calls to the Root instead. Another option here would be to throw an\n    // exception, but the toReference(object, true) function can sometimes\n    // trigger Stump writes (which used to be Root writes, before the Stump\n    // concept was introduced).\n    return this.parent.merge.apply(this.parent, arguments);\n  }\n}\n\nfunction storeObjectReconciler(\n  existingObject: StoreObject,\n  incomingObject: StoreObject,\n  property: string,\n): StoreValue {\n  const existingValue = existingObject[property];\n  const incomingValue = incomingObject[property];\n  // Wherever there is a key collision, prefer the incoming value, unless\n  // it is deeply equal to the existing value. It's worth checking deep\n  // equality here (even though blindly returning incoming would be\n  // logically correct) because preserving the referential identity of\n  // existing data can prevent needless rereading and rerendering.\n  return equal(existingValue, incomingValue) ? existingValue : incomingValue;\n}\n\nexport function supportsResultCaching(store: any): store is EntityStore {\n  // When result caching is disabled, store.depend will be null.\n  return !!(store instanceof EntityStore && store.group.caching);\n}\n","import \"../../utilities/globals\";\n\nimport { Trie } from \"@wry/trie\";\nimport {\n  canUseWeakMap,\n  canUseWeakSet,\n  isNonNullObject as isObjectOrArray,\n} from \"../../utilities\";\nimport { isArray } from \"./helpers\";\n\nfunction shallowCopy<T>(value: T): T {\n  if (isObjectOrArray(value)) {\n    return isArray(value)\n      ? value.slice(0) as any as T\n      : { __proto__: Object.getPrototypeOf(value), ...value };\n  }\n  return value;\n}\n\n// When programmers talk about the \"canonical form\" of an object, they\n// usually have the following meaning in mind, which I've copied from\n// https://en.wiktionary.org/wiki/canonical_form:\n//\n// 1. A standard or normal presentation of a mathematical entity [or\n//    object]. A canonical form is an element of a set of representatives\n//    of equivalence classes of forms such that there is a function or\n//    procedure which projects every element of each equivalence class\n//    onto that one element, the canonical form of that equivalence\n//    class. The canonical form is expected to be simpler than the rest of\n//    the forms in some way.\n//\n// That's a long-winded way of saying any two objects that have the same\n// canonical form may be considered equivalent, even if they are !==,\n// which usually means the objects are structurally equivalent (deeply\n// equal), but don't necessarily use the same memory.\n//\n// Like a literary or musical canon, this ObjectCanon class represents a\n// collection of unique canonical items (JavaScript objects), with the\n// important property that canon.admit(a) === canon.admit(b) if a and b\n// are deeply equal to each other. In terms of the definition above, the\n// canon.admit method is the \"function or procedure which projects every\"\n// object \"onto that one element, the canonical form.\"\n//\n// In the worst case, the canonicalization process may involve looking at\n// every property in the provided object tree, so it takes the same order\n// of time as deep equality checking. Fortunately, already-canonicalized\n// objects are returned immediately from canon.admit, so the presence of\n// canonical subtrees tends to speed up canonicalization.\n//\n// Since consumers of canonical objects can check for deep equality in\n// constant time, canonicalizing cache results can massively improve the\n// performance of application code that skips re-rendering unchanged\n// results, such as \"pure\" UI components in a framework like React.\n//\n// Of course, since canonical objects may be shared widely between\n// unrelated consumers, it's important to think of them as immutable, even\n// though they are not actually frozen with Object.freeze in production,\n// due to the extra performance overhead that comes with frozen objects.\n//\n// Custom scalar objects whose internal class name is neither Array nor\n// Object can be included safely in the admitted tree, but they will not\n// be replaced with a canonical version (to put it another way, they are\n// assumed to be canonical already).\n//\n// If we ignore custom objects, no detection of cycles or repeated object\n// references is currently required by the StoreReader class, since\n// GraphQL result objects are JSON-serializable trees (and thus contain\n// neither cycles nor repeated subtrees), so we can avoid the complexity\n// of keeping track of objects we've already seen during the recursion of\n// the admit method.\n//\n// In the future, we may consider adding additional cases to the switch\n// statement to handle other common object types, such as \"[object Date]\"\n// objects, as needed.\nexport class ObjectCanon {\n  // Set of all canonical objects this ObjectCanon has admitted, allowing\n  // canon.admit to return previously-canonicalized objects immediately.\n  private known = new (canUseWeakSet ? WeakSet : Set)<object>();\n\n  // Efficient storage/lookup structure for canonical objects.\n  private pool = new Trie<{\n    array?: any[];\n    object?: Record<string, any>;\n    keys?: SortedKeysInfo;\n  }>(canUseWeakMap);\n\n  public isKnown(value: any): boolean {\n    return isObjectOrArray(value) && this.known.has(value);\n  }\n\n  // Make the ObjectCanon assume this value has already been\n  // canonicalized.\n  private passes = new WeakMap<object, object>();\n  public pass<T>(value: T): T;\n  public pass(value: any) {\n    if (isObjectOrArray(value)) {\n      const copy = shallowCopy(value);\n      this.passes.set(copy, value);\n      return copy;\n    }\n    return value;\n  }\n\n  // Returns the canonical version of value.\n  public admit<T>(value: T): T;\n  public admit(value: any) {\n    if (isObjectOrArray(value)) {\n      const original = this.passes.get(value);\n      if (original) return original;\n\n      const proto = Object.getPrototypeOf(value);\n      switch (proto) {\n        case Array.prototype: {\n          if (this.known.has(value)) return value;\n          const array: any[] = (value as any[]).map(this.admit, this);\n          // Arrays are looked up in the Trie using their recursively\n          // canonicalized elements, and the known version of the array is\n          // preserved as node.array.\n          const node = this.pool.lookupArray(array);\n          if (!node.array) {\n            this.known.add(node.array = array);\n            // Since canonical arrays may be shared widely between\n            // unrelated consumers, it's important to regard them as\n            // immutable, even if they are not frozen in production.\n            if (__DEV__) {\n              Object.freeze(array);\n            }\n          }\n          return node.array;\n        }\n\n        case null:\n        case Object.prototype: {\n          if (this.known.has(value)) return value;\n          const proto = Object.getPrototypeOf(value);\n          const array = [proto];\n          const keys = this.sortedKeys(value);\n          array.push(keys.json);\n          const firstValueIndex = array.length;\n          keys.sorted.forEach(key => {\n            array.push(this.admit((value as any)[key]));\n          });\n          // Objects are looked up in the Trie by their prototype (which\n          // is *not* recursively canonicalized), followed by a JSON\n          // representation of their (sorted) keys, followed by the\n          // sequence of recursively canonicalized values corresponding to\n          // those keys. To keep the final results unambiguous with other\n          // sequences (such as arrays that just happen to contain [proto,\n          // keys.json, value1, value2, ...]), the known version of the\n          // object is stored as node.object.\n          const node = this.pool.lookupArray(array);\n          if (!node.object) {\n            const obj = node.object = Object.create(proto);\n            this.known.add(obj);\n            keys.sorted.forEach((key, i) => {\n              obj[key] = array[firstValueIndex + i];\n            });\n            // Since canonical objects may be shared widely between\n            // unrelated consumers, it's important to regard them as\n            // immutable, even if they are not frozen in production.\n            if (__DEV__) {\n              Object.freeze(obj);\n            }\n          }\n          return node.object;\n        }\n      }\n    }\n    return value;\n  }\n\n  // It's worthwhile to cache the sorting of arrays of strings, since the\n  // same initial unsorted arrays tend to be encountered many times.\n  // Fortunately, we can reuse the Trie machinery to look up the sorted\n  // arrays in linear time (which is faster than sorting large arrays).\n  private sortedKeys(obj: object) {\n    const keys = Object.keys(obj);\n    const node = this.pool.lookupArray(keys);\n    if (!node.keys) {\n      keys.sort();\n      const json = JSON.stringify(keys);\n      if (!(node.keys = this.keysByJSON.get(json))) {\n        this.keysByJSON.set(json, node.keys = { sorted: keys, json });\n      }\n    }\n    return node.keys;\n  }\n  // Arrays that contain the same elements in a different order can share\n  // the same SortedKeysInfo object, to save memory.\n  private keysByJSON = new Map<string, SortedKeysInfo>();\n\n  // This has to come last because it depends on keysByJSON.\n  public readonly empty = this.admit({});\n}\n\ntype SortedKeysInfo = {\n  sorted: string[];\n  json: string;\n};\n\n// Since the keys of canonical objects are always created in lexicographically\n// sorted order, we can use the ObjectCanon to implement a fast and stable\n// version of JSON.stringify, which automatically sorts object keys.\nexport const canonicalStringify = Object.assign(function (value: any): string {\n  if (isObjectOrArray(value)) {\n    if (stringifyCanon === void 0) {\n      resetCanonicalStringify();\n    }\n    const canonical = stringifyCanon.admit(value);\n    let json = stringifyCache.get(canonical);\n    if (json === void 0) {\n      stringifyCache.set(\n        canonical,\n        json = JSON.stringify(canonical),\n      );\n    }\n    return json;\n  }\n  return JSON.stringify(value);\n}, {\n  reset: resetCanonicalStringify,\n});\n\n// Can be reset by calling canonicalStringify.reset().\nlet stringifyCanon: ObjectCanon;\nlet stringifyCache: WeakMap<object, string>;\n\nfunction resetCanonicalStringify() {\n  stringifyCanon = new ObjectCanon;\n  stringifyCache = new (canUseWeakMap ? WeakMap : Map)();\n}\n","import { invariant, InvariantError } from '../../utilities/globals';\n\nimport {\n  DocumentNode,\n  FieldNode,\n  Kind,\n  SelectionSetNode,\n} from 'graphql';\nimport { wrap, OptimisticWrapperFunction } from 'optimism';\n\nimport {\n  isField,\n  resultKeyNameFromField,\n  Reference,\n  isReference,\n  makeReference,\n  StoreObject,\n  FragmentMap,\n  shouldInclude,\n  addTypenameToDocument,\n  getDefaultValues,\n  getMainDefinition,\n  getQueryDefinition,\n  getFragmentFromSelection,\n  maybeDeepFreeze,\n  mergeDeepArray,\n  DeepMerger,\n  isNonNullObject,\n  canUseWeakMap,\n  compact,\n  FragmentMapFunction,\n} from '../../utilities';\nimport { Cache } from '../core/types/Cache';\nimport {\n  DiffQueryAgainstStoreOptions,\n  InMemoryCacheConfig,\n  NormalizedCache,\n  ReadMergeModifyContext,\n} from './types';\nimport { maybeDependOnExistenceOfEntity, supportsResultCaching } from './entityStore';\nimport { isArray, extractFragmentContext, getTypenameFromStoreObject, shouldCanonizeResults } from './helpers';\nimport { Policies } from './policies';\nimport { InMemoryCache } from './inMemoryCache';\nimport { MissingFieldError, MissingTree } from '../core/types/common';\nimport { canonicalStringify, ObjectCanon } from './object-canon';\n\nexport type VariableMap = { [name: string]: any };\n\ninterface ReadContext extends ReadMergeModifyContext {\n  query: DocumentNode;\n  policies: Policies;\n  canonizeResults: boolean;\n  fragmentMap: FragmentMap;\n  lookupFragment: FragmentMapFunction;\n};\n\nexport type ExecResult<R = any> = {\n  result: R;\n  missing?: MissingTree;\n};\n\ntype ExecSelectionSetOptions = {\n  selectionSet: SelectionSetNode;\n  objectOrReference: StoreObject | Reference;\n  enclosingRef: Reference;\n  context: ReadContext;\n};\n\ntype ExecSubSelectedArrayOptions = {\n  field: FieldNode;\n  array: readonly any[];\n  enclosingRef: Reference;\n  context: ReadContext;\n};\n\nexport interface StoreReaderConfig {\n  cache: InMemoryCache,\n  addTypename?: boolean;\n  resultCacheMaxSize?: number;\n  canonizeResults?: boolean;\n  canon?: ObjectCanon;\n  fragments?: InMemoryCacheConfig[\"fragments\"];\n}\n\n// Arguments type after keyArgs translation.\ntype ExecSelectionSetKeyArgs = [\n  SelectionSetNode,\n  StoreObject | Reference,\n  ReadMergeModifyContext,\n  boolean,\n];\n\nfunction execSelectionSetKeyArgs(\n  options: ExecSelectionSetOptions,\n): ExecSelectionSetKeyArgs {\n  return [\n    options.selectionSet,\n    options.objectOrReference,\n    options.context,\n    // We split out this property so we can pass different values\n    // independently without modifying options.context itself.\n    options.context.canonizeResults,\n  ];\n}\n\nexport class StoreReader {\n  // cached version of executeSelectionSet\n  private executeSelectionSet: OptimisticWrapperFunction<\n    [ExecSelectionSetOptions], // Actual arguments tuple type.\n    ExecResult, // Actual return type.\n    ExecSelectionSetKeyArgs\n  >;\n\n  // cached version of executeSubSelectedArray\n  private executeSubSelectedArray: OptimisticWrapperFunction<\n    [ExecSubSelectedArrayOptions],\n    ExecResult<any>,\n    [ExecSubSelectedArrayOptions]>;\n\n  private config: {\n    cache: InMemoryCache,\n    addTypename: boolean;\n    resultCacheMaxSize?: number;\n    canonizeResults: boolean;\n    fragments?: InMemoryCacheConfig[\"fragments\"];\n  };\n\n  private knownResults = new (\n    canUseWeakMap ? WeakMap : Map\n  )<Record<string, any>, SelectionSetNode>();\n\n  public canon: ObjectCanon;\n  public resetCanon() {\n    this.canon = new ObjectCanon;\n  }\n\n  constructor(config: StoreReaderConfig) {\n    this.config = compact(config, {\n      addTypename: config.addTypename !== false,\n      canonizeResults: shouldCanonizeResults(config),\n    });\n\n    this.canon = config.canon || new ObjectCanon;\n\n    this.executeSelectionSet = wrap(options => {\n      const { canonizeResults } = options.context;\n\n      const peekArgs = execSelectionSetKeyArgs(options);\n\n      // Negate this boolean option so we can find out if we've already read\n      // this result using the other boolean value.\n      peekArgs[3] = !canonizeResults;\n\n      const other = this.executeSelectionSet.peek(...peekArgs);\n\n      if (other) {\n        if (canonizeResults) {\n          return {\n            ...other,\n            // If we previously read this result without canonizing it, we can\n            // reuse that result simply by canonizing it now.\n            result: this.canon.admit(other.result),\n          };\n        }\n        // If we previously read this result with canonization enabled, we can\n        // return that canonized result as-is.\n        return other;\n      }\n\n      maybeDependOnExistenceOfEntity(\n        options.context.store,\n        options.enclosingRef.__ref,\n      );\n\n      // Finally, if we didn't find any useful previous results, run the real\n      // execSelectionSetImpl method with the given options.\n      return this.execSelectionSetImpl(options);\n\n    }, {\n      max: this.config.resultCacheMaxSize,\n      keyArgs: execSelectionSetKeyArgs,\n      // Note that the parameters of makeCacheKey are determined by the\n      // array returned by keyArgs.\n      makeCacheKey(selectionSet, parent, context, canonizeResults) {\n        if (supportsResultCaching(context.store)) {\n          return context.store.makeCacheKey(\n            selectionSet,\n            isReference(parent) ? parent.__ref : parent,\n            context.varString,\n            canonizeResults,\n          );\n        }\n      }\n    });\n\n    this.executeSubSelectedArray = wrap((options: ExecSubSelectedArrayOptions) => {\n      maybeDependOnExistenceOfEntity(\n        options.context.store,\n        options.enclosingRef.__ref,\n      );\n      return this.execSubSelectedArrayImpl(options);\n    }, {\n      max: this.config.resultCacheMaxSize,\n      makeCacheKey({ field, array, context }) {\n        if (supportsResultCaching(context.store)) {\n          return context.store.makeCacheKey(\n            field,\n            array,\n            context.varString,\n          );\n        }\n      }\n    });\n  }\n\n  /**\n   * Given a store and a query, return as much of the result as possible and\n   * identify if any data was missing from the store.\n   * @param  {DocumentNode} query A parsed GraphQL query document\n   * @param  {Store} store The Apollo Client store object\n   * @return {result: Object, complete: [boolean]}\n   */\n  public diffQueryAgainstStore<T>({\n    store,\n    query,\n    rootId = 'ROOT_QUERY',\n    variables,\n    returnPartialData = true,\n    canonizeResults = this.config.canonizeResults,\n  }: DiffQueryAgainstStoreOptions): Cache.DiffResult<T> {\n    const policies = this.config.cache.policies;\n\n    variables = {\n      ...getDefaultValues(getQueryDefinition(query)),\n      ...variables!,\n    };\n\n    const rootRef = makeReference(rootId);\n    const execResult = this.executeSelectionSet({\n      selectionSet: getMainDefinition(query).selectionSet,\n      objectOrReference: rootRef,\n      enclosingRef: rootRef,\n      context: {\n        store,\n        query,\n        policies,\n        variables,\n        varString: canonicalStringify(variables),\n        canonizeResults,\n        ...extractFragmentContext(query, this.config.fragments),\n      },\n    });\n\n    let missing: MissingFieldError[] | undefined;\n    if (execResult.missing) {\n      // For backwards compatibility we still report an array of\n      // MissingFieldError objects, even though there will only ever be at most\n      // one of them, now that all missing field error messages are grouped\n      // together in the execResult.missing tree.\n      missing = [new MissingFieldError(\n        firstMissing(execResult.missing)!,\n        execResult.missing,\n        query,\n        variables,\n      )];\n      if (!returnPartialData) {\n        throw missing[0];\n      }\n    }\n\n    return {\n      result: execResult.result,\n      complete: !missing,\n      missing,\n    };\n  }\n\n  public isFresh(\n    result: Record<string, any>,\n    parent: StoreObject | Reference,\n    selectionSet: SelectionSetNode,\n    context: ReadMergeModifyContext,\n  ): boolean {\n    if (supportsResultCaching(context.store) &&\n        this.knownResults.get(result) === selectionSet) {\n      const latest = this.executeSelectionSet.peek(\n        selectionSet,\n        parent,\n        context,\n        // If result is canonical, then it could only have been previously\n        // cached by the canonizing version of executeSelectionSet, so we can\n        // avoid checking both possibilities here.\n        this.canon.isKnown(result),\n      );\n      if (latest && result === latest.result) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Uncached version of executeSelectionSet.\n  private execSelectionSetImpl({\n    selectionSet,\n    objectOrReference,\n    enclosingRef,\n    context,\n  }: ExecSelectionSetOptions): ExecResult {\n    if (isReference(objectOrReference) &&\n        !context.policies.rootTypenamesById[objectOrReference.__ref] &&\n        !context.store.has(objectOrReference.__ref)) {\n      return {\n        result: this.canon.empty,\n        missing: `Dangling reference to missing ${objectOrReference.__ref} object`,\n      };\n    }\n\n    const { variables, policies, store } = context;\n    const typename = store.getFieldValue<string>(objectOrReference, \"__typename\");\n\n    const objectsToMerge: Record<string, any>[] = [];\n    let missing: MissingTree | undefined;\n    const missingMerger = new DeepMerger();\n\n    if (this.config.addTypename &&\n        typeof typename === \"string\" &&\n        !policies.rootIdsByTypename[typename]) {\n      // Ensure we always include a default value for the __typename\n      // field, if we have one, and this.config.addTypename is true. Note\n      // that this field can be overridden by other merged objects.\n      objectsToMerge.push({ __typename: typename });\n    }\n\n    function handleMissing<T>(result: ExecResult<T>, resultName: string): T {\n      if (result.missing) {\n        missing = missingMerger.merge(missing, { [resultName]: result.missing });\n      }\n      return result.result;\n    }\n\n    const workSet = new Set(selectionSet.selections);\n\n    workSet.forEach(selection => {\n      // Omit fields with directives @skip(if: <truthy value>) or\n      // @include(if: <falsy value>).\n      if (!shouldInclude(selection, variables)) return;\n\n      if (isField(selection)) {\n        let fieldValue = policies.readField({\n          fieldName: selection.name.value,\n          field: selection,\n          variables: context.variables,\n          from: objectOrReference,\n        }, context);\n\n        const resultName = resultKeyNameFromField(selection);\n\n        if (fieldValue === void 0) {\n          if (!addTypenameToDocument.added(selection)) {\n            missing = missingMerger.merge(missing, {\n              [resultName]: `Can't find field '${\n                selection.name.value\n              }' on ${\n                isReference(objectOrReference)\n                  ? objectOrReference.__ref + \" object\"\n                  : \"object \" + JSON.stringify(objectOrReference, null, 2)\n              }`\n            });\n          }\n\n        } else if (isArray(fieldValue)) {\n          fieldValue = handleMissing(this.executeSubSelectedArray({\n            field: selection,\n            array: fieldValue,\n            enclosingRef,\n            context,\n          }), resultName);\n\n        } else if (!selection.selectionSet) {\n          // If the field does not have a selection set, then we handle it\n          // as a scalar value. To keep this.canon from canonicalizing\n          // this value, we use this.canon.pass to wrap fieldValue in a\n          // Pass object that this.canon.admit will later unwrap as-is.\n          if (context.canonizeResults) {\n            fieldValue = this.canon.pass(fieldValue);\n          }\n\n        } else if (fieldValue != null) {\n          // In this case, because we know the field has a selection set,\n          // it must be trying to query a GraphQLObjectType, which is why\n          // fieldValue must be != null.\n          fieldValue = handleMissing(this.executeSelectionSet({\n            selectionSet: selection.selectionSet,\n            objectOrReference: fieldValue as StoreObject | Reference,\n            enclosingRef: isReference(fieldValue) ? fieldValue : enclosingRef,\n            context,\n          }), resultName);\n        }\n\n        if (fieldValue !== void 0) {\n          objectsToMerge.push({ [resultName]: fieldValue });\n        }\n\n      } else {\n        const fragment = getFragmentFromSelection(\n          selection,\n          context.lookupFragment,\n        );\n\n        if (!fragment && selection.kind === Kind.FRAGMENT_SPREAD) {\n          throw new InvariantError(`No fragment named ${selection.name.value}`);\n        }\n\n        if (fragment && policies.fragmentMatches(fragment, typename)) {\n          fragment.selectionSet.selections.forEach(workSet.add, workSet);\n        }\n      }\n    });\n\n    const result = mergeDeepArray(objectsToMerge);\n    const finalResult: ExecResult = { result, missing };\n    const frozen = context.canonizeResults\n      ? this.canon.admit(finalResult)\n      // Since this.canon is normally responsible for freezing results (only in\n      // development), freeze them manually if canonization is disabled.\n      : maybeDeepFreeze(finalResult);\n\n    // Store this result with its selection set so that we can quickly\n    // recognize it again in the StoreReader#isFresh method.\n    if (frozen.result) {\n      this.knownResults.set(frozen.result, selectionSet);\n    }\n\n    return frozen;\n  }\n\n  // Uncached version of executeSubSelectedArray.\n  private execSubSelectedArrayImpl({\n    field,\n    array,\n    enclosingRef,\n    context,\n  }: ExecSubSelectedArrayOptions): ExecResult {\n    let missing: MissingTree | undefined;\n    let missingMerger = new DeepMerger<MissingTree[]>();\n\n    function handleMissing<T>(childResult: ExecResult<T>, i: number): T {\n      if (childResult.missing) {\n        missing = missingMerger.merge(missing, { [i]: childResult.missing });\n      }\n      return childResult.result;\n    }\n\n    if (field.selectionSet) {\n      array = array.filter(context.store.canRead);\n    }\n\n    array = array.map((item, i) => {\n      // null value in array\n      if (item === null) {\n        return null;\n      }\n\n      // This is a nested array, recurse\n      if (isArray(item)) {\n        return handleMissing(this.executeSubSelectedArray({\n          field,\n          array: item,\n          enclosingRef,\n          context,\n        }), i);\n      }\n\n      // This is an object, run the selection set on it\n      if (field.selectionSet) {\n        return handleMissing(this.executeSelectionSet({\n          selectionSet: field.selectionSet,\n          objectOrReference: item,\n          enclosingRef: isReference(item) ? item : enclosingRef,\n          context,\n        }), i);\n      }\n\n      if (__DEV__) {\n        assertSelectionSetForIdValue(context.store, field, item);\n      }\n\n      return item;\n    });\n\n    return {\n      result: context.canonizeResults ? this.canon.admit(array) : array,\n      missing,\n    };\n  }\n}\n\nfunction firstMissing(tree: MissingTree): string | undefined {\n  try {\n    JSON.stringify(tree, (_, value) => {\n      if (typeof value === \"string\") throw value;\n      return value;\n    });\n  } catch (result) {\n    return result;\n  }\n}\n\nfunction assertSelectionSetForIdValue(\n  store: NormalizedCache,\n  field: FieldNode,\n  fieldValue: any,\n) {\n  if (!field.selectionSet) {\n    const workSet = new Set([fieldValue]);\n    workSet.forEach(value => {\n      if (isNonNullObject(value)) {\n        invariant(\n          !isReference(value),\n          `Missing selection set for object of type ${\n            getTypenameFromStoreObject(store, value)\n          } returned for query field ${field.name.value}`,\n        );\n        Object.values(value).forEach(workSet.add, workSet);\n      }\n    });\n  }\n}\n","import { dep, OptimisticDependencyFunction } from \"optimism\";\nimport { Slot } from \"@wry/context\";\nimport { InMemoryCache } from \"./inMemoryCache\";\nimport { ApolloCache } from '../../core';\n\nexport interface ReactiveVar<T> {\n  (newValue?: T): T;\n  onNextChange(listener: ReactiveListener<T>): () => void;\n  attachCache(cache: ApolloCache<any>): this;\n  forgetCache(cache: ApolloCache<any>): boolean;\n}\n\nexport type ReactiveListener<T> = (value: T) => any;\n\n// Contextual Slot that acquires its value when custom read functions are\n// called in Policies#readField.\nexport const cacheSlot = new Slot<ApolloCache<any>>();\n\nconst cacheInfoMap = new WeakMap<ApolloCache<any>, {\n  vars: Set<ReactiveVar<any>>;\n  dep: OptimisticDependencyFunction<ReactiveVar<any>>;\n}>();\n\nfunction getCacheInfo(cache: ApolloCache<any>) {\n  let info = cacheInfoMap.get(cache)!;\n  if (!info) {\n    cacheInfoMap.set(cache, info = {\n      vars: new Set,\n      dep: dep(),\n    });\n  }\n  return info;\n}\n\nexport function forgetCache(cache: ApolloCache<any>) {\n  getCacheInfo(cache).vars.forEach(rv => rv.forgetCache(cache));\n}\n\n// Calling forgetCache(cache) serves to silence broadcasts and allows the\n// cache to be garbage collected. However, the varsByCache WeakMap\n// preserves the set of reactive variables that were previously associated\n// with this cache, which makes it possible to \"recall\" the cache at a\n// later time, by reattaching it to those variables. If the cache has been\n// garbage collected in the meantime, because it is no longer reachable,\n// you won't be able to call recallCache(cache), and the cache will\n// automatically disappear from the varsByCache WeakMap.\nexport function recallCache(cache: ApolloCache<any>) {\n  getCacheInfo(cache).vars.forEach(rv => rv.attachCache(cache));\n}\n\nexport function makeVar<T>(value: T): ReactiveVar<T> {\n  const caches = new Set<ApolloCache<any>>();\n  const listeners = new Set<ReactiveListener<T>>();\n\n  const rv: ReactiveVar<T> = function (newValue) {\n    if (arguments.length > 0) {\n      if (value !== newValue) {\n        value = newValue!;\n        caches.forEach(cache => {\n          // Invalidate any fields with custom read functions that\n          // consumed this variable, so query results involving those\n          // fields will be recomputed the next time we read them.\n          getCacheInfo(cache).dep.dirty(rv);\n          // Broadcast changes to any caches that have previously read\n          // from this variable.\n          broadcast(cache);\n        });\n        // Finally, notify any listeners added via rv.onNextChange.\n        const oldListeners = Array.from(listeners);\n        listeners.clear();\n        oldListeners.forEach(listener => listener(value));\n      }\n    } else {\n      // When reading from the variable, obtain the current cache from\n      // context via cacheSlot. This isn't entirely foolproof, but it's\n      // the same system that powers varDep.\n      const cache = cacheSlot.getValue();\n      if (cache) {\n        attach(cache);\n        getCacheInfo(cache).dep(rv);\n      }\n    }\n\n    return value;\n  };\n\n  rv.onNextChange = listener => {\n    listeners.add(listener);\n    return () => {\n      listeners.delete(listener);\n    };\n  };\n\n  const attach = rv.attachCache = cache => {\n    caches.add(cache);\n    getCacheInfo(cache).vars.add(rv);\n    return rv;\n  };\n\n  rv.forgetCache = cache => caches.delete(cache);\n\n  return rv;\n}\n\ntype Broadcastable = ApolloCache<any> & {\n  // This method is protected in InMemoryCache, which we are ignoring, but\n  // we still want some semblance of type safety when we call it.\n  broadcastWatches?: InMemoryCache[\"broadcastWatches\"];\n};\n\nfunction broadcast(cache: Broadcastable) {\n  if (cache.broadcastWatches) {\n    cache.broadcastWatches();\n  }\n}\n","import { invariant } from \"../../utilities/globals\";\n\nimport {\n  argumentsObjectFromField,\n  DeepMerger,\n  isNonEmptyArray,\n  isNonNullObject,\n} from \"../../utilities\";\n\nimport { hasOwn, isArray } from \"./helpers\";\nimport {\n  KeySpecifier,\n  KeyFieldsFunction,\n  KeyArgsFunction,\n} from \"./policies\";\n\n// Mapping from JSON-encoded KeySpecifier strings to associated information.\nconst specifierInfoCache: Record<string, {\n  paths?: string[][];\n  keyFieldsFn?: KeyFieldsFunction;\n  keyArgsFn?: KeyArgsFunction;\n}> = Object.create(null);\n\nfunction lookupSpecifierInfo(spec: KeySpecifier) {\n  // It's safe to encode KeySpecifier arrays with JSON.stringify, since they're\n  // just arrays of strings or nested KeySpecifier arrays, and the order of the\n  // array elements is important (and suitably preserved by JSON.stringify).\n  const cacheKey = JSON.stringify(spec);\n  return specifierInfoCache[cacheKey] ||\n    (specifierInfoCache[cacheKey] = Object.create(null));\n}\n\nexport function keyFieldsFnFromSpecifier(\n  specifier: KeySpecifier,\n): KeyFieldsFunction {\n  const info = lookupSpecifierInfo(specifier);\n\n  return info.keyFieldsFn || (info.keyFieldsFn = (\n    object,\n    context,\n  ) => {\n    const extract: typeof extractKey =\n      (from, key) => context.readField(key, from);\n\n    const keyObject = context.keyObject = collectSpecifierPaths(\n      specifier,\n      schemaKeyPath => {\n        let extracted = extractKeyPath(\n          context.storeObject,\n          schemaKeyPath,\n          // Using context.readField to extract paths from context.storeObject\n          // allows the extraction to see through Reference objects and respect\n          // custom read functions.\n          extract,\n        );\n\n        if (\n          extracted === void 0 &&\n          object !== context.storeObject &&\n          hasOwn.call(object, schemaKeyPath[0])\n        ) {\n          // If context.storeObject fails to provide a value for the requested\n          // path, fall back to the raw result object, if it has a top-level key\n          // matching the first key in the path (schemaKeyPath[0]). This allows\n          // key fields included in the written data to be saved in the cache\n          // even if they are not selected explicitly in context.selectionSet.\n          // Not being mentioned by context.selectionSet is convenient here,\n          // since it means these extra fields cannot be affected by field\n          // aliasing, which is why we can use extractKey instead of\n          // context.readField for this extraction.\n          extracted = extractKeyPath(object, schemaKeyPath, extractKey);\n        }\n\n        invariant(\n          extracted !== void 0,\n          `Missing field '${schemaKeyPath.join('.')}' while extracting keyFields from ${\n            JSON.stringify(object)\n          }`,\n        );\n\n        return extracted;\n      },\n    );\n\n    return `${context.typename}:${JSON.stringify(keyObject)}`;\n  });\n}\n\n// The keyArgs extraction process is roughly analogous to keyFields extraction,\n// but there are no aliases involved, missing fields are tolerated (by merely\n// omitting them from the key), and drawing from field.directives or variables\n// is allowed (in addition to drawing from the field's arguments object).\n// Concretely, these differences mean passing a different key path extractor\n// function to collectSpecifierPaths, reusing the shared extractKeyPath helper\n// wherever possible.\nexport function keyArgsFnFromSpecifier(specifier: KeySpecifier): KeyArgsFunction {\n  const info = lookupSpecifierInfo(specifier);\n\n  return info.keyArgsFn || (info.keyArgsFn = (args, {\n    field,\n    variables,\n    fieldName,\n  }) => {\n    const collected = collectSpecifierPaths(specifier, keyPath => {\n      const firstKey = keyPath[0];\n      const firstChar = firstKey.charAt(0);\n\n      if (firstChar === \"@\") {\n        if (field && isNonEmptyArray(field.directives)) {\n          const directiveName = firstKey.slice(1);\n          // If the directive appears multiple times, only the first\n          // occurrence's arguments will be used. TODO Allow repetition?\n          // TODO Cache this work somehow, a la aliasMap?\n          const d = field.directives.find(d => d.name.value === directiveName);\n          // Fortunately argumentsObjectFromField works for DirectiveNode!\n          const directiveArgs = d && argumentsObjectFromField(d, variables);\n          // For directives without arguments (d defined, but directiveArgs ===\n          // null), the presence or absence of the directive still counts as\n          // part of the field key, so we return null in those cases. If no\n          // directive with this name was found for this field (d undefined and\n          // thus directiveArgs undefined), we return undefined, which causes\n          // this value to be omitted from the key object returned by\n          // collectSpecifierPaths.\n          return directiveArgs && extractKeyPath(\n            directiveArgs,\n            // If keyPath.length === 1, this code calls extractKeyPath with an\n            // empty path, which works because it uses directiveArgs as the\n            // extracted value.\n            keyPath.slice(1),\n          );\n        }\n        // If the key started with @ but there was no corresponding directive,\n        // we want to omit this value from the key object, not fall through to\n        // treating @whatever as a normal argument name.\n        return;\n      }\n\n      if (firstChar === \"$\") {\n        const variableName = firstKey.slice(1);\n        if (variables && hasOwn.call(variables, variableName)) {\n          const varKeyPath = keyPath.slice(0);\n          varKeyPath[0] = variableName;\n          return extractKeyPath(variables, varKeyPath);\n        }\n        // If the key started with $ but there was no corresponding variable, we\n        // want to omit this value from the key object, not fall through to\n        // treating $whatever as a normal argument name.\n        return;\n      }\n\n      if (args) {\n        return extractKeyPath(args, keyPath);\n      }\n    });\n\n    const suffix = JSON.stringify(collected);\n\n    // If no arguments were passed to this field, and it didn't have any other\n    // field key contributions from directives or variables, hide the empty\n    // :{} suffix from the field key. However, a field passed no arguments can\n    // still end up with a non-empty :{...} suffix if its key configuration\n    // refers to directives or variables.\n    if (args || suffix !== \"{}\") {\n      fieldName += \":\" + suffix;\n    }\n\n    return fieldName;\n  });\n}\n\nexport function collectSpecifierPaths(\n  specifier: KeySpecifier,\n  extractor: (path: string[]) => any,\n): Record<string, any> {\n  // For each path specified by specifier, invoke the extractor, and repeatedly\n  // merge the results together, with appropriate ancestor context.\n  const merger = new DeepMerger;\n  return getSpecifierPaths(specifier).reduce((collected, path) => {\n    let toMerge = extractor(path);\n    if (toMerge !== void 0) {\n      // This path is not expected to contain array indexes, so the toMerge\n      // reconstruction will not contain arrays. TODO Fix this?\n      for (let i = path.length - 1; i >= 0; --i) {\n        toMerge = { [path[i]]: toMerge };\n      }\n      collected = merger.merge(collected, toMerge);\n    }\n    return collected;\n  }, Object.create(null));\n}\n\nexport function getSpecifierPaths(spec: KeySpecifier): string[][] {\n  const info = lookupSpecifierInfo(spec);\n\n  if (!info.paths) {\n    const paths: string[][] = info.paths = [];\n    const currentPath: string[] = [];\n\n    spec.forEach((s, i) => {\n      if (isArray(s)) {\n        getSpecifierPaths(s).forEach(p => paths.push(currentPath.concat(p)));\n        currentPath.length = 0;\n      } else {\n        currentPath.push(s);\n        if (!isArray(spec[i + 1])) {\n          paths.push(currentPath.slice(0));\n          currentPath.length = 0;\n        }\n      }\n    });\n  }\n\n  return info.paths!;\n}\n\nfunction extractKey<\n  TObj extends Record<string, any>,\n  TKey extends string,\n>(object: TObj, key: TKey): TObj[TKey] | undefined {\n  return object[key];\n}\n\nexport function extractKeyPath(\n  object: Record<string, any>,\n  path: string[],\n  extract?: typeof extractKey,\n): any {\n  // For each key in path, extract the corresponding child property from obj,\n  // flattening arrays if encountered (uncommon for keyFields and keyArgs, but\n  // possible). The final result of path.reduce is normalized so unexpected leaf\n  // objects have their keys safely sorted. That final result is difficult to\n  // type as anything other than any. You're welcome to try to improve the\n  // return type, but keep in mind extractKeyPath is not a public function\n  // (exported only for testing), so the effort may not be worthwhile unless the\n  // limited set of actual callers (see above) pass arguments that TypeScript\n  // can statically type. If we know only that path is some array of strings\n  // (and not, say, a specific tuple of statically known strings), any (or\n  // possibly unknown) is the honest answer.\n  extract = extract || extractKey;\n  return normalize(path.reduce(function reducer(obj, key): any {\n    return isArray(obj)\n      ? obj.map(child => reducer(child, key))\n      : obj && extract!(obj, key);\n  }, object));\n}\n\nfunction normalize<T>(value: T): T {\n  // Usually the extracted value will be a scalar value, since most primary\n  // key fields are scalar, but just in case we get an object or an array, we\n  // need to do some normalization of the order of (nested) keys.\n  if (isNonNullObject(value)) {\n    if (isArray(value)) {\n      return value.map(normalize) as any;\n    }\n    return collectSpecifierPaths(\n      Object.keys(value).sort(),\n      path => extractKeyPath(value, path),\n    ) as T;\n  }\n  return value;\n}\n","import { invariant, InvariantError } from '../../utilities/globals';\n\nimport {\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n  SelectionSetNode,\n  FieldNode,\n} from 'graphql';\n\nimport {\n  FragmentMap,\n  storeKeyNameFromField,\n  StoreValue,\n  StoreObject,\n  argumentsObjectFromField,\n  Reference,\n  isReference,\n  getStoreKeyName,\n  isNonNullObject,\n  stringifyForDisplay,\n} from '../../utilities';\nimport {\n  IdGetter,\n  MergeInfo,\n  NormalizedCache,\n  ReadMergeModifyContext,\n} from \"./types\";\nimport {\n  hasOwn,\n  fieldNameFromStoreName,\n  storeValueIsStoreObject,\n  selectionSetMatchesResult,\n  TypeOrFieldNameRegExp,\n  defaultDataIdFromObject,\n  isArray,\n} from './helpers';\nimport { cacheSlot } from './reactiveVars';\nimport { InMemoryCache } from './inMemoryCache';\nimport {\n  SafeReadonly,\n  FieldSpecifier,\n  ToReferenceFunction,\n  ReadFieldFunction,\n  ReadFieldOptions,\n  CanReadFunction,\n} from '../core/types/common';\nimport { WriteContext } from './writeToStore';\n\n// Upgrade to a faster version of the default stable JSON.stringify function\n// used by getStoreKeyName. This function is used when computing storeFieldName\n// strings (when no keyArgs has been configured for a field).\nimport { canonicalStringify } from './object-canon';\nimport { keyArgsFnFromSpecifier, keyFieldsFnFromSpecifier } from './key-extractor';\n\ngetStoreKeyName.setStringify(canonicalStringify);\n\nexport type TypePolicies = {\n  [__typename: string]: TypePolicy;\n}\n\n// TypeScript 3.7 will allow recursive type aliases, so this should work:\n// type KeySpecifier = (string | KeySpecifier)[]\nexport type KeySpecifier = ReadonlyArray<string | KeySpecifier>;\n\nexport type KeyFieldsContext = {\n  // The __typename of the incoming object, even if the __typename field was\n  // aliased to another name in the raw result object. May be undefined when\n  // dataIdFromObject is called for objects without __typename fields.\n  typename: string | undefined;\n\n  // The object to be identified, after processing to remove aliases and\n  // normalize identifiable child objects with references.\n  storeObject: StoreObject;\n\n  // Handy tool for reading additional fields from context.storeObject, either\n  // readField(\"fieldName\") to read storeObject[fieldName], or readField(\"name\",\n  // objectOrReference) to read from another object or Reference. If you read a\n  // field with a read function, that function will be invoked.\n  readField: ReadFieldFunction;\n\n  // If you are writing a custom keyFields function, and you plan to use the raw\n  // result object passed as the first argument, you may also need access to the\n  // selection set and available fragments for this object, just in case any\n  // fields have aliases. Since this logic is tricky to get right, and these\n  // context properties are not even always provided (for example, they are\n  // omitted when calling cache.identify(object), where object is assumed to be\n  // a StoreObject), we recommend you use context.storeObject (which has already\n  // been de-aliased) and context.readField (which can read from references as\n  // well as objects) instead of the raw result object in your keyFields\n  // functions, or just rely on the internal implementation of keyFields:[...]\n  // syntax to get these details right for you.\n  selectionSet?: SelectionSetNode;\n  fragmentMap?: FragmentMap;\n\n  // Internal. May be set by the KeyFieldsFunction to report fields that were\n  // involved in computing the ID. Never passed in by the caller.\n  keyObject?: Record<string, any>;\n};\n\nexport type KeyFieldsFunction = (\n  object: Readonly<StoreObject>,\n  context: KeyFieldsContext,\n) => KeySpecifier | false | ReturnType<IdGetter>;\n\ntype KeyFieldsResult = Exclude<ReturnType<KeyFieldsFunction>, KeySpecifier>;\n\n// TODO Should TypePolicy be a generic type, with a TObject or TEntity\n// type parameter?\nexport type TypePolicy = {\n  // Allows defining the primary key fields for this type, either using an\n  // array of field names or a function that returns an arbitrary string.\n  keyFields?: KeySpecifier | KeyFieldsFunction | false;\n\n  // Allows defining a merge function (or merge:true/false shorthand) to\n  // be used for merging objects of this type wherever they appear, unless\n  // the parent field also defines a merge function/boolean (that is,\n  // parent field merge functions take precedence over type policy merge\n  // functions). In many cases, defining merge:true for a given type\n  // policy can save you from specifying merge:true for all the field\n  // policies where that type might be encountered.\n  merge?: FieldMergeFunction | boolean;\n\n  // In the rare event that your schema happens to use a different\n  // __typename for the root Query, Mutation, and/or Schema types, you can\n  // express your deviant preferences by enabling one of these options.\n  queryType?: true,\n  mutationType?: true,\n  subscriptionType?: true,\n\n  fields?: {\n    [fieldName: string]:\n      | FieldPolicy<any>\n      | FieldReadFunction<any>;\n  }\n};\n\nexport type KeyArgsFunction = (\n  args: Record<string, any> | null,\n  context: {\n    typename: string;\n    fieldName: string;\n    field: FieldNode | null;\n    variables?: Record<string, any>;\n  },\n) => KeySpecifier | false | ReturnType<IdGetter>;\n\nexport type FieldPolicy<\n  // The internal representation used to store the field's data in the\n  // cache. Must be JSON-serializable if you plan to serialize the result\n  // of cache.extract() using JSON.\n  TExisting = any,\n  // The type of the incoming parameter passed to the merge function,\n  // typically matching the GraphQL response format, but with Reference\n  // objects substituted for any identifiable child objects. Often the\n  // same as TExisting, but not necessarily.\n  TIncoming = TExisting,\n  // The type that the read function actually returns, using TExisting\n  // data and options.args as input. Usually the same as TIncoming.\n  TReadResult = TIncoming,\n  // Allows FieldFunctionOptions definition to be overwritten by the\n  // developer\n  TOptions extends FieldFunctionOptions = FieldFunctionOptions\n> = {\n  keyArgs?: KeySpecifier | KeyArgsFunction | false;\n  read?: FieldReadFunction<TExisting, TReadResult, TOptions>;\n  merge?: FieldMergeFunction<TExisting, TIncoming, TOptions> | boolean;\n};\n\nexport type StorageType = Record<string, any>;\n\nfunction argsFromFieldSpecifier(spec: FieldSpecifier) {\n  return spec.args !== void 0 ? spec.args :\n    spec.field ? argumentsObjectFromField(spec.field, spec.variables) : null;\n}\n\nexport interface FieldFunctionOptions<\n  TArgs = Record<string, any>,\n  TVars = Record<string, any>,\n> {\n  args: TArgs | null;\n\n  // The name of the field, equal to options.field.name.value when\n  // options.field is available. Useful if you reuse the same function for\n  // multiple fields, and you need to know which field you're currently\n  // processing. Always a string, even when options.field is null.\n  fieldName: string;\n\n  // The full field key used internally, including serialized key arguments.\n  storeFieldName: string;\n\n  // The FieldNode object used to read this field. Useful if you need to\n  // know about other attributes of the field, such as its directives. This\n  // option will be null when a string was passed to options.readField.\n  field: FieldNode | null;\n\n  variables?: TVars;\n\n  // Utilities for dealing with { __ref } objects.\n  isReference: typeof isReference;\n  toReference: ToReferenceFunction;\n\n  // A handy place to put field-specific data that you want to survive\n  // across multiple read function calls. Useful for field-level caching,\n  // if your read function does any expensive work.\n  storage: StorageType;\n\n  cache: InMemoryCache;\n\n  // Helper function for reading other fields within the current object.\n  // If a foreign object or reference is provided, the field will be read\n  // from that object instead of the current object, so this function can\n  // be used (together with isReference) to examine the cache outside the\n  // current object. If a FieldNode is passed instead of a string, and\n  // that FieldNode has arguments, the same options.variables will be used\n  // to compute the argument values. Note that this function will invoke\n  // custom read functions for other fields, if defined. Always returns\n  // immutable data (enforced with Object.freeze in development).\n  readField: ReadFieldFunction;\n\n  // Returns true for non-normalized StoreObjects and non-dangling\n  // References, indicating that readField(name, objOrRef) has a chance of\n  // working. Useful for filtering out dangling references from lists.\n  canRead: CanReadFunction;\n\n  // Instead of just merging objects with { ...existing, ...incoming }, this\n  // helper function can be used to merge objects in a way that respects any\n  // custom merge functions defined for their fields.\n  mergeObjects: MergeObjectsFunction;\n}\n\ntype MergeObjectsFunction = <T extends StoreObject | Reference>(\n  existing: T,\n  incoming: T,\n) => T;\n\nexport type FieldReadFunction<\n  TExisting = any,\n  TReadResult = TExisting,\n  TOptions extends FieldFunctionOptions = FieldFunctionOptions\n> = (\n  // When reading a field, one often needs to know about any existing\n  // value stored for that field. If the field is read before any value\n  // has been written to the cache, this existing parameter will be\n  // undefined, which makes it easy to use a default parameter expression\n  // to supply the initial value. This parameter is positional (rather\n  // than one of the named options) because that makes it possible for the\n  // developer to annotate it with a type, without also having to provide\n  // a whole new type for the options object.\n  existing: SafeReadonly<TExisting> | undefined,\n  options: TOptions,\n) => TReadResult | undefined;\n\nexport type FieldMergeFunction<\n  TExisting = any,\n  TIncoming = TExisting,\n  // Passing the whole FieldFunctionOptions makes the current definition\n  // independent from its implementation\n  TOptions extends FieldFunctionOptions = FieldFunctionOptions\n> = (\n  existing: SafeReadonly<TExisting> | undefined,\n  // The incoming parameter needs to be positional as well, for the same\n  // reasons discussed in FieldReadFunction above.\n  incoming: SafeReadonly<TIncoming>,\n  options: TOptions,\n) => SafeReadonly<TExisting>;\n\nconst nullKeyFieldsFn: KeyFieldsFunction = () => void 0;\nconst simpleKeyArgsFn: KeyArgsFunction = (_args, context) => context.fieldName;\n\n// These merge functions can be selected by specifying merge:true or\n// merge:false in a field policy.\nconst mergeTrueFn: FieldMergeFunction<any> =\n  (existing, incoming, { mergeObjects }) => mergeObjects(existing, incoming);\nconst mergeFalseFn: FieldMergeFunction<any> = (_, incoming) => incoming;\n\nexport type PossibleTypesMap = {\n  [supertype: string]: string[];\n};\n\nexport class Policies {\n  private typePolicies: {\n    [__typename: string]: {\n      keyFn?: KeyFieldsFunction;\n      merge?: FieldMergeFunction<any>;\n      fields: {\n        [fieldName: string]: {\n          keyFn?: KeyArgsFunction;\n          read?: FieldReadFunction<any>;\n          merge?: FieldMergeFunction<any>;\n        };\n      };\n    };\n  } = Object.create(null);\n\n  private toBeAdded: {\n    [__typename: string]: TypePolicy[];\n  } = Object.create(null);\n\n  // Map from subtype names to sets of supertype names. Note that this\n  // representation inverts the structure of possibleTypes (whose keys are\n  // supertypes and whose values are arrays of subtypes) because it tends\n  // to be much more efficient to search upwards than downwards.\n  private supertypeMap = new Map<string, Set<string>>();\n\n  // Any fuzzy subtypes specified by possibleTypes will be converted to\n  // RegExp objects and recorded here. Every key of this map can also be\n  // found in supertypeMap. In many cases this Map will be empty, which\n  // means no fuzzy subtype checking will happen in fragmentMatches.\n  private fuzzySubtypes = new Map<string, RegExp>();\n\n  public readonly cache: InMemoryCache;\n\n  public readonly rootIdsByTypename: Record<string, string> = Object.create(null);\n  public readonly rootTypenamesById: Record<string, string> = Object.create(null);\n\n  public readonly usingPossibleTypes = false;\n\n  constructor(private config: {\n    cache: InMemoryCache;\n    dataIdFromObject?: KeyFieldsFunction;\n    possibleTypes?: PossibleTypesMap;\n    typePolicies?: TypePolicies;\n  }) {\n    this.config = {\n      dataIdFromObject: defaultDataIdFromObject,\n      ...config,\n    };\n\n    this.cache = this.config.cache;\n\n    this.setRootTypename(\"Query\");\n    this.setRootTypename(\"Mutation\");\n    this.setRootTypename(\"Subscription\");\n\n    if (config.possibleTypes) {\n      this.addPossibleTypes(config.possibleTypes);\n    }\n\n    if (config.typePolicies) {\n      this.addTypePolicies(config.typePolicies);\n    }\n  }\n\n  public identify(\n    object: StoreObject,\n    partialContext?: Partial<KeyFieldsContext>,\n  ): [string?, StoreObject?] {\n    const policies = this;\n\n    const typename = partialContext && (\n      partialContext.typename ||\n      partialContext.storeObject?.__typename\n    ) || object.__typename;\n\n    // It should be possible to write root Query fields with writeFragment,\n    // using { __typename: \"Query\", ... } as the data, but it does not make\n    // sense to allow the same identification behavior for the Mutation and\n    // Subscription types, since application code should never be writing\n    // directly to (or reading directly from) those root objects.\n    if (typename === this.rootTypenamesById.ROOT_QUERY) {\n      return [\"ROOT_QUERY\"];\n    }\n\n    // Default context.storeObject to object if not otherwise provided.\n    const storeObject = partialContext && partialContext.storeObject || object;\n\n    const context: KeyFieldsContext = {\n      ...partialContext,\n      typename,\n      storeObject,\n      readField: partialContext && partialContext.readField || function () {\n        const options = normalizeReadFieldOptions(arguments, storeObject);\n        return policies.readField(options, {\n          store: policies.cache[\"data\"],\n          variables: options.variables,\n        });\n      },\n    };\n\n    let id: KeyFieldsResult;\n\n    const policy = typename && this.getTypePolicy(typename);\n    let keyFn = policy && policy.keyFn || this.config.dataIdFromObject;\n    while (keyFn) {\n      const specifierOrId = keyFn(object, context);\n      if (isArray(specifierOrId)) {\n        keyFn = keyFieldsFnFromSpecifier(specifierOrId);\n      } else {\n        id = specifierOrId;\n        break;\n      }\n    }\n\n    id = id ? String(id) : void 0;\n    return context.keyObject ? [id, context.keyObject] : [id];\n  }\n\n  public addTypePolicies(typePolicies: TypePolicies) {\n    Object.keys(typePolicies).forEach(typename => {\n      const {\n        queryType,\n        mutationType,\n        subscriptionType,\n        ...incoming\n      } = typePolicies[typename];\n\n      // Though {query,mutation,subscription}Type configurations are rare,\n      // it's important to call setRootTypename as early as possible,\n      // since these configurations should apply consistently for the\n      // entire lifetime of the cache. Also, since only one __typename can\n      // qualify as one of these root types, these three properties cannot\n      // be inherited, unlike the rest of the incoming properties. That\n      // restriction is convenient, because the purpose of this.toBeAdded\n      // is to delay the processing of type/field policies until the first\n      // time they're used, allowing policies to be added in any order as\n      // long as all relevant policies (including policies for supertypes)\n      // have been added by the time a given policy is used for the first\n      // time. In other words, since inheritance doesn't matter for these\n      // properties, there's also no need to delay their processing using\n      // the this.toBeAdded queue.\n      if (queryType) this.setRootTypename(\"Query\", typename);\n      if (mutationType) this.setRootTypename(\"Mutation\", typename);\n      if (subscriptionType) this.setRootTypename(\"Subscription\", typename);\n\n      if (hasOwn.call(this.toBeAdded, typename)) {\n        this.toBeAdded[typename].push(incoming);\n      } else {\n        this.toBeAdded[typename] = [incoming];\n      }\n    });\n  }\n\n  private updateTypePolicy(typename: string, incoming: TypePolicy) {\n    const existing = this.getTypePolicy(typename);\n    const { keyFields, fields } = incoming;\n\n    function setMerge(\n      existing: { merge?: FieldMergeFunction | boolean; },\n      merge?: FieldMergeFunction | boolean,\n    ) {\n      existing.merge =\n        typeof merge === \"function\" ? merge :\n        // Pass merge:true as a shorthand for a merge implementation\n        // that returns options.mergeObjects(existing, incoming).\n        merge === true ? mergeTrueFn :\n        // Pass merge:false to make incoming always replace existing\n        // without any warnings about data clobbering.\n        merge === false ? mergeFalseFn :\n        existing.merge;\n    }\n\n    // Type policies can define merge functions, as an alternative to\n    // using field policies to merge child objects.\n    setMerge(existing, incoming.merge);\n\n    existing.keyFn =\n      // Pass false to disable normalization for this typename.\n      keyFields === false ? nullKeyFieldsFn :\n      // Pass an array of strings to use those fields to compute a\n      // composite ID for objects of this typename.\n      isArray(keyFields) ? keyFieldsFnFromSpecifier(keyFields) :\n      // Pass a function to take full control over identification.\n      typeof keyFields === \"function\" ? keyFields :\n      // Leave existing.keyFn unchanged if above cases fail.\n      existing.keyFn;\n\n    if (fields) {\n      Object.keys(fields).forEach(fieldName => {\n        const existing = this.getFieldPolicy(typename, fieldName, true)!;\n        const incoming = fields[fieldName];\n\n        if (typeof incoming === \"function\") {\n          existing.read = incoming;\n        } else {\n          const { keyArgs, read, merge } = incoming;\n\n          existing.keyFn =\n            // Pass false to disable argument-based differentiation of\n            // field identities.\n            keyArgs === false ? simpleKeyArgsFn :\n            // Pass an array of strings to use named arguments to\n            // compute a composite identity for the field.\n            isArray(keyArgs) ? keyArgsFnFromSpecifier(keyArgs) :\n            // Pass a function to take full control over field identity.\n            typeof keyArgs === \"function\" ? keyArgs :\n            // Leave existing.keyFn unchanged if above cases fail.\n            existing.keyFn;\n\n          if (typeof read === \"function\") {\n            existing.read = read;\n          }\n\n          setMerge(existing, merge);\n        }\n\n        if (existing.read && existing.merge) {\n          // If we have both a read and a merge function, assume\n          // keyArgs:false, because read and merge together can take\n          // responsibility for interpreting arguments in and out. This\n          // default assumption can always be overridden by specifying\n          // keyArgs explicitly in the FieldPolicy.\n          existing.keyFn = existing.keyFn || simpleKeyArgsFn;\n        }\n      });\n    }\n  }\n\n  private setRootTypename(\n    which: \"Query\" | \"Mutation\" | \"Subscription\",\n    typename: string = which,\n  ) {\n    const rootId = \"ROOT_\" + which.toUpperCase();\n    const old = this.rootTypenamesById[rootId];\n    if (typename !== old) {\n      invariant(!old || old === which, `Cannot change root ${which} __typename more than once`);\n      // First, delete any old __typename associated with this rootId from\n      // rootIdsByTypename.\n      if (old) delete this.rootIdsByTypename[old];\n      // Now make this the only __typename that maps to this rootId.\n      this.rootIdsByTypename[typename] = rootId;\n      // Finally, update the __typename associated with this rootId.\n      this.rootTypenamesById[rootId] = typename;\n    }\n  }\n\n  public addPossibleTypes(possibleTypes: PossibleTypesMap) {\n    (this.usingPossibleTypes as boolean) = true;\n    Object.keys(possibleTypes).forEach(supertype => {\n      // Make sure all types have an entry in this.supertypeMap, even if\n      // their supertype set is empty, so we can return false immediately\n      // from policies.fragmentMatches for unknown supertypes.\n      this.getSupertypeSet(supertype, true);\n\n      possibleTypes[supertype].forEach(subtype => {\n        this.getSupertypeSet(subtype, true)!.add(supertype);\n        const match = subtype.match(TypeOrFieldNameRegExp);\n        if (!match || match[0] !== subtype) {\n          // TODO Don't interpret just any invalid typename as a RegExp.\n          this.fuzzySubtypes.set(subtype, new RegExp(subtype));\n        }\n      });\n    });\n  }\n\n  private getTypePolicy(typename: string): Policies[\"typePolicies\"][string] {\n    if (!hasOwn.call(this.typePolicies, typename)) {\n      const policy: Policies[\"typePolicies\"][string] =\n        this.typePolicies[typename] = Object.create(null);\n      policy.fields = Object.create(null);\n\n      // When the TypePolicy for typename is first accessed, instead of\n      // starting with an empty policy object, inherit any properties or\n      // fields from the type policies of the supertypes of typename.\n      //\n      // Any properties or fields defined explicitly within the TypePolicy\n      // for typename will take precedence, and if there are multiple\n      // supertypes, the properties of policies whose types were added\n      // later via addPossibleTypes will take precedence over those of\n      // earlier supertypes. TODO Perhaps we should warn about these\n      // conflicts in development, and recommend defining the property\n      // explicitly in the subtype policy?\n      //\n      // Field policy inheritance is atomic/shallow: you can't inherit a\n      // field policy and then override just its read function, since read\n      // and merge functions often need to cooperate, so changing only one\n      // of them would be a recipe for inconsistency.\n      //\n      // Once the TypePolicy for typename has been accessed, its\n      // properties can still be updated directly using addTypePolicies,\n      // but future changes to supertype policies will not be reflected in\n      // this policy, because this code runs at most once per typename.\n      const supertypes = this.supertypeMap.get(typename);\n      if (supertypes && supertypes.size) {\n        supertypes.forEach(supertype => {\n          const { fields, ...rest } = this.getTypePolicy(supertype);\n          Object.assign(policy, rest);\n          Object.assign(policy.fields, fields);\n        });\n      }\n    }\n\n    const inbox = this.toBeAdded[typename];\n    if (inbox && inbox.length) {\n      // Merge the pending policies into this.typePolicies, in the order they\n      // were originally passed to addTypePolicy.\n      inbox.splice(0).forEach(policy => {\n        this.updateTypePolicy(typename, policy);\n      });\n    }\n\n    return this.typePolicies[typename];\n  }\n\n  private getFieldPolicy(\n    typename: string | undefined,\n    fieldName: string,\n    createIfMissing: boolean,\n  ): {\n    keyFn?: KeyArgsFunction;\n    read?: FieldReadFunction<any>;\n    merge?: FieldMergeFunction<any>;\n  } | undefined {\n    if (typename) {\n      const fieldPolicies = this.getTypePolicy(typename).fields;\n      return fieldPolicies[fieldName] || (\n        createIfMissing && (fieldPolicies[fieldName] = Object.create(null)));\n    }\n  }\n\n  private getSupertypeSet(\n    subtype: string,\n    createIfMissing: boolean,\n  ): Set<string> | undefined {\n    let supertypeSet = this.supertypeMap.get(subtype);\n    if (!supertypeSet && createIfMissing) {\n      this.supertypeMap.set(subtype, supertypeSet = new Set<string>());\n    }\n    return supertypeSet;\n  }\n\n  public fragmentMatches(\n    fragment: InlineFragmentNode | FragmentDefinitionNode,\n    typename: string | undefined,\n    result?: Record<string, any>,\n    variables?: Record<string, any>,\n  ): boolean {\n    if (!fragment.typeCondition) return true;\n\n    // If the fragment has a type condition but the object we're matching\n    // against does not have a __typename, the fragment cannot match.\n    if (!typename) return false;\n\n    const supertype = fragment.typeCondition.name.value;\n    // Common case: fragment type condition and __typename are the same.\n    if (typename === supertype) return true;\n\n    if (this.usingPossibleTypes &&\n        this.supertypeMap.has(supertype)) {\n      const typenameSupertypeSet = this.getSupertypeSet(typename, true)!;\n      const workQueue = [typenameSupertypeSet];\n      const maybeEnqueue = (subtype: string) => {\n        const supertypeSet = this.getSupertypeSet(subtype, false);\n        if (supertypeSet &&\n            supertypeSet.size &&\n            workQueue.indexOf(supertypeSet) < 0) {\n          workQueue.push(supertypeSet);\n        }\n      };\n\n      // We need to check fuzzy subtypes only if we encountered fuzzy\n      // subtype strings in addPossibleTypes, and only while writing to\n      // the cache, since that's when selectionSetMatchesResult gives a\n      // strong signal of fragment matching. The StoreReader class calls\n      // policies.fragmentMatches without passing a result object, so\n      // needToCheckFuzzySubtypes is always false while reading.\n      let needToCheckFuzzySubtypes = !!(result && this.fuzzySubtypes.size);\n      let checkingFuzzySubtypes = false;\n\n      // It's important to keep evaluating workQueue.length each time through\n      // the loop, because the queue can grow while we're iterating over it.\n      for (let i = 0; i < workQueue.length; ++i) {\n        const supertypeSet = workQueue[i];\n\n        if (supertypeSet.has(supertype)) {\n          if (!typenameSupertypeSet.has(supertype)) {\n            if (checkingFuzzySubtypes) {\n              invariant.warn(`Inferring subtype ${typename} of supertype ${supertype}`);\n            }\n            // Record positive results for faster future lookup.\n            // Unfortunately, we cannot safely cache negative results,\n            // because new possibleTypes data could always be added to the\n            // Policies class.\n            typenameSupertypeSet.add(supertype);\n          }\n          return true;\n        }\n\n        supertypeSet.forEach(maybeEnqueue);\n\n        if (needToCheckFuzzySubtypes &&\n            // Start checking fuzzy subtypes only after exhausting all\n            // non-fuzzy subtypes (after the final iteration of the loop).\n            i === workQueue.length - 1 &&\n            // We could wait to compare fragment.selectionSet to result\n            // after we verify the supertype, but this check is often less\n            // expensive than that search, and we will have to do the\n            // comparison anyway whenever we find a potential match.\n            selectionSetMatchesResult(fragment.selectionSet, result!, variables)) {\n          // We don't always need to check fuzzy subtypes (if no result\n          // was provided, or !this.fuzzySubtypes.size), but, when we do,\n          // we only want to check them once.\n          needToCheckFuzzySubtypes = false;\n          checkingFuzzySubtypes = true;\n\n          // If we find any fuzzy subtypes that match typename, extend the\n          // workQueue to search through the supertypes of those fuzzy\n          // subtypes. Otherwise the for-loop will terminate and we'll\n          // return false below.\n          this.fuzzySubtypes.forEach((regExp, fuzzyString) => {\n            const match = typename.match(regExp);\n            if (match && match[0] === typename) {\n              maybeEnqueue(fuzzyString);\n            }\n          });\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public hasKeyArgs(typename: string | undefined, fieldName: string) {\n    const policy = this.getFieldPolicy(typename, fieldName, false);\n    return !!(policy && policy.keyFn);\n  }\n\n  public getStoreFieldName(fieldSpec: FieldSpecifier): string {\n    const { typename, fieldName } = fieldSpec;\n    const policy = this.getFieldPolicy(typename, fieldName, false);\n    let storeFieldName: Exclude<ReturnType<KeyArgsFunction>, KeySpecifier>;\n\n    let keyFn = policy && policy.keyFn;\n    if (keyFn && typename) {\n      const context: Parameters<KeyArgsFunction>[1] = {\n        typename,\n        fieldName,\n        field: fieldSpec.field || null,\n        variables: fieldSpec.variables,\n      };\n      const args = argsFromFieldSpecifier(fieldSpec);\n      while (keyFn) {\n        const specifierOrString = keyFn(args, context);\n        if (isArray(specifierOrString)) {\n          keyFn = keyArgsFnFromSpecifier(specifierOrString);\n        } else {\n          // If the custom keyFn returns a falsy value, fall back to\n          // fieldName instead.\n          storeFieldName = specifierOrString || fieldName;\n          break;\n        }\n      }\n    }\n\n    if (storeFieldName === void 0) {\n      storeFieldName = fieldSpec.field\n        ? storeKeyNameFromField(fieldSpec.field, fieldSpec.variables)\n        : getStoreKeyName(fieldName, argsFromFieldSpecifier(fieldSpec));\n    }\n\n    // Returning false from a keyArgs function is like configuring\n    // keyArgs: false, but more dynamic.\n    if (storeFieldName === false) {\n      return fieldName;\n    }\n\n    // Make sure custom field names start with the actual field.name.value\n    // of the field, so we can always figure out which properties of a\n    // StoreObject correspond to which original field names.\n    return fieldName === fieldNameFromStoreName(storeFieldName)\n      ? storeFieldName\n      : fieldName + \":\" + storeFieldName;\n  }\n\n  public readField<V = StoreValue>(\n    options: ReadFieldOptions,\n    context: ReadMergeModifyContext,\n  ): SafeReadonly<V> | undefined {\n    const objectOrReference = options.from;\n    if (!objectOrReference) return;\n\n    const nameOrField = options.field || options.fieldName;\n    if (!nameOrField) return;\n\n    if (options.typename === void 0) {\n      const typename = context.store.getFieldValue<string>(objectOrReference, \"__typename\");\n      if (typename) options.typename = typename;\n    }\n\n    const storeFieldName = this.getStoreFieldName(options);\n    const fieldName = fieldNameFromStoreName(storeFieldName);\n    const existing = context.store.getFieldValue<V>(objectOrReference, storeFieldName);\n    const policy = this.getFieldPolicy(options.typename, fieldName, false);\n    const read = policy && policy.read;\n\n    if (read) {\n      const readOptions = makeFieldFunctionOptions(\n        this,\n        objectOrReference,\n        options,\n        context,\n        context.store.getStorage(\n          isReference(objectOrReference)\n            ? objectOrReference.__ref\n            : objectOrReference,\n          storeFieldName,\n        ),\n      );\n\n      // Call read(existing, readOptions) with cacheSlot holding this.cache.\n      return cacheSlot.withValue(\n        this.cache,\n        read,\n        [existing, readOptions],\n      ) as SafeReadonly<V>;\n    }\n\n    return existing;\n  }\n\n  public getReadFunction(\n    typename: string | undefined,\n    fieldName: string,\n  ): FieldReadFunction | undefined {\n    const policy = this.getFieldPolicy(typename, fieldName, false);\n    return policy && policy.read;\n  }\n\n  public getMergeFunction(\n    parentTypename: string | undefined,\n    fieldName: string,\n    childTypename: string | undefined,\n  ): FieldMergeFunction | undefined {\n    let policy:\n      | Policies[\"typePolicies\"][string]\n      | Policies[\"typePolicies\"][string][\"fields\"][string]\n      | undefined =\n      this.getFieldPolicy(parentTypename, fieldName, false);\n    let merge = policy && policy.merge;\n    if (!merge && childTypename) {\n      policy = this.getTypePolicy(childTypename);\n      merge = policy && policy.merge;\n    }\n    return merge;\n  }\n\n  public runMergeFunction(\n    existing: StoreValue,\n    incoming: StoreValue,\n    { field, typename, merge }: MergeInfo,\n    context: WriteContext,\n    storage?: StorageType,\n  ) {\n    if (merge === mergeTrueFn) {\n      // Instead of going to the trouble of creating a full\n      // FieldFunctionOptions object and calling mergeTrueFn, we can\n      // simply call mergeObjects, as mergeTrueFn would.\n      return makeMergeObjectsFunction(\n        context.store,\n      )(existing as StoreObject,\n        incoming as StoreObject);\n    }\n\n    if (merge === mergeFalseFn) {\n      // Likewise for mergeFalseFn, whose implementation is even simpler.\n      return incoming;\n    }\n\n    // If cache.writeQuery or cache.writeFragment was called with\n    // options.overwrite set to true, we still call merge functions, but\n    // the existing data is always undefined, so the merge function will\n    // not attempt to combine the incoming data with the existing data.\n    if (context.overwrite) {\n      existing = void 0;\n    }\n\n    return merge(existing, incoming, makeFieldFunctionOptions(\n      this,\n      // Unlike options.readField for read functions, we do not fall\n      // back to the current object if no foreignObjOrRef is provided,\n      // because it's not clear what the current object should be for\n      // merge functions: the (possibly undefined) existing object, or\n      // the incoming object? If you think your merge function needs\n      // to read sibling fields in order to produce a new value for\n      // the current field, you might want to rethink your strategy,\n      // because that's a recipe for making merge behavior sensitive\n      // to the order in which fields are written into the cache.\n      // However, readField(name, ref) is useful for merge functions\n      // that need to deduplicate child objects and references.\n      void 0,\n      { typename,\n        fieldName: field.name.value,\n        field,\n        variables: context.variables },\n      context,\n      storage || Object.create(null),\n    ));\n  }\n}\n\nfunction makeFieldFunctionOptions(\n  policies: Policies,\n  objectOrReference: StoreObject | Reference | undefined,\n  fieldSpec: FieldSpecifier,\n  context: ReadMergeModifyContext,\n  storage: StorageType,\n): FieldFunctionOptions {\n  const storeFieldName = policies.getStoreFieldName(fieldSpec);\n  const fieldName = fieldNameFromStoreName(storeFieldName);\n  const variables = fieldSpec.variables || context.variables;\n  const { toReference, canRead } = context.store;\n\n  return {\n    args: argsFromFieldSpecifier(fieldSpec),\n    field: fieldSpec.field || null,\n    fieldName,\n    storeFieldName,\n    variables,\n    isReference,\n    toReference,\n    storage,\n    cache: policies.cache,\n    canRead,\n    readField<T>() {\n      return policies.readField<T>(\n        normalizeReadFieldOptions(arguments, objectOrReference, variables),\n        context,\n      );\n    },\n    mergeObjects: makeMergeObjectsFunction(context.store),\n  };\n}\n\nexport function normalizeReadFieldOptions(\n  readFieldArgs: IArguments,\n  objectOrReference: StoreObject | Reference | undefined,\n  variables?: ReadMergeModifyContext[\"variables\"],\n): ReadFieldOptions {\n  const {\n    0: fieldNameOrOptions,\n    1: from,\n    length: argc,\n  } = readFieldArgs;\n\n  let options: ReadFieldOptions;\n\n  if (typeof fieldNameOrOptions === \"string\") {\n    options = {\n      fieldName: fieldNameOrOptions,\n      // Default to objectOrReference only when no second argument was\n      // passed for the from parameter, not when undefined is explicitly\n      // passed as the second argument.\n      from: argc > 1 ? from : objectOrReference,\n    };\n  } else {\n    options = { ...fieldNameOrOptions };\n    // Default to objectOrReference only when fieldNameOrOptions.from is\n    // actually omitted, rather than just undefined.\n    if (!hasOwn.call(options, \"from\")) {\n      options.from = objectOrReference;\n    }\n  }\n\n  if (__DEV__ && options.from === void 0) {\n    invariant.warn(`Undefined 'from' passed to readField with arguments ${\n      stringifyForDisplay(Array.from(readFieldArgs))\n    }`);\n  }\n\n  if (void 0 === options.variables) {\n    options.variables = variables;\n  }\n\n  return options;\n}\n\nfunction makeMergeObjectsFunction(\n  store: NormalizedCache,\n): MergeObjectsFunction {\n  return function mergeObjects(existing, incoming) {\n    if (isArray(existing) || isArray(incoming)) {\n      throw new InvariantError(\"Cannot automatically merge arrays\");\n    }\n\n    // These dynamic checks are necessary because the parameters of a\n    // custom merge function can easily have the any type, so the type\n    // system cannot always enforce the StoreObject | Reference parameter\n    // types of options.mergeObjects.\n    if (isNonNullObject(existing) &&\n        isNonNullObject(incoming)) {\n      const eType = store.getFieldValue(existing, \"__typename\");\n      const iType = store.getFieldValue(incoming, \"__typename\");\n      const typesDiffer = eType && iType && eType !== iType;\n\n      if (typesDiffer) {\n        return incoming;\n      }\n\n      if (isReference(existing) &&\n          storeValueIsStoreObject(incoming)) {\n        // Update the normalized EntityStore for the entity identified by\n        // existing.__ref, preferring/overwriting any fields contributed by the\n        // newer incoming StoreObject.\n        store.merge(existing.__ref, incoming);\n        return existing;\n      }\n\n      if (storeValueIsStoreObject(existing) &&\n          isReference(incoming)) {\n        // Update the normalized EntityStore for the entity identified by\n        // incoming.__ref, taking fields from the older existing object only if\n        // those fields are not already present in the newer StoreObject\n        // identified by incoming.__ref.\n        store.merge(existing, incoming.__ref);\n        return incoming;\n      }\n\n      if (storeValueIsStoreObject(existing) &&\n          storeValueIsStoreObject(incoming)) {\n        return { ...existing, ...incoming };\n      }\n    }\n\n    return incoming;\n  };\n}\n","import { invariant, InvariantError } from '../../utilities/globals';\nimport { equal } from '@wry/equality';\nimport { Trie } from '@wry/trie';\nimport {\n  SelectionSetNode,\n  FieldNode,\n  Kind,\n} from 'graphql';\n\nimport {\n  FragmentMap,\n  FragmentMapFunction,\n  getFragmentFromSelection,\n  getDefaultValues,\n  getOperationDefinition,\n  getTypenameFromResult,\n  makeReference,\n  isField,\n  resultKeyNameFromField,\n  StoreValue,\n  StoreObject,\n  Reference,\n  isReference,\n  shouldInclude,\n  cloneDeep,\n  addTypenameToDocument,\n  isNonEmptyArray,\n  argumentsObjectFromField,\n} from '../../utilities';\n\nimport { NormalizedCache, ReadMergeModifyContext, MergeTree, InMemoryCacheConfig } from './types';\nimport { isArray, makeProcessedFieldsMerger, fieldNameFromStoreName, storeValueIsStoreObject, extractFragmentContext } from './helpers';\nimport { StoreReader } from './readFromStore';\nimport { InMemoryCache } from './inMemoryCache';\nimport { EntityStore } from './entityStore';\nimport { Cache } from '../../core';\nimport { canonicalStringify } from './object-canon';\nimport { normalizeReadFieldOptions } from './policies';\nimport { ReadFieldFunction } from '../core/types/common';\n\nexport interface WriteContext extends ReadMergeModifyContext {\n  readonly written: {\n    [dataId: string]: SelectionSetNode[];\n  };\n  readonly fragmentMap: FragmentMap;\n  lookupFragment: FragmentMapFunction;\n  // General-purpose deep-merge function for use during writes.\n  merge<T>(existing: T, incoming: T): T;\n  // If true, merge functions will be called with undefined existing data.\n  overwrite: boolean;\n  incomingById: Map<string, {\n    storeObject: StoreObject;\n    mergeTree?: MergeTree;\n    fieldNodeSet: Set<FieldNode>;\n  }>;\n  // Directive metadata for @client and @defer. We could use a bitfield for this\n  // information to save some space, and use that bitfield number as the keys in\n  // the context.flavors Map.\n  clientOnly: boolean;\n  deferred: boolean;\n  flavors: Map<string, FlavorableWriteContext>;\n};\n\ntype FlavorableWriteContext = Pick<\n  WriteContext,\n  | \"clientOnly\"\n  | \"deferred\"\n  | \"flavors\"\n>;\n\n// Since there are only four possible combinations of context.clientOnly and\n// context.deferred values, we should need at most four \"flavors\" of any given\n// WriteContext. To avoid creating multiple copies of the same context, we cache\n// the contexts in the context.flavors Map (shared by all flavors) according to\n// their clientOnly and deferred values (always in that order).\nfunction getContextFlavor<TContext extends FlavorableWriteContext>(\n  context: TContext,\n  clientOnly: TContext[\"clientOnly\"],\n  deferred: TContext[\"deferred\"],\n): TContext {\n  const key = `${clientOnly}${deferred}`;\n  let flavored = context.flavors.get(key);\n  if (!flavored) {\n    context.flavors.set(key, flavored = (\n      context.clientOnly === clientOnly &&\n      context.deferred === deferred\n    ) ? context : {\n      ...context,\n      clientOnly,\n      deferred,\n    });\n  }\n  return flavored as TContext;\n}\n\ninterface ProcessSelectionSetOptions {\n  dataId?: string,\n  result: Record<string, any>;\n  selectionSet: SelectionSetNode;\n  context: WriteContext;\n  mergeTree: MergeTree;\n}\n\nexport class StoreWriter {\n  constructor(\n    public readonly cache: InMemoryCache,\n    private reader?: StoreReader,\n    private fragments?: InMemoryCacheConfig[\"fragments\"],\n  ) {}\n\n  public writeToStore(store: NormalizedCache, {\n    query,\n    result,\n    dataId,\n    variables,\n    overwrite,\n  }: Cache.WriteOptions): Reference | undefined {\n    const operationDefinition = getOperationDefinition(query)!;\n    const merger = makeProcessedFieldsMerger();\n\n    variables = {\n      ...getDefaultValues(operationDefinition),\n      ...variables!,\n    };\n\n    const context: WriteContext = {\n      store,\n      written: Object.create(null),\n      merge<T>(existing: T, incoming: T) {\n        return merger.merge(existing, incoming) as T;\n      },\n      variables,\n      varString: canonicalStringify(variables),\n      ...extractFragmentContext(query, this.fragments),\n      overwrite: !!overwrite,\n      incomingById: new Map,\n      clientOnly: false,\n      deferred: false,\n      flavors: new Map,\n    };\n\n    const ref = this.processSelectionSet({\n      result: result || Object.create(null),\n      dataId,\n      selectionSet: operationDefinition.selectionSet,\n      mergeTree: { map: new Map },\n      context,\n    });\n\n    if (!isReference(ref)) {\n      throw new InvariantError(`Could not identify object ${JSON.stringify(result)}`);\n    }\n\n    // So far, the store has not been modified, so now it's time to process\n    // context.incomingById and merge those incoming fields into context.store.\n    context.incomingById.forEach(({ storeObject, mergeTree, fieldNodeSet }, dataId) => {\n      const entityRef = makeReference(dataId);\n\n      if (mergeTree && mergeTree.map.size) {\n        const applied = this.applyMerges(mergeTree, entityRef, storeObject, context);\n        if (isReference(applied)) {\n          // Assume References returned by applyMerges have already been merged\n          // into the store. See makeMergeObjectsFunction in policies.ts for an\n          // example of how this can happen.\n          return;\n        }\n        // Otherwise, applyMerges returned a StoreObject, whose fields we should\n        // merge into the store (see store.merge statement below).\n        storeObject = applied;\n      }\n\n      if (__DEV__ && !context.overwrite) {\n        const fieldsWithSelectionSets: Record<string, true> = Object.create(null);\n        fieldNodeSet.forEach(field => {\n          if (field.selectionSet) {\n            fieldsWithSelectionSets[field.name.value] = true;\n          }\n        });\n\n        const hasSelectionSet = (storeFieldName: string) =>\n          fieldsWithSelectionSets[\n            fieldNameFromStoreName(storeFieldName)\n          ] === true;\n\n        const hasMergeFunction = (storeFieldName: string) => {\n          const childTree = mergeTree && mergeTree.map.get(storeFieldName);\n          return Boolean(childTree && childTree.info && childTree.info.merge);\n        };\n\n        Object.keys(storeObject).forEach(storeFieldName => {\n          // If a merge function was defined for this field, trust that it\n          // did the right thing about (not) clobbering data. If the field\n          // has no selection set, it's a scalar field, so it doesn't need\n          // a merge function (even if it's an object, like JSON data).\n          if (hasSelectionSet(storeFieldName) &&\n              !hasMergeFunction(storeFieldName)) {\n            warnAboutDataLoss(\n              entityRef,\n              storeObject,\n              storeFieldName,\n              context.store,\n            );\n          }\n        });\n      }\n\n      store.merge(dataId, storeObject);\n    });\n\n    // Any IDs written explicitly to the cache will be retained as\n    // reachable root IDs for garbage collection purposes. Although this\n    // logic includes root IDs like ROOT_QUERY and ROOT_MUTATION, their\n    // retainment counts are effectively ignored because cache.gc() always\n    // includes them in its root ID set.\n    store.retain(ref.__ref);\n\n    return ref;\n  }\n\n  private processSelectionSet({\n    dataId,\n    result,\n    selectionSet,\n    context,\n    // This object allows processSelectionSet to report useful information\n    // to its callers without explicitly returning that information.\n    mergeTree,\n  }: ProcessSelectionSetOptions): StoreObject | Reference {\n    const { policies } = this.cache;\n\n    // This variable will be repeatedly updated using context.merge to\n    // accumulate all fields that need to be written into the store.\n    let incoming: StoreObject = Object.create(null);\n\n    // If typename was not passed in, infer it. Note that typename is\n    // always passed in for tricky-to-infer cases such as \"Query\" for\n    // ROOT_QUERY.\n    const typename: string | undefined =\n      (dataId && policies.rootTypenamesById[dataId]) ||\n      getTypenameFromResult(result, selectionSet, context.fragmentMap) ||\n      (dataId && context.store.get(dataId, \"__typename\") as string);\n\n    if (\"string\" === typeof typename) {\n      incoming.__typename = typename;\n    }\n\n    // This readField function will be passed as context.readField in the\n    // KeyFieldsContext object created within policies.identify (called below).\n    // In addition to reading from the existing context.store (thanks to the\n    // policies.readField(options, context) line at the very bottom), this\n    // version of readField can read from Reference objects that are currently\n    // pending in context.incomingById, which is important whenever keyFields\n    // need to be extracted from a child object that processSelectionSet has\n    // turned into a Reference.\n    const readField: ReadFieldFunction = function (this: void) {\n      const options = normalizeReadFieldOptions(\n        arguments,\n        incoming,\n        context.variables,\n      );\n\n      if (isReference(options.from)) {\n        const info = context.incomingById.get(options.from.__ref);\n        if (info) {\n          const result = policies.readField({\n            ...options,\n            from: info.storeObject\n          }, context);\n\n          if (result !== void 0) {\n            return result;\n          }\n        }\n      }\n\n      return policies.readField(options, context);\n    };\n\n    const fieldNodeSet = new Set<FieldNode>();\n\n    this.flattenFields(\n      selectionSet,\n      result,\n      // This WriteContext will be the default context value for fields returned\n      // by the flattenFields method, but some fields may be assigned a modified\n      // context, depending on the presence of @client and other directives.\n      context,\n      typename,\n    ).forEach((context, field) => {\n      const resultFieldKey = resultKeyNameFromField(field);\n      const value = result[resultFieldKey];\n\n      fieldNodeSet.add(field);\n\n      if (value !== void 0) {\n        const storeFieldName = policies.getStoreFieldName({\n          typename,\n          fieldName: field.name.value,\n          field,\n          variables: context.variables,\n        });\n\n        const childTree = getChildMergeTree(mergeTree, storeFieldName);\n\n        let incomingValue = this.processFieldValue(\n          value,\n          field,\n          // Reset context.clientOnly and context.deferred to their default\n          // values before processing nested selection sets.\n          field.selectionSet\n            ? getContextFlavor(context, false, false)\n            : context,\n          childTree,\n        );\n\n        // To determine if this field holds a child object with a merge function\n        // defined in its type policy (see PR #7070), we need to figure out the\n        // child object's __typename.\n        let childTypename: string | undefined;\n\n        // The field's value can be an object that has a __typename only if the\n        // field has a selection set. Otherwise incomingValue is scalar.\n        if (field.selectionSet &&\n            (isReference(incomingValue) ||\n             storeValueIsStoreObject(incomingValue))) {\n          childTypename = readField<string>(\"__typename\", incomingValue);\n        }\n\n        const merge = policies.getMergeFunction(\n          typename,\n          field.name.value,\n          childTypename,\n        );\n\n        if (merge) {\n          childTree.info = {\n            // TODO Check compatibility against any existing childTree.field?\n            field,\n            typename,\n            merge,\n          };\n        } else {\n          maybeRecycleChildMergeTree(mergeTree, storeFieldName);\n        }\n\n        incoming = context.merge(incoming, {\n          [storeFieldName]: incomingValue,\n        });\n\n      } else if (\n        __DEV__ &&\n        !context.clientOnly &&\n        !context.deferred &&\n        !addTypenameToDocument.added(field) &&\n        // If the field has a read function, it may be a synthetic field or\n        // provide a default value, so its absence from the written data should\n        // not be cause for alarm.\n        !policies.getReadFunction(typename, field.name.value)\n      ) {\n        invariant.error(`Missing field '${\n          resultKeyNameFromField(field)\n        }' while writing result ${\n          JSON.stringify(result, null, 2)\n        }`.substring(0, 1000));\n      }\n    });\n\n    // Identify the result object, even if dataId was already provided,\n    // since we always need keyObject below.\n    try {\n      const [id, keyObject] = policies.identify(result, {\n        typename,\n        selectionSet,\n        fragmentMap: context.fragmentMap,\n        storeObject: incoming,\n        readField,\n      });\n\n      // If dataId was not provided, fall back to the id just generated by\n      // policies.identify.\n      dataId = dataId || id;\n\n      // Write any key fields that were used during identification, even if\n      // they were not mentioned in the original query.\n      if (keyObject) {\n        // TODO Reverse the order of the arguments?\n        incoming = context.merge(incoming, keyObject);\n      }\n    } catch (e) {\n      // If dataId was provided, tolerate failure of policies.identify.\n      if (!dataId) throw e;\n    }\n\n    if (\"string\" === typeof dataId) {\n      const dataRef = makeReference(dataId);\n\n      // Avoid processing the same entity object using the same selection\n      // set more than once. We use an array instead of a Set since most\n      // entity IDs will be written using only one selection set, so the\n      // size of this array is likely to be very small, meaning indexOf is\n      // likely to be faster than Set.prototype.has.\n      const sets = context.written[dataId] || (context.written[dataId] = []);\n      if (sets.indexOf(selectionSet) >= 0) return dataRef;\n      sets.push(selectionSet);\n\n      // If we're about to write a result object into the store, but we\n      // happen to know that the exact same (===) result object would be\n      // returned if we were to reread the result with the same inputs,\n      // then we can skip the rest of the processSelectionSet work for\n      // this object, and immediately return a Reference to it.\n      if (this.reader && this.reader.isFresh(\n        result,\n        dataRef,\n        selectionSet,\n        context,\n      )) {\n        return dataRef;\n      }\n\n      const previous = context.incomingById.get(dataId);\n      if (previous) {\n        previous.storeObject = context.merge(previous.storeObject, incoming);\n        previous.mergeTree = mergeMergeTrees(previous.mergeTree, mergeTree);\n        fieldNodeSet.forEach(field => previous.fieldNodeSet.add(field));\n      } else {\n        context.incomingById.set(dataId, {\n          storeObject: incoming,\n          // Save a reference to mergeTree only if it is not empty, because\n          // empty MergeTrees may be recycled by maybeRecycleChildMergeTree and\n          // reused for entirely different parts of the result tree.\n          mergeTree: mergeTreeIsEmpty(mergeTree) ? void 0 : mergeTree,\n          fieldNodeSet,\n        });\n      }\n\n      return dataRef;\n    }\n\n    return incoming;\n  }\n\n  private processFieldValue(\n    value: any,\n    field: FieldNode,\n    context: WriteContext,\n    mergeTree: MergeTree,\n  ): StoreValue {\n    if (!field.selectionSet || value === null) {\n      // In development, we need to clone scalar values so that they can be\n      // safely frozen with maybeDeepFreeze in readFromStore.ts. In production,\n      // it's cheaper to store the scalar values directly in the cache.\n      return __DEV__ ? cloneDeep(value) : value;\n    }\n\n    if (isArray(value)) {\n      return value.map((item, i) => {\n        const value = this.processFieldValue(\n          item, field, context, getChildMergeTree(mergeTree, i));\n        maybeRecycleChildMergeTree(mergeTree, i);\n        return value;\n      });\n    }\n\n    return this.processSelectionSet({\n      result: value,\n      selectionSet: field.selectionSet,\n      context,\n      mergeTree,\n    });\n  }\n\n  // Implements https://spec.graphql.org/draft/#sec-Field-Collection, but with\n  // some additions for tracking @client and @defer directives.\n  private flattenFields<TContext extends Pick<\n    WriteContext,\n    | \"clientOnly\"\n    | \"deferred\"\n    | \"flavors\"\n    | \"fragmentMap\"\n    | \"lookupFragment\"\n    | \"variables\"\n  >>(\n    selectionSet: SelectionSetNode,\n    result: Record<string, any>,\n    context: TContext,\n    typename = getTypenameFromResult(result, selectionSet, context.fragmentMap),\n  ): Map<FieldNode, TContext> {\n    const fieldMap = new Map<FieldNode, TContext>();\n    const { policies } = this.cache;\n\n    const limitingTrie = new Trie<{\n      // Tracks whether (selectionSet, clientOnly, deferred) has been flattened\n      // before. The GraphQL specification only uses the fragment name for\n      // skipping previously visited fragments, but the top-level fragment\n      // selection set corresponds 1:1 with the fagment name (and is slightly\n      // easier too work with), and we need to consider clientOnly and deferred\n      // values as well, potentially revisiting selection sets that were\n      // previously visited with different inherited configurations of those\n      // directives.\n      visited?: boolean;\n    }>(false); // No need for WeakMap, since limitingTrie does not escape.\n\n    (function flatten(\n      this: void,\n      selectionSet: SelectionSetNode,\n      inheritedContext: TContext,\n    ) {\n      const visitedNode = limitingTrie.lookup(\n        selectionSet,\n        // Because we take inheritedClientOnly and inheritedDeferred into\n        // consideration here (in addition to selectionSet), it's possible for\n        // the same selection set to be flattened more than once, if it appears\n        // in the query with different @client and/or @directive configurations.\n        inheritedContext.clientOnly,\n        inheritedContext.deferred,\n      );\n      if (visitedNode.visited) return;\n      visitedNode.visited = true;\n\n      selectionSet.selections.forEach(selection => {\n        if (!shouldInclude(selection, context.variables)) return;\n\n        let { clientOnly, deferred } = inheritedContext;\n        if (\n          // Since the presence of @client or @defer on this field can only\n          // cause clientOnly or deferred to become true, we can skip the\n          // forEach loop if both clientOnly and deferred are already true.\n          !(clientOnly && deferred) &&\n          isNonEmptyArray(selection.directives)\n        ) {\n          selection.directives.forEach(dir => {\n            const name = dir.name.value;\n            if (name === \"client\") clientOnly = true;\n            if (name === \"defer\") {\n              const args = argumentsObjectFromField(dir, context.variables);\n              // The @defer directive takes an optional args.if boolean\n              // argument, similar to @include(if: boolean). Note that\n              // @defer(if: false) does not make context.deferred false, but\n              // instead behaves as if there was no @defer directive.\n              if (!args || (args as { if?: boolean }).if !== false) {\n                deferred = true;\n              }\n              // TODO In the future, we may want to record args.label using\n              // context.deferred, if a label is specified.\n            }\n          });\n        }\n\n        if (isField(selection)) {\n          const existing = fieldMap.get(selection);\n          if (existing) {\n            // If this field has been visited along another recursive path\n            // before, the final context should have clientOnly or deferred set\n            // to true only if *all* paths have the directive (hence the &&).\n            clientOnly = clientOnly && existing.clientOnly;\n            deferred = deferred && existing.deferred;\n          }\n\n          fieldMap.set(\n            selection,\n            getContextFlavor(context, clientOnly, deferred),\n          );\n\n        } else {\n          const fragment = getFragmentFromSelection(\n            selection,\n            context.lookupFragment,\n          );\n\n          if (!fragment && selection.kind === Kind.FRAGMENT_SPREAD) {\n            throw new InvariantError(`No fragment named ${selection.name.value}`);\n          }\n\n          if (fragment &&\n              policies.fragmentMatches(\n                fragment, typename, result, context.variables)) {\n\n            flatten(\n              fragment.selectionSet,\n              getContextFlavor(context, clientOnly, deferred),\n            );\n          }\n        }\n      });\n    })(selectionSet, context);\n\n    return fieldMap;\n  }\n\n  private applyMerges<T extends StoreValue>(\n    mergeTree: MergeTree,\n    existing: StoreValue,\n    incoming: T,\n    context: WriteContext,\n    getStorageArgs?: Parameters<EntityStore[\"getStorage\"]>,\n  ): T | Reference {\n    if (mergeTree.map.size && !isReference(incoming)) {\n      const e: StoreObject | Reference | undefined = (\n        // Items in the same position in different arrays are not\n        // necessarily related to each other, so when incoming is an array\n        // we process its elements as if there was no existing data.\n        !isArray(incoming) &&\n        // Likewise, existing must be either a Reference or a StoreObject\n        // in order for its fields to be safe to merge with the fields of\n        // the incoming object.\n        (isReference(existing) || storeValueIsStoreObject(existing))\n      ) ? existing : void 0;\n\n      // This narrowing is implied by mergeTree.map.size > 0 and\n      // !isReference(incoming), though TypeScript understandably cannot\n      // hope to infer this type.\n      const i = incoming as StoreObject | StoreValue[];\n\n      // The options.storage objects provided to read and merge functions\n      // are derived from the identity of the parent object plus a\n      // sequence of storeFieldName strings/numbers identifying the nested\n      // field name path of each field value to be merged.\n      if (e && !getStorageArgs) {\n        getStorageArgs = [isReference(e) ? e.__ref : e];\n      }\n\n      // It's possible that applying merge functions to this subtree will\n      // not change the incoming data, so this variable tracks the fields\n      // that did change, so we can create a new incoming object when (and\n      // only when) at least one incoming field has changed. We use a Map\n      // to preserve the type of numeric keys.\n      let changedFields: Map<string | number, StoreValue> | undefined;\n\n      const getValue = (\n        from: typeof e | typeof i,\n        name: string | number,\n      ): StoreValue => {\n        return isArray(from)\n          ? (typeof name === \"number\" ? from[name] : void 0)\n          : context.store.getFieldValue(from, String(name))\n      };\n\n      mergeTree.map.forEach((childTree, storeFieldName) => {\n        const eVal = getValue(e, storeFieldName);\n        const iVal = getValue(i, storeFieldName);\n        // If we have no incoming data, leave any existing data untouched.\n        if (void 0 === iVal) return;\n        if (getStorageArgs) {\n          getStorageArgs.push(storeFieldName);\n        }\n        const aVal = this.applyMerges(\n          childTree,\n          eVal,\n          iVal,\n          context,\n          getStorageArgs,\n        );\n        if (aVal !== iVal) {\n          changedFields = changedFields || new Map;\n          changedFields.set(storeFieldName, aVal);\n        }\n        if (getStorageArgs) {\n          invariant(getStorageArgs.pop() === storeFieldName);\n        }\n      });\n\n      if (changedFields) {\n        // Shallow clone i so we can add changed fields to it.\n        incoming = (isArray(i) ? i.slice(0) : { ...i }) as T;\n        changedFields.forEach((value, name) => {\n          (incoming as any)[name] = value;\n        });\n      }\n    }\n\n    if (mergeTree.info) {\n      return this.cache.policies.runMergeFunction(\n        existing,\n        incoming,\n        mergeTree.info,\n        context,\n        getStorageArgs && context.store.getStorage(...getStorageArgs),\n      );\n    }\n\n    return incoming;\n  }\n}\n\nconst emptyMergeTreePool: MergeTree[] = [];\n\nfunction getChildMergeTree(\n  { map }: MergeTree,\n  name: string | number,\n): MergeTree {\n  if (!map.has(name)) {\n    map.set(name, emptyMergeTreePool.pop() || { map: new Map });\n  }\n  return map.get(name)!;\n}\n\nfunction mergeMergeTrees(\n  left: MergeTree | undefined,\n  right: MergeTree | undefined,\n): MergeTree {\n  if (left === right || !right || mergeTreeIsEmpty(right)) return left!;\n  if (!left || mergeTreeIsEmpty(left)) return right;\n\n  const info = left.info && right.info ? {\n    ...left.info,\n    ...right.info,\n  } : left.info || right.info;\n\n  const needToMergeMaps = left.map.size && right.map.size;\n  const map = needToMergeMaps ? new Map :\n    left.map.size ? left.map : right.map;\n\n  const merged = { info, map };\n\n  if (needToMergeMaps) {\n    const remainingRightKeys = new Set(right.map.keys());\n\n    left.map.forEach((leftTree, key) => {\n      merged.map.set(\n        key,\n        mergeMergeTrees(leftTree, right.map.get(key)),\n      );\n      remainingRightKeys.delete(key);\n    });\n\n    remainingRightKeys.forEach(key => {\n      merged.map.set(\n        key,\n        mergeMergeTrees(\n          right.map.get(key),\n          left.map.get(key),\n        ),\n      );\n    });\n  }\n\n  return merged;\n}\n\nfunction mergeTreeIsEmpty(tree: MergeTree | undefined): boolean {\n  return !tree || !(tree.info || tree.map.size);\n}\n\nfunction maybeRecycleChildMergeTree(\n  { map }: MergeTree,\n  name: string | number,\n) {\n  const childTree = map.get(name);\n  if (childTree && mergeTreeIsEmpty(childTree)) {\n    emptyMergeTreePool.push(childTree);\n    map.delete(name);\n  }\n}\n\nconst warnings = new Set<string>();\n\n// Note that this function is unused in production, and thus should be\n// pruned by any well-configured minifier.\nfunction warnAboutDataLoss(\n  existingRef: Reference,\n  incomingObj: StoreObject,\n  storeFieldName: string,\n  store: NormalizedCache,\n) {\n  const getChild = (objOrRef: StoreObject | Reference): StoreObject | false => {\n    const child = store.getFieldValue<StoreObject>(objOrRef, storeFieldName);\n    return typeof child === \"object\" && child;\n  };\n\n  const existing = getChild(existingRef);\n  if (!existing) return;\n\n  const incoming = getChild(incomingObj);\n  if (!incoming) return;\n\n  // It's always safe to replace a reference, since it refers to data\n  // safely stored elsewhere.\n  if (isReference(existing)) return;\n\n  // If the values are structurally equivalent, we do not need to worry\n  // about incoming replacing existing.\n  if (equal(existing, incoming)) return;\n\n  // If we're replacing every key of the existing object, then the\n  // existing data would be overwritten even if the objects were\n  // normalized, so warning would not be helpful here.\n  if (Object.keys(existing).every(\n    key => store.getFieldValue(incoming, key) !== void 0)) {\n    return;\n  }\n\n  const parentType =\n    store.getFieldValue<string>(existingRef, \"__typename\") ||\n    store.getFieldValue<string>(incomingObj, \"__typename\");\n  const fieldName = fieldNameFromStoreName(storeFieldName);\n  const typeDotName = `${parentType}.${fieldName}`;\n  // Avoid warning more than once for the same type and field name.\n  if (warnings.has(typeDotName)) return;\n  warnings.add(typeDotName);\n\n  const childTypenames: string[] = [];\n  // Arrays do not have __typename fields, and always need a custom merge\n  // function, even if their elements are normalized entities.\n  if (!isArray(existing) &&\n      !isArray(incoming)) {\n    [existing, incoming].forEach(child => {\n      const typename = store.getFieldValue(child, \"__typename\");\n      if (typeof typename === \"string\" &&\n          !childTypenames.includes(typename)) {\n        childTypenames.push(typename);\n      }\n    });\n  }\n\n  invariant.warn(\n`Cache data may be lost when replacing the ${fieldName} field of a ${parentType} object.\n\nTo address this problem (which is not a bug in Apollo Client), ${\n  childTypenames.length\n    ? \"either ensure all objects of type \" +\n        childTypenames.join(\" and \") + \" have an ID or a custom merge function, or \"\n    : \"\"\n}define a custom merge function for the ${\n  typeDotName\n} field, so InMemoryCache can safely merge these objects:\n\n  existing: ${JSON.stringify(existing).slice(0, 1000)}\n  incoming: ${JSON.stringify(incoming).slice(0, 1000)}\n\nFor more information about these options, please refer to the documentation:\n\n  * Ensuring entity objects have IDs: https://go.apollo.dev/c/generating-unique-identifiers\n  * Defining custom merge functions: https://go.apollo.dev/c/merging-non-normalized-objects\n`);\n}\n","import { invariant } from '../../utilities/globals';\n\n// Make builtins like Map and Set safe to use with non-extensible objects.\nimport './fixPolyfills';\n\nimport { DocumentNode } from 'graphql';\nimport { OptimisticWrapperFunction, wrap } from 'optimism';\nimport { equal } from '@wry/equality';\n\nimport { ApolloCache } from '../core/cache';\nimport { Cache } from '../core/types/Cache';\nimport { MissingFieldError } from '../core/types/common';\nimport {\n  addTypenameToDocument,\n  StoreObject,\n  Reference,\n  isReference,\n} from '../../utilities';\nimport { InMemoryCacheConfig, NormalizedCacheObject } from './types';\nimport { StoreReader } from './readFromStore';\nimport { StoreWriter } from './writeToStore';\nimport { EntityStore, supportsResultCaching } from './entityStore';\nimport { makeVar, forgetCache, recallCache } from './reactiveVars';\nimport { Policies } from './policies';\nimport { hasOwn, normalizeConfig, shouldCanonizeResults } from './helpers';\nimport { canonicalStringify } from './object-canon';\nimport { OperationVariables } from '../../core';\n\ntype BroadcastOptions = Pick<\n  Cache.BatchOptions<InMemoryCache>,\n  | \"optimistic\"\n  | \"onWatchUpdated\"\n>\n\nexport class InMemoryCache extends ApolloCache<NormalizedCacheObject> {\n  private data: EntityStore;\n  private optimisticData: EntityStore;\n\n  protected config: InMemoryCacheConfig;\n  private watches = new Set<Cache.WatchOptions>();\n  private addTypename: boolean;\n\n  private typenameDocumentCache = new Map<DocumentNode, DocumentNode>();\n  private storeReader: StoreReader;\n  private storeWriter: StoreWriter;\n\n  private maybeBroadcastWatch: OptimisticWrapperFunction<\n    [Cache.WatchOptions, BroadcastOptions?],\n    any,\n    [Cache.WatchOptions]>;\n\n  // Dynamically imported code can augment existing typePolicies or\n  // possibleTypes by calling cache.policies.addTypePolicies or\n  // cache.policies.addPossibletypes.\n  public readonly policies: Policies;\n\n  public readonly makeVar = makeVar;\n\n  constructor(config: InMemoryCacheConfig = {}) {\n    super();\n    this.config = normalizeConfig(config);\n    this.addTypename = !!this.config.addTypename;\n\n    this.policies = new Policies({\n      cache: this,\n      dataIdFromObject: this.config.dataIdFromObject,\n      possibleTypes: this.config.possibleTypes,\n      typePolicies: this.config.typePolicies,\n    });\n\n    this.init();\n  }\n\n  private init() {\n    // Passing { resultCaching: false } in the InMemoryCache constructor options\n    // will completely disable dependency tracking, which will improve memory\n    // usage but worsen the performance of repeated reads.\n    const rootStore = this.data = new EntityStore.Root({\n      policies: this.policies,\n      resultCaching: this.config.resultCaching,\n    });\n\n    // When no optimistic writes are currently active, cache.optimisticData ===\n    // cache.data, so there are no additional layers on top of the actual data.\n    // When an optimistic update happens, this.optimisticData will become a\n    // linked list of EntityStore Layer objects that terminates with the\n    // original this.data cache object.\n    this.optimisticData = rootStore.stump;\n\n    this.resetResultCache();\n  }\n\n  private resetResultCache(resetResultIdentities?: boolean) {\n    const previousReader = this.storeReader;\n    const { fragments } = this.config;\n\n    // The StoreWriter is mostly stateless and so doesn't really need to be\n    // reset, but it does need to have its writer.storeReader reference updated,\n    // so it's simpler to update this.storeWriter as well.\n    this.storeWriter = new StoreWriter(\n      this,\n      this.storeReader = new StoreReader({\n        cache: this,\n        addTypename: this.addTypename,\n        resultCacheMaxSize: this.config.resultCacheMaxSize,\n        canonizeResults: shouldCanonizeResults(this.config),\n        canon: resetResultIdentities\n          ? void 0\n          : previousReader && previousReader.canon,\n        fragments,\n      }),\n      fragments,\n    );\n\n    this.maybeBroadcastWatch = wrap((\n      c: Cache.WatchOptions,\n      options?: BroadcastOptions,\n    ) => {\n      return this.broadcastWatch(c, options);\n    }, {\n      max: this.config.resultCacheMaxSize,\n      makeCacheKey: (c: Cache.WatchOptions) => {\n        // Return a cache key (thus enabling result caching) only if we're\n        // currently using a data store that can track cache dependencies.\n        const store = c.optimistic ? this.optimisticData : this.data;\n        if (supportsResultCaching(store)) {\n          const { optimistic, id, variables } = c;\n          return store.makeCacheKey(\n            c.query,\n            // Different watches can have the same query, optimistic\n            // status, rootId, and variables, but if their callbacks are\n            // different, the (identical) result needs to be delivered to\n            // each distinct callback. The easiest way to achieve that\n            // separation is to include c.callback in the cache key for\n            // maybeBroadcastWatch calls. See issue #5733.\n            c.callback,\n            canonicalStringify({ optimistic, id, variables }),\n          );\n        }\n      }\n    });\n\n    // Since we have thrown away all the cached functions that depend on the\n    // CacheGroup dependencies maintained by EntityStore, we should also reset\n    // all CacheGroup dependency information.\n    new Set([\n      this.data.group,\n      this.optimisticData.group,\n    ]).forEach(group => group.resetCaching());\n  }\n\n  public restore(data: NormalizedCacheObject): this {\n    this.init();\n    // Since calling this.init() discards/replaces the entire StoreReader, along\n    // with the result caches it maintains, this.data.replace(data) won't have\n    // to bother deleting the old data.\n    if (data) this.data.replace(data);\n    return this;\n  }\n\n  public extract(optimistic: boolean = false): NormalizedCacheObject {\n    return (optimistic ? this.optimisticData : this.data).extract();\n  }\n\n  public read<T>(options: Cache.ReadOptions): T | null {\n    const {\n      // Since read returns data or null, without any additional metadata\n      // about whether/where there might have been missing fields, the\n      // default behavior cannot be returnPartialData = true (like it is\n      // for the diff method), since defaulting to true would violate the\n      // integrity of the T in the return type. However, partial data may\n      // be useful in some cases, so returnPartialData:true may be\n      // specified explicitly.\n      returnPartialData = false,\n    } = options;\n    try {\n      return this.storeReader.diffQueryAgainstStore<T>({\n        ...options,\n        store: options.optimistic ? this.optimisticData : this.data,\n        config: this.config,\n        returnPartialData,\n      }).result || null;\n    } catch (e) {\n      if (e instanceof MissingFieldError) {\n        // Swallow MissingFieldError and return null, so callers do not need to\n        // worry about catching \"normal\" exceptions resulting from incomplete\n        // cache data. Unexpected errors will be re-thrown. If you need more\n        // information about which fields were missing, use cache.diff instead,\n        // and examine diffResult.missing.\n        return null;\n      }\n      throw e;\n    }\n  }\n\n  public write(options: Cache.WriteOptions): Reference | undefined {\n    try {\n      ++this.txCount;\n      return this.storeWriter.writeToStore(this.data, options);\n    } finally {\n      if (!--this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  }\n\n  public modify(options: Cache.ModifyOptions): boolean {\n    if (hasOwn.call(options, \"id\") && !options.id) {\n      // To my knowledge, TypeScript does not currently provide a way to\n      // enforce that an optional property?:type must *not* be undefined\n      // when present. That ability would be useful here, because we want\n      // options.id to default to ROOT_QUERY only when no options.id was\n      // provided. If the caller attempts to pass options.id with a\n      // falsy/undefined value (perhaps because cache.identify failed), we\n      // should not assume the goal was to modify the ROOT_QUERY object.\n      // We could throw, but it seems natural to return false to indicate\n      // that nothing was modified.\n      return false;\n    }\n    const store = options.optimistic // Defaults to false.\n      ? this.optimisticData\n      : this.data;\n    try {\n      ++this.txCount;\n      return store.modify(options.id || \"ROOT_QUERY\", options.fields);\n    } finally {\n      if (!--this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  }\n\n  public diff<TData, TVariables extends OperationVariables = any>(\n    options: Cache.DiffOptions<TData, TVariables>,\n  ): Cache.DiffResult<TData> {\n    return this.storeReader.diffQueryAgainstStore({\n      ...options,\n      store: options.optimistic ? this.optimisticData : this.data,\n      rootId: options.id || \"ROOT_QUERY\",\n      config: this.config,\n    });\n  }\n\n  public watch<TData = any, TVariables = any>(\n    watch: Cache.WatchOptions<TData, TVariables>,\n  ): () => void {\n    if (!this.watches.size) {\n      // In case we previously called forgetCache(this) because\n      // this.watches became empty (see below), reattach this cache to any\n      // reactive variables on which it previously depended. It might seem\n      // paradoxical that we're able to recall something we supposedly\n      // forgot, but the point of calling forgetCache(this) is to silence\n      // useless broadcasts while this.watches is empty, and to allow the\n      // cache to be garbage collected. If, however, we manage to call\n      // recallCache(this) here, this cache object must not have been\n      // garbage collected yet, and should resume receiving updates from\n      // reactive variables, now that it has a watcher to notify.\n      recallCache(this);\n    }\n    this.watches.add(watch);\n    if (watch.immediate) {\n      this.maybeBroadcastWatch(watch);\n    }\n    return () => {\n      // Once we remove the last watch from this.watches, cache.broadcastWatches\n      // no longer does anything, so we preemptively tell the reactive variable\n      // system to exclude this cache from future broadcasts.\n      if (this.watches.delete(watch) && !this.watches.size) {\n        forgetCache(this);\n      }\n      // Remove this watch from the LRU cache managed by the\n      // maybeBroadcastWatch OptimisticWrapperFunction, to prevent memory\n      // leaks involving the closure of watch.callback.\n      this.maybeBroadcastWatch.forget(watch);\n    };\n  }\n\n  public gc(options?: {\n    // If true, also free non-essential result cache memory by bulk-releasing\n    // this.{store{Reader,Writer},maybeBroadcastWatch}. Defaults to false.\n    resetResultCache?: boolean;\n    // If resetResultCache is true, this.storeReader.canon will be preserved by\n    // default, but can also be discarded by passing resetResultIdentities:true.\n    // Defaults to false.\n    resetResultIdentities?: boolean;\n  }) {\n    canonicalStringify.reset();\n    const ids = this.optimisticData.gc();\n    if (options && !this.txCount) {\n      if (options.resetResultCache) {\n        this.resetResultCache(options.resetResultIdentities);\n      } else if (options.resetResultIdentities) {\n        this.storeReader.resetCanon();\n      }\n    }\n    return ids;\n  }\n\n  // Call this method to ensure the given root ID remains in the cache after\n  // garbage collection, along with its transitive child entities. Note that\n  // the cache automatically retains all directly written entities. By default,\n  // the retainment persists after optimistic updates are removed. Pass true\n  // for the optimistic argument if you would prefer for the retainment to be\n  // discarded when the top-most optimistic layer is removed. Returns the\n  // resulting (non-negative) retainment count.\n  public retain(rootId: string, optimistic?: boolean): number {\n    return (optimistic ? this.optimisticData : this.data).retain(rootId);\n  }\n\n  // Call this method to undo the effect of the retain method, above. Once the\n  // retainment count falls to zero, the given ID will no longer be preserved\n  // during garbage collection, though it may still be preserved by other safe\n  // entities that refer to it. Returns the resulting (non-negative) retainment\n  // count, in case that's useful.\n  public release(rootId: string, optimistic?: boolean): number {\n    return (optimistic ? this.optimisticData : this.data).release(rootId);\n  }\n\n  // Returns the canonical ID for a given StoreObject, obeying typePolicies\n  // and keyFields (and dataIdFromObject, if you still use that). At minimum,\n  // the object must contain a __typename and any primary key fields required\n  // to identify entities of that type. If you pass a query result object, be\n  // sure that none of the primary key fields have been renamed by aliasing.\n  // If you pass a Reference object, its __ref ID string will be returned.\n  public identify(object: StoreObject | Reference): string | undefined {\n    if (isReference(object)) return object.__ref;\n    try {\n      return this.policies.identify(object)[0];\n    } catch (e) {\n      invariant.warn(e);\n    }\n  }\n\n  public evict(options: Cache.EvictOptions): boolean {\n    if (!options.id) {\n      if (hasOwn.call(options, \"id\")) {\n        // See comment in modify method about why we return false when\n        // options.id exists but is falsy/undefined.\n        return false;\n      }\n      options = { ...options, id: \"ROOT_QUERY\" };\n    }\n    try {\n      // It's unlikely that the eviction will end up invoking any other\n      // cache update operations while it's running, but {in,de}crementing\n      // this.txCount still seems like a good idea, for uniformity with\n      // the other update methods.\n      ++this.txCount;\n      // Pass this.data as a limit on the depth of the eviction, so evictions\n      // during optimistic updates (when this.data is temporarily set equal to\n      // this.optimisticData) do not escape their optimistic Layer.\n      return this.optimisticData.evict(options, this.data);\n    } finally {\n      if (!--this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  }\n\n  public reset(options?: Cache.ResetOptions): Promise<void> {\n    this.init();\n\n    canonicalStringify.reset();\n\n    if (options && options.discardWatches) {\n      // Similar to what happens in the unsubscribe function returned by\n      // cache.watch, applied to all current watches.\n      this.watches.forEach(watch => this.maybeBroadcastWatch.forget(watch));\n      this.watches.clear();\n      forgetCache(this);\n    } else {\n      // Calling this.init() above unblocks all maybeBroadcastWatch caching, so\n      // this.broadcastWatches() triggers a broadcast to every current watcher\n      // (letting them know their data is now missing). This default behavior is\n      // convenient because it means the watches do not have to be manually\n      // reestablished after resetting the cache. To prevent this broadcast and\n      // cancel all watches, pass true for options.discardWatches.\n      this.broadcastWatches();\n    }\n\n    return Promise.resolve();\n  }\n\n  public removeOptimistic(idToRemove: string) {\n    const newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n    if (newOptimisticData !== this.optimisticData) {\n      this.optimisticData = newOptimisticData;\n      this.broadcastWatches();\n    }\n  }\n\n  private txCount = 0;\n\n  public batch<TUpdateResult>(\n    options: Cache.BatchOptions<InMemoryCache, TUpdateResult>,\n  ): TUpdateResult {\n    const {\n      update,\n      optimistic = true,\n      removeOptimistic,\n      onWatchUpdated,\n    } = options;\n\n    let updateResult: TUpdateResult;\n    const perform = (layer?: EntityStore): TUpdateResult => {\n      const { data, optimisticData } = this;\n      ++this.txCount;\n      if (layer) {\n        this.data = this.optimisticData = layer;\n      }\n      try {\n        return updateResult = update(this);\n      } finally {\n        --this.txCount;\n        this.data = data;\n        this.optimisticData = optimisticData;\n      }\n    };\n\n    const alreadyDirty = new Set<Cache.WatchOptions>();\n\n    if (onWatchUpdated && !this.txCount) {\n      // If an options.onWatchUpdated callback is provided, we want to call it\n      // with only the Cache.WatchOptions objects affected by options.update,\n      // but there might be dirty watchers already waiting to be broadcast that\n      // have nothing to do with the update. To prevent including those watchers\n      // in the post-update broadcast, we perform this initial broadcast to\n      // collect the dirty watchers, so we can re-dirty them later, after the\n      // post-update broadcast, allowing them to receive their pending\n      // broadcasts the next time broadcastWatches is called, just as they would\n      // if we never called cache.batch.\n      this.broadcastWatches({\n        ...options,\n        onWatchUpdated(watch) {\n          alreadyDirty.add(watch);\n          return false;\n        },\n      });\n    }\n\n    if (typeof optimistic === 'string') {\n      // Note that there can be multiple layers with the same optimistic ID.\n      // When removeOptimistic(id) is called for that id, all matching layers\n      // will be removed, and the remaining layers will be reapplied.\n      this.optimisticData = this.optimisticData.addLayer(optimistic, perform);\n    } else if (optimistic === false) {\n      // Ensure both this.data and this.optimisticData refer to the root\n      // (non-optimistic) layer of the cache during the update. Note that\n      // this.data could be a Layer if we are currently executing an optimistic\n      // update function, but otherwise will always be an EntityStore.Root\n      // instance.\n      perform(this.data);\n    } else {\n      // Otherwise, leave this.data and this.optimisticData unchanged and run\n      // the update with broadcast batching.\n      perform();\n    }\n\n    if (typeof removeOptimistic === \"string\") {\n      this.optimisticData = this.optimisticData.removeLayer(removeOptimistic);\n    }\n\n    // Note: if this.txCount > 0, then alreadyDirty.size === 0, so this code\n    // takes the else branch and calls this.broadcastWatches(options), which\n    // does nothing when this.txCount > 0.\n    if (onWatchUpdated && alreadyDirty.size) {\n      this.broadcastWatches({\n        ...options,\n        onWatchUpdated(watch, diff) {\n          const result = onWatchUpdated.call(this, watch, diff);\n          if (result !== false) {\n            // Since onWatchUpdated did not return false, this diff is\n            // about to be broadcast to watch.callback, so we don't need\n            // to re-dirty it with the other alreadyDirty watches below.\n            alreadyDirty.delete(watch);\n          }\n          return result;\n        }\n      });\n      // Silently re-dirty any watches that were already dirty before the update\n      // was performed, and were not broadcast just now.\n      if (alreadyDirty.size) {\n        alreadyDirty.forEach(watch => this.maybeBroadcastWatch.dirty(watch));\n      }\n    } else {\n      // If alreadyDirty is empty or we don't have an onWatchUpdated\n      // function, we don't need to go to the trouble of wrapping\n      // options.onWatchUpdated.\n      this.broadcastWatches(options);\n    }\n\n    return updateResult!;\n  }\n\n  public performTransaction(\n    update: (cache: InMemoryCache) => any,\n    optimisticId?: string | null,\n  ) {\n    return this.batch({\n      update,\n      optimistic: optimisticId || (optimisticId !== null),\n    });\n  }\n\n  public transformDocument(document: DocumentNode): DocumentNode {\n    if (this.addTypename) {\n      let result = this.typenameDocumentCache.get(document);\n      if (!result) {\n        result = addTypenameToDocument(document);\n        this.typenameDocumentCache.set(document, result);\n        // If someone calls transformDocument and then mistakenly passes the\n        // result back into an API that also calls transformDocument, make sure\n        // we don't keep creating new query documents.\n        this.typenameDocumentCache.set(result, result);\n      }\n      return result;\n    }\n    return document;\n  }\n\n  public transformForLink(document: DocumentNode): DocumentNode {\n    const { fragments } = this.config;\n    return fragments\n      ? fragments.transform(document)\n      : document;\n  }\n\n  protected broadcastWatches(options?: BroadcastOptions) {\n    if (!this.txCount) {\n      this.watches.forEach(c => this.maybeBroadcastWatch(c, options));\n    }\n  }\n\n  // This method is wrapped by maybeBroadcastWatch, which is called by\n  // broadcastWatches, so that we compute and broadcast results only when\n  // the data that would be broadcast might have changed. It would be\n  // simpler to check for changes after recomputing a result but before\n  // broadcasting it, but this wrapping approach allows us to skip both\n  // the recomputation and the broadcast, in most cases.\n  private broadcastWatch(\n    c: Cache.WatchOptions,\n    options?: BroadcastOptions,\n  ) {\n    const { lastDiff } = c;\n\n    // Both WatchOptions and DiffOptions extend ReadOptions, and DiffOptions\n    // currently requires no additional properties, so we can use c (a\n    // WatchOptions object) as DiffOptions, without having to allocate a new\n    // object, and without having to enumerate the relevant properties (query,\n    // variables, etc.) explicitly. There will be some additional properties\n    // (lastDiff, callback, etc.), but cache.diff ignores them.\n    const diff = this.diff<any>(c);\n\n    if (options) {\n      if (c.optimistic &&\n          typeof options.optimistic === \"string\") {\n        diff.fromOptimisticTransaction = true;\n      }\n\n      if (options.onWatchUpdated &&\n          options.onWatchUpdated.call(this, c, diff, lastDiff) === false) {\n        // Returning false from the onWatchUpdated callback will prevent\n        // calling c.callback(diff) for this watcher.\n        return;\n      }\n    }\n\n    if (!lastDiff || !equal(lastDiff.result, diff.result)) {\n      c.callback(c.lastDiff = diff, lastDiff);\n    }\n  }\n}\n","import {\n  DocumentNode,\n  ASTNode,\n  FragmentDefinitionNode,\n  FragmentSpreadNode,\n  visit,\n} from \"graphql\";\n\nimport { wrap } from \"optimism\";\n\nimport { FragmentMap, getFragmentDefinitions } from \"../../utilities\";\n\nexport interface FragmentRegistryAPI {\n  register(...fragments: DocumentNode[]): this;\n  lookup(fragmentName: string): FragmentDefinitionNode | null;\n  transform<D extends DocumentNode>(document: D): D;\n}\n\n// As long as createFragmentRegistry is not imported or used, the\n// FragmentRegistry example implementation provided below should not be bundled\n// (by tree-shaking bundlers like Rollup), because the implementation of\n// InMemoryCache refers only to the TypeScript interface FragmentRegistryAPI,\n// never the concrete implementation FragmentRegistry (which is deliberately not\n// exported from this module).\nexport function createFragmentRegistry(\n  ...fragments: DocumentNode[]\n): FragmentRegistryAPI {\n  return new FragmentRegistry(...fragments);\n}\n\nconst { forEach: arrayLikeForEach } = Array.prototype;\n\nclass FragmentRegistry implements FragmentRegistryAPI {\n  private registry: FragmentMap = Object.create(null);\n\n  // Call static method FragmentRegistry.from(...) instead of invoking the\n  // FragmentRegistry constructor directly. This reserves the constructor for\n  // future configuration of the FragmentRegistry.\n  constructor(...fragments: DocumentNode[]) {\n    this.resetCaches();\n    if (fragments.length) {\n      this.register.apply(this, fragments);\n    }\n  }\n\n  public register(): this {\n    const definitions = new Map<string, FragmentDefinitionNode>();\n    arrayLikeForEach.call(arguments, (doc: DocumentNode) => {\n      getFragmentDefinitions(doc).forEach(node => {\n        definitions.set(node.name.value, node);\n      });\n    });\n\n    definitions.forEach((node, name) => {\n      if (node !== this.registry[name]) {\n        this.registry[name] = node;\n        this.invalidate(name);\n      }\n    });\n\n    return this;\n  }\n\n  // Overridden in the resetCaches method below.\n  private invalidate(name: string) {}\n\n  public resetCaches() {\n    this.invalidate = (\n      this.lookup = this.cacheUnaryMethod(\"lookup\")\n    ).dirty; // This dirty function is bound to the wrapped lookup method.\n    this.transform = this.cacheUnaryMethod(\"transform\");\n    this.findFragmentSpreads = this.cacheUnaryMethod(\"findFragmentSpreads\");\n  }\n\n  private cacheUnaryMethod<TName extends keyof Pick<FragmentRegistry,\n    | \"lookup\"\n    | \"transform\"\n    | \"findFragmentSpreads\"\n  >>(name: TName) {\n    const registry = this;\n    const originalMethod = FragmentRegistry.prototype[name];\n    return wrap(function () {\n      return originalMethod.apply(registry, arguments);\n    }, {\n      makeCacheKey: arg => arg,\n    });\n  }\n\n  public lookup(fragmentName: string): FragmentDefinitionNode | null {\n    return this.registry[fragmentName] || null;\n  }\n\n  public transform<D extends DocumentNode>(document: D): D {\n    const defined = new Map<string, FragmentDefinitionNode>();\n    getFragmentDefinitions(document).forEach(def => {\n      defined.set(def.name.value, def);\n    });\n\n    const unbound = new Set<string>();\n    const enqueue = (spreadName: string) => {\n      if (!defined.has(spreadName)) {\n        unbound.add(spreadName);\n      }\n    };\n\n    const enqueueChildSpreads = (node: ASTNode) => Object.keys(\n      this.findFragmentSpreads(node)\n    ).forEach(enqueue);\n\n    enqueueChildSpreads(document);\n\n    const missing: string[] = [];\n    const map: FragmentMap = Object.create(null);\n\n    // This Set forEach loop can be extended during iteration by adding\n    // additional strings to the unbound set.\n    unbound.forEach(fragmentName => {\n      const knownFragmentDef = defined.get(fragmentName);\n      if (knownFragmentDef) {\n        enqueueChildSpreads(map[fragmentName] = knownFragmentDef);\n      } else {\n        missing.push(fragmentName);\n        const def = this.lookup(fragmentName);\n        if (def) {\n          enqueueChildSpreads(map[fragmentName] = def);\n        }\n      }\n    });\n\n    if (missing.length) {\n      const defsToAppend: FragmentDefinitionNode[] = [];\n      missing.forEach(name => {\n        const def = map[name];\n        if (def) {\n          defsToAppend.push(def);\n        }\n      });\n\n      if (defsToAppend.length) {\n        document = {\n          ...document,\n          definitions: document.definitions.concat(defsToAppend),\n        };\n      }\n    }\n\n    return document;\n  }\n\n  public findFragmentSpreads(root: ASTNode): FragmentSpreadMap {\n    const spreads: FragmentSpreadMap = Object.create(null);\n\n    visit(root, {\n      FragmentSpread(node) {\n        spreads[node.name.value] = node;\n      },\n    });\n\n    return spreads;\n  }\n}\n\ninterface FragmentSpreadMap {\n  [fragmentSpreadName: string]: FragmentSpreadNode;\n}\n","import { DocumentNode, FieldNode } from 'graphql';\n\nimport { Transaction } from '../core/cache';\nimport {\n  StoreObject,\n  StoreValue,\n  Reference,\n} from '../../utilities';\nimport { FieldValueGetter } from './entityStore';\nimport {\n  TypePolicies,\n  PossibleTypesMap,\n  KeyFieldsFunction,\n  StorageType,\n  FieldMergeFunction,\n} from './policies';\nimport {\n  Modifier,\n  Modifiers,\n  ToReferenceFunction,\n  CanReadFunction,\n} from '../core/types/common';\n\nimport { FragmentRegistryAPI } from './fragmentRegistry';\n\nexport { StoreObject, StoreValue, Reference }\n\nexport interface IdGetterObj extends Object {\n  __typename?: string;\n  id?: string;\n  _id?: string;\n}\n\nexport declare type IdGetter = (\n  value: IdGetterObj,\n) => string | undefined;\n\n/**\n * This is an interface used to access, set and remove\n * StoreObjects from the cache\n */\nexport interface NormalizedCache {\n  has(dataId: string): boolean;\n  get(dataId: string, fieldName: string): StoreValue;\n\n  // The store.merge method allows either argument to be a string ID, but\n  // the other argument has to be a StoreObject. Either way, newer fields\n  // always take precedence over older fields.\n  merge(olderId: string, newerObject: StoreObject): void;\n  merge(olderObject: StoreObject, newerId: string): void;\n\n  modify(dataId: string, fields: Modifiers | Modifier<any>): boolean;\n  delete(dataId: string, fieldName?: string): boolean;\n  clear(): void;\n\n  // non-Map elements:\n  /**\n   * returns an Object with key-value pairs matching the contents of the store\n   */\n  toObject(): NormalizedCacheObject;\n  /**\n   * replace the state of the store\n   */\n  replace(newData: NormalizedCacheObject): void;\n\n  /**\n   * Retain (or release) a given root ID to protect (or expose) it and its\n   * transitive child entities from (or to) garbage collection. The current\n   * retainment count is returned by both methods. Note that releasing a root\n   * ID does not cause that entity to be garbage collected, but merely removes\n   * it from the set of root IDs that will be considered during the next\n   * mark-and-sweep collection.\n   */\n  retain(rootId: string): number;\n  release(rootId: string): number;\n\n  getFieldValue: FieldValueGetter;\n  toReference: ToReferenceFunction;\n  canRead: CanReadFunction;\n\n  getStorage(\n    idOrObj: string | StoreObject,\n    ...storeFieldNames: (string | number)[]\n  ): StorageType;\n}\n\n/**\n * This is a normalized representation of the Apollo query result cache. It consists of\n * a flattened representation of query result trees.\n */\nexport interface NormalizedCacheObject {\n  __META?: {\n    // Well-known singleton IDs like ROOT_QUERY and ROOT_MUTATION are\n    // always considered to be root IDs during cache.gc garbage\n    // collection, but other IDs can become roots if they are written\n    // directly with cache.writeFragment or retained explicitly with\n    // cache.retain. When such IDs exist, we include them in the __META\n    // section so that they can survive cache.{extract,restore}.\n    extraRootIds: string[];\n  };\n  [dataId: string]: StoreObject | undefined;\n}\n\nexport type OptimisticStoreItem = {\n  id: string;\n  data: NormalizedCacheObject;\n  transaction: Transaction<NormalizedCacheObject>;\n};\n\nexport type ReadQueryOptions = {\n  store: NormalizedCache;\n  query: DocumentNode;\n  variables?: Object;\n  previousResult?: any;\n  canonizeResults?: boolean;\n  rootId?: string;\n  config?: ApolloReducerConfig;\n};\n\nexport type DiffQueryAgainstStoreOptions = ReadQueryOptions & {\n  returnPartialData?: boolean;\n};\n\nexport type ApolloReducerConfig = {\n  dataIdFromObject?: KeyFieldsFunction;\n  addTypename?: boolean;\n};\n\nexport interface InMemoryCacheConfig extends ApolloReducerConfig {\n  resultCaching?: boolean;\n  possibleTypes?: PossibleTypesMap;\n  typePolicies?: TypePolicies;\n  resultCacheMaxSize?: number;\n  canonizeResults?: boolean;\n  fragments?: FragmentRegistryAPI;\n}\n\nexport interface MergeInfo {\n  field: FieldNode;\n  typename: string | undefined;\n  merge: FieldMergeFunction;\n};\n\nexport interface MergeTree {\n  info?: MergeInfo;\n  map: Map<string | number, MergeTree>;\n};\n\nexport interface ReadMergeModifyContext {\n  store: NormalizedCache;\n  variables?: Record<string, any>;\n  // A JSON.stringify-serialized version of context.variables.\n  varString?: string;\n}\n","import '../utilities/globals';\n\nexport { Transaction, ApolloCache } from './core/cache';\nexport { Cache } from './core/types/Cache';\nexport { DataProxy } from './core/types/DataProxy';\nexport {\n  MissingTree,\n  Modifier,\n  Modifiers,\n  ModifierDetails,\n  MissingFieldError,\n  ReadFieldOptions\n} from './core/types/common';\n\nexport {\n  Reference,\n  isReference,\n  makeReference,\n} from '../utilities';\n\nexport { EntityStore } from './inmemory/entityStore';\nexport {\n  fieldNameFromStoreName,\n  defaultDataIdFromObject,\n} from './inmemory/helpers'\n\nexport {\n  InMemoryCache,\n} from './inmemory/inMemoryCache';\n\nexport {\n  ReactiveVar,\n  makeVar,\n  cacheSlot,\n} from './inmemory/reactiveVars';\n\nexport {\n  TypePolicies,\n  TypePolicy,\n  FieldPolicy,\n  FieldReadFunction,\n  FieldMergeFunction,\n  FieldFunctionOptions,\n  PossibleTypesMap,\n  Policies,\n} from './inmemory/policies';\n\nexport {\n  canonicalStringify,\n} from './inmemory/object-canon';\n\nexport {\n  FragmentRegistryAPI,\n  createFragmentRegistry,\n} from './inmemory/fragmentRegistry';\n\nexport * from './inmemory/types';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.noop = exports.noopHeaders = exports.GraphqlDocuments = exports.ApolloClient = void 0;\nconst core_1 = require(\"@rxdi/core\");\nexports.ApolloClient = new core_1.InjectionToken('apollo-link');\nexports.GraphqlDocuments = 'graphql-documents';\nconst noopHeaders = () => new Headers();\nexports.noopHeaders = noopHeaders;\nconst noop = () => null;\nexports.noop = noop;\n","import { Observable } from '../../utilities';\n\nexport function fromError<T>(errorValue: any): Observable<T> {\n  return new Observable<T>(observer => {\n    observer.error(errorValue);\n  });\n}\n","import { invariant } from '../../utilities/globals';\nimport { Observable } from '../../utilities';\n\nexport function toPromise<R>(observable: Observable<R>): Promise<R> {\n  let completed = false;\n  return new Promise<R>((resolve, reject) => {\n    observable.subscribe({\n      next: data => {\n        if (completed) {\n          invariant.warn(\n            `Promise Wrapper does not support multiple results from Observable`,\n          );\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject,\n    });\n  });\n}\n","import { Observable } from '../../utilities';\n\nexport function fromPromise<T>(promise: Promise<T>): Observable<T> {\n  return new Observable<T>(observer => {\n    promise\n      .then((value: T) => {\n        observer.next(value);\n        observer.complete();\n      })\n      .catch(observer.error.bind(observer));\n  });\n}\n","export type ServerError = Error & {\n  response: Response;\n  result: Record<string, any>;\n  statusCode: number;\n};\n\nexport const throwServerError = (\n  response: Response,\n  result: any,\n  message: string\n) => {\n  const error = new Error(message) as ServerError;\n  error.name = 'ServerError';\n  error.response = response;\n  error.statusCode = response.status;\n  error.result = result;\n  throw error;\n};\n","import { InvariantError } from '../../utilities/globals'\nimport { GraphQLRequest } from '../core';\n\nexport function validateOperation(operation: GraphQLRequest): GraphQLRequest {\n  const OPERATION_FIELDS = [\n    'query',\n    'operationName',\n    'variables',\n    'extensions',\n    'context',\n  ];\n  for (let key of Object.keys(operation)) {\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw new InvariantError(`illegal argument: ${key}`);\n    }\n  }\n\n  return operation;\n}\n","import { GraphQLRequest, Operation } from '../core';\n\nexport function createOperation(\n  starting: any,\n  operation: GraphQLRequest,\n): Operation {\n  let context = { ...starting };\n  const setContext = (next: any) => {\n    if (typeof next === 'function') {\n      context = { ...context, ...next(context) };\n    } else {\n      context = { ...context, ...next };\n    }\n  };\n  const getContext = () => ({ ...context });\n\n  Object.defineProperty(operation, 'setContext', {\n    enumerable: false,\n    value: setContext,\n  });\n\n  Object.defineProperty(operation, 'getContext', {\n    enumerable: false,\n    value: getContext,\n  });\n\n  return operation as Operation;\n}\n","import { GraphQLRequest, Operation } from '../core';\nimport { getOperationName } from '../../utilities';\n\nexport function transformOperation(operation: GraphQLRequest): GraphQLRequest {\n  const transformedOperation: GraphQLRequest = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query,\n  };\n\n  // Best guess at an operation name\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName =\n      typeof transformedOperation.query !== 'string'\n        ? getOperationName(transformedOperation.query) || undefined\n        : '';\n  }\n\n  return transformedOperation as Operation;\n}\n","import '../../utilities/globals';\n\nexport { fromError } from './fromError';\nexport { toPromise } from './toPromise';\nexport { fromPromise } from './fromPromise';\nexport { ServerError, throwServerError } from './throwServerError';\nexport { validateOperation } from './validateOperation';\nexport { createOperation } from './createOperation';\nexport { transformOperation } from './transformOperation';\n","import { InvariantError, invariant } from '../../utilities/globals';\n\nimport { Observable, Observer } from '../../utilities';\nimport {\n  NextLink,\n  Operation,\n  RequestHandler,\n  FetchResult,\n  GraphQLRequest\n} from './types';\nimport {\n  validateOperation,\n  createOperation,\n  transformOperation,\n} from '../utils';\n\nfunction passthrough(op: Operation, forward: NextLink) {\n  return (forward ? forward(op) : Observable.of()) as Observable<FetchResult>;\n}\n\nfunction toLink(handler: RequestHandler | ApolloLink) {\n  return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\n\nfunction isTerminating(link: ApolloLink): boolean {\n  return link.request.length <= 1;\n}\n\nclass LinkError extends Error {\n  public link?: ApolloLink;\n  constructor(message?: string, link?: ApolloLink) {\n    super(message);\n    this.link = link;\n  }\n}\n\nexport class ApolloLink {\n  public static empty(): ApolloLink {\n    return new ApolloLink(() => Observable.of());\n  }\n\n  public static from(links: (ApolloLink | RequestHandler)[]): ApolloLink {\n    if (links.length === 0) return ApolloLink.empty();\n    return links.map(toLink).reduce((x, y) => x.concat(y)) as ApolloLink;\n  }\n\n  public static split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler,\n  ): ApolloLink {\n    const leftLink = toLink(left);\n    const rightLink = toLink(right || new ApolloLink(passthrough));\n\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n      return new ApolloLink(operation => {\n        return test(operation)\n          ? leftLink.request(operation) || Observable.of()\n          : rightLink.request(operation) || Observable.of();\n      });\n    } else {\n      return new ApolloLink((operation, forward) => {\n        return test(operation)\n          ? leftLink.request(operation, forward) || Observable.of()\n          : rightLink.request(operation, forward) || Observable.of();\n      });\n    }\n  }\n\n  public static execute(\n    link: ApolloLink,\n    operation: GraphQLRequest,\n  ): Observable<FetchResult> {\n    return (\n      link.request(\n        createOperation(\n          operation.context,\n          transformOperation(validateOperation(operation)),\n        ),\n      ) || Observable.of()\n    );\n  }\n\n  public static concat(\n    first: ApolloLink | RequestHandler,\n    second: ApolloLink | RequestHandler,\n  ) {\n    const firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n      invariant.warn(\n        new LinkError(\n          `You are calling concat on a terminating link, which will have no effect`,\n          firstLink,\n        ),\n      );\n      return firstLink;\n    }\n    const nextLink = toLink(second);\n\n    if (isTerminating(nextLink)) {\n      return new ApolloLink(\n        operation =>\n          firstLink.request(\n            operation,\n            op => nextLink.request(op) || Observable.of(),\n          ) || Observable.of(),\n      );\n    } else {\n      return new ApolloLink((operation, forward) => {\n        return (\n          firstLink.request(operation, op => {\n            return nextLink.request(op, forward) || Observable.of();\n          }) || Observable.of()\n        );\n      });\n    }\n  }\n\n  constructor(request?: RequestHandler) {\n    if (request) this.request = request;\n  }\n\n  public split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler,\n  ): ApolloLink {\n    return this.concat(\n      ApolloLink.split(test, left, right || new ApolloLink(passthrough))\n    );\n  }\n\n  public concat(next: ApolloLink | RequestHandler): ApolloLink {\n    return ApolloLink.concat(this, next);\n  }\n\n  public request(\n    operation: Operation,\n    forward?: NextLink,\n  ): Observable<FetchResult> | null {\n    throw new InvariantError('request is not implemented');\n  }\n\n  protected onError(\n    error: any,\n    observer?: Observer<FetchResult>,\n  ): false | void {\n    if (observer && observer.error) {\n      observer.error(error);\n      // Returning false indicates that observer.error does not need to be\n      // called again, since it was already called (on the previous line).\n      // Calling observer.error again would not cause any real problems,\n      // since only the first call matters, but custom onError functions\n      // might have other reasons for wanting to prevent the default\n      // behavior by returning false.\n      return false;\n    }\n    // Throw errors will be passed to observer.error.\n    throw error;\n  }\n\n  public setOnError(fn: ApolloLink[\"onError\"]): this {\n    this.onError = fn;\n    return this;\n  }\n}\n","import { ApolloLink } from './ApolloLink';\n\nexport const empty = ApolloLink.empty;\n","import { ApolloLink } from './ApolloLink';\n\nexport const from = ApolloLink.from;\n","import { ApolloLink } from './ApolloLink';\n\nexport const split = ApolloLink.split;\n","import { ApolloLink } from './ApolloLink';\n\nexport const concat = ApolloLink.concat;\n","import { ApolloLink } from './ApolloLink';\n\nexport const execute = ApolloLink.execute;\n","import '../../utilities/globals';\n\nexport { empty } from './empty';\nexport { from } from './from';\nexport { split } from './split';\nexport { concat } from './concat';\nexport { execute } from './execute';\nexport { ApolloLink } from './ApolloLink';\n\nexport * from './types';\n","export const version = 'local';\n","import { Response as NodeResponse } from \"node-fetch\";\nimport { Readable as NodeReadableStream } from \"stream\";\nimport { canUseAsyncIteratorSymbol } from \"./canUse\";\n\nexport function isNodeResponse(value: any): value is NodeResponse {\n  return !!(value as NodeResponse).body;\n}\n\nexport function isReadableStream(value: any): value is ReadableStream<any> {\n  return !!(value as ReadableStream<any>).getReader;\n}\n\nexport function isAsyncIterableIterator(\n  value: any\n): value is AsyncIterableIterator<any> {\n  return !!(\n    canUseAsyncIteratorSymbol &&\n    (value as AsyncIterableIterator<any>)[Symbol.asyncIterator]\n  );\n}\n\nexport function isStreamableBlob(value: any): value is Blob {\n  return !!(value as Blob).stream;\n}\n\nexport function isBlob(value: any): value is Blob {\n  return !!(value as Blob).arrayBuffer;\n}\n\nexport function isNodeReadableStream(value: any): value is NodeReadableStream {\n  return !!(value as NodeReadableStream).pipe;\n}\n","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/async.ts\n */\n\nexport default function asyncIterator<T>(\n  source: AsyncIterableIterator<T>\n): AsyncIterableIterator<T> {\n  const iterator = source[Symbol.asyncIterator]();\n  return {\n    next(): Promise<IteratorResult<T, boolean>> {\n      return iterator.next();\n    },\n    [Symbol.asyncIterator](): AsyncIterableIterator<T> {\n      return this;\n    },\n  };\n}\n","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/nodeStream.ts\n */\n\nimport { Readable as NodeReadableStream } from \"stream\";\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities\";\n\ninterface NodeStreamIterator<T> {\n  next(): Promise<IteratorResult<T, boolean | undefined>>;\n  [Symbol.asyncIterator]?(): AsyncIterator<T>;\n}\n\nexport default function nodeStreamIterator<T>(\n  stream: NodeReadableStream\n): AsyncIterableIterator<T> {\n  let cleanup: (() => void) | null = null;\n  let error: Error | null = null;\n  let done = false;\n  const data: unknown[] = [];\n\n  const waiting: [\n    (\n      value:\n        | IteratorResult<T, boolean | undefined>\n        | PromiseLike<IteratorResult<T, boolean | undefined>>\n    ) => void,\n    (reason?: any) => void\n  ][] = [];\n\n  function onData(chunk: any) {\n    if (error) return;\n    if (waiting.length) {\n      const shiftedArr = waiting.shift();\n      if (Array.isArray(shiftedArr) && shiftedArr[0]) {\n        return shiftedArr[0]({ value: chunk, done: false });\n      }\n    }\n    data.push(chunk);\n  }\n  function onError(err: Error) {\n    error = err;\n    const all = waiting.slice();\n    all.forEach(function (pair) {\n      pair[1](err);\n    });\n    !cleanup || cleanup();\n  }\n  function onEnd() {\n    done = true;\n    const all = waiting.slice();\n    all.forEach(function (pair) {\n      pair[0]({ value: undefined, done: true });\n    });\n    !cleanup || cleanup();\n  }\n\n  cleanup = function () {\n    cleanup = null;\n    stream.removeListener(\"data\", onData);\n    stream.removeListener(\"error\", onError);\n    stream.removeListener(\"end\", onEnd);\n    stream.removeListener(\"finish\", onEnd);\n    stream.removeListener(\"close\", onEnd);\n  };\n  stream.on(\"data\", onData);\n  stream.on(\"error\", onError);\n  stream.on(\"end\", onEnd);\n  stream.on(\"finish\", onEnd);\n  stream.on(\"close\", onEnd);\n\n  function getNext(): Promise<IteratorResult<T, boolean | undefined>> {\n    return new Promise(function (resolve, reject) {\n      if (error) return reject(error);\n      if (data.length) return resolve({ value: data.shift() as T, done: false });\n      if (done) return resolve({ value: undefined, done: true });\n      waiting.push([resolve, reject]);\n    });\n  }\n\n  const iterator: NodeStreamIterator<T> = {\n    next(): Promise<IteratorResult<T, boolean | undefined>> {\n      return getNext();\n    },\n  };\n\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<T> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<T>;\n}\n","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/promise.ts\n */\n\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities\";\n\ninterface PromiseIterator<T> {\n  next(): Promise<IteratorResult<T, ArrayBuffer | undefined>>;\n  [Symbol.asyncIterator]?(): AsyncIterator<T>;\n}\n\nexport default function promiseIterator<T = ArrayBuffer>(\n  promise: Promise<ArrayBuffer>\n): AsyncIterableIterator<T> {\n  let resolved = false;\n\n  const iterator: PromiseIterator<T> = {\n    next(): Promise<IteratorResult<T, ArrayBuffer | undefined>> {\n      if (resolved)\n        return Promise.resolve({\n          value: undefined,\n          done: true,\n        });\n      resolved = true;\n      return new Promise(function (resolve, reject) {\n        promise\n          .then(function (value) {\n            resolve({ value: value as unknown as T, done: false });\n          })\n          .catch(reject);\n      });\n    },\n  };\n\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<T> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<T>;\n}\n","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/reader.ts\n */\n\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities\";\n\ninterface ReaderIterator<T> {\n  next(): Promise<ReadableStreamReadResult<T>>;\n  [Symbol.asyncIterator]?(): AsyncIterator<T>;\n}\n\nexport default function readerIterator<T>(\n  reader: ReadableStreamDefaultReader<T>\n): AsyncIterableIterator<T> {\n  const iterator: ReaderIterator<T> = {\n    next() {\n      return reader.read();\n    },\n  };\n\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<T> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<T>;\n}\n","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/index.ts\n */\n\nimport { Response as NodeResponse } from \"node-fetch\";\nimport {\n  isAsyncIterableIterator,\n  isBlob,\n  isNodeResponse,\n  isNodeReadableStream,\n  isReadableStream,\n  isStreamableBlob,\n} from \"../../utilities/common/responseIterator\";\n\nimport asyncIterator from \"./iterators/async\";\nimport nodeStreamIterator from \"./iterators/nodeStream\";\nimport promiseIterator from \"./iterators/promise\";\nimport readerIterator from \"./iterators/reader\";\n\nexport function responseIterator<T>(\n  response: Response | NodeResponse\n): AsyncIterableIterator<T> {\n  let body: unknown = response;\n\n  if (isNodeResponse(response)) body = response.body;\n\n  if (isAsyncIterableIterator(body)) return asyncIterator<T>(body);\n\n  if (isReadableStream(body)) return readerIterator<T>(body.getReader());\n\n  // this errors without casting to ReadableStream<T>\n  // because Blob.stream() returns a NodeJS ReadableStream\n  if (isStreamableBlob(body)) {\n    return readerIterator<T>(\n      (body.stream() as unknown as ReadableStream<T>).getReader()\n    );\n  }\n\n  if (isBlob(body)) return promiseIterator<T>(body.arrayBuffer());\n\n  if (isNodeReadableStream(body)) return nodeStreamIterator<T>(body);\n\n  throw new Error(\n    \"Unknown body type for responseIterator. Please pass a streamable response.\"\n  );\n}\n","import { responseIterator } from \"./responseIterator\";\nimport { Operation } from \"../core\";\nimport { throwServerError } from \"../utils\";\nimport { Observer } from \"../../utilities\";\n\nconst { hasOwnProperty } = Object.prototype;\n\nexport type ServerParseError = Error & {\n  response: Response;\n  statusCode: number;\n  bodyText: string;\n};\n\nexport async function readMultipartBody<\n  T extends object = Record<string, unknown>\n>(response: Response, observer: Observer<T>) {\n  if (TextDecoder === undefined) {\n    throw new Error(\n      \"TextDecoder must be defined in the environment: please import a polyfill.\"\n    );\n  }\n  const decoder = new TextDecoder(\"utf-8\");\n  const contentType = response.headers?.get('content-type');\n  const delimiter = \"boundary=\";\n\n  // parse boundary value and ignore any subsequent name/value pairs after ;\n  // https://www.rfc-editor.org/rfc/rfc9110.html#name-parameters\n  // e.g. multipart/mixed;boundary=\"graphql\";deferSpec=20220824\n  // if no boundary is specified, default to -\n  const boundaryVal = contentType?.includes(delimiter)\n    ? contentType\n        ?.substring(contentType?.indexOf(delimiter) + delimiter.length)\n        .replace(/['\"]/g, \"\")\n        .replace(/\\;(.*)/gm, \"\")\n        .trim()\n    : \"-\";\n\n  let boundary = `--${boundaryVal}`;\n  let buffer = \"\";\n  const iterator = responseIterator(response);\n  let running = true;\n\n  while (running) {\n    const { value, done } = await iterator.next();\n    const chunk = typeof value === \"string\" ? value : decoder.decode(value);\n    running = !done;\n    buffer += chunk;\n    let bi = buffer.indexOf(boundary);\n\n    while (bi > -1) {\n      let message: string;\n      [message, buffer] = [\n        buffer.slice(0, bi),\n        buffer.slice(bi + boundary.length),\n      ];\n      if (message.trim()) {\n        const i = message.indexOf(\"\\r\\n\\r\\n\");\n        const headers = parseHeaders(message.slice(0, i));\n        const contentType = headers[\"content-type\"];\n        if (\n          contentType &&\n          contentType.toLowerCase().indexOf(\"application/json\") === -1\n        ) {\n          throw new Error(\"Unsupported patch content type: application/json is required.\");\n        }\n        const body = message.slice(i);\n\n        try {\n          const result = parseJsonBody<T>(response, body.replace(\"\\r\\n\", \"\"));\n          if (\n            Object.keys(result).length > 1 ||\n            \"data\" in result ||\n            \"incremental\" in result ||\n            \"errors\" in result\n          ) {\n            // for the last chunk with only `hasNext: false`,\n            // we don't need to call observer.next as there is no data/errors\n            observer.next?.(result);\n          }\n        } catch (err) {\n          handleError(err, observer);\n        }\n      }\n      bi = buffer.indexOf(boundary);\n    }\n  }\n  observer.complete?.();\n}\n\nexport function parseHeaders(headerText: string): Record<string, string> {\n  const headersInit: Record<string, string> = {};\n  headerText.split(\"\\n\").forEach((line) => {\n    const i = line.indexOf(\":\");\n    if (i > -1) {\n      // normalize headers to lowercase\n      const name = line.slice(0, i).trim().toLowerCase();\n      const value = line.slice(i + 1).trim();\n      headersInit[name] = value;\n    }\n  });\n  return headersInit;\n}\n\nexport function parseJsonBody<T>(response: Response, bodyText: string): T {\n  if (response.status >= 300) {\n    // Network error\n    const getResult = () => {\n      try {\n        return JSON.parse(bodyText);\n      } catch (err) {\n        return bodyText\n      }\n    }\n    throwServerError(\n      response,\n      getResult(),\n      `Response not successful: Received status code ${response.status}`,\n    );\n  }\n\n  try {\n    return JSON.parse(bodyText) as T;\n  } catch (err) {\n    const parseError = err as ServerParseError;\n    parseError.name = \"ServerParseError\";\n    parseError.response = response;\n    parseError.statusCode = response.status;\n    parseError.bodyText = bodyText;\n    throw parseError;\n  }\n}\n\nexport function handleError(err: any, observer: Observer<any>) {\n  if (err.name === \"AbortError\") return;\n  // if it is a network error, BUT there is graphql result info fire\n  // the next observer before calling error this gives apollo-client\n  // (and react-apollo) the `graphqlErrors` and `networkErrors` to\n  // pass to UI this should only happen if we *also* have data as\n  // part of the response key per the spec\n  if (err.result && err.result.errors && err.result.data) {\n    // if we don't call next, the UI can only show networkError\n    // because AC didn't get any graphqlErrors this is graphql\n    // execution result info (i.e errors and possibly data) this is\n    // because there is no formal spec how errors should translate to\n    // http status codes. So an auth error (401) could have both data\n    // from a public field, errors from a private field, and a status\n    // of 401\n    // {\n    //  user { // this will have errors\n    //    firstName\n    //  }\n    //  products { // this is public so will have data\n    //    cost\n    //  }\n    // }\n    //\n    // the result of above *could* look like this:\n    // {\n    //   data: { products: [{ cost: \"$10\" }] },\n    //   errors: [{\n    //      message: 'your session has timed out',\n    //      path: []\n    //   }]\n    // }\n    // status code of above would be a 401\n    // in the UI you want to show data where you can, errors as data where you can\n    // and use correct http status codes\n    observer.next?.(err.result);\n  }\n\n  observer.error?.(err);\n}\n\nexport function readJsonBody<T = Record<string, unknown>>(\n  response: Response,\n  operation: Operation,\n  observer: Observer<T>\n) {\n  parseAndCheckHttpResponse(operation)(response)\n    .then((result) => {\n      observer.next?.(result);\n      observer.complete?.();\n    })\n    .catch((err) => handleError(err, observer));\n}\n\nexport function parseAndCheckHttpResponse(operations: Operation | Operation[]) {\n  return (response: Response) =>\n    response\n      .text()\n      .then((bodyText) => parseJsonBody(response, bodyText))\n      .then((result: any) => {\n        if (response.status >= 300) {\n          // Network error\n          throwServerError(\n            response,\n            result,\n            `Response not successful: Received status code ${response.status}`\n          );\n        }\n        if (\n          !Array.isArray(result) &&\n          !hasOwnProperty.call(result, \"data\") &&\n          !hasOwnProperty.call(result, \"errors\")\n        ) {\n          // Data error\n          throwServerError(\n            response,\n            result,\n            `Server response was missing for query '${\n              Array.isArray(operations)\n                ? operations.map((op) => op.operationName)\n                : operations.operationName\n            }'.`\n          );\n        }\n        return result;\n      });\n}\n","import { InvariantError } from '../../utilities/globals';\n\nexport type ClientParseError = InvariantError & {\n  parseError: Error;\n};\n\nexport const serializeFetchParameter = (p: any, label: string) => {\n  let serialized;\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e) {\n    const parseError = new InvariantError(\n      `Network request failed. ${label} is not serializable: ${e.message}`,\n    ) as ClientParseError;\n    parseError.parseError = e;\n    throw parseError;\n  }\n  return serialized;\n};\n","import { ASTNode, print } from 'graphql';\n\nimport { Operation } from '../core';\n\nexport interface Printer {\n  (node: ASTNode, originalPrint: typeof print): string\n};\n\nexport interface UriFunction {\n  (operation: Operation): string;\n}\n\nexport interface Body {\n  query?: string;\n  operationName?: string;\n  variables?: Record<string, any>;\n  extensions?: Record<string, any>;\n}\n\nexport interface HttpOptions {\n  /**\n   * The URI to use when fetching operations.\n   *\n   * Defaults to '/graphql'.\n   */\n  uri?: string | UriFunction;\n\n  /**\n   * Passes the extensions field to your graphql server.\n   *\n   * Defaults to false.\n   */\n  includeExtensions?: boolean;\n\n  /**\n   * A `fetch`-compatible API to use when making requests.\n   */\n  fetch?: WindowOrWorkerGlobalScope['fetch'];\n\n  /**\n   * An object representing values to be sent as headers on the request.\n   */\n  headers?: Record<string, string>;\n\n  /**\n   * If set to true, header names won't be automatically normalized to\n   * lowercase. This allows for non-http-spec-compliant servers that might\n   * expect capitalized header names.\n   */\n  preserveHeaderCase?: boolean;\n\n  /**\n   * The credentials policy you want to use for the fetch call.\n   */\n  credentials?: string;\n\n  /**\n   * Any overrides of the fetch options argument to pass to the fetch call.\n   */\n  fetchOptions?: any;\n\n  /**\n   * If set to true, use the HTTP GET method for query operations. Mutations\n   * will still use the method specified in fetchOptions.method (which defaults\n   * to POST).\n   */\n  useGETForQueries?: boolean;\n\n  /**\n   * If set to true, the default behavior of stripping unused variables\n   * from the request will be disabled.\n   *\n   * Unused variables are likely to trigger server-side validation errors,\n   * per https://spec.graphql.org/draft/#sec-All-Variables-Used, but this\n   * includeUnusedVariables option can be useful if your server deviates\n   * from the GraphQL specification by not strictly enforcing that rule.\n   */\n  includeUnusedVariables?: boolean;\n  /**\n   * A function to substitute for the default query print function. Can be\n   * used to apply changes to the results of the print function.\n   */\n   print?: Printer;\n}\n\nexport interface HttpQueryOptions {\n  includeQuery?: boolean;\n  includeExtensions?: boolean;\n  preserveHeaderCase?: boolean;\n}\n\nexport interface HttpConfig {\n  http?: HttpQueryOptions;\n  options?: any;\n  headers?: Record<string, string>;\n  credentials?: any;\n}\n\nconst defaultHttpOptions: HttpQueryOptions = {\n  includeQuery: true,\n  includeExtensions: false,\n  preserveHeaderCase: false,\n};\n\nconst defaultHeaders = {\n  // headers are case insensitive (https://stackoverflow.com/a/5259004)\n  accept: '*/*',\n  // The content-type header describes the type of the body of the request, and\n  // so it typically only is sent with requests that actually have bodies. One\n  // could imagine that Apollo Client would remove this header when constructing\n  // a GET request (which has no body), but we historically have not done that.\n  // This means that browsers will preflight all Apollo Client requests (even\n  // GET requests). Apollo Server's CSRF prevention feature (introduced in\n  // AS3.7) takes advantage of this fact and does not block requests with this\n  // header. If you want to drop this header from GET requests, then you should\n  // probably replace it with a `apollo-require-preflight` header, or servers\n  // with CSRF prevention enabled might block your GET request. See\n  // https://www.apollographql.com/docs/apollo-server/security/cors/#preventing-cross-site-request-forgery-csrf\n  // for more details.\n  'content-type': 'application/json',\n};\n\nconst defaultOptions = {\n  method: 'POST',\n};\n\nexport const fallbackHttpConfig = {\n  http: defaultHttpOptions,\n  headers: defaultHeaders,\n  options: defaultOptions,\n};\n\nexport const defaultPrinter: Printer = (ast, printer) => printer(ast);\n\nexport function selectHttpOptionsAndBody(\n  operation: Operation,\n  fallbackConfig: HttpConfig,\n  ...configs: Array<HttpConfig>\n) {\n  configs.unshift(fallbackConfig);\n  return selectHttpOptionsAndBodyInternal(\n    operation,\n    defaultPrinter,\n    ...configs,\n  );\n}\n\nexport function selectHttpOptionsAndBodyInternal(\n  operation: Operation,\n  printer: Printer,\n  ...configs: HttpConfig[]\n) {\n  let options = {} as HttpConfig & Record<string, any>;\n  let http = {} as HttpQueryOptions;\n\n  configs.forEach(config => {\n    options = {\n      ...options,\n      ...config.options,\n      headers: {\n        ...options.headers,\n        ...config.headers,\n      }\n    };\n\n    if (config.credentials) {\n      options.credentials = config.credentials;\n    }\n\n    http = {\n      ...http,\n      ...config.http,\n    };\n  });\n\n  if (options.headers) {\n    options.headers = removeDuplicateHeaders(options.headers, http.preserveHeaderCase);\n  }\n\n  //The body depends on the http options\n  const { operationName, extensions, variables, query } = operation;\n  const body: Body = { operationName, variables };\n\n  if (http.includeExtensions) (body as any).extensions = extensions;\n\n  // not sending the query (i.e persisted queries)\n  if (http.includeQuery) (body as any).query = printer(query, print);\n\n  return {\n    options,\n    body,\n  };\n};\n\n// Remove potential duplicate header names, preserving last (by insertion order).\n// This is done to prevent unintentionally duplicating a header instead of\n// overwriting it (See #8447 and #8449).\nfunction removeDuplicateHeaders(\n  headers: Record<string, string>,\n  preserveHeaderCase: boolean | undefined\n): typeof headers {\n\n  // If we're not preserving the case, just remove duplicates w/ normalization.\n  if (!preserveHeaderCase) {\n    const normalizedHeaders = Object.create(null);\n    Object.keys(Object(headers)).forEach(name => {\n      normalizedHeaders[name.toLowerCase()] = headers[name];\n    });\n    return normalizedHeaders;\n  }\n\n  // If we are preserving the case, remove duplicates w/ normalization,\n  // preserving the original name.\n  // This allows for non-http-spec-compliant servers that expect intentionally\n  // capitalized header names (See #6741).\n  const headerData = Object.create(null);\n  Object.keys(Object(headers)).forEach(name => {\n    headerData[name.toLowerCase()] = { originalName: name, value: headers[name] }\n  });\n\n  const normalizedHeaders = Object.create(null);\n  Object.keys(headerData).forEach(name => {\n    normalizedHeaders[headerData[name].originalName] = headerData[name].value;\n  });\n  return normalizedHeaders;\n}\n","import { InvariantError } from '../../utilities/globals';\n\nexport const checkFetcher = (fetcher: WindowOrWorkerGlobalScope['fetch'] | undefined) => {\n  if (!fetcher && typeof fetch === 'undefined') {\n    throw new InvariantError(`\n\"fetch\" has not been found globally and no fetcher has been \\\nconfigured. To fix this, install a fetch package (like \\\nhttps://www.npmjs.com/package/cross-fetch), instantiate the \\\nfetcher, and pass it into your HttpLink constructor. For example:\n\nimport fetch from 'cross-fetch';\nimport { ApolloClient, HttpLink } from '@apollo/client';\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: '/graphql', fetch })\n});\n    `);\n  }\n};\n","export const createSignalIfSupported = () => {\n  if (typeof AbortController === 'undefined')\n    return { controller: false, signal: false };\n\n  const controller = new AbortController();\n  const signal = controller.signal;\n  return { controller, signal };\n};\n","import { Operation } from '../core';\n\nexport const selectURI = (\n  operation: Operation,\n  fallbackURI?: string | ((operation: Operation) => string),\n) => {\n  const context = operation.getContext();\n  const contextURI = context.uri;\n\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === 'function') {\n    return fallbackURI(operation);\n  } else {\n    return (fallbackURI as string) || '/graphql';\n  }\n};\n","import { serializeFetchParameter } from './serializeFetchParameter';\nimport { Body } from './selectHttpOptionsAndBody';\n\n// For GET operations, returns the given URI rewritten with parameters, or a\n// parse error.\nexport function rewriteURIForGET(chosenURI: string, body: Body) {\n  // Implement the standard HTTP GET serialization, plus 'extensions'. Note\n  // the extra level of JSON serialization!\n  const queryParams: string[] = [];\n  const addQueryParam = (key: string, value: string) => {\n    queryParams.push(`${key}=${encodeURIComponent(value)}`);\n  };\n\n  if ('query' in body) {\n    addQueryParam('query', body.query!);\n  }\n  if (body.operationName) {\n    addQueryParam('operationName', body.operationName);\n  }\n  if (body.variables) {\n    let serializedVariables;\n    try {\n      serializedVariables = serializeFetchParameter(\n        body.variables,\n        'Variables map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('variables', serializedVariables);\n  }\n  if (body.extensions) {\n    let serializedExtensions;\n    try {\n      serializedExtensions = serializeFetchParameter(\n        body.extensions,\n        'Extensions map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('extensions', serializedExtensions);\n  }\n\n  // Reconstruct the URI with added query params.\n  // XXX This assumes that the URI is well-formed and that it doesn't\n  //     already contain any of these query params. We could instead use the\n  //     URL API and take a polyfill (whatwg-url@6) for older browsers that\n  //     don't support URLSearchParams. Note that some browsers (and\n  //     versions of whatwg-url) support URL but not URLSearchParams!\n  let fragment = '',\n    preFragment = chosenURI;\n  const fragmentStart = chosenURI.indexOf('#');\n  if (fragmentStart !== -1) {\n    fragment = chosenURI.substr(fragmentStart);\n    preFragment = chosenURI.substr(0, fragmentStart);\n  }\n  const queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\n  const newURI =\n    preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\n  return { newURI };\n}\n","import '../../utilities/globals';\n\nimport { visit, DefinitionNode, VariableDefinitionNode } from 'graphql';\n\nimport { ApolloLink } from '../core';\nimport { Observable, hasDirectives } from '../../utilities';\nimport { serializeFetchParameter } from './serializeFetchParameter';\nimport { selectURI } from './selectURI';\nimport {\n  handleError,\n  readMultipartBody,\n  readJsonBody\n} from './parseAndCheckHttpResponse';\nimport { checkFetcher } from './checkFetcher';\nimport {\n  selectHttpOptionsAndBodyInternal,\n  defaultPrinter,\n  fallbackHttpConfig,\n  HttpOptions\n} from './selectHttpOptionsAndBody';\nimport { createSignalIfSupported } from './createSignalIfSupported';\nimport { rewriteURIForGET } from './rewriteURIForGET';\nimport { fromError } from '../utils';\nimport { maybe } from '../../utilities';\n\nconst backupFetch = maybe(() => fetch);\n\nexport const createHttpLink = (linkOptions: HttpOptions = {}) => {\n  let {\n    uri = '/graphql',\n    // use default global fetch if nothing passed in\n    fetch: preferredFetch,\n    print = defaultPrinter,\n    includeExtensions,\n    preserveHeaderCase,\n    useGETForQueries,\n    includeUnusedVariables = false,\n    ...requestOptions\n  } = linkOptions;\n\n  if (__DEV__) {\n    // Make sure at least one of preferredFetch, window.fetch, or backupFetch is\n    // defined, so requests won't fail at runtime.\n    checkFetcher(preferredFetch || backupFetch);\n  }\n\n  const linkConfig = {\n    http: { includeExtensions, preserveHeaderCase },\n    options: requestOptions.fetchOptions,\n    credentials: requestOptions.credentials,\n    headers: requestOptions.headers,\n  };\n\n  return new ApolloLink(operation => {\n    let chosenURI = selectURI(operation, uri);\n\n    const context = operation.getContext();\n\n    // `apollographql-client-*` headers are automatically set if a\n    // `clientAwareness` object is found in the context. These headers are\n    // set first, followed by the rest of the headers pulled from\n    // `context.headers`. If desired, `apollographql-client-*` headers set by\n    // the `clientAwareness` object can be overridden by\n    // `apollographql-client-*` headers set in `context.headers`.\n    const clientAwarenessHeaders: {\n      'apollographql-client-name'?: string;\n      'apollographql-client-version'?: string;\n    } = {};\n\n    if (context.clientAwareness) {\n      const { name, version } = context.clientAwareness;\n      if (name) {\n        clientAwarenessHeaders['apollographql-client-name'] = name;\n      }\n      if (version) {\n        clientAwarenessHeaders['apollographql-client-version'] = version;\n      }\n    }\n\n    const contextHeaders = { ...clientAwarenessHeaders, ...context.headers };\n\n    const contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: contextHeaders,\n    };\n\n    //uses fallback, link, and then context to build options\n    const { options, body } = selectHttpOptionsAndBodyInternal(\n      operation,\n      print,\n      fallbackHttpConfig,\n      linkConfig,\n      contextConfig,\n    );\n\n    if (body.variables && !includeUnusedVariables) {\n      const unusedNames = new Set(Object.keys(body.variables));\n      visit(operation.query, {\n        Variable(node, _key, parent) {\n          // A variable type definition at the top level of a query is not\n          // enough to silence server-side errors about the variable being\n          // unused, so variable definitions do not count as usage.\n          // https://spec.graphql.org/draft/#sec-All-Variables-Used\n          if (parent && (parent as VariableDefinitionNode).kind !== 'VariableDefinition') {\n            unusedNames.delete(node.name.value);\n          }\n        },\n      });\n      if (unusedNames.size) {\n        // Make a shallow copy of body.variables (with keys in the same\n        // order) and then delete unused variables from the copy.\n        body.variables = { ...body.variables };\n        unusedNames.forEach(name => {\n          delete body.variables![name];\n        });\n      }\n    }\n\n    let controller: any;\n    if (!(options as any).signal) {\n      const { controller: _controller, signal } = createSignalIfSupported();\n      controller = _controller;\n      if (controller) (options as any).signal = signal;\n    }\n\n    // If requested, set method to GET if there are no mutations.\n    const definitionIsMutation = (d: DefinitionNode) => {\n      return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n    };\n    if (\n      useGETForQueries &&\n      !operation.query.definitions.some(definitionIsMutation)\n    ) {\n      options.method = 'GET';\n    }\n\n    // does not match custom directives beginning with @defer\n    if (hasDirectives(['defer'], operation.query)) {\n      options.headers = options.headers || {};\n      options.headers.accept = \"multipart/mixed; deferSpec=20220824, application/json\";\n    }\n\n    if (options.method === 'GET') {\n      const { newURI, parseError } = rewriteURIForGET(chosenURI, body);\n      if (parseError) {\n        return fromError(parseError);\n      }\n      chosenURI = newURI;\n    } else {\n      try {\n        (options as any).body = serializeFetchParameter(body, 'Payload');\n      } catch (parseError) {\n        return fromError(parseError);\n      }\n    }\n\n    return new Observable(observer => {\n      // Prefer linkOptions.fetch (preferredFetch) if provided, and otherwise\n      // fall back to the *current* global window.fetch function (see issue\n      // #7832), or (if all else fails) the backupFetch function we saved when\n      // this module was first evaluated. This last option protects against the\n      // removal of window.fetch, which is unlikely but not impossible.\n      const currentFetch = preferredFetch || maybe(() => fetch) || backupFetch;\n\n      currentFetch!(chosenURI, options)\n        .then(response => {\n          operation.setContext({ response });\n          const ctype = response.headers?.get('content-type');\n\n          if (ctype !== null && /^multipart\\/mixed/i.test(ctype)) {\n            return readMultipartBody(response, observer);\n          } else {\n            return readJsonBody(response, operation, observer);\n          }\n        })\n        .catch(err => handleError(err, observer));\n\n      return () => {\n        // XXX support canceling this request\n        // https://developers.google.com/web/updates/2017/09/abortable-fetch\n        if (controller) controller.abort();\n      };\n    });\n  });\n};\n","import { ApolloLink, RequestHandler } from '../core';\nimport { HttpOptions } from './selectHttpOptionsAndBody';\nimport { createHttpLink } from './createHttpLink';\n\nexport class HttpLink extends ApolloLink {\n  public requester: RequestHandler;\n  constructor(public options: HttpOptions = {}) {\n    super(createHttpLink(options).request);\n  }\n}\n","import '../../utilities/globals';\n\nexport {\n  parseAndCheckHttpResponse,\n  ServerParseError\n} from './parseAndCheckHttpResponse';\nexport {\n  serializeFetchParameter,\n  ClientParseError\n} from './serializeFetchParameter';\nexport {\n  HttpOptions,\n  fallbackHttpConfig,\n  defaultPrinter,\n  selectHttpOptionsAndBody,\n  selectHttpOptionsAndBodyInternal, // needed by ../batch-http but not public\n  UriFunction\n} from './selectHttpOptionsAndBody';\nexport { checkFetcher } from './checkFetcher';\nexport { createSignalIfSupported } from './createSignalIfSupported';\nexport { selectURI } from './selectURI';\nexport { createHttpLink } from './createHttpLink';\nexport { HttpLink } from './HttpLink';\nexport { rewriteURIForGET } from './rewriteURIForGET';\n","import '../utilities/globals';\n\nimport { GraphQLError } from 'graphql';\n\nimport { isNonEmptyArray } from '../utilities';\nimport { ServerParseError } from '../link/http';\nimport { ServerError } from '../link/utils';\n\nexport function isApolloError(err: Error): err is ApolloError {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\n// Sets the error message on this error according to the\n// the GraphQL and network errors that are present.\n// If the error message has already been set through the\n// constructor or otherwise, this function is a nop.\nconst generateErrorMessage = (err: ApolloError) => {\n  let message = '';\n  // If we have GraphQL errors present, add that to the error message.\n  if (isNonEmptyArray(err.graphQLErrors) || isNonEmptyArray(err.clientErrors)) {\n    const errors = ((err.graphQLErrors || []) as readonly Error[])\n      .concat(err.clientErrors || []);\n    errors.forEach((error: Error) => {\n      const errorMessage = error\n        ? error.message\n        : 'Error message not found.';\n      message += `${errorMessage}\\n`;\n    });\n  }\n\n  if (err.networkError) {\n    message += `${err.networkError.message}\\n`;\n  }\n\n  // strip newline from the end of the message\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nexport type GraphQLErrors = ReadonlyArray<GraphQLError>;\n\nexport type NetworkError = Error | ServerParseError | ServerError | null;\n\nexport class ApolloError extends Error {\n  public name: string;\n  public message: string;\n  public graphQLErrors: GraphQLErrors;\n  public clientErrors: ReadonlyArray<Error>;\n  public networkError: Error | ServerParseError | ServerError | null;\n\n  // An object that can be used to provide some additional information\n  // about an error, e.g. specifying the type of error this is. Used\n  // internally within Apollo Client.\n  public extraInfo: any;\n\n  // Constructs an instance of ApolloError given a GraphQLError\n  // or a network error. Note that one of these has to be a valid\n  // value or the constructed error will be meaningless.\n  constructor({\n    graphQLErrors,\n    clientErrors,\n    networkError,\n    errorMessage,\n    extraInfo,\n  }: {\n    graphQLErrors?: ReadonlyArray<GraphQLError>;\n    clientErrors?: ReadonlyArray<Error>;\n    networkError?: Error | ServerParseError | ServerError | null;\n    errorMessage?: string;\n    extraInfo?: any;\n  }) {\n    super(errorMessage);\n    this.name = 'ApolloError';\n    this.graphQLErrors = graphQLErrors || [];\n    this.clientErrors = clientErrors || [];\n    this.networkError = networkError || null;\n    this.message = errorMessage || generateErrorMessage(this);\n    this.extraInfo = extraInfo;\n\n    // We're not using `Object.setPrototypeOf` here as it isn't fully\n    // supported on Android (see issue #3236).\n    (this as any).__proto__ = ApolloError.prototype;\n  }\n}\n","/**\n * The current status of a query’s execution in our system.\n */\nexport enum NetworkStatus {\n  /**\n   * The query has never been run before and the query is now currently running. A query will still\n   * have this network status even if a partial data result was returned from the cache, but a\n   * query was dispatched anyway.\n   */\n  loading = 1,\n\n  /**\n   * If `setVariables` was called and a query was fired because of that then the network status\n   * will be `setVariables` until the result of that query comes back.\n   */\n  setVariables = 2,\n\n  /**\n   * Indicates that `fetchMore` was called on this query and that the query created is currently in\n   * flight.\n   */\n  fetchMore = 3,\n\n  /**\n   * Similar to the `setVariables` network status. It means that `refetch` was called on a query\n   * and the refetch request is currently in flight.\n   */\n  refetch = 4,\n\n  /**\n   * Indicates that a polling query is currently in flight. So for example if you are polling a\n   * query every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\n   * a poll request has been sent but not resolved.\n   */\n  poll = 6,\n\n  /**\n   * No request is in flight for this query, and no errors happened. Everything is OK.\n   */\n  ready = 7,\n\n  /**\n   * No request is in flight for this query, but one or more errors were detected.\n   */\n  error = 8,\n}\n\n/**\n * Returns true if there is currently a network request in flight according to a given network\n * status.\n */\nexport function isNetworkRequestInFlight(\n  networkStatus?: NetworkStatus,\n): boolean {\n  return networkStatus ? networkStatus < 7 : false;\n}\n","import { invariant } from '../utilities/globals';\nimport { DocumentNode } from 'graphql';\nimport { equal } from '@wry/equality';\n\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport {\n  Concast,\n  cloneDeep,\n  compact,\n  getOperationDefinition,\n  Observable,\n  Observer,\n  ObservableSubscription,\n  iterateObserversSafely,\n  isNonEmptyArray,\n  fixObservableSubclass,\n  getQueryDefinition,\n} from '../utilities';\nimport { ApolloError } from '../errors';\nimport { QueryManager } from './QueryManager';\nimport {\n  ApolloQueryResult,\n  OperationVariables,\n  TypedDocumentNode,\n} from './types';\nimport {\n  WatchQueryOptions,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n  NextFetchPolicyContext,\n} from './watchQueryOptions';\nimport { QueryInfo } from './QueryInfo';\nimport { MissingFieldError } from '../cache';\nimport { MissingTree } from '../cache/core/types/common';\n\nconst {\n  assign,\n  hasOwnProperty,\n} = Object;\n\nexport interface FetchMoreOptions<\n  TData = any,\n  TVariables = OperationVariables\n> {\n  updateQuery?: (\n    previousQueryResult: TData,\n    options: {\n      fetchMoreResult?: TData;\n      variables?: TVariables;\n    },\n  ) => TData;\n}\n\nexport interface UpdateQueryOptions<TVariables> {\n  variables?: TVariables;\n}\n\ninterface Last<TData, TVariables> {\n  result: ApolloQueryResult<TData>;\n  variables?: TVariables;\n  error?: ApolloError;\n}\n\nexport class ObservableQuery<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables\n> extends Observable<ApolloQueryResult<TData>> {\n  public readonly options: WatchQueryOptions<TVariables, TData>;\n  public readonly queryId: string;\n  public readonly queryName?: string;\n\n  public get query(): TypedDocumentNode<TData, TVariables> {\n    // This transform is heavily cached, so it should not be expensive to\n    // transform the same this.options.query document repeatedly.\n    return this.queryManager.transform(this.options.query).document;\n  }\n\n  // Computed shorthand for this.options.variables, preserved for\n  // backwards compatibility.\n  public get variables(): TVariables | undefined {\n    return this.options.variables;\n  }\n\n  private isTornDown: boolean;\n  private queryManager: QueryManager<any>;\n  private observers = new Set<Observer<ApolloQueryResult<TData>>>();\n  private subscriptions = new Set<ObservableSubscription>();\n\n  private last?: Last<TData, TVariables>;\n\n  private queryInfo: QueryInfo;\n\n  // When this.concast is defined, this.observer is the Observer currently\n  // subscribed to that Concast.\n  private concast?: Concast<ApolloQueryResult<TData>>;\n  private observer?: Observer<ApolloQueryResult<TData>>;\n\n  private pollingInfo?: {\n    interval: number;\n    timeout: ReturnType<typeof setTimeout>;\n  };\n\n  constructor({\n    queryManager,\n    queryInfo,\n    options,\n  }: {\n    queryManager: QueryManager<any>;\n    queryInfo: QueryInfo;\n    options: WatchQueryOptions<TVariables, TData>;\n  }) {\n    super((observer: Observer<ApolloQueryResult<TData>>) => {\n      // Zen Observable has its own error function, so in order to log correctly\n      // we need to provide a custom error callback.\n      try {\n        var subObserver = (observer as any)._subscription._observer;\n        if (subObserver && !subObserver.error) {\n          subObserver.error = defaultSubscriptionObserverErrorCallback;\n        }\n      } catch {}\n\n      const first = !this.observers.size;\n      this.observers.add(observer);\n\n      // Deliver most recent error or result.\n      const last = this.last;\n      if (last && last.error) {\n        observer.error && observer.error(last.error);\n      } else if (last && last.result) {\n        observer.next && observer.next(last.result);\n      }\n\n      // Initiate observation of this query if it hasn't been reported to\n      // the QueryManager yet.\n      if (first) {\n        // Blindly catching here prevents unhandled promise rejections,\n        // and is safe because the ObservableQuery handles this error with\n        // this.observer.error, so we're not just swallowing the error by\n        // ignoring it here.\n        this.reobserve().catch(() => {});\n      }\n\n      return () => {\n        if (this.observers.delete(observer) && !this.observers.size) {\n          this.tearDownQuery();\n        }\n      };\n    });\n\n    // related classes\n    this.queryInfo = queryInfo;\n    this.queryManager = queryManager;\n\n    // active state\n    this.isTornDown = false;\n\n    const {\n      watchQuery: {\n        fetchPolicy: defaultFetchPolicy = \"cache-first\",\n      } = {},\n    } = queryManager.defaultOptions;\n\n    const {\n      fetchPolicy = defaultFetchPolicy,\n      initialFetchPolicy = (\n        // Make sure we don't store \"standby\" as the initialFetchPolicy.\n        fetchPolicy === \"standby\" ? defaultFetchPolicy : fetchPolicy\n      ),\n    } = options;\n\n    this.options = {\n      ...options,\n\n      // Remember the initial options.fetchPolicy so we can revert back to this\n      // policy when variables change. This information can also be specified\n      // (or overridden) by providing options.initialFetchPolicy explicitly.\n      initialFetchPolicy,\n\n      // This ensures this.options.fetchPolicy always has a string value, in\n      // case options.fetchPolicy was not provided.\n      fetchPolicy,\n    };\n\n    this.queryId = queryInfo.queryId || queryManager.generateQueryId();\n\n    const opDef = getOperationDefinition(this.query);\n    this.queryName = opDef && opDef.name && opDef.name.value;\n  }\n\n  public result(): Promise<ApolloQueryResult<TData>> {\n    return new Promise((resolve, reject) => {\n      // TODO: this code doesn’t actually make sense insofar as the observer\n      // will never exist in this.observers due how zen-observable wraps observables.\n      // https://github.com/zenparsing/zen-observable/blob/master/src/Observable.js#L169\n      const observer: Observer<ApolloQueryResult<TData>> = {\n        next: (result: ApolloQueryResult<TData>) => {\n          resolve(result);\n\n          // Stop the query within the QueryManager if we can before\n          // this function returns.\n          //\n          // We do this in order to prevent observers piling up within\n          // the QueryManager. Notice that we only fully unsubscribe\n          // from the subscription in a setTimeout(..., 0)  call. This call can\n          // actually be handled by the browser at a much later time. If queries\n          // are fired in the meantime, observers that should have been removed\n          // from the QueryManager will continue to fire, causing an unnecessary\n          // performance hit.\n          this.observers.delete(observer);\n          if (!this.observers.size) {\n            this.queryManager.removeQuery(this.queryId);\n          }\n\n          setTimeout(() => {\n            subscription.unsubscribe();\n          }, 0);\n        },\n        error: reject,\n      };\n      const subscription = this.subscribe(observer);\n    });\n  }\n\n  public getCurrentResult(saveAsLastResult = true): ApolloQueryResult<TData> {\n    // Use the last result as long as the variables match this.variables.\n    const lastResult = this.getLastResult(true);\n\n    const networkStatus =\n      this.queryInfo.networkStatus ||\n      (lastResult && lastResult.networkStatus) ||\n      NetworkStatus.ready;\n\n    const result = {\n      ...lastResult,\n      loading: isNetworkRequestInFlight(networkStatus),\n      networkStatus,\n    } as ApolloQueryResult<TData>;\n\n    const { fetchPolicy = \"cache-first\" } = this.options;\n    if (\n      // These fetch policies should never deliver data from the cache, unless\n      // redelivering a previously delivered result.\n      fetchPolicy === 'network-only' ||\n      fetchPolicy === 'no-cache' ||\n      fetchPolicy === 'standby' ||\n      // If this.options.query has @client(always: true) fields, we cannot\n      // trust diff.result, since it was read from the cache without running\n      // local resolvers (and it's too late to run resolvers now, since we must\n      // return a result synchronously).\n      this.queryManager.transform(this.options.query).hasForcedResolvers\n    ) {\n      // Fall through.\n    } else {\n      const diff = this.queryInfo.getDiff();\n\n      if (diff.complete || this.options.returnPartialData) {\n        result.data = diff.result;\n      }\n\n      if (equal(result.data, {})) {\n        result.data = void 0 as any;\n      }\n\n      if (diff.complete) {\n        // Similar to setting result.partial to false, but taking advantage of the\n        // falsiness of missing fields.\n        delete result.partial;\n\n        // If the diff is complete, and we're using a FetchPolicy that\n        // terminates after a complete cache read, we can assume the next result\n        // we receive will have NetworkStatus.ready and !loading.\n        if (\n          diff.complete &&\n          result.networkStatus === NetworkStatus.loading &&\n          (fetchPolicy === 'cache-first' ||\n          fetchPolicy === 'cache-only')\n        ) {\n          result.networkStatus = NetworkStatus.ready;\n          result.loading = false;\n        }\n      } else {\n        result.partial = true;\n      }\n\n      if (\n        __DEV__ &&\n        !diff.complete &&\n        !this.options.partialRefetch &&\n        !result.loading &&\n        !result.data &&\n        !result.error\n      ) {\n        logMissingFieldErrors(diff.missing);\n      }\n    }\n\n    if (saveAsLastResult) {\n      this.updateLastResult(result);\n    }\n\n    return result;\n  }\n\n  // Compares newResult to the snapshot we took of this.lastResult when it was\n  // first received.\n  public isDifferentFromLastResult(\n    newResult: ApolloQueryResult<TData>,\n    variables?: TVariables\n  ) {\n    return (\n      !this.last ||\n      !equal(this.last.result, newResult) ||\n      (variables && !equal(this.last.variables, variables))\n    );\n  }\n\n  private getLast<K extends keyof Last<TData, TVariables>>(\n    key: K,\n    variablesMustMatch?: boolean,\n  ) {\n    const last = this.last;\n    if (\n      last &&\n      last[key] &&\n      (!variablesMustMatch || equal(last.variables, this.variables))\n    ) {\n      return last[key];\n    }\n  }\n\n  public getLastResult(variablesMustMatch?: boolean): ApolloQueryResult<TData> | undefined {\n    return this.getLast(\"result\", variablesMustMatch);\n  }\n\n  public getLastError(variablesMustMatch?: boolean): ApolloError | undefined {\n    return this.getLast(\"error\", variablesMustMatch);\n  }\n\n  public resetLastResults(): void {\n    delete this.last;\n    this.isTornDown = false;\n  }\n\n  public resetQueryStoreErrors() {\n    this.queryManager.resetErrors(this.queryId);\n  }\n\n  /**\n   * Update the variables of this observable query, and fetch the new results.\n   * This method should be preferred over `setVariables` in most use cases.\n   *\n   * @param variables: The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   */\n  public refetch(variables?: Partial<TVariables>): Promise<ApolloQueryResult<TData>> {\n    const reobserveOptions: Partial<WatchQueryOptions<TVariables, TData>> = {\n      // Always disable polling for refetches.\n      pollInterval: 0,\n    };\n\n    // Unless the provided fetchPolicy always consults the network\n    // (no-cache, network-only, or cache-and-network), override it with\n    // network-only to force the refetch for this fetchQuery call.\n    const { fetchPolicy } = this.options;\n    if (fetchPolicy === 'cache-and-network') {\n      reobserveOptions.fetchPolicy = fetchPolicy;\n    } else if (fetchPolicy === 'no-cache') {\n      reobserveOptions.fetchPolicy = 'no-cache';\n    } else {\n      reobserveOptions.fetchPolicy = 'network-only';\n    }\n\n    if (__DEV__ && variables && hasOwnProperty.call(variables, \"variables\")) {\n      const queryDef = getQueryDefinition(this.query);\n      const vars = queryDef.variableDefinitions;\n      if (!vars || !vars.some(v => v.variable.name.value === \"variables\")) {\n        invariant.warn(`Called refetch(${\n          JSON.stringify(variables)\n        }) for query ${\n          queryDef.name?.value || JSON.stringify(queryDef)\n        }, which does not declare a $variables variable.\nDid you mean to call refetch(variables) instead of refetch({ variables })?`);\n      }\n    }\n\n    if (variables && !equal(this.options.variables, variables)) {\n      // Update the existing options with new variables\n      reobserveOptions.variables = this.options.variables = {\n        ...this.options.variables,\n        ...variables,\n      } as TVariables;\n    }\n\n    this.queryInfo.resetLastWrite();\n    return this.reobserve(reobserveOptions, NetworkStatus.refetch);\n  }\n\n  public fetchMore<\n    TFetchData = TData,\n    TFetchVars extends OperationVariables = TVariables,\n  >(fetchMoreOptions: FetchMoreQueryOptions<TFetchVars, TFetchData> & {\n    updateQuery?: (\n      previousQueryResult: TData,\n      options: {\n        fetchMoreResult: TFetchData;\n        variables: TFetchVars;\n      },\n    ) => TData;\n  }): Promise<ApolloQueryResult<TFetchData>> {\n    const combinedOptions = {\n      ...(fetchMoreOptions.query ? fetchMoreOptions : {\n        ...this.options,\n        query: this.query,\n        ...fetchMoreOptions,\n        variables: {\n          ...this.options.variables,\n          ...fetchMoreOptions.variables,\n        },\n      }),\n      // The fetchMore request goes immediately to the network and does\n      // not automatically write its result to the cache (hence no-cache\n      // instead of network-only), because we allow the caller of\n      // fetchMore to provide an updateQuery callback that determines how\n      // the data gets written to the cache.\n      fetchPolicy: \"no-cache\",\n    } as WatchQueryOptions<TFetchVars, TFetchData>;\n\n    const qid = this.queryManager.generateQueryId();\n\n    // Simulate a loading result for the original query with\n    // result.networkStatus === NetworkStatus.fetchMore.\n    const { queryInfo } = this;\n    const originalNetworkStatus = queryInfo.networkStatus;\n    queryInfo.networkStatus = NetworkStatus.fetchMore;\n    if (combinedOptions.notifyOnNetworkStatusChange) {\n      this.observe();\n    }\n\n    const updatedQuerySet = new Set<DocumentNode>();\n\n    return this.queryManager.fetchQuery(\n      qid,\n      combinedOptions,\n      NetworkStatus.fetchMore,\n    ).then(fetchMoreResult => {\n      this.queryManager.removeQuery(qid);\n\n      if (queryInfo.networkStatus === NetworkStatus.fetchMore) {\n        queryInfo.networkStatus = originalNetworkStatus;\n      }\n\n      // Performing this cache update inside a cache.batch transaction ensures\n      // any affected cache.watch watchers are notified at most once about any\n      // updates. Most watchers will be using the QueryInfo class, which\n      // responds to notifications by calling reobserveCacheFirst to deliver\n      // fetchMore cache results back to this ObservableQuery.\n      this.queryManager.cache.batch({\n        update: cache => {\n          const { updateQuery } = fetchMoreOptions;\n          if (updateQuery) {\n            cache.updateQuery({\n              query: this.query,\n              variables: this.variables,\n              returnPartialData: true,\n              optimistic: false,\n            }, previous => updateQuery(previous!, {\n              fetchMoreResult: fetchMoreResult.data,\n              variables: combinedOptions.variables as TFetchVars,\n            }));\n\n          } else {\n            // If we're using a field policy instead of updateQuery, the only\n            // thing we need to do is write the new data to the cache using\n            // combinedOptions.variables (instead of this.variables, which is\n            // what this.updateQuery uses, because it works by abusing the\n            // original field value, keyed by the original variables).\n            cache.writeQuery({\n              query: combinedOptions.query,\n              variables: combinedOptions.variables,\n              data: fetchMoreResult.data,\n            });\n          }\n        },\n\n        onWatchUpdated: watch => {\n          // Record the DocumentNode associated with any watched query whose\n          // data were updated by the cache writes above.\n          updatedQuerySet.add(watch.query);\n        },\n      });\n\n      return fetchMoreResult;\n\n    }).finally(() => {\n      // In case the cache writes above did not generate a broadcast\n      // notification (which would have been intercepted by onWatchUpdated),\n      // likely because the written data were the same as what was already in\n      // the cache, we still want fetchMore to deliver its final loading:false\n      // result with the unchanged data.\n      if (!updatedQuerySet.has(this.query)) {\n        reobserveCacheFirst(this);\n      }\n    });\n  }\n\n  // XXX the subscription variables are separate from the query variables.\n  // if you want to update subscription variables, right now you have to do that separately,\n  // and you can only do it by stopping the subscription and then subscribing again with new variables.\n  public subscribeToMore<\n    TSubscriptionData = TData,\n    TSubscriptionVariables extends OperationVariables = TVariables\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >,\n  ) {\n    const subscription = this.queryManager\n      .startGraphQLSubscription({\n        query: options.document,\n        variables: options.variables,\n        context: options.context,\n      })\n      .subscribe({\n        next: (subscriptionData: { data: TSubscriptionData }) => {\n          const { updateQuery } = options;\n          if (updateQuery) {\n            this.updateQuery<TSubscriptionVariables>(\n              (previous, { variables }) =>\n                updateQuery(previous, {\n                  subscriptionData,\n                  variables,\n                }),\n            );\n          }\n        },\n        error: (err: any) => {\n          if (options.onError) {\n            options.onError(err);\n            return;\n          }\n          invariant.error('Unhandled GraphQL subscription error', err);\n        },\n      });\n\n    this.subscriptions.add(subscription);\n\n    return () => {\n      if (this.subscriptions.delete(subscription)) {\n        subscription.unsubscribe();\n      }\n    };\n  }\n\n  public setOptions(\n    newOptions: Partial<WatchQueryOptions<TVariables, TData>>,\n  ): Promise<ApolloQueryResult<TData>> {\n    return this.reobserve(newOptions);\n  }\n\n  /**\n   * This is for *internal* use only. Most users should instead use `refetch`\n   * in order to be properly notified of results even when they come from cache.\n   *\n   * Update the variables of this observable query, and fetch the new results\n   * if they've changed. If you want to force new results, use `refetch`.\n   *\n   * Note: the `next` callback will *not* fire if the variables have not changed\n   * or if the result is coming from cache.\n   *\n   * Note: the promise will return the old results immediately if the variables\n   * have not changed.\n   *\n   * Note: the promise will return null immediately if the query is not active\n   * (there are no subscribers).\n   *\n   * @private\n   *\n   * @param variables: The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   */\n  public setVariables(\n    variables: TVariables,\n  ): Promise<ApolloQueryResult<TData> | void> {\n    if (equal(this.variables, variables)) {\n      // If we have no observers, then we don't actually want to make a network\n      // request. As soon as someone observes the query, the request will kick\n      // off. For now, we just store any changes. (See #1077)\n      return this.observers.size\n        ? this.result()\n        : Promise.resolve();\n    }\n\n    this.options.variables = variables;\n\n    // See comment above\n    if (!this.observers.size) {\n      return Promise.resolve();\n    }\n\n    return this.reobserve({\n      // Reset options.fetchPolicy to its original value.\n      fetchPolicy: this.options.initialFetchPolicy,\n      variables,\n    }, NetworkStatus.setVariables);\n  }\n\n  public updateQuery<TVars extends OperationVariables = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: Pick<WatchQueryOptions<TVars, TData>, \"variables\">,\n    ) => TData,\n  ): void {\n    const { queryManager } = this;\n    const { result } = queryManager.cache.diff<TData>({\n      query: this.options.query,\n      variables: this.variables,\n      returnPartialData: true,\n      optimistic: false,\n    });\n\n    const newResult = mapFn(result!, {\n      variables: (this as any).variables,\n    });\n\n    if (newResult) {\n      queryManager.cache.writeQuery({\n        query: this.options.query,\n        data: newResult,\n        variables: this.variables,\n      });\n\n      queryManager.broadcastQueries();\n    }\n  }\n\n  public startPolling(pollInterval: number) {\n    this.options.pollInterval = pollInterval;\n    this.updatePolling();\n  }\n\n  public stopPolling() {\n    this.options.pollInterval = 0;\n    this.updatePolling();\n  }\n\n  // Update options.fetchPolicy according to options.nextFetchPolicy.\n  private applyNextFetchPolicy(\n    reason: NextFetchPolicyContext<TData, TVariables>[\"reason\"],\n    // It's possible to use this method to apply options.nextFetchPolicy to\n    // options.fetchPolicy even if options !== this.options, though that happens\n    // most often when the options are temporary, used for only one request and\n    // then thrown away, so nextFetchPolicy may not end up mattering.\n    options: WatchQueryOptions<TVariables, TData>,\n  ) {\n    if (options.nextFetchPolicy) {\n      const {\n        fetchPolicy = \"cache-first\",\n        initialFetchPolicy = fetchPolicy,\n      } = options;\n\n      if (fetchPolicy === \"standby\") {\n        // Do nothing, leaving options.fetchPolicy unchanged.\n      } else if (typeof options.nextFetchPolicy === \"function\") {\n        // When someone chooses \"cache-and-network\" or \"network-only\" as their\n        // initial FetchPolicy, they often do not want future cache updates to\n        // trigger unconditional network requests, which is what repeatedly\n        // applying the \"cache-and-network\" or \"network-only\" policies would\n        // seem to imply. Instead, when the cache reports an update after the\n        // initial network request, it may be desirable for subsequent network\n        // requests to be triggered only if the cache result is incomplete. To\n        // that end, the options.nextFetchPolicy option provides an easy way to\n        // update options.fetchPolicy after the initial network request, without\n        // having to call observableQuery.setOptions.\n        options.fetchPolicy = options.nextFetchPolicy(fetchPolicy, {\n          reason,\n          options,\n          observable: this,\n          initialFetchPolicy,\n        });\n      } else if (reason === \"variables-changed\") {\n        options.fetchPolicy = initialFetchPolicy;\n      } else {\n        options.fetchPolicy = options.nextFetchPolicy;\n      }\n    }\n\n    return options.fetchPolicy;\n  }\n\n  private fetch(\n    options: WatchQueryOptions<TVariables, TData>,\n    newNetworkStatus?: NetworkStatus,\n  ): Concast<ApolloQueryResult<TData>> {\n    // TODO Make sure we update the networkStatus (and infer fetchVariables)\n    // before actually committing to the fetch.\n    this.queryManager.setObservableQuery(this);\n    return this.queryManager.fetchQueryObservable(\n      this.queryId,\n      options,\n      newNetworkStatus,\n    );\n  }\n\n  // Turns polling on or off based on this.options.pollInterval.\n  private updatePolling() {\n    // Avoid polling in SSR mode\n    if (this.queryManager.ssrMode) {\n      return;\n    }\n\n    const {\n      pollingInfo,\n      options: {\n        pollInterval,\n      },\n    } = this;\n\n    if (!pollInterval) {\n      if (pollingInfo) {\n        clearTimeout(pollingInfo.timeout);\n        delete this.pollingInfo;\n      }\n      return;\n    }\n\n    if (pollingInfo &&\n        pollingInfo.interval === pollInterval) {\n      return;\n    }\n\n    invariant(\n      pollInterval,\n      'Attempted to start a polling query without a polling interval.',\n    );\n\n    const info = pollingInfo || (this.pollingInfo = {} as any);\n    info.interval = pollInterval;\n\n    const maybeFetch = () => {\n      if (this.pollingInfo) {\n        if (!isNetworkRequestInFlight(this.queryInfo.networkStatus)) {\n          this.reobserve({\n            // Most fetchPolicy options don't make sense to use in a polling context, as\n            // users wouldn't want to be polling the cache directly. However, network-only and\n            // no-cache are both useful for when the user wants to control whether or not the\n            // polled results are written to the cache.\n            fetchPolicy: this.options.initialFetchPolicy === 'no-cache' ? 'no-cache' : 'network-only',\n          }, NetworkStatus.poll).then(poll, poll);\n        } else {\n          poll();\n        }\n      };\n    };\n\n    const poll = () => {\n      const info = this.pollingInfo;\n      if (info) {\n        clearTimeout(info.timeout);\n        info.timeout = setTimeout(maybeFetch, info.interval);\n      }\n    };\n\n    poll();\n  }\n\n  private updateLastResult(\n    newResult: ApolloQueryResult<TData>,\n    variables = this.variables,\n  ) {\n    this.last = {\n      ...this.last,\n      result: this.queryManager.assumeImmutableResults\n        ? newResult\n        : cloneDeep(newResult),\n      variables,\n    };\n    if (!isNonEmptyArray(newResult.errors)) {\n      delete this.last.error;\n    }\n    return this.last;\n  }\n\n  public reobserve(\n    newOptions?: Partial<WatchQueryOptions<TVariables, TData>>,\n    newNetworkStatus?: NetworkStatus,\n  ): Promise<ApolloQueryResult<TData>> {\n    this.isTornDown = false;\n\n    const useDisposableConcast =\n      // Refetching uses a disposable Concast to allow refetches using different\n      // options/variables, without permanently altering the options of the\n      // original ObservableQuery.\n      newNetworkStatus === NetworkStatus.refetch ||\n      // The fetchMore method does not actually call the reobserve method, but,\n      // if it did, it would definitely use a disposable Concast.\n      newNetworkStatus === NetworkStatus.fetchMore ||\n      // Polling uses a disposable Concast so the polling options (which force\n      // fetchPolicy to be \"network-only\" or \"no-cache\") won't override the original options.\n      newNetworkStatus === NetworkStatus.poll;\n\n    // Save the old variables, since Object.assign may modify them below.\n    const oldVariables = this.options.variables;\n    const oldFetchPolicy = this.options.fetchPolicy;\n\n    const mergedOptions = compact(this.options, newOptions || {});\n    const options = useDisposableConcast\n      // Disposable Concast fetches receive a shallow copy of this.options\n      // (merged with newOptions), leaving this.options unmodified.\n      ? mergedOptions\n      : assign(this.options, mergedOptions);\n\n    if (!useDisposableConcast) {\n      // We can skip calling updatePolling if we're not changing this.options.\n      this.updatePolling();\n\n      // Reset options.fetchPolicy to its original value when variables change,\n      // unless a new fetchPolicy was provided by newOptions.\n      if (\n        newOptions &&\n        newOptions.variables &&\n        !equal(newOptions.variables, oldVariables) &&\n        // Don't mess with the fetchPolicy if it's currently \"standby\".\n        options.fetchPolicy !== \"standby\" &&\n        // If we're changing the fetchPolicy anyway, don't try to change it here\n        // using applyNextFetchPolicy. The explicit options.fetchPolicy wins.\n        options.fetchPolicy === oldFetchPolicy\n      ) {\n        this.applyNextFetchPolicy(\"variables-changed\", options);\n        if (newNetworkStatus === void 0) {\n          newNetworkStatus = NetworkStatus.setVariables;\n        }\n      }\n    }\n\n    const variables = options.variables && { ...options.variables };\n    const concast = this.fetch(options, newNetworkStatus);\n    const observer: Observer<ApolloQueryResult<TData>> = {\n      next: result => {\n        this.reportResult(result, variables);\n      },\n      error: error => {\n        this.reportError(error, variables);\n      },\n    };\n\n    if (!useDisposableConcast) {\n      // We use the {add,remove}Observer methods directly to avoid wrapping\n      // observer with an unnecessary SubscriptionObserver object.\n      if (this.concast && this.observer) {\n        this.concast.removeObserver(this.observer);\n      }\n\n      this.concast = concast;\n      this.observer = observer;\n    }\n\n    concast.addObserver(observer);\n\n    return concast.promise;\n  }\n\n  // (Re)deliver the current result to this.observers without applying fetch\n  // policies or making network requests.\n  private observe() {\n    this.reportResult(\n      // Passing false is important so that this.getCurrentResult doesn't\n      // save the fetchMore result as this.lastResult, causing it to be\n      // ignored due to the this.isDifferentFromLastResult check in\n      // this.reportResult.\n      this.getCurrentResult(false),\n      this.variables,\n    );\n  }\n\n  private reportResult(\n    result: ApolloQueryResult<TData>,\n    variables: TVariables | undefined,\n  ) {\n    const lastError = this.getLastError();\n    if (lastError || this.isDifferentFromLastResult(result, variables)) {\n      if (lastError || !result.partial || this.options.returnPartialData) {\n        this.updateLastResult(result, variables);\n      }\n\n      iterateObserversSafely(this.observers, 'next', result);\n    }\n  }\n\n  private reportError(\n    error: ApolloError,\n    variables: TVariables | undefined,\n  ) {\n    // Since we don't get the current result on errors, only the error, we\n    // must mirror the updates that occur in QueryStore.markQueryError here\n    const errorResult = {\n      ...this.getLastResult(),\n      error,\n      errors: error.graphQLErrors,\n      networkStatus: NetworkStatus.error,\n      loading: false,\n    } as ApolloQueryResult<TData>;\n\n    this.updateLastResult(errorResult, variables);\n\n    iterateObserversSafely(this.observers, 'error', this.last!.error = error);\n  }\n\n  public hasObservers() {\n    return this.observers.size > 0;\n  }\n\n  private tearDownQuery() {\n    if (this.isTornDown) return;\n    if (this.concast && this.observer) {\n      this.concast.removeObserver(this.observer);\n      delete this.concast;\n      delete this.observer;\n    }\n\n    this.stopPolling();\n    // stop all active GraphQL subscriptions\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.subscriptions.clear();\n    this.queryManager.stopQuery(this.queryId);\n    this.observers.clear();\n    this.isTornDown = true;\n  }\n}\n\n// Necessary because the ObservableQuery constructor has a different\n// signature than the Observable constructor.\nfixObservableSubclass(ObservableQuery);\n\n// Reobserve with fetchPolicy effectively set to \"cache-first\", triggering\n// delivery of any new data from the cache, possibly falling back to the network\n// if any cache data are missing. This allows _complete_ cache results to be\n// delivered without also kicking off unnecessary network requests when\n// this.options.fetchPolicy is \"cache-and-network\" or \"network-only\". When\n// this.options.fetchPolicy is any other policy (\"cache-first\", \"cache-only\",\n// \"standby\", or \"no-cache\"), we call this.reobserve() as usual.\nexport function reobserveCacheFirst<TData, TVars extends OperationVariables>(\n  obsQuery: ObservableQuery<TData, TVars>,\n) {\n  const { fetchPolicy, nextFetchPolicy } = obsQuery.options;\n\n  if (\n    fetchPolicy === \"cache-and-network\" ||\n    fetchPolicy === \"network-only\"\n  ) {\n    return obsQuery.reobserve({\n      fetchPolicy: \"cache-first\",\n      // Use a temporary nextFetchPolicy function that replaces itself with the\n      // previous nextFetchPolicy value and returns the original fetchPolicy.\n      nextFetchPolicy(this: WatchQueryOptions<TVars, TData>) {\n        // Replace this nextFetchPolicy function in the options object with the\n        // original this.options.nextFetchPolicy value.\n        this.nextFetchPolicy = nextFetchPolicy;\n        // If the original nextFetchPolicy value was a function, give it a\n        // chance to decide what happens here.\n        if (typeof nextFetchPolicy === \"function\") {\n          return nextFetchPolicy.apply(this, arguments);\n        }\n        // Otherwise go back to the original this.options.fetchPolicy.\n        return fetchPolicy!;\n      },\n    });\n  }\n\n  return obsQuery.reobserve();\n}\n\nfunction defaultSubscriptionObserverErrorCallback(error: ApolloError) {\n  invariant.error('Unhandled error', error.message, error.stack);\n}\n\nexport function logMissingFieldErrors(\n  missing: MissingFieldError[] | MissingTree | undefined,\n) {\n  if (__DEV__ && missing) {\n    invariant.debug(`Missing cache result fields: ${\n      JSON.stringify(missing)\n    }`, missing);\n  }\n}\n","import { invariant } from '../utilities/globals';\n\nimport {\n  DocumentNode,\n  OperationDefinitionNode,\n  SelectionSetNode,\n  SelectionNode,\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n  FieldNode,\n  ASTNode,\n  visit,\n  BREAK,\n  isSelectionNode,\n  DirectiveNode,\n  FragmentSpreadNode,\n  ExecutableDefinitionNode,\n} from 'graphql';\n\nimport { ApolloCache } from '../cache';\nimport {\n  FragmentMap,\n  StoreObject,\n  argumentsObjectFromField,\n  buildQueryFromSelectionSet,\n  createFragmentMap,\n  getFragmentDefinitions,\n  getMainDefinition,\n  hasDirectives,\n  isField,\n  isInlineFragment,\n  mergeDeep,\n  mergeDeepArray,\n  removeClientSetsFromDocument,\n  resultKeyNameFromField,\n  shouldInclude,\n} from '../utilities';\nimport { ApolloClient } from './ApolloClient';\nimport { Resolvers, OperationVariables } from './types';\nimport { FetchResult } from '../link/core';\nimport { cacheSlot } from '../cache';\n\nexport type Resolver = (\n  rootValue?: any,\n  args?: any,\n  context?: any,\n  info?: {\n    field: FieldNode;\n    fragmentMap: FragmentMap;\n  },\n) => any;\n\nexport type VariableMap = { [name: string]: any };\n\nexport type FragmentMatcher = (\n  rootValue: any,\n  typeCondition: string,\n  context: any,\n) => boolean;\n\nexport type ExecContext = {\n  fragmentMap: FragmentMap;\n  context: any;\n  variables: VariableMap;\n  fragmentMatcher: FragmentMatcher;\n  defaultOperationType: string;\n  exportedVariables: Record<string, any>;\n  onlyRunForcedResolvers: boolean;\n  selectionsToResolve: Set<SelectionNode>;\n};\n\nexport type LocalStateOptions<TCacheShape> = {\n  cache: ApolloCache<TCacheShape>;\n  client?: ApolloClient<TCacheShape>;\n  resolvers?: Resolvers | Resolvers[];\n  fragmentMatcher?: FragmentMatcher;\n};\n\nexport class LocalState<TCacheShape> {\n  private cache: ApolloCache<TCacheShape>;\n  private client: ApolloClient<TCacheShape>;\n  private resolvers?: Resolvers;\n  private fragmentMatcher: FragmentMatcher;\n  private selectionsToResolveCache = new WeakMap<ExecutableDefinitionNode, Set<SelectionNode>>()\n\n  constructor({\n    cache,\n    client,\n    resolvers,\n    fragmentMatcher,\n  }: LocalStateOptions<TCacheShape>) {\n    this.cache = cache;\n\n    if (client) {\n      this.client = client;\n    }\n\n    if (resolvers) {\n      this.addResolvers(resolvers);\n    }\n\n    if (fragmentMatcher) {\n      this.setFragmentMatcher(fragmentMatcher);\n    }\n  }\n\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = this.resolvers || {};\n    if (Array.isArray(resolvers)) {\n      resolvers.forEach(resolverGroup => {\n        this.resolvers = mergeDeep(this.resolvers, resolverGroup);\n      });\n    } else {\n      this.resolvers = mergeDeep(this.resolvers, resolvers);\n    }\n  }\n\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = {};\n    this.addResolvers(resolvers);\n  }\n\n  public getResolvers() {\n    return this.resolvers || {};\n  }\n\n  // Run local client resolvers against the incoming query and remote data.\n  // Locally resolved field values are merged with the incoming remote data,\n  // and returned. Note that locally resolved fields will overwrite\n  // remote data using the same field name.\n  public async runResolvers<TData>({\n    document,\n    remoteResult,\n    context,\n    variables,\n    onlyRunForcedResolvers = false,\n  }: {\n    document: DocumentNode | null;\n    remoteResult: FetchResult<TData>;\n    context?: Record<string, any>;\n    variables?: Record<string, any>;\n    onlyRunForcedResolvers?: boolean;\n  }): Promise<FetchResult<TData>> {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        remoteResult.data,\n        context,\n        variables,\n        this.fragmentMatcher,\n        onlyRunForcedResolvers,\n      ).then(localResult => ({\n        ...remoteResult,\n        data: localResult.result,\n      }));\n    }\n\n    return remoteResult;\n  }\n\n  public setFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.fragmentMatcher = fragmentMatcher;\n  }\n\n  public getFragmentMatcher(): FragmentMatcher {\n    return this.fragmentMatcher;\n  }\n\n  // Client queries contain everything in the incoming document (if a @client\n  // directive is found).\n  public clientQuery(document: DocumentNode) {\n    if (hasDirectives(['client'], document)) {\n      if (this.resolvers) {\n        return document;\n      }\n    }\n    return null;\n  }\n\n  // Server queries are stripped of all @client based selection sets.\n  public serverQuery(document: DocumentNode) {\n    return removeClientSetsFromDocument(document);\n  }\n\n  public prepareContext(context?: Record<string, any>) {\n    const { cache } = this;\n    return {\n      ...context,\n      cache,\n      // Getting an entry's cache key is useful for local state resolvers.\n      getCacheKey(obj: StoreObject) {\n        return cache.identify(obj);\n      },\n    };\n  }\n\n  // To support `@client @export(as: \"someVar\")` syntax, we'll first resolve\n  // @client @export fields locally, then pass the resolved values back to be\n  // used alongside the original operation variables.\n  public async addExportedVariables(\n    document: DocumentNode,\n    variables: OperationVariables = {},\n    context = {},\n  ) {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        this.buildRootValueFromCache(document, variables) || {},\n        this.prepareContext(context),\n        variables,\n      ).then(data => ({\n        ...variables,\n        ...data.exportedVariables,\n      }));\n    }\n\n    return {\n      ...variables,\n    };\n  }\n\n  public shouldForceResolvers(document: ASTNode) {\n    let forceResolvers = false;\n    visit(document, {\n      Directive: {\n        enter(node) {\n          if (node.name.value === 'client' && node.arguments) {\n            forceResolvers = node.arguments.some(\n              arg =>\n                arg.name.value === 'always' &&\n                arg.value.kind === 'BooleanValue' &&\n                arg.value.value === true,\n            );\n            if (forceResolvers) {\n              return BREAK;\n            }\n          }\n        },\n      },\n    });\n    return forceResolvers;\n  }\n\n  // Query the cache and return matching data.\n  private buildRootValueFromCache(\n    document: DocumentNode,\n    variables?: Record<string, any>,\n  ) {\n    return this.cache.diff({\n      query: buildQueryFromSelectionSet(document),\n      variables,\n      returnPartialData: true,\n      optimistic: false,\n    }).result;\n  }\n\n  private async resolveDocument<TData>(\n    document: DocumentNode,\n    rootValue: TData,\n    context: any = {},\n    variables: VariableMap = {},\n    fragmentMatcher: FragmentMatcher = () => true,\n    onlyRunForcedResolvers: boolean = false,\n  ) {\n    const mainDefinition = getMainDefinition(document) as OperationDefinitionNode;\n    const fragments = getFragmentDefinitions(document);\n    const fragmentMap = createFragmentMap(fragments);\n    const selectionsToResolve = this.collectSelectionsToResolve(mainDefinition, fragmentMap);\n\n    const definitionOperation = mainDefinition.operation;\n\n    const defaultOperationType = definitionOperation\n      ? definitionOperation.charAt(0).toUpperCase() +\n        definitionOperation.slice(1)\n      : 'Query';\n\n    const { cache, client } = this;\n    const execContext: ExecContext = {\n      fragmentMap,\n      context: {\n        ...context,\n        cache,\n        client,\n      },\n      variables,\n      fragmentMatcher,\n      defaultOperationType,\n      exportedVariables: {},\n      selectionsToResolve,\n      onlyRunForcedResolvers,\n    };\n    const isClientFieldDescendant = false;\n\n    return this.resolveSelectionSet(\n      mainDefinition.selectionSet,\n      isClientFieldDescendant,\n      rootValue,\n      execContext,\n    ).then(result => ({\n      result,\n      exportedVariables: execContext.exportedVariables,\n    }));\n  }\n\n  private async resolveSelectionSet<TData>(\n    selectionSet: SelectionSetNode,\n    isClientFieldDescendant: boolean,\n    rootValue: TData,\n    execContext: ExecContext,\n  ) {\n    const { fragmentMap, context, variables } = execContext;\n    const resultsToMerge: TData[] = [rootValue];\n\n    const execute = async (selection: SelectionNode): Promise<void> => {\n      if (!isClientFieldDescendant && !execContext.selectionsToResolve.has(selection)) {\n        // Skip selections without @client directives\n        // (still processing if one of the ancestors or one of the child fields has @client directive)\n        return ;\n      }\n      if (!shouldInclude(selection, variables)) {\n        // Skip this entirely.\n        return;\n      }\n\n      if (isField(selection)) {\n        return this.resolveField(selection, isClientFieldDescendant, rootValue, execContext).then(\n          fieldResult => {\n            if (typeof fieldResult !== 'undefined') {\n              resultsToMerge.push({\n                [resultKeyNameFromField(selection)]: fieldResult,\n              } as TData);\n            }\n          },\n        );\n      }\n\n      let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n      if (isInlineFragment(selection)) {\n        fragment = selection;\n      } else {\n        // This is a named fragment.\n        fragment = fragmentMap[selection.name.value];\n        invariant(fragment, `No fragment named ${selection.name.value}`);\n      }\n\n      if (fragment && fragment.typeCondition) {\n        const typeCondition = fragment.typeCondition.name.value;\n        if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n          return this.resolveSelectionSet(\n            fragment.selectionSet,\n            isClientFieldDescendant,\n            rootValue,\n            execContext,\n          ).then(fragmentResult => {\n            resultsToMerge.push(fragmentResult);\n          });\n        }\n      }\n    };\n\n    return Promise.all(selectionSet.selections.map(execute)).then(function() {\n      return mergeDeepArray(resultsToMerge);\n    });\n  }\n\n  private async resolveField(\n    field: FieldNode,\n    isClientFieldDescendant: boolean,\n    rootValue: any,\n    execContext: ExecContext,\n  ): Promise<any> {\n    if (!rootValue) {\n      return null;\n    }\n\n    const { variables } = execContext;\n    const fieldName = field.name.value;\n    const aliasedFieldName = resultKeyNameFromField(field);\n    const aliasUsed = fieldName !== aliasedFieldName;\n    const defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n    let resultPromise = Promise.resolve(defaultResult);\n\n    // Usually all local resolvers are run when passing through here, but\n    // if we've specifically identified that we only want to run forced\n    // resolvers (that is, resolvers for fields marked with\n    // `@client(always: true)`), then we'll skip running non-forced resolvers.\n    if (\n      !execContext.onlyRunForcedResolvers ||\n      this.shouldForceResolvers(field)\n    ) {\n      const resolverType =\n        rootValue.__typename || execContext.defaultOperationType;\n      const resolverMap = this.resolvers && this.resolvers[resolverType];\n      if (resolverMap) {\n        const resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n        if (resolve) {\n          resultPromise = Promise.resolve(\n            // In case the resolve function accesses reactive variables,\n            // set cacheSlot to the current cache instance.\n            cacheSlot.withValue(this.cache, resolve, [\n              rootValue,\n              argumentsObjectFromField(field, variables),\n              execContext.context,\n              { field, fragmentMap: execContext.fragmentMap },\n            ])\n          );\n        }\n      }\n    }\n\n    return resultPromise.then((result = defaultResult) => {\n      // If an @export directive is associated with the current field, store\n      // the `as` export variable name and current result for later use.\n      if (field.directives) {\n        field.directives.forEach(directive => {\n          if (directive.name.value === 'export' && directive.arguments) {\n            directive.arguments.forEach(arg => {\n              if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                execContext.exportedVariables[arg.value.value] = result;\n              }\n            });\n          }\n        });\n      }\n\n      // Handle all scalar types here.\n      if (!field.selectionSet) {\n        return result;\n      }\n\n      // From here down, the field has a selection set, which means it's trying\n      // to query a GraphQLObjectType.\n      if (result == null) {\n        // Basically any field in a GraphQL response can be null, or missing\n        return result;\n      }\n\n      const isClientField = field.directives?.some(d => d.name.value === 'client') ?? false\n\n      if (Array.isArray(result)) {\n        return this.resolveSubSelectedArray(field, isClientFieldDescendant || isClientField, result, execContext);\n      }\n\n      // Returned value is an object, and the query has a sub-selection. Recurse.\n      if (field.selectionSet) {\n        return this.resolveSelectionSet(\n          field.selectionSet,\n          isClientFieldDescendant || isClientField,\n          result,\n          execContext,\n        );\n      }\n    });\n  }\n\n  private resolveSubSelectedArray(\n    field: FieldNode,\n    isClientFieldDescendant: boolean,\n    result: any[],\n    execContext: ExecContext,\n  ): any {\n    return Promise.all(\n      result.map(item => {\n        if (item === null) {\n          return null;\n        }\n\n        // This is a nested array, recurse.\n        if (Array.isArray(item)) {\n          return this.resolveSubSelectedArray(field, isClientFieldDescendant, item, execContext);\n        }\n\n        // This is an object, run the selection set on it.\n        if (field.selectionSet) {\n          return this.resolveSelectionSet(field.selectionSet, isClientFieldDescendant, item, execContext);\n        }\n      }),\n    );\n  }\n\n  // Collect selection nodes on paths from document root down to all @client directives.\n  // This function takes into account transitive fragment spreads.\n  // Complexity equals to a single `visit` over the full document.\n  private collectSelectionsToResolve(\n    mainDefinition: OperationDefinitionNode,\n    fragmentMap: FragmentMap\n  ): Set<SelectionNode> {\n    const isSingleASTNode = (node: ASTNode | readonly ASTNode[]): node is ASTNode => !Array.isArray(node);\n    const selectionsToResolveCache = this.selectionsToResolveCache;\n\n    function collectByDefinition(definitionNode: ExecutableDefinitionNode): Set<SelectionNode> {\n      if (!selectionsToResolveCache.has(definitionNode)) {\n        const matches = new Set<SelectionNode>();\n        selectionsToResolveCache.set(definitionNode, matches);\n\n        visit(definitionNode, {\n          Directive(node: DirectiveNode, _, __, ___, ancestors) {\n            if (node.name.value === 'client') {\n              ancestors.forEach(node => {\n                if (isSingleASTNode(node) && isSelectionNode(node)) {\n                  matches.add(node);\n                }\n              })\n            }\n          },\n          FragmentSpread(spread: FragmentSpreadNode, _, __, ___, ancestors) {\n            const fragment = fragmentMap[spread.name.value];\n            invariant(fragment, `No fragment named ${spread.name.value}`);\n\n            const fragmentSelections = collectByDefinition(fragment);\n            if (fragmentSelections.size > 0) {\n              // Fragment for this spread contains @client directive (either directly or transitively)\n              // Collect selection nodes on paths from the root down to fields with the @client directive\n              ancestors.forEach(node => {\n                if (isSingleASTNode(node) && isSelectionNode(node)) {\n                  matches.add(node);\n                }\n              })\n              matches.add(spread);\n              fragmentSelections.forEach(selection => {\n                matches.add(selection);\n              })\n            }\n          }\n        })\n      }\n      return selectionsToResolveCache.get(definitionNode)!;\n    }\n    return collectByDefinition(mainDefinition);\n  }\n}\n","import { DocumentNode, GraphQLError } from 'graphql';\nimport { equal } from \"@wry/equality\";\n\nimport { Cache, ApolloCache } from '../cache';\nimport { DeepMerger } from \"../utilities\"\nimport { mergeIncrementalData } from '../utilities/common/incrementalResult';\nimport { WatchQueryOptions, ErrorPolicy } from './watchQueryOptions';\nimport { ObservableQuery, reobserveCacheFirst } from './ObservableQuery';\nimport { QueryListener } from './types';\nimport { FetchResult } from '../link/core';\nimport {\n  ObservableSubscription,\n  isNonEmptyArray,\n  graphQLResultHasError,\n  canUseWeakMap,\n} from '../utilities';\nimport {\n  NetworkStatus,\n  isNetworkRequestInFlight,\n} from './networkStatus';\nimport { ApolloError } from '../errors';\nimport { QueryManager } from './QueryManager';\n\nexport type QueryStoreValue = Pick<QueryInfo,\n  | \"variables\"\n  | \"networkStatus\"\n  | \"networkError\"\n  | \"graphQLErrors\"\n  >;\n\nexport const enum CacheWriteBehavior {\n  FORBID,\n  OVERWRITE,\n  MERGE,\n};\n\nconst destructiveMethodCounts = new (\n  canUseWeakMap ? WeakMap : Map\n)<ApolloCache<any>, number>();\n\nfunction wrapDestructiveCacheMethod(\n  cache: ApolloCache<any>,\n  methodName: keyof ApolloCache<any>,\n) {\n  const original = cache[methodName];\n  if (typeof original === \"function\") {\n    cache[methodName] = function () {\n      destructiveMethodCounts.set(\n        cache,\n        // The %1e15 allows the count to wrap around to 0 safely every\n        // quadrillion evictions, so there's no risk of overflow. To be\n        // clear, this is more of a pedantic principle than something\n        // that matters in any conceivable practical scenario.\n        (destructiveMethodCounts.get(cache)! + 1) % 1e15,\n      );\n      return original.apply(this, arguments);\n    };\n  }\n}\n\nfunction cancelNotifyTimeout(info: QueryInfo) {\n  if (info[\"notifyTimeout\"]) {\n    clearTimeout(info[\"notifyTimeout\"]);\n    info[\"notifyTimeout\"] = void 0;\n  }\n}\n\n// A QueryInfo object represents a single query managed by the\n// QueryManager, which tracks all QueryInfo objects by queryId in its\n// this.queries Map. QueryInfo objects store the latest results and errors\n// for the given query, and are responsible for reporting those results to\n// the corresponding ObservableQuery, via the QueryInfo.notify method.\n// Results are reported asynchronously whenever setDiff marks the\n// QueryInfo object as dirty, though a call to the QueryManager's\n// broadcastQueries method may trigger the notification before it happens\n// automatically. This class used to be a simple interface type without\n// any field privacy or meaningful methods, which is why it still has so\n// many public fields. The effort to lock down and simplify the QueryInfo\n// interface is ongoing, and further improvements are welcome.\nexport class QueryInfo {\n  listeners = new Set<QueryListener>();\n  document: DocumentNode | null = null;\n  lastRequestId = 1;\n  subscriptions = new Set<ObservableSubscription>();\n  variables?: Record<string, any>;\n  networkStatus?: NetworkStatus;\n  networkError?: Error | null;\n  graphQLErrors?: ReadonlyArray<GraphQLError>;\n  stopped = false;\n\n  private cache: ApolloCache<any>;\n\n  constructor(\n    queryManager: QueryManager<any>,\n    public readonly queryId = queryManager.generateQueryId(),\n  ) {\n    const cache = this.cache = queryManager.cache;\n\n    // Track how often cache.evict is called, since we want eviction to\n    // override the feud-stopping logic in the markResult method, by\n    // causing shouldWrite to return true. Wrapping the cache.evict method\n    // is a bit of a hack, but it saves us from having to make eviction\n    // counting an official part of the ApolloCache API.\n    if (!destructiveMethodCounts.has(cache)) {\n      destructiveMethodCounts.set(cache, 0);\n      wrapDestructiveCacheMethod(cache, \"evict\");\n      wrapDestructiveCacheMethod(cache, \"modify\");\n      wrapDestructiveCacheMethod(cache, \"reset\");\n    }\n  }\n\n  public init(query: {\n    document: DocumentNode;\n    variables: Record<string, any> | undefined,\n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus?: NetworkStatus,\n    observableQuery?: ObservableQuery<any>;\n    lastRequestId?: number;\n  }): this {\n    let networkStatus = query.networkStatus || NetworkStatus.loading;\n    if (this.variables &&\n        this.networkStatus !== NetworkStatus.loading &&\n        !equal(this.variables, query.variables)) {\n      networkStatus = NetworkStatus.setVariables;\n    }\n\n    if (!equal(query.variables, this.variables)) {\n      this.lastDiff = void 0;\n    }\n\n    Object.assign(this, {\n      document: query.document,\n      variables: query.variables,\n      networkError: null,\n      graphQLErrors: this.graphQLErrors || [],\n      networkStatus,\n    });\n\n    if (query.observableQuery) {\n      this.setObservableQuery(query.observableQuery);\n    }\n\n    if (query.lastRequestId) {\n      this.lastRequestId = query.lastRequestId;\n    }\n\n    return this;\n  }\n\n  private dirty: boolean = false;\n\n  private notifyTimeout?: ReturnType<typeof setTimeout>;\n\n  reset() {\n    cancelNotifyTimeout(this);\n    this.dirty = false;\n  }\n\n  getDiff(variables = this.variables): Cache.DiffResult<any> {\n    const options = this.getDiffOptions(variables);\n\n    if (this.lastDiff && equal(options, this.lastDiff.options)) {\n      return this.lastDiff.diff;\n    }\n\n    this.updateWatch(this.variables = variables);\n\n    const oq = this.observableQuery;\n    if (oq && oq.options.fetchPolicy === \"no-cache\") {\n      return { complete: false };\n    }\n\n    const diff = this.cache.diff(options);\n    this.updateLastDiff(diff, options);\n    return diff;\n  }\n\n  private lastDiff?: {\n    diff: Cache.DiffResult<any>,\n    options: Cache.DiffOptions,\n  };\n\n  private updateLastDiff(\n    diff: Cache.DiffResult<any> | null,\n    options?: Cache.DiffOptions,\n  ) {\n    this.lastDiff = diff ? {\n      diff,\n      options: options || this.getDiffOptions(),\n    } : void 0;\n  }\n\n  private getDiffOptions(variables = this.variables): Cache.DiffOptions {\n    return {\n      query: this.document!,\n      variables,\n      returnPartialData: true,\n      optimistic: true,\n      canonizeResults: this.observableQuery?.options.canonizeResults,\n    };\n  }\n\n  setDiff(diff: Cache.DiffResult<any> | null) {\n    const oldDiff = this.lastDiff && this.lastDiff.diff;\n    this.updateLastDiff(diff);\n    if (!this.dirty &&\n        !equal(oldDiff && oldDiff.result,\n               diff && diff.result)) {\n      this.dirty = true;\n      if (!this.notifyTimeout) {\n        this.notifyTimeout = setTimeout(() => this.notify(), 0);\n      }\n    }\n  }\n\n  public readonly observableQuery: ObservableQuery<any> | null = null;\n  private oqListener?: QueryListener;\n\n  setObservableQuery(oq: ObservableQuery<any> | null) {\n    if (oq === this.observableQuery) return;\n\n    if (this.oqListener) {\n      this.listeners.delete(this.oqListener);\n    }\n\n    (this as any).observableQuery = oq;\n\n    if (oq) {\n      oq[\"queryInfo\"] = this;\n      this.listeners.add(this.oqListener = () => {\n        const diff = this.getDiff();\n        if (diff.fromOptimisticTransaction) {\n          // If this diff came from an optimistic transaction, deliver the\n          // current cache data to the ObservableQuery, but don't perform a\n          // reobservation, since oq.reobserveCacheFirst might make a network\n          // request, and we never want to trigger network requests in the\n          // middle of optimistic updates.\n          oq[\"observe\"]();\n        } else {\n          // Otherwise, make the ObservableQuery \"reobserve\" the latest data\n          // using a temporary fetch policy of \"cache-first\", so complete cache\n          // results have a chance to be delivered without triggering additional\n          // network requests, even when options.fetchPolicy is \"network-only\"\n          // or \"cache-and-network\". All other fetch policies are preserved by\n          // this method, and are handled by calling oq.reobserve(). If this\n          // reobservation is spurious, isDifferentFromLastResult still has a\n          // chance to catch it before delivery to ObservableQuery subscribers.\n          reobserveCacheFirst(oq);\n        }\n      });\n    } else {\n      delete this.oqListener;\n    }\n  }\n\n  notify() {\n    cancelNotifyTimeout(this);\n\n    if (this.shouldNotify()) {\n      this.listeners.forEach(listener => listener(this));\n    }\n\n    this.dirty = false;\n  }\n\n  private shouldNotify() {\n    if (!this.dirty || !this.listeners.size) {\n      return false;\n    }\n\n    if (isNetworkRequestInFlight(this.networkStatus) &&\n        this.observableQuery) {\n      const { fetchPolicy } = this.observableQuery.options;\n      if (fetchPolicy !== \"cache-only\" &&\n          fetchPolicy !== \"cache-and-network\") {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  public stop() {\n    if (!this.stopped) {\n      this.stopped = true;\n\n      // Cancel the pending notify timeout\n      this.reset();\n\n      this.cancel();\n      // Revert back to the no-op version of cancel inherited from\n      // QueryInfo.prototype.\n      this.cancel = QueryInfo.prototype.cancel;\n\n      this.subscriptions.forEach(sub => sub.unsubscribe());\n\n      const oq = this.observableQuery;\n      if (oq) oq.stopPolling();\n    }\n  }\n\n  // This method is a no-op by default, until/unless overridden by the\n  // updateWatch method.\n  private cancel() {}\n\n  private lastWatch?: Cache.WatchOptions;\n\n  private updateWatch(variables = this.variables) {\n    const oq = this.observableQuery;\n    if (oq && oq.options.fetchPolicy === \"no-cache\") {\n      return;\n    }\n\n    const watchOptions: Cache.WatchOptions = {\n      // Although this.getDiffOptions returns Cache.DiffOptions instead of\n      // Cache.WatchOptions, all the overlapping options should be the same, so\n      // we can reuse getDiffOptions here, for consistency.\n      ...this.getDiffOptions(variables),\n      watcher: this,\n      callback: diff => this.setDiff(diff),\n    };\n\n    if (!this.lastWatch ||\n        !equal(watchOptions, this.lastWatch)) {\n      this.cancel();\n      this.cancel = this.cache.watch(this.lastWatch = watchOptions);\n    }\n  }\n\n  private lastWrite?: {\n    result: FetchResult<any>;\n    variables: WatchQueryOptions[\"variables\"];\n    dmCount: number | undefined;\n  };\n\n  public resetLastWrite() {\n    this.lastWrite = void 0;\n  }\n\n  private shouldWrite(\n    result: FetchResult<any>,\n    variables: WatchQueryOptions[\"variables\"],\n  ) {\n    const { lastWrite } = this;\n    return !(\n      lastWrite &&\n      // If cache.evict has been called since the last time we wrote this\n      // data into the cache, there's a chance writing this result into\n      // the cache will repair what was evicted.\n      lastWrite.dmCount === destructiveMethodCounts.get(this.cache) &&\n      equal(variables, lastWrite.variables) &&\n      equal(result.data, lastWrite.result.data)\n    );\n  }\n\n  public markResult<T>(\n    result: FetchResult<T>,\n    document: DocumentNode,\n    options: Pick<WatchQueryOptions,\n      | \"variables\"\n      | \"fetchPolicy\"\n      | \"errorPolicy\">,\n    cacheWriteBehavior: CacheWriteBehavior,\n  ) {\n    const merger = new DeepMerger();\n    const graphQLErrors = isNonEmptyArray(result.errors)\n      ? result.errors.slice(0)\n      : [];\n\n    // Cancel the pending notify timeout (if it exists) to prevent extraneous network\n    // requests. To allow future notify timeouts, diff and dirty are reset as well.\n    this.reset();\n\n    if ('incremental' in result && isNonEmptyArray(result.incremental)) {\n      const mergedData = mergeIncrementalData(this.getDiff().result, result);\n      result.data = mergedData;\n\n    // Detect the first chunk of a deferred query and merge it with existing\n    // cache data. This ensures a `cache-first` fetch policy that returns\n    // partial cache data or a `cache-and-network` fetch policy that already\n    // has full data in the cache does not complain when trying to merge the\n    // initial deferred server data with existing cache data.\n    } else if ('hasNext' in result && result.hasNext) {\n      const diff = this.getDiff();\n      result.data = merger.merge(diff.result, result.data)\n    }\n\n    this.graphQLErrors = graphQLErrors;\n\n    if (options.fetchPolicy === 'no-cache') {\n      this.updateLastDiff(\n        { result: result.data, complete: true },\n        this.getDiffOptions(options.variables),\n      );\n\n    } else if (cacheWriteBehavior !== CacheWriteBehavior.FORBID) {\n      if (shouldWriteResult(result, options.errorPolicy)) {\n        // Using a transaction here so we have a chance to read the result\n        // back from the cache before the watch callback fires as a result\n        // of writeQuery, so we can store the new diff quietly and ignore\n        // it when we receive it redundantly from the watch callback.\n        this.cache.performTransaction(cache => {\n          if (this.shouldWrite(result, options.variables)) {\n            cache.writeQuery({\n              query: document,\n              data: result.data as T,\n              variables: options.variables,\n              overwrite: cacheWriteBehavior === CacheWriteBehavior.OVERWRITE,\n            });\n\n            this.lastWrite = {\n              result,\n              variables: options.variables,\n              dmCount: destructiveMethodCounts.get(this.cache),\n            };\n          } else {\n            // If result is the same as the last result we received from\n            // the network (and the variables match too), avoid writing\n            // result into the cache again. The wisdom of skipping this\n            // cache write is far from obvious, since any cache write\n            // could be the one that puts the cache back into a desired\n            // state, fixing corruption or missing data. However, if we\n            // always write every network result into the cache, we enable\n            // feuds between queries competing to update the same data in\n            // incompatible ways, which can lead to an endless cycle of\n            // cache broadcasts and useless network requests. As with any\n            // feud, eventually one side must step back from the brink,\n            // letting the other side(s) have the last word(s). There may\n            // be other points where we could break this cycle, such as\n            // silencing the broadcast for cache.writeQuery (not a good\n            // idea, since it just delays the feud a bit) or somehow\n            // avoiding the network request that just happened (also bad,\n            // because the server could return useful new data). All\n            // options considered, skipping this cache write seems to be\n            // the least damaging place to break the cycle, because it\n            // reflects the intuition that we recently wrote this exact\n            // result into the cache, so the cache *should* already/still\n            // contain this data. If some other query has clobbered that\n            // data in the meantime, that's too bad, but there will be no\n            // winners if every query blindly reverts to its own version\n            // of the data. This approach also gives the network a chance\n            // to return new data, which will be written into the cache as\n            // usual, notifying only those queries that are directly\n            // affected by the cache updates, as usual. In the future, an\n            // even more sophisticated cache could perhaps prevent or\n            // mitigate the clobbering somehow, but that would make this\n            // particular cache write even less important, and thus\n            // skipping it would be even safer than it is today.\n            if (this.lastDiff &&\n                this.lastDiff.diff.complete) {\n              // Reuse data from the last good (complete) diff that we\n              // received, when possible.\n              result.data = this.lastDiff.diff.result;\n              return;\n            }\n            // If the previous this.diff was incomplete, fall through to\n            // re-reading the latest data with cache.diff, below.\n          }\n\n          const diffOptions = this.getDiffOptions(options.variables);\n          const diff = cache.diff<T>(diffOptions);\n\n          // In case the QueryManager stops this QueryInfo before its\n          // results are delivered, it's important to avoid restarting the\n          // cache watch when markResult is called.\n          if (!this.stopped) {\n            // Any time we're about to update this.diff, we need to make\n            // sure we've started watching the cache.\n            this.updateWatch(options.variables);\n          }\n\n          // If we're allowed to write to the cache, and we can read a\n          // complete result from the cache, update result.data to be the\n          // result from the cache, rather than the raw network result.\n          // Set without setDiff to avoid triggering a notify call, since\n          // we have other ways of notifying for this result.\n          this.updateLastDiff(diff, diffOptions);\n          if (diff.complete) {\n            result.data = diff.result;\n          }\n        });\n      } else {\n        this.lastWrite = void 0;\n      }\n    }\n  }\n\n  public markReady() {\n    this.networkError = null;\n    return this.networkStatus = NetworkStatus.ready;\n  }\n\n  public markError(error: ApolloError) {\n    this.networkStatus = NetworkStatus.error;\n    this.lastWrite = void 0;\n\n    this.reset();\n\n    if (error.graphQLErrors) {\n      this.graphQLErrors = error.graphQLErrors;\n    }\n\n    if (error.networkError) {\n      this.networkError = error.networkError;\n    }\n\n    return error;\n  }\n}\n\nexport function shouldWriteResult<T>(\n  result: FetchResult<T>,\n  errorPolicy: ErrorPolicy = \"none\",\n) {\n  const ignoreErrors =\n    errorPolicy === \"ignore\" ||\n    errorPolicy === \"all\";\n  let writeWithErrors = !graphQLResultHasError(result);\n  if (!writeWithErrors && ignoreErrors && result.data) {\n    writeWithErrors = true;\n  }\n  return writeWithErrors;\n}\n","import { invariant, InvariantError } from '../utilities/globals';\n\nimport { DocumentNode } from 'graphql';\n// TODO(brian): A hack until this issue is resolved (https://github.com/graphql/graphql-js/issues/3356)\ntype OperationTypeNode = any;\nimport { equal } from '@wry/equality';\n\nimport { ApolloLink, execute, FetchResult } from '../link/core';\nimport {\n  isExecutionPatchIncrementalResult,\n  isExecutionPatchResult,\n} from '../utilities/common/incrementalResult';\nimport { Cache, ApolloCache, canonicalStringify } from '../cache';\n\nimport {\n  getDefaultValues,\n  getOperationDefinition,\n  getOperationName,\n  hasClientExports,\n  graphQLResultHasError,\n  getGraphQLErrorsFromResult,\n  removeConnectionDirectiveFromDocument,\n  canUseWeakMap,\n  ObservableSubscription,\n  Observable,\n  asyncMap,\n  isNonEmptyArray,\n  Concast,\n  ConcastSourcesArray,\n  makeUniqueId,\n  isDocumentNode,\n  isNonNullObject,\n} from '../utilities';\nimport { mergeIncrementalData } from '../utilities/common/incrementalResult';\nimport { ApolloError, isApolloError } from '../errors';\nimport {\n  QueryOptions,\n  WatchQueryOptions,\n  SubscriptionOptions,\n  MutationOptions,\n  ErrorPolicy,\n  MutationFetchPolicy,\n} from './watchQueryOptions';\nimport { ObservableQuery, logMissingFieldErrors } from './ObservableQuery';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport {\n  ApolloQueryResult,\n  OperationVariables,\n  MutationUpdaterFunction,\n  OnQueryUpdated,\n  InternalRefetchQueriesInclude,\n  InternalRefetchQueriesOptions,\n  InternalRefetchQueriesResult,\n  InternalRefetchQueriesMap,\n} from './types';\nimport { LocalState } from './LocalState';\n\nimport {\n  QueryInfo,\n  QueryStoreValue,\n  shouldWriteResult,\n  CacheWriteBehavior,\n} from './QueryInfo';\n\nconst { hasOwnProperty } = Object.prototype;\n\ninterface MutationStoreValue {\n  mutation: DocumentNode;\n  variables: Record<string, any>;\n  loading: boolean;\n  error: Error | null;\n}\n\ntype UpdateQueries<TData> = MutationOptions<TData, any, any>[\"updateQueries\"];\n\ninterface TransformCacheEntry {\n  document: DocumentNode;\n  hasClientExports: boolean;\n  hasForcedResolvers: boolean;\n  clientQuery: DocumentNode | null;\n  serverQuery: DocumentNode | null;\n  defaultVars: OperationVariables;\n  asQuery: DocumentNode;\n}\n\ntype DefaultOptions = import(\"./ApolloClient\").DefaultOptions;\n\nexport class QueryManager<TStore> {\n  public cache: ApolloCache<TStore>;\n  public link: ApolloLink;\n  public defaultOptions: DefaultOptions;\n\n  public readonly assumeImmutableResults: boolean;\n  public readonly ssrMode: boolean;\n\n  private queryDeduplication: boolean;\n  private clientAwareness: Record<string, string> = {};\n  private localState: LocalState<TStore>;\n\n  private onBroadcast?: () => void;\n  public mutationStore?: {\n    [mutationId: string]: MutationStoreValue;\n  };\n\n  // All the queries that the QueryManager is currently managing (not\n  // including mutations and subscriptions).\n  private queries = new Map<string, QueryInfo>();\n\n  // Maps from queryId strings to Promise rejection functions for\n  // currently active queries and fetches.\n  private fetchCancelFns = new Map<string, (error: any) => any>();\n\n  constructor({\n    cache,\n    link,\n    defaultOptions,\n    queryDeduplication = false,\n    onBroadcast,\n    ssrMode = false,\n    clientAwareness = {},\n    localState,\n    assumeImmutableResults,\n  }: {\n    cache: ApolloCache<TStore>;\n    link: ApolloLink;\n    defaultOptions?: DefaultOptions;\n    queryDeduplication?: boolean;\n    onBroadcast?: () => void;\n    ssrMode?: boolean;\n    clientAwareness?: Record<string, string>;\n    localState?: LocalState<TStore>;\n    assumeImmutableResults?: boolean;\n  }) {\n    this.cache = cache;\n    this.link = link;\n    this.defaultOptions = defaultOptions || Object.create(null);\n    this.queryDeduplication = queryDeduplication;\n    this.clientAwareness = clientAwareness;\n    this.localState = localState || new LocalState({ cache });\n    this.ssrMode = ssrMode;\n    this.assumeImmutableResults = !!assumeImmutableResults;\n    if ((this.onBroadcast = onBroadcast)) {\n      this.mutationStore = Object.create(null);\n    }\n  }\n\n  /**\n   * Call this method to terminate any active query processes, making it safe\n   * to dispose of this QueryManager instance.\n   */\n  public stop() {\n    this.queries.forEach((_info, queryId) => {\n      this.stopQueryNoBroadcast(queryId);\n    });\n\n    this.cancelPendingFetches(\n      new InvariantError('QueryManager stopped while query was in flight'),\n    );\n  }\n\n  private cancelPendingFetches(error: Error) {\n    this.fetchCancelFns.forEach(cancel => cancel(error));\n    this.fetchCancelFns.clear();\n  }\n\n  public async mutate<\n    TData,\n    TVariables extends OperationVariables,\n    TContext extends Record<string, any>,\n    TCache extends ApolloCache<any>\n  >({\n    mutation,\n    variables,\n    optimisticResponse,\n    updateQueries,\n    refetchQueries = [],\n    awaitRefetchQueries = false,\n    update: updateWithProxyFn,\n    onQueryUpdated,\n    fetchPolicy = this.defaultOptions.mutate?.fetchPolicy || \"network-only\",\n    errorPolicy = this.defaultOptions.mutate?.errorPolicy || \"none\",\n    keepRootFields,\n    context,\n  }: MutationOptions<TData, TVariables, TContext>): Promise<FetchResult<TData>> {\n    invariant(\n      mutation,\n      'mutation option is required. You must specify your GraphQL document in the mutation option.',\n    );\n\n    invariant(\n      fetchPolicy === 'network-only' ||\n      fetchPolicy === 'no-cache',\n      \"Mutations support only 'network-only' or 'no-cache' fetchPolicy strings. The default `network-only` behavior automatically writes mutation results to the cache. Passing `no-cache` skips the cache write.\"\n    );\n\n    const mutationId = this.generateMutationId();\n\n    const {\n      document,\n      hasClientExports,\n    } = this.transform(mutation);\n    mutation = this.cache.transformForLink(document);\n\n    variables = this.getVariables(mutation, variables) as TVariables;\n    if (hasClientExports) {\n      variables = await this.localState.addExportedVariables(mutation, variables, context) as TVariables;\n    }\n\n    const mutationStoreValue =\n      this.mutationStore &&\n      (this.mutationStore[mutationId] = {\n        mutation,\n        variables,\n        loading: true,\n        error: null,\n      } as MutationStoreValue);\n\n    if (optimisticResponse) {\n      this.markMutationOptimistic<\n        TData,\n        TVariables,\n        TContext,\n        TCache\n      >(optimisticResponse, {\n        mutationId,\n        document: mutation,\n        variables,\n        fetchPolicy,\n        errorPolicy,\n        context,\n        updateQueries,\n        update: updateWithProxyFn,\n        keepRootFields,\n      });\n    }\n\n    this.broadcastQueries();\n\n    const self = this;\n\n    return new Promise((resolve, reject) => {\n      return asyncMap(\n        self.getObservableFromLink(\n          mutation,\n          {\n            ...context,\n            optimisticResponse,\n          },\n          variables,\n          false,\n        ),\n\n        (result: FetchResult<TData>) => {\n          if (graphQLResultHasError(result) && errorPolicy === 'none') {\n            throw new ApolloError({\n              graphQLErrors: getGraphQLErrorsFromResult(result),\n            });\n          }\n\n          if (mutationStoreValue) {\n            mutationStoreValue.loading = false;\n            mutationStoreValue.error = null;\n          }\n\n          const storeResult: typeof result = { ...result };\n\n          if (typeof refetchQueries === \"function\") {\n            refetchQueries = refetchQueries(storeResult);\n          }\n\n          if (errorPolicy === 'ignore' &&\n              graphQLResultHasError(storeResult)) {\n            delete storeResult.errors;\n          }\n\n          return self.markMutationResult<\n            TData,\n            TVariables,\n            TContext,\n            TCache\n          >({\n            mutationId,\n            result: storeResult,\n            document: mutation,\n            variables,\n            fetchPolicy,\n            errorPolicy,\n            context,\n            update: updateWithProxyFn,\n            updateQueries,\n            awaitRefetchQueries,\n            refetchQueries,\n            removeOptimistic: optimisticResponse ? mutationId : void 0,\n            onQueryUpdated,\n            keepRootFields,\n          });\n        },\n\n      ).subscribe({\n        next(storeResult) {\n          self.broadcastQueries();\n\n          // Since mutations might receive multiple payloads from the\n          // ApolloLink chain (e.g. when used with @defer),\n          // we resolve with a SingleExecutionResult or after the final\n          // ExecutionPatchResult has arrived and we have assembled the\n          // multipart response into a single result.\n          if (!('hasNext' in storeResult) || storeResult.hasNext === false) {\n            resolve(storeResult);\n          }\n        },\n\n        error(err: Error) {\n          if (mutationStoreValue) {\n            mutationStoreValue.loading = false;\n            mutationStoreValue.error = err;\n          }\n\n          if (optimisticResponse) {\n            self.cache.removeOptimistic(mutationId);\n          }\n\n          self.broadcastQueries();\n\n          reject(\n            err instanceof ApolloError ? err : new ApolloError({\n              networkError: err,\n            }),\n          );\n        },\n      });\n    });\n  }\n\n  public markMutationResult<\n    TData,\n    TVariables,\n    TContext,\n    TCache extends ApolloCache<any>\n  >(\n    mutation: {\n      mutationId: string;\n      result: FetchResult<TData>;\n      document: DocumentNode;\n      variables?: TVariables;\n      fetchPolicy?: MutationFetchPolicy;\n      errorPolicy: ErrorPolicy;\n      context?: TContext;\n      updateQueries: UpdateQueries<TData>;\n      update?: MutationUpdaterFunction<TData, TVariables, TContext, TCache>;\n      awaitRefetchQueries?: boolean;\n      refetchQueries?: InternalRefetchQueriesInclude;\n      removeOptimistic?: string;\n      onQueryUpdated?: OnQueryUpdated<any>;\n      keepRootFields?: boolean;\n    },\n    cache = this.cache,\n  ): Promise<FetchResult<TData>> {\n    let { result } = mutation;\n    const cacheWrites: Cache.WriteOptions[] = [];\n    const skipCache = mutation.fetchPolicy === \"no-cache\";\n\n    if (!skipCache && shouldWriteResult(result, mutation.errorPolicy)) {\n      if (!isExecutionPatchIncrementalResult(result)) {\n        cacheWrites.push({\n          result: result.data,\n          dataId: 'ROOT_MUTATION',\n          query: mutation.document,\n          variables: mutation.variables,\n        });\n      }\n      if (isExecutionPatchIncrementalResult(result) && isNonEmptyArray(result.incremental)) {\n        const diff = cache.diff<TData>({\n          id: \"ROOT_MUTATION\",\n          // The cache complains if passed a mutation where it expects a\n          // query, so we transform mutations and subscriptions to queries\n          // (only once, thanks to this.transformCache).\n          query: this.transform(mutation.document).asQuery,\n          variables: mutation.variables,\n          optimistic: false,\n          returnPartialData: true,\n        });\n        let mergedData;\n        if (diff.result) {\n          mergedData = mergeIncrementalData(diff.result, result);\n        }\n        if (typeof mergedData !== 'undefined') {\n          // cast the ExecutionPatchResult to FetchResult here since\n          // ExecutionPatchResult never has `data` when returned from the server\n          (result as FetchResult).data = mergedData;\n          cacheWrites.push({\n            result: mergedData,\n            dataId: 'ROOT_MUTATION',\n            query: mutation.document,\n            variables: mutation.variables,\n          })\n        }\n      }\n\n      const { updateQueries } = mutation;\n      if (updateQueries) {\n        this.queries.forEach(({ observableQuery }, queryId) => {\n          const queryName = observableQuery && observableQuery.queryName;\n          if (!queryName || !hasOwnProperty.call(updateQueries, queryName)) {\n            return;\n          }\n          const updater = updateQueries[queryName];\n          const { document, variables } = this.queries.get(queryId)!;\n\n          // Read the current query result from the store.\n          const { result: currentQueryResult, complete } = cache.diff<TData>({\n            query: document!,\n            variables,\n            returnPartialData: true,\n            optimistic: false,\n          });\n\n          if (complete && currentQueryResult) {\n            // Run our reducer using the current query result and the mutation result.\n            const nextQueryResult = updater(currentQueryResult, {\n              mutationResult: result,\n              queryName: document && getOperationName(document) || void 0,\n              queryVariables: variables!,\n            });\n\n            // Write the modified result back into the store if we got a new result.\n            if (nextQueryResult) {\n              cacheWrites.push({\n                result: nextQueryResult,\n                dataId: 'ROOT_QUERY',\n                query: document!,\n                variables,\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      cacheWrites.length > 0 ||\n      mutation.refetchQueries ||\n      mutation.update ||\n      mutation.onQueryUpdated ||\n      mutation.removeOptimistic\n    ) {\n      const results: any[] = [];\n\n      this.refetchQueries({\n        updateCache: (cache: TCache) => {\n          if (!skipCache) {\n            cacheWrites.forEach(write => cache.write(write));\n          }\n\n          // If the mutation has some writes associated with it then we need to\n          // apply those writes to the store by running this reducer again with\n          // a write action.\n          const { update } = mutation;\n          // Determine whether result is a SingleExecutionResult,\n          // or the final ExecutionPatchResult.\n          const isFinalResult =\n            !isExecutionPatchResult(result) ||\n            (isExecutionPatchIncrementalResult(result) && !result.hasNext);\n\n          if (update) {\n            if (!skipCache) {\n              // Re-read the ROOT_MUTATION data we just wrote into the cache\n              // (the first cache.write call in the cacheWrites.forEach loop\n              // above), so field read functions have a chance to run for\n              // fields within mutation result objects.\n              const diff = cache.diff<TData>({\n                id: \"ROOT_MUTATION\",\n                // The cache complains if passed a mutation where it expects a\n                // query, so we transform mutations and subscriptions to queries\n                // (only once, thanks to this.transformCache).\n                query: this.transform(mutation.document).asQuery,\n                variables: mutation.variables,\n                optimistic: false,\n                returnPartialData: true,\n              });\n\n              if (diff.complete) {\n                result = { ...result as FetchResult, data: diff.result };\n                if ('incremental' in result) {\n                  delete result.incremental;\n                }\n                if ('hasNext' in result) {\n                  delete result.hasNext;\n                }\n              }\n            }\n\n            // If we've received the whole response,\n            // either a SingleExecutionResult or the final ExecutionPatchResult,\n            // call the update function.\n            if (isFinalResult) {\n              update(cache, result, {\n                context: mutation.context,\n                variables: mutation.variables,\n              });\n            }\n          }\n\n          // TODO Do this with cache.evict({ id: 'ROOT_MUTATION' }) but make it\n          // shallow to allow rolling back optimistic evictions.\n          if (!skipCache && !mutation.keepRootFields && isFinalResult) {\n            cache.modify({\n              id: 'ROOT_MUTATION',\n              fields(value, { fieldName, DELETE }) {\n                return fieldName === \"__typename\" ? value : DELETE;\n              },\n            });\n          }\n        },\n\n        include: mutation.refetchQueries,\n\n        // Write the final mutation.result to the root layer of the cache.\n        optimistic: false,\n\n        // Remove the corresponding optimistic layer at the same time as we\n        // write the final non-optimistic result.\n        removeOptimistic: mutation.removeOptimistic,\n\n        // Let the caller of client.mutate optionally determine the refetching\n        // behavior for watched queries after the mutation.update function runs.\n        // If no onQueryUpdated function was provided for this mutation, pass\n        // null instead of undefined to disable the default refetching behavior.\n        onQueryUpdated: mutation.onQueryUpdated || null,\n\n      }).forEach(result => results.push(result));\n\n      if (mutation.awaitRefetchQueries || mutation.onQueryUpdated) {\n        // Returning a promise here makes the mutation await that promise, so we\n        // include results in that promise's work if awaitRefetchQueries or an\n        // onQueryUpdated function was specified.\n        return Promise.all(results).then(() => result);\n      }\n    }\n\n    return Promise.resolve(result);\n  }\n\n  public markMutationOptimistic<TData, TVariables, TContext, TCache extends ApolloCache<any>>(\n    optimisticResponse: any,\n    mutation: {\n      mutationId: string;\n      document: DocumentNode;\n      variables?: TVariables;\n      fetchPolicy?: MutationFetchPolicy;\n      errorPolicy: ErrorPolicy;\n      context?: TContext;\n      updateQueries: UpdateQueries<TData>,\n      update?: MutationUpdaterFunction<TData, TVariables, TContext, TCache>;\n      keepRootFields?: boolean,\n    },\n  ) {\n    const data = typeof optimisticResponse === \"function\"\n      ? optimisticResponse(mutation.variables)\n      : optimisticResponse;\n\n    return this.cache.recordOptimisticTransaction(cache => {\n      try {\n        this.markMutationResult<TData, TVariables, TContext, TCache>({\n          ...mutation,\n          result: { data },\n        }, cache);\n      } catch (error) {\n        invariant.error(error);\n      }\n    }, mutation.mutationId);\n  }\n\n  public fetchQuery<TData, TVars extends OperationVariables>(\n    queryId: string,\n    options: WatchQueryOptions<TVars, TData>,\n    networkStatus?: NetworkStatus,\n  ): Promise<ApolloQueryResult<TData>> {\n    return this.fetchQueryObservable<TData, TVars>(\n      queryId,\n      options,\n      networkStatus,\n    ).promise;\n  }\n\n  public getQueryStore() {\n    const store: Record<string, QueryStoreValue> = Object.create(null);\n    this.queries.forEach((info, queryId) => {\n      store[queryId] = {\n        variables: info.variables,\n        networkStatus: info.networkStatus,\n        networkError: info.networkError,\n        graphQLErrors: info.graphQLErrors,\n      };\n    });\n    return store;\n  }\n\n  public resetErrors(queryId: string) {\n    const queryInfo = this.queries.get(queryId);\n    if (queryInfo) {\n      queryInfo.networkError = undefined;\n      queryInfo.graphQLErrors = [];\n    }\n  }\n\n  private transformCache = new (\n    canUseWeakMap ? WeakMap : Map\n  )<DocumentNode, TransformCacheEntry>();\n\n  public transform(document: DocumentNode) {\n    const { transformCache } = this;\n\n    if (!transformCache.has(document)) {\n      const transformed = this.cache.transformDocument(document);\n      const noConnection = removeConnectionDirectiveFromDocument(transformed);\n      const clientQuery = this.localState.clientQuery(transformed);\n      const serverQuery = noConnection && this.localState.serverQuery(noConnection);\n\n      const cacheEntry: TransformCacheEntry = {\n        document: transformed,\n        // TODO These two calls (hasClientExports and shouldForceResolvers)\n        // could probably be merged into a single traversal.\n        hasClientExports: hasClientExports(transformed),\n        hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\n        clientQuery,\n        serverQuery,\n        defaultVars: getDefaultValues(\n          getOperationDefinition(transformed)\n        ) as OperationVariables,\n        // Transform any mutation or subscription operations to query operations\n        // so we can read/write them from/to the cache.\n        asQuery: {\n          ...transformed,\n          definitions: transformed.definitions.map(def => {\n            if (def.kind === \"OperationDefinition\" &&\n                def.operation !== \"query\") {\n              return { ...def, operation: \"query\" as OperationTypeNode };\n            }\n            return def;\n          }),\n        }\n      };\n\n      const add = (doc: DocumentNode | null) => {\n        if (doc && !transformCache.has(doc)) {\n          transformCache.set(doc, cacheEntry);\n        }\n      }\n      // Add cacheEntry to the transformCache using several different keys,\n      // since any one of these documents could end up getting passed to the\n      // transform method again in the future.\n      add(document);\n      add(transformed);\n      add(clientQuery);\n      add(serverQuery);\n    }\n\n    return transformCache.get(document)!;\n  }\n\n  private getVariables<TVariables>(\n    document: DocumentNode,\n    variables?: TVariables,\n  ): OperationVariables {\n    return {\n      ...this.transform(document).defaultVars,\n      ...variables,\n    };\n  }\n\n  public watchQuery<T, TVariables extends OperationVariables = OperationVariables>(\n    options: WatchQueryOptions<TVariables, T>,\n  ): ObservableQuery<T, TVariables> {\n    // assign variable default values if supplied\n    options = {\n      ...options,\n      variables: this.getVariables(\n        options.query,\n        options.variables,\n      ) as TVariables,\n    };\n\n    if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n      options.notifyOnNetworkStatusChange = false;\n    }\n\n    const queryInfo = new QueryInfo(this);\n    const observable = new ObservableQuery<T, TVariables>({\n      queryManager: this,\n      queryInfo,\n      options,\n    });\n\n    this.queries.set(observable.queryId, queryInfo);\n\n    queryInfo.init({\n      document: observable.query,\n      observableQuery: observable,\n      variables: observable.variables,\n    });\n\n    return observable;\n  }\n\n  public query<TData, TVars extends OperationVariables = OperationVariables>(\n    options: QueryOptions<TVars, TData>,\n    queryId = this.generateQueryId(),\n  ): Promise<ApolloQueryResult<TData>> {\n    invariant(\n      options.query,\n      'query option is required. You must specify your GraphQL document ' +\n        'in the query option.',\n    );\n\n    invariant(\n      options.query.kind === 'Document',\n      'You must wrap the query string in a \"gql\" tag.',\n    );\n\n    invariant(\n      !(options as any).returnPartialData,\n      'returnPartialData option only supported on watchQuery.',\n    );\n\n    invariant(\n      !(options as any).pollInterval,\n      'pollInterval option only supported on watchQuery.',\n    );\n\n    return this.fetchQuery<TData, TVars>(\n      queryId,\n      options,\n    ).finally(() => this.stopQuery(queryId));\n  }\n\n  private queryIdCounter = 1;\n  public generateQueryId() {\n    return String(this.queryIdCounter++);\n  }\n\n  private requestIdCounter = 1;\n  public generateRequestId() {\n    return this.requestIdCounter++;\n  }\n\n  private mutationIdCounter = 1;\n  public generateMutationId() {\n    return String(this.mutationIdCounter++);\n  }\n\n  public stopQueryInStore(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryInStoreNoBroadcast(queryId: string) {\n    const queryInfo = this.queries.get(queryId);\n    if (queryInfo) queryInfo.stop();\n  }\n\n  public clearStore(options: Cache.ResetOptions = {\n    discardWatches: true,\n  }): Promise<void> {\n    // Before we have sent the reset action to the store, we can no longer\n    // rely on the results returned by in-flight requests since these may\n    // depend on values that previously existed in the data portion of the\n    // store. So, we cancel the promises and observers that we have issued\n    // so far and not yet resolved (in the case of queries).\n    this.cancelPendingFetches(new InvariantError(\n      'Store reset while query was in flight (not completed in link chain)',\n    ));\n\n    this.queries.forEach(queryInfo => {\n      if (queryInfo.observableQuery) {\n        // Set loading to true so listeners don't trigger unless they want\n        // results with partial data.\n        queryInfo.networkStatus = NetworkStatus.loading;\n      } else {\n        queryInfo.stop();\n      }\n    });\n\n    if (this.mutationStore) {\n      this.mutationStore = Object.create(null);\n    }\n\n    // begin removing data from the store\n    return this.cache.reset(options);\n  }\n\n  public getObservableQueries(\n    include: InternalRefetchQueriesInclude = \"active\",\n  ) {\n    const queries = new Map<string, ObservableQuery<any>>();\n    const queryNamesAndDocs = new Map<string | DocumentNode, boolean>();\n    const legacyQueryOptions = new Set<QueryOptions>();\n\n    if (Array.isArray(include)) {\n      include.forEach(desc => {\n        if (typeof desc === \"string\") {\n          queryNamesAndDocs.set(desc, false);\n        } else if (isDocumentNode(desc)) {\n          queryNamesAndDocs.set(this.transform(desc).document, false);\n        } else if (isNonNullObject(desc) && desc.query) {\n          legacyQueryOptions.add(desc);\n        }\n      });\n    }\n\n    this.queries.forEach(({ observableQuery: oq, document }, queryId) => {\n      if (oq) {\n        if (include === \"all\") {\n          queries.set(queryId, oq);\n          return;\n        }\n\n        const {\n          queryName,\n          options: { fetchPolicy },\n        } = oq;\n\n        if (\n          fetchPolicy === \"standby\" ||\n          (include === \"active\" && !oq.hasObservers())\n        ) {\n          return;\n        }\n\n        if (\n          include === \"active\" ||\n          (queryName && queryNamesAndDocs.has(queryName)) ||\n          (document && queryNamesAndDocs.has(document))\n        ) {\n          queries.set(queryId, oq);\n          if (queryName) queryNamesAndDocs.set(queryName, true);\n          if (document) queryNamesAndDocs.set(document, true);\n        }\n      }\n    });\n\n    if (legacyQueryOptions.size) {\n      legacyQueryOptions.forEach((options: QueryOptions) => {\n        // We will be issuing a fresh network request for this query, so we\n        // pre-allocate a new query ID here, using a special prefix to enable\n        // cleaning up these temporary queries later, after fetching.\n        const queryId = makeUniqueId(\"legacyOneTimeQuery\");\n        const queryInfo = this.getQuery(queryId).init({\n          document: options.query,\n          variables: options.variables,\n        });\n        const oq = new ObservableQuery({\n          queryManager: this,\n          queryInfo,\n          options: {\n            ...options,\n            fetchPolicy: \"network-only\",\n          },\n        });\n        invariant(oq.queryId === queryId);\n        queryInfo.setObservableQuery(oq);\n        queries.set(queryId, oq);\n      });\n    }\n\n    if (__DEV__ && queryNamesAndDocs.size) {\n      queryNamesAndDocs.forEach((included, nameOrDoc) => {\n        if (!included) {\n          invariant.warn(`Unknown query ${\n            typeof nameOrDoc === \"string\" ? \"named \" : \"\"\n          }${\n            JSON.stringify(nameOrDoc, null, 2)\n          } requested in refetchQueries options.include array`);\n        }\n      });\n    }\n\n    return queries;\n  }\n\n  public reFetchObservableQueries(\n    includeStandby: boolean = false,\n  ): Promise<ApolloQueryResult<any>[]> {\n    const observableQueryPromises: Promise<ApolloQueryResult<any>>[] = [];\n\n    this.getObservableQueries(\n      includeStandby ? \"all\" : \"active\"\n    ).forEach((observableQuery, queryId) => {\n      const { fetchPolicy } = observableQuery.options;\n      observableQuery.resetLastResults();\n      if (includeStandby ||\n          (fetchPolicy !== \"standby\" &&\n           fetchPolicy !== \"cache-only\")) {\n        observableQueryPromises.push(observableQuery.refetch());\n      }\n      this.getQuery(queryId).setDiff(null);\n    });\n\n    this.broadcastQueries();\n\n    return Promise.all(observableQueryPromises);\n  }\n\n  public setObservableQuery(observableQuery: ObservableQuery<any, any>) {\n    this.getQuery(observableQuery.queryId).setObservableQuery(observableQuery);\n  }\n\n  public startGraphQLSubscription<T = any>({\n    query,\n    fetchPolicy,\n    errorPolicy,\n    variables,\n    context = {},\n  }: SubscriptionOptions): Observable<FetchResult<T>> {\n    query = this.transform(query).document;\n    variables = this.getVariables(query, variables);\n\n    const makeObservable = (variables: OperationVariables) =>\n      this.getObservableFromLink<T>(\n        query,\n        context,\n        variables,\n      ).map(result => {\n        if (fetchPolicy !== 'no-cache') {\n          // the subscription interface should handle not sending us results we no longer subscribe to.\n          // XXX I don't think we ever send in an object with errors, but we might in the future...\n          if (shouldWriteResult(result, errorPolicy)) {\n            this.cache.write({\n              query,\n              result: result.data,\n              dataId: 'ROOT_SUBSCRIPTION',\n              variables: variables,\n            });\n          }\n\n          this.broadcastQueries();\n        }\n\n        if (graphQLResultHasError(result)) {\n          throw new ApolloError({\n            graphQLErrors: result.errors,\n          });\n        }\n\n        return result;\n      });\n\n    if (this.transform(query).hasClientExports) {\n      const observablePromise = this.localState.addExportedVariables(\n        query,\n        variables,\n        context,\n      ).then(makeObservable);\n\n      return new Observable<FetchResult<T>>(observer => {\n        let sub: ObservableSubscription | null = null;\n        observablePromise.then(\n          observable => sub = observable.subscribe(observer),\n          observer.error,\n        );\n        return () => sub && sub.unsubscribe();\n      });\n    }\n\n    return makeObservable(variables);\n  }\n\n  public stopQuery(queryId: string) {\n    this.stopQueryNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryNoBroadcast(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.removeQuery(queryId);\n  }\n\n  public removeQuery(queryId: string) {\n    // teardown all links\n    // Both `QueryManager.fetchRequest` and `QueryManager.query` create separate promises\n    // that each add their reject functions to fetchCancelFns.\n    // A query created with `QueryManager.query()` could trigger a `QueryManager.fetchRequest`.\n    // The same queryId could have two rejection fns for two promises\n    this.fetchCancelFns.delete(queryId);\n    if (this.queries.has(queryId)) {\n      this.getQuery(queryId).stop();\n      this.queries.delete(queryId);\n    }\n  }\n\n  public broadcastQueries() {\n    if (this.onBroadcast) this.onBroadcast();\n    this.queries.forEach(info => info.notify());\n  }\n\n  public getLocalState(): LocalState<TStore> {\n    return this.localState;\n  }\n\n  private inFlightLinkObservables = new Map<\n    DocumentNode,\n    Map<string, Observable<FetchResult>>\n  >();\n\n  private getObservableFromLink<T = any>(\n    query: DocumentNode,\n    context: any,\n    variables?: OperationVariables,\n    deduplication: boolean =\n      // Prefer context.queryDeduplication if specified.\n      context?.queryDeduplication ??\n      this.queryDeduplication,\n  ): Observable<FetchResult<T>> {\n    let observable: Observable<FetchResult<T>>;\n\n    const { serverQuery } = this.transform(query);\n    if (serverQuery) {\n      const { inFlightLinkObservables, link } = this;\n\n      const operation = {\n        query: serverQuery,\n        variables,\n        operationName: getOperationName(serverQuery) || void 0,\n        context: this.prepareContext({\n          ...context,\n          forceFetch: !deduplication\n        }),\n      };\n\n      context = operation.context;\n\n      if (deduplication) {\n        const byVariables = inFlightLinkObservables.get(serverQuery) || new Map();\n        inFlightLinkObservables.set(serverQuery, byVariables);\n\n        const varJson = canonicalStringify(variables);\n        observable = byVariables.get(varJson);\n\n        if (!observable) {\n          const concast = new Concast([\n            execute(link, operation) as Observable<FetchResult<T>>\n          ]);\n\n          byVariables.set(varJson, observable = concast);\n\n          concast.beforeNext(() => {\n            if (byVariables.delete(varJson) &&\n                byVariables.size < 1) {\n              inFlightLinkObservables.delete(serverQuery);\n            }\n          });\n        }\n\n      } else {\n        observable = new Concast([\n          execute(link, operation) as Observable<FetchResult<T>>\n        ]);\n      }\n    } else {\n      observable = new Concast([\n        Observable.of({ data: {} } as FetchResult<T>)\n      ]);\n      context = this.prepareContext(context);\n    }\n\n    const { clientQuery } = this.transform(query);\n    if (clientQuery) {\n      observable = asyncMap(observable, result => {\n        return this.localState.runResolvers({\n          document: clientQuery,\n          remoteResult: result,\n          context,\n          variables,\n        });\n      });\n    }\n\n    return observable;\n  }\n\n  private getResultsFromLink<TData, TVars extends OperationVariables>(\n    queryInfo: QueryInfo,\n    cacheWriteBehavior: CacheWriteBehavior,\n    options: Pick<WatchQueryOptions<TVars, TData>,\n      | \"variables\"\n      | \"context\"\n      | \"fetchPolicy\"\n      | \"errorPolicy\">,\n  ): Observable<ApolloQueryResult<TData>> {\n    const requestId = queryInfo.lastRequestId = this.generateRequestId();\n\n    // Performing transformForLink here gives this.cache a chance to fill in\n    // missing fragment definitions (for example) before sending this document\n    // through the link chain.\n    const linkDocument = this.cache.transformForLink(\n      // Use same document originally produced by this.cache.transformDocument.\n      this.transform(queryInfo.document!).document\n    );\n\n    return asyncMap(\n      this.getObservableFromLink(\n        linkDocument,\n        options.context,\n        options.variables,\n      ),\n\n      result => {\n        const graphQLErrors = getGraphQLErrorsFromResult(result);\n        const hasErrors = graphQLErrors.length > 0;\n\n        // If we interrupted this request by calling getResultsFromLink again\n        // with the same QueryInfo object, we ignore the old results.\n        if (requestId >= queryInfo.lastRequestId) {\n          if (hasErrors && options.errorPolicy === \"none\") {\n            // Throwing here effectively calls observer.error.\n            throw queryInfo.markError(new ApolloError({\n              graphQLErrors,\n            }));\n          }\n          // Use linkDocument rather than queryInfo.document so the\n          // operation/fragments used to write the result are the same as the\n          // ones used to obtain it from the link.\n          queryInfo.markResult(result, linkDocument, options, cacheWriteBehavior);\n          queryInfo.markReady();\n        }\n\n        const aqr: ApolloQueryResult<TData> = {\n          data: result.data,\n          loading: false,\n          networkStatus: NetworkStatus.ready,\n        };\n\n        if (hasErrors && options.errorPolicy !== \"ignore\") {\n          aqr.errors = graphQLErrors;\n          aqr.networkStatus = NetworkStatus.error;\n        }\n\n        return aqr;\n      },\n\n      networkError => {\n        const error = isApolloError(networkError)\n          ? networkError\n          : new ApolloError({ networkError });\n\n        // Avoid storing errors from older interrupted queries.\n        if (requestId >= queryInfo.lastRequestId) {\n          queryInfo.markError(error);\n        }\n\n        throw error;\n      },\n    );\n  }\n\n  public fetchQueryObservable<TData, TVars extends OperationVariables>(\n    queryId: string,\n    options: WatchQueryOptions<TVars, TData>,\n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus = NetworkStatus.loading,\n  ): Concast<ApolloQueryResult<TData>> {\n    const query = this.transform(options.query).document;\n    const variables = this.getVariables(query, options.variables) as TVars;\n    const queryInfo = this.getQuery(queryId);\n\n    const defaults = this.defaultOptions.watchQuery;\n    let {\n      fetchPolicy = defaults && defaults.fetchPolicy || \"cache-first\",\n      errorPolicy = defaults && defaults.errorPolicy || \"none\",\n      returnPartialData = false,\n      notifyOnNetworkStatusChange = false,\n      context = {},\n    } = options;\n\n    const normalized = Object.assign({}, options, {\n      query,\n      variables,\n      fetchPolicy,\n      errorPolicy,\n      returnPartialData,\n      notifyOnNetworkStatusChange,\n      context,\n    });\n\n    const fromVariables = (variables: TVars) => {\n      // Since normalized is always a fresh copy of options, it's safe to\n      // modify its properties here, rather than creating yet another new\n      // WatchQueryOptions object.\n      normalized.variables = variables;\n\n      const concastSources = this.fetchQueryByPolicy<TData, TVars>(\n        queryInfo,\n        normalized,\n        networkStatus,\n      );\n\n      if (\n        // If we're in standby, postpone advancing options.fetchPolicy using\n        // applyNextFetchPolicy.\n        normalized.fetchPolicy !== \"standby\" &&\n        // The \"standby\" policy currently returns [] from fetchQueryByPolicy, so\n        // this is another way to detect when nothing was done/fetched.\n        concastSources.length > 0 &&\n        queryInfo.observableQuery\n      ) {\n        queryInfo.observableQuery[\"applyNextFetchPolicy\"](\"after-fetch\", options);\n      }\n\n      return concastSources;\n    };\n\n    // This cancel function needs to be set before the concast is created,\n    // in case concast creation synchronously cancels the request.\n    const cleanupCancelFn = () => this.fetchCancelFns.delete(queryId);\n    this.fetchCancelFns.set(queryId, reason => {\n      cleanupCancelFn();\n      // This delay ensures the concast variable has been initialized.\n      setTimeout(() => concast.cancel(reason));\n    });\n\n    // A Concast<T> can be created either from an Iterable<Observable<T>>\n    // or from a PromiseLike<Iterable<Observable<T>>>, where T in this\n    // case is ApolloQueryResult<TData>.\n    const concast = new Concast(\n      // If the query has @export(as: ...) directives, then we need to\n      // process those directives asynchronously. When there are no\n      // @export directives (the common case), we deliberately avoid\n      // wrapping the result of this.fetchQueryByPolicy in a Promise,\n      // since the timing of result delivery is (unfortunately) important\n      // for backwards compatibility. TODO This code could be simpler if\n      // we deprecated and removed LocalState.\n      this.transform(normalized.query).hasClientExports\n        ? this.localState.addExportedVariables(\n          normalized.query,\n          normalized.variables,\n          normalized.context,\n        ).then(fromVariables)\n        : fromVariables(normalized.variables!)\n    );\n\n    concast.promise.then(cleanupCancelFn, cleanupCancelFn);\n\n    return concast;\n  }\n\n  public refetchQueries<TResult>({\n    updateCache,\n    include,\n    optimistic = false,\n    removeOptimistic = optimistic ? makeUniqueId(\"refetchQueries\") : void 0,\n    onQueryUpdated,\n  }: InternalRefetchQueriesOptions<ApolloCache<TStore>, TResult>\n  ): InternalRefetchQueriesMap<TResult> {\n    const includedQueriesById = new Map<string, {\n      oq: ObservableQuery<any>;\n      lastDiff?: Cache.DiffResult<any>;\n      diff?: Cache.DiffResult<any>;\n    }>();\n\n    if (include) {\n      this.getObservableQueries(include).forEach((oq, queryId) => {\n        includedQueriesById.set(queryId, {\n          oq,\n          lastDiff: this.getQuery(queryId).getDiff(),\n        });\n      });\n    }\n\n    const results: InternalRefetchQueriesMap<TResult> = new Map;\n\n    if (updateCache) {\n      this.cache.batch({\n        update: updateCache,\n\n        // Since you can perform any combination of cache reads and/or writes in\n        // the cache.batch update function, its optimistic option can be either\n        // a boolean or a string, representing three distinct modes of\n        // operation:\n        //\n        // * false: read/write only the root layer\n        // * true: read/write the topmost layer\n        // * string: read/write a fresh optimistic layer with that ID string\n        //\n        // When typeof optimistic === \"string\", a new optimistic layer will be\n        // temporarily created within cache.batch with that string as its ID. If\n        // we then pass that same string as the removeOptimistic option, we can\n        // make cache.batch immediately remove the optimistic layer after\n        // running the updateCache function, triggering only one broadcast.\n        //\n        // However, the refetchQueries method accepts only true or false for its\n        // optimistic option (not string). We interpret true to mean a temporary\n        // optimistic layer should be created, to allow efficiently rolling back\n        // the effect of the updateCache function, which involves passing a\n        // string instead of true as the optimistic option to cache.batch, when\n        // refetchQueries receives optimistic: true.\n        //\n        // In other words, we are deliberately not supporting the use case of\n        // writing to an *existing* optimistic layer (using the refetchQueries\n        // updateCache function), since that would potentially interfere with\n        // other optimistic updates in progress. Instead, you can read/write\n        // only the root layer by passing optimistic: false to refetchQueries,\n        // or you can read/write a brand new optimistic layer that will be\n        // automatically removed by passing optimistic: true.\n        optimistic: optimistic && removeOptimistic || false,\n\n        // The removeOptimistic option can also be provided by itself, even if\n        // optimistic === false, to remove some previously-added optimistic\n        // layer safely and efficiently, like we do in markMutationResult.\n        //\n        // If an explicit removeOptimistic string is provided with optimistic:\n        // true, the removeOptimistic string will determine the ID of the\n        // temporary optimistic layer, in case that ever matters.\n        removeOptimistic,\n\n        onWatchUpdated(watch, diff, lastDiff) {\n          const oq =\n            watch.watcher instanceof QueryInfo &&\n            watch.watcher.observableQuery;\n\n          if (oq) {\n            if (onQueryUpdated) {\n              // Since we're about to handle this query now, remove it from\n              // includedQueriesById, in case it was added earlier because of\n              // options.include.\n              includedQueriesById.delete(oq.queryId);\n\n              let result: TResult | boolean | Promise<ApolloQueryResult<any>> =\n                onQueryUpdated(oq, diff, lastDiff);\n\n              if (result === true) {\n                // The onQueryUpdated function requested the default refetching\n                // behavior by returning true.\n                result = oq.refetch();\n              }\n\n              // Record the result in the results Map, as long as onQueryUpdated\n              // did not return false to skip/ignore this result.\n              if (result !== false) {\n                results.set(oq, result as InternalRefetchQueriesResult<TResult>);\n              }\n\n              // Allow the default cache broadcast to happen, except when\n              // onQueryUpdated returns false.\n              return result;\n            }\n\n            if (onQueryUpdated !== null) {\n              // If we don't have an onQueryUpdated function, and onQueryUpdated\n              // was not disabled by passing null, make sure this query is\n              // \"included\" like any other options.include-specified query.\n              includedQueriesById.set(oq.queryId, { oq, lastDiff, diff });\n            }\n          }\n        },\n      });\n    }\n\n    if (includedQueriesById.size) {\n      includedQueriesById.forEach(({ oq, lastDiff, diff }, queryId) => {\n        let result: TResult | boolean | Promise<ApolloQueryResult<any>> | undefined;\n\n        // If onQueryUpdated is provided, we want to use it for all included\n        // queries, even the QueryOptions ones.\n        if (onQueryUpdated) {\n          if (!diff) {\n            const info = oq[\"queryInfo\"];\n            info.reset(); // Force info.getDiff() to read from cache.\n            diff = info.getDiff();\n          }\n          result = onQueryUpdated(oq, diff, lastDiff);\n        }\n\n        // Otherwise, we fall back to refetching.\n        if (!onQueryUpdated || result === true) {\n          result = oq.refetch();\n        }\n\n        if (result !== false) {\n          results.set(oq, result as InternalRefetchQueriesResult<TResult>);\n        }\n\n        if (queryId.indexOf(\"legacyOneTimeQuery\") >= 0) {\n          this.stopQueryNoBroadcast(queryId);\n        }\n      });\n    }\n\n    if (removeOptimistic) {\n      // In case no updateCache callback was provided (so cache.batch was not\n      // called above, and thus did not already remove the optimistic layer),\n      // remove it here. Since this is a no-op when the layer has already been\n      // removed, we do it even if we called cache.batch above, since it's\n      // possible this.cache is an instance of some ApolloCache subclass other\n      // than InMemoryCache, and does not fully support the removeOptimistic\n      // option for cache.batch.\n      this.cache.removeOptimistic(removeOptimistic);\n    }\n\n    return results;\n  }\n\n  private fetchQueryByPolicy<TData, TVars extends OperationVariables>(\n    queryInfo: QueryInfo,\n    { query,\n      variables,\n      fetchPolicy,\n      refetchWritePolicy,\n      errorPolicy,\n      returnPartialData,\n      context,\n      notifyOnNetworkStatusChange,\n    }: WatchQueryOptions<TVars, TData>,\n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus: NetworkStatus,\n  ): ConcastSourcesArray<ApolloQueryResult<TData>> {\n    const oldNetworkStatus = queryInfo.networkStatus;\n\n    queryInfo.init({\n      document: this.transform(query).document,\n      variables,\n      networkStatus,\n    });\n\n    const readCache = () => queryInfo.getDiff(variables);\n\n    const resultsFromCache = (\n      diff: Cache.DiffResult<TData>,\n      networkStatus = queryInfo.networkStatus || NetworkStatus.loading,\n    ) => {\n      const data = diff.result;\n\n      if (__DEV__ &&\n          !returnPartialData &&\n          !equal(data, {})) {\n        logMissingFieldErrors(diff.missing);\n      }\n\n      const fromData = (data: TData | undefined) => Observable.of({\n        data,\n        loading: isNetworkRequestInFlight(networkStatus),\n        networkStatus,\n        ...(diff.complete ? null : { partial: true }),\n      } as ApolloQueryResult<TData>);\n\n      if (data && this.transform(query).hasForcedResolvers) {\n        return this.localState.runResolvers({\n          document: query,\n          remoteResult: { data },\n          context,\n          variables,\n          onlyRunForcedResolvers: true,\n        }).then(resolved => fromData(resolved.data || void 0));\n      }\n\n      // Resolves https://github.com/apollographql/apollo-client/issues/10317.\n      // If errorPolicy is 'none' and notifyOnNetworkStatusChange is true,\n      // data was incorrectly returned from the cache on refetch:\n      // if diff.missing exists, we should not return cache data.\n      if (\n        errorPolicy === 'none' &&\n        networkStatus === NetworkStatus.refetch &&\n        Array.isArray(diff.missing)\n      ) {\n        return fromData(void 0);\n      }\n\n      return fromData(data);\n    };\n\n    const cacheWriteBehavior =\n      fetchPolicy === \"no-cache\" ? CacheWriteBehavior.FORBID :\n      ( // Watched queries must opt into overwriting existing data on refetch,\n        // by passing refetchWritePolicy: \"overwrite\" in their WatchQueryOptions.\n        networkStatus === NetworkStatus.refetch &&\n        refetchWritePolicy !== \"merge\"\n      ) ? CacheWriteBehavior.OVERWRITE\n        : CacheWriteBehavior.MERGE;\n\n    const resultsFromLink = () => this.getResultsFromLink<TData, TVars>(\n      queryInfo,\n      cacheWriteBehavior,\n      {\n        variables,\n        context,\n        fetchPolicy,\n        errorPolicy,\n      },\n    );\n\n    const shouldNotify =\n      notifyOnNetworkStatusChange &&\n      typeof oldNetworkStatus === \"number\" &&\n      oldNetworkStatus !== networkStatus &&\n      isNetworkRequestInFlight(networkStatus);\n\n    switch (fetchPolicy) {\n    default: case \"cache-first\": {\n      const diff = readCache();\n\n      if (diff.complete) {\n        return [\n          resultsFromCache(diff, queryInfo.markReady()),\n        ];\n      }\n\n      if (returnPartialData || shouldNotify) {\n        return [\n          resultsFromCache(diff),\n          resultsFromLink(),\n        ];\n      }\n\n      return [\n        resultsFromLink(),\n      ];\n    }\n\n    case \"cache-and-network\": {\n      const diff = readCache();\n\n      if (diff.complete || returnPartialData || shouldNotify) {\n        return [\n          resultsFromCache(diff),\n          resultsFromLink(),\n        ];\n      }\n\n      return [\n        resultsFromLink(),\n      ];\n    }\n\n    case \"cache-only\":\n      return [\n        resultsFromCache(readCache(), queryInfo.markReady()),\n      ];\n\n    case \"network-only\":\n      if (shouldNotify) {\n        return [\n          resultsFromCache(readCache()),\n          resultsFromLink(),\n        ];\n      }\n\n      return [resultsFromLink()];\n\n    case \"no-cache\":\n      if (shouldNotify) {\n        return [\n          // Note that queryInfo.getDiff() for no-cache queries does not call\n          // cache.diff, but instead returns a { complete: false } stub result\n          // when there is no queryInfo.diff already defined.\n          resultsFromCache(queryInfo.getDiff()),\n          resultsFromLink(),\n        ];\n      }\n\n      return [resultsFromLink()];\n\n    case \"standby\":\n      return [];\n    }\n  }\n\n  private getQuery(queryId: string): QueryInfo {\n    if (queryId && !this.queries.has(queryId)) {\n      this.queries.set(queryId, new QueryInfo(this, queryId));\n    }\n    return this.queries.get(queryId)!;\n  }\n\n  private prepareContext(context = {}) {\n    const newContext = this.localState.prepareContext(context);\n    return {\n      ...newContext,\n      clientAwareness: this.clientAwareness,\n    };\n  }\n}\n","import { invariant, InvariantError } from '../utilities/globals';\n\nimport { ExecutionResult, DocumentNode } from 'graphql';\n\nimport { ApolloLink, FetchResult, GraphQLRequest, execute } from '../link/core';\nimport { ApolloCache, DataProxy } from '../cache';\nimport { Observable } from '../utilities';\nimport { version } from '../version';\nimport { HttpLink, UriFunction } from '../link/http';\n\nimport { QueryManager } from './QueryManager';\nimport { ObservableQuery } from './ObservableQuery';\n\nimport {\n  ApolloQueryResult,\n  DefaultContext,\n  OperationVariables,\n  Resolvers,\n  RefetchQueriesOptions,\n  RefetchQueriesResult,\n  InternalRefetchQueriesResult,\n  RefetchQueriesInclude,\n} from './types';\n\nimport {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n  SubscriptionOptions,\n  WatchQueryFetchPolicy,\n} from './watchQueryOptions';\n\nimport {\n  LocalState,\n  FragmentMatcher,\n} from './LocalState';\n\nexport interface DefaultOptions {\n  watchQuery?: Partial<WatchQueryOptions<any, any>>;\n  query?: Partial<QueryOptions<any, any>>;\n  mutate?: Partial<MutationOptions<any, any, any>>;\n}\n\nlet hasSuggestedDevtools = false;\n\nexport type ApolloClientOptions<TCacheShape> = {\n  uri?: string | UriFunction;\n  credentials?: string;\n  headers?: Record<string, string>;\n  link?: ApolloLink;\n  cache: ApolloCache<TCacheShape>;\n  ssrForceFetchDelay?: number;\n  ssrMode?: boolean;\n  connectToDevTools?: boolean;\n  queryDeduplication?: boolean;\n  defaultOptions?: DefaultOptions;\n  assumeImmutableResults?: boolean;\n  resolvers?: Resolvers | Resolvers[];\n  typeDefs?: string | string[] | DocumentNode | DocumentNode[];\n  fragmentMatcher?: FragmentMatcher;\n  name?: string;\n  version?: string;\n};\n\n// Though mergeOptions now resides in @apollo/client/utilities, it was\n// previously declared and exported from this module, and then reexported from\n// @apollo/client/core. Since we need to preserve that API anyway, the easiest\n// solution is to reexport mergeOptions where it was previously declared (here).\nimport { mergeOptions } from \"../utilities\";\nexport { mergeOptions }\n\n/**\n * This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\n * and mutations) to a GraphQL spec-compliant server over a {@link NetworkInterface} instance,\n * receive results from the server and cache the results in a store. It also delivers updates\n * to GraphQL queries through {@link Observable} instances.\n */\nexport class ApolloClient<TCacheShape> implements DataProxy {\n  public link: ApolloLink;\n  public cache: ApolloCache<TCacheShape>;\n  public disableNetworkFetches: boolean;\n  public version: string;\n  public queryDeduplication: boolean;\n  public defaultOptions: DefaultOptions;\n  public readonly typeDefs: ApolloClientOptions<TCacheShape>['typeDefs'];\n\n  private queryManager: QueryManager<TCacheShape>;\n  private devToolsHookCb: Function;\n  private resetStoreCallbacks: Array<() => Promise<any>> = [];\n  private clearStoreCallbacks: Array<() => Promise<any>> = [];\n  private localState: LocalState<TCacheShape>;\n\n  /**\n   * Constructs an instance of {@link ApolloClient}.\n   *\n   * @param uri The GraphQL endpoint that Apollo Client will connect to. If\n   *            `link` is configured, this option is ignored.\n   * @param link The {@link ApolloLink} over which GraphQL documents will be resolved into a response.\n   *\n   * @param cache The initial cache to use in the data store.\n   *\n   * @param ssrMode Determines whether this is being run in Server Side Rendering (SSR) mode.\n   *\n   * @param ssrForceFetchDelay Determines the time interval before we force fetch queries for a\n   * server side render.\n   *\n   * @param queryDeduplication If set to false, a query will still be sent to the server even if a query\n   * with identical parameters (query, variables, operationName) is already in flight.\n   *\n   * @param defaultOptions Used to set application wide defaults for the\n   *                       options supplied to `watchQuery`, `query`, or\n   *                       `mutate`.\n   *\n   * @param assumeImmutableResults When this option is true, the client will assume results\n   *                               read from the cache are never mutated by application code,\n   *                               which enables substantial performance optimizations.\n   *\n   * @param name A custom name that can be used to identify this client, when\n   *             using Apollo client awareness features. E.g. \"iOS\".\n   *\n   * @param version A custom version that can be used to identify this client,\n   *                when using Apollo client awareness features. This is the\n   *                version of your client, which you may want to increment on\n   *                new builds. This is NOT the version of Apollo Client that\n   *                you are using.\n   */\n  constructor(options: ApolloClientOptions<TCacheShape>) {\n    const {\n      uri,\n      credentials,\n      headers,\n      cache,\n      ssrMode = false,\n      ssrForceFetchDelay = 0,\n      connectToDevTools =\n        // Expose the client instance as window.__APOLLO_CLIENT__ and call\n        // onBroadcast in queryManager.broadcastQueries to enable browser\n        // devtools, but disable them by default in production.\n        typeof window === 'object' &&\n        !(window as any).__APOLLO_CLIENT__ &&\n        __DEV__,\n      queryDeduplication = true,\n      defaultOptions,\n      assumeImmutableResults = false,\n      resolvers,\n      typeDefs,\n      fragmentMatcher,\n      name: clientAwarenessName,\n      version: clientAwarenessVersion,\n    } = options;\n\n    let { link } = options;\n\n    if (!link) {\n      link = uri\n        ? new HttpLink({ uri, credentials, headers })\n        : ApolloLink.empty();\n    }\n\n    if (!cache) {\n      throw new InvariantError(\n        \"To initialize Apollo Client, you must specify a 'cache' property \" +\n        \"in the options object. \\n\" +\n        \"For more information, please visit: https://go.apollo.dev/c/docs\"\n      );\n    }\n\n    this.link = link;\n    this.cache = cache;\n    this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n    this.queryDeduplication = queryDeduplication;\n    this.defaultOptions = defaultOptions || Object.create(null);\n    this.typeDefs = typeDefs;\n\n    if (ssrForceFetchDelay) {\n      setTimeout(\n        () => (this.disableNetworkFetches = false),\n        ssrForceFetchDelay,\n      );\n    }\n\n    this.watchQuery = this.watchQuery.bind(this);\n    this.query = this.query.bind(this);\n    this.mutate = this.mutate.bind(this);\n    this.resetStore = this.resetStore.bind(this);\n    this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n\n    if (connectToDevTools && typeof window === 'object') {\n      (window as any).__APOLLO_CLIENT__ = this;\n    }\n\n    /**\n     * Suggest installing the devtools for developers who don't have them\n     */\n    if (!hasSuggestedDevtools && connectToDevTools && __DEV__) {\n      hasSuggestedDevtools = true;\n      if (\n        typeof window !== 'undefined' &&\n        window.document &&\n        window.top === window.self &&\n        !(window as any).__APOLLO_DEVTOOLS_GLOBAL_HOOK__\n      ) {\n        const nav = window.navigator;\n        const ua = nav && nav.userAgent;\n        let url: string | undefined;\n        if (typeof ua === \"string\") {\n          if (ua.indexOf(\"Chrome/\") > -1) {\n            url = \"https://chrome.google.com/webstore/detail/\" +\n              \"apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm\";\n          } else if (ua.indexOf(\"Firefox/\") > -1) {\n            url = \"https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/\";\n          }\n        }\n        if (url) {\n          invariant.log(\n            \"Download the Apollo DevTools for a better development \" +\n              \"experience: \" + url\n          );\n        }\n      }\n    }\n\n    this.version = version;\n\n    this.localState = new LocalState({\n      cache,\n      client: this,\n      resolvers,\n      fragmentMatcher,\n    });\n\n    this.queryManager = new QueryManager({\n      cache: this.cache,\n      link: this.link,\n      defaultOptions: this.defaultOptions,\n      queryDeduplication,\n      ssrMode,\n      clientAwareness: {\n        name: clientAwarenessName!,\n        version: clientAwarenessVersion!,\n      },\n      localState: this.localState,\n      assumeImmutableResults,\n      onBroadcast: connectToDevTools ? () => {\n        if (this.devToolsHookCb) {\n          this.devToolsHookCb({\n            action: {},\n            state: {\n              queries: this.queryManager.getQueryStore(),\n              mutations: this.queryManager.mutationStore || {},\n            },\n            dataWithOptimisticResults: this.cache.extract(true),\n          });\n        }\n      } : void 0,\n    });\n  }\n\n  /**\n   * Call this method to terminate any active client processes, making it safe\n   * to dispose of this `ApolloClient` instance.\n   */\n  public stop() {\n    this.queryManager.stop();\n  }\n\n  /**\n   * This watches the cache store of the query according to the options specified and\n   * returns an {@link ObservableQuery}. We can subscribe to this {@link ObservableQuery} and\n   * receive updated results through a GraphQL observer when the cache store changes.\n   *\n   * Note that this method is not an implementation of GraphQL subscriptions. Rather,\n   * it uses Apollo's store in order to reactively deliver updates to your query results.\n   *\n   * For example, suppose you call watchQuery on a GraphQL query that fetches a person's\n   * first and last name and this person has a particular object identifier, provided by\n   * dataIdFromObject. Later, a different query fetches that same person's\n   * first and last name and the first name has now changed. Then, any observers associated\n   * with the results of the first query will be updated with a new result object.\n   *\n   * Note that if the cache does not change, the subscriber will *not* be notified.\n   *\n   * See [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\n   * a description of store reactivity.\n   */\n  public watchQuery<T = any, TVariables extends OperationVariables = OperationVariables>(\n    options: WatchQueryOptions<TVariables, T>,\n  ): ObservableQuery<T, TVariables> {\n    if (this.defaultOptions.watchQuery) {\n      options = mergeOptions(this.defaultOptions.watchQuery, options);\n    }\n\n    // XXX Overwriting options is probably not the best way to do this long term...\n    if (\n      this.disableNetworkFetches &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options = { ...options, fetchPolicy: 'cache-first' };\n    }\n\n    return this.queryManager.watchQuery<T, TVariables>(options);\n  }\n\n  /**\n   * This resolves a single query according to the options specified and\n   * returns a {@link Promise} which is either resolved with the resulting data\n   * or rejected with an error.\n   *\n   * @param options An object of type {@link QueryOptions} that allows us to\n   * describe how this query should be treated e.g. whether it should hit the\n   * server at all or just resolve from the cache, etc.\n   */\n  public query<T = any, TVariables extends OperationVariables = OperationVariables>(\n    options: QueryOptions<TVariables, T>,\n  ): Promise<ApolloQueryResult<T>> {\n    if (this.defaultOptions.query) {\n      options = mergeOptions(this.defaultOptions.query, options);\n    }\n\n    invariant(\n      (options.fetchPolicy as WatchQueryFetchPolicy) !== 'cache-and-network',\n      'The cache-and-network fetchPolicy does not work with client.query, because ' +\n      'client.query can only return a single result. Please use client.watchQuery ' +\n      'to receive multiple results from the cache and the network, or consider ' +\n      'using a different fetchPolicy, such as cache-first or network-only.'\n    );\n\n    if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n      options = { ...options, fetchPolicy: 'cache-first' };\n    }\n\n    return this.queryManager.query<T, TVariables>(options);\n  }\n\n  /**\n   * This resolves a single mutation according to the options specified and returns a\n   * {@link Promise} which is either resolved with the resulting data or rejected with an\n   * error.\n   *\n   * It takes options as an object with the following keys and values:\n   */\n  public mutate<\n    TData = any,\n    TVariables extends OperationVariables = OperationVariables,\n    TContext extends Record<string, any> = DefaultContext,\n    TCache extends ApolloCache<any> = ApolloCache<any>\n  >(\n    options: MutationOptions<TData, TVariables, TContext>,\n  ): Promise<FetchResult<TData>> {\n    if (this.defaultOptions.mutate) {\n      options = mergeOptions(this.defaultOptions.mutate, options);\n    }\n    return this.queryManager.mutate<TData, TVariables, TContext, TCache>(options);\n  }\n\n  /**\n   * This subscribes to a graphql subscription according to the options specified and returns an\n   * {@link Observable} which either emits received data or an error.\n   */\n  public subscribe<T = any, TVariables extends OperationVariables = OperationVariables>(\n    options: SubscriptionOptions<TVariables, T>,\n  ): Observable<FetchResult<T>> {\n    return this.queryManager.startGraphQLSubscription<T>(options);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL query without making a network request. This method will start at\n   * the root query. To start at a specific id returned by `dataIdFromObject`\n   * use `readFragment`.\n   *\n   * @param optimistic Set to `true` to allow `readQuery` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readQuery<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Query<TVariables, T>,\n    optimistic: boolean = false,\n  ): T | null {\n    return this.cache.readQuery<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL fragment without making a network request. This method will read a\n   * GraphQL fragment from any arbitrary id that is currently cached, unlike\n   * `readQuery` which will only read from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are reading. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   *\n   * @param optimistic Set to `true` to allow `readFragment` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readFragment<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Fragment<TVariables, T>,\n    optimistic: boolean = false,\n  ): T | null {\n    return this.cache.readFragment<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL query directly to\n   * the store. This method will start at the root query. To start at a\n   * specific id returned by `dataIdFromObject` then use `writeFragment`.\n   */\n  public writeQuery<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteQueryOptions<TData, TVariables>,\n  ): void {\n    this.cache.writeQuery<TData, TVariables>(options);\n    this.queryManager.broadcastQueries();\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL fragment directly to\n   * the store. This method will write to a GraphQL fragment from any arbitrary\n   * id that is currently cached, unlike `writeQuery` which will only write\n   * from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are writing. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   */\n  public writeFragment<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteFragmentOptions<TData, TVariables>,\n  ): void {\n    this.cache.writeFragment<TData, TVariables>(options);\n    this.queryManager.broadcastQueries();\n  }\n\n  public __actionHookForDevTools(cb: () => any) {\n    this.devToolsHookCb = cb;\n  }\n\n  public __requestRaw(payload: GraphQLRequest): Observable<ExecutionResult> {\n    return execute(this.link, payload);\n  }\n\n  /**\n   * Resets your entire store by clearing out your cache and then re-executing\n   * all of your active queries. This makes it so that you may guarantee that\n   * there is no data left in your store from a time before you called this\n   * method.\n   *\n   * `resetStore()` is useful when your user just logged out. You’ve removed the\n   * user session, and you now want to make sure that any references to data you\n   * might have fetched while the user session was active is gone.\n   *\n   * It is important to remember that `resetStore()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   */\n  public resetStore(): Promise<ApolloQueryResult<any>[] | null> {\n    return Promise.resolve()\n      .then(() => this.queryManager.clearStore({\n        discardWatches: false,\n      }))\n      .then(() => Promise.all(this.resetStoreCallbacks.map(fn => fn())))\n      .then(() => this.reFetchObservableQueries());\n  }\n\n  /**\n   * Remove all data from the store. Unlike `resetStore`, `clearStore` will\n   * not refetch any active queries.\n   */\n  public clearStore(): Promise<any[]> {\n    return Promise.resolve()\n      .then(() => this.queryManager.clearStore({\n        discardWatches: true,\n      }))\n      .then(() => Promise.all(this.clearStoreCallbacks.map(fn => fn())));\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * reset. `onResetStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onResetStore(cb: () => Promise<any>): () => void {\n    this.resetStoreCallbacks.push(cb);\n    return () => {\n      this.resetStoreCallbacks = this.resetStoreCallbacks.filter(c => c !== cb);\n    };\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * cleared. `onClearStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onClearStore(cb: () => Promise<any>): () => void {\n    this.clearStoreCallbacks.push(cb);\n    return () => {\n      this.clearStoreCallbacks = this.clearStoreCallbacks.filter(c => c !== cb);\n    };\n  }\n\n  /**\n   * Refetches all of your active queries.\n   *\n   * `reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n   *\n   * It is important to remember that `reFetchObservableQueries()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   * Takes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n   */\n  public reFetchObservableQueries(\n    includeStandby?: boolean,\n  ): Promise<ApolloQueryResult<any>[]> {\n    return this.queryManager.reFetchObservableQueries(includeStandby);\n  }\n\n  /**\n   * Refetches specified active queries. Similar to \"reFetchObservableQueries()\" but with a specific list of queries.\n   *\n   * `refetchQueries()` is useful for use cases to imperatively refresh a selection of queries.\n   *\n   * It is important to remember that `refetchQueries()` *will* refetch specified active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   */\n  public refetchQueries<\n    TCache extends ApolloCache<any> = ApolloCache<TCacheShape>,\n    TResult = Promise<ApolloQueryResult<any>>,\n  >(\n    options: RefetchQueriesOptions<TCache, TResult>,\n  ): RefetchQueriesResult<TResult> {\n    const map = this.queryManager.refetchQueries(options);\n    const queries: ObservableQuery<any>[] = [];\n    const results: InternalRefetchQueriesResult<TResult>[] = [];\n\n    map.forEach((result, obsQuery) => {\n      queries.push(obsQuery);\n      results.push(result);\n    });\n\n    const result = Promise.all<TResult>(\n      results as TResult[]\n    ) as RefetchQueriesResult<TResult>;\n\n    // In case you need the raw results immediately, without awaiting\n    // Promise.all(results):\n    result.queries = queries;\n    result.results = results;\n\n    // If you decide to ignore the result Promise because you're using\n    // result.queries and result.results instead, you shouldn't have to worry\n    // about preventing uncaught rejections for the Promise.all result.\n    result.catch(error => {\n      invariant.debug(`In client.refetchQueries, Promise.all promise rejected with error ${error}`);\n    });\n\n    return result;\n  }\n\n  /**\n   * Get all currently active `ObservableQuery` objects, in a `Map` keyed by\n   * query ID strings. An \"active\" query is one that has observers and a\n   * `fetchPolicy` other than \"standby\" or \"cache-only\". You can include all\n   * `ObservableQuery` objects (including the inactive ones) by passing \"all\"\n   * instead of \"active\", or you can include just a subset of active queries by\n   * passing an array of query names or DocumentNode objects.\n   */\n  public getObservableQueries(\n    include: RefetchQueriesInclude = \"active\",\n  ): Map<string, ObservableQuery<any>> {\n    return this.queryManager.getObservableQueries(include);\n  }\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public extract(optimistic?: boolean): TCacheShape {\n    return this.cache.extract(optimistic);\n  }\n\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public restore(serializedState: TCacheShape): ApolloCache<TCacheShape> {\n    return this.cache.restore(serializedState);\n  }\n\n  /**\n   * Add additional local resolvers.\n   */\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.addResolvers(resolvers);\n  }\n\n  /**\n   * Set (override existing) local resolvers.\n   */\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.setResolvers(resolvers);\n  }\n\n  /**\n   * Get all registered local resolvers.\n   */\n  public getResolvers() {\n    return this.localState.getResolvers();\n  }\n\n  /**\n   * Set a custom local state fragment matcher.\n   */\n  public setLocalStateFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.localState.setFragmentMatcher(fragmentMatcher);\n  }\n\n  /**\n   * Define a new ApolloLink (or link chain) that Apollo Client will use.\n   */\n  public setLink(newLink: ApolloLink) {\n    this.link = this.queryManager.link = newLink;\n  }\n}\n","import { DocumentNode, GraphQLError } from 'graphql';\n\nimport { ApolloCache } from '../cache';\nimport { FetchResult } from '../link/core';\nimport { ApolloError } from '../errors';\nimport { QueryInfo } from './QueryInfo';\nimport { NetworkStatus } from './networkStatus';\nimport { Resolver } from './LocalState';\nimport { ObservableQuery } from './ObservableQuery';\nimport { QueryOptions } from './watchQueryOptions';\nimport { Cache } from '../cache';\nimport { IsStrictlyAny } from '../utilities';\n\nexport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nexport interface DefaultContext extends Record<string, any> {};\n\nexport type QueryListener = (queryInfo: QueryInfo) => void;\n\nexport type OnQueryUpdated<TResult> = (\n  observableQuery: ObservableQuery<any>,\n  diff: Cache.DiffResult<any>,\n  lastDiff: Cache.DiffResult<any> | undefined,\n) => boolean | TResult;\n\nexport type RefetchQueryDescriptor = string | DocumentNode;\nexport type InternalRefetchQueryDescriptor = RefetchQueryDescriptor | QueryOptions;\n\ntype RefetchQueriesIncludeShorthand = \"all\" | \"active\";\n\nexport type RefetchQueriesInclude =\n  | RefetchQueryDescriptor[]\n  | RefetchQueriesIncludeShorthand;\n\nexport type InternalRefetchQueriesInclude =\n  | InternalRefetchQueryDescriptor[]\n  | RefetchQueriesIncludeShorthand;\n\n// Used by ApolloClient[\"refetchQueries\"]\n// TODO Improve documentation comments for this public type.\nexport interface RefetchQueriesOptions<\n  TCache extends ApolloCache<any>,\n  TResult,\n> {\n  updateCache?: (cache: TCache) => void;\n  // The client.refetchQueries method discourages passing QueryOptions, by\n  // restricting the public type of options.include to exclude QueryOptions as\n  // an available array element type (see InternalRefetchQueriesInclude for a\n  // version of RefetchQueriesInclude that allows legacy QueryOptions objects).\n  include?: RefetchQueriesInclude;\n  optimistic?: boolean;\n  // If no onQueryUpdated function is provided, any queries affected by the\n  // updateCache function or included in the options.include array will be\n  // refetched by default. Passing null instead of undefined disables this\n  // default refetching behavior for affected queries, though included queries\n  // will still be refetched.\n  onQueryUpdated?: OnQueryUpdated<TResult> | null;\n}\n\n// The client.refetchQueries method returns a thenable (PromiseLike) object\n// whose result is an array of Promise.resolve'd TResult values, where TResult\n// is whatever type the (optional) onQueryUpdated function returns. When no\n// onQueryUpdated function is given, TResult defaults to ApolloQueryResult<any>\n// (thanks to default type parameters for client.refetchQueries).\nexport type RefetchQueriesPromiseResults<TResult> =\n  // If onQueryUpdated returns any, all bets are off, so the results array must\n  // be a generic any[] array, which is much less confusing than the union type\n  // we get if we don't check for any. I hoped `any extends TResult` would do\n  // the trick here, instead of IsStrictlyAny, but you can see for yourself what\n  // fails in the refetchQueries tests if you try making that simplification.\n  IsStrictlyAny<TResult> extends true ? any[] :\n  // If the onQueryUpdated function passed to client.refetchQueries returns true\n  // or false, that means either to refetch the query (true) or to skip the\n  // query (false). Since refetching produces an ApolloQueryResult<any>, and\n  // skipping produces nothing, the fully-resolved array of all results produced\n  // will be an ApolloQueryResult<any>[], when TResult extends boolean.\n  TResult extends boolean ? ApolloQueryResult<any>[] :\n  // If onQueryUpdated returns a PromiseLike<U>, that thenable will be passed as\n  // an array element to Promise.all, so we infer/unwrap the array type U here.\n  TResult extends PromiseLike<infer U> ? U[] :\n  // All other onQueryUpdated results end up in the final Promise.all array as\n  // themselves, with their original TResult type. Note that TResult will\n  // default to ApolloQueryResult<any> if no onQueryUpdated function is passed\n  // to client.refetchQueries.\n  TResult[];\n\n// The result of client.refetchQueries is thenable/awaitable, if you just want\n// an array of fully resolved results, but you can also access the raw results\n// immediately by examining the additional { queries, results } properties of\n// the RefetchQueriesResult<TResult> object.\nexport interface RefetchQueriesResult<TResult>\nextends Promise<RefetchQueriesPromiseResults<TResult>> {\n  // An array of ObservableQuery objects corresponding 1:1 to TResult values\n  // in the results arrays (both the TResult[] array below, and the results\n  // array resolved by the Promise above).\n  queries: ObservableQuery<any>[];\n  // These are the raw TResult values returned by any onQueryUpdated functions\n  // that were invoked by client.refetchQueries.\n  results: InternalRefetchQueriesResult<TResult>[];\n}\n\n// Used by QueryManager[\"refetchQueries\"]\nexport interface InternalRefetchQueriesOptions<\n  TCache extends ApolloCache<any>,\n  TResult,\n> extends Omit<RefetchQueriesOptions<TCache, TResult>, \"include\"> {\n  // Just like the refetchQueries option for a mutation, an array of strings,\n  // DocumentNode objects, and/or QueryOptions objects, or one of the shorthand\n  // strings \"all\" or \"active\", to select every (active) query.\n  include?: InternalRefetchQueriesInclude;\n  // This part of the API is a (useful) implementation detail, but need not be\n  // exposed in the public client.refetchQueries API (above).\n  removeOptimistic?: string;\n}\n\nexport type InternalRefetchQueriesResult<TResult> =\n  // If onQueryUpdated returns a boolean, that's equivalent to refetching the\n  // query when the boolean is true and skipping the query when false, so the\n  // internal type of refetched results is Promise<ApolloQueryResult<any>>.\n  TResult extends boolean ? Promise<ApolloQueryResult<any>> :\n  // Otherwise, onQueryUpdated returns whatever it returns. If onQueryUpdated is\n  // not provided, TResult defaults to Promise<ApolloQueryResult<any>> (see the\n  // generic type parameters of client.refetchQueries).\n  TResult;\n\nexport type InternalRefetchQueriesMap<TResult> =\n  Map<ObservableQuery<any>,\n      InternalRefetchQueriesResult<TResult>>;\n\n// TODO Remove this unnecessary type in Apollo Client 4.\nexport type { QueryOptions as PureQueryOptions };\n\nexport type OperationVariables = Record<string, any>;\n\nexport type ApolloQueryResult<T> = {\n  data: T;\n  /**\n  * A list of any errors that occurred during server-side execution of a GraphQL operation.\n  * See https://www.apollographql.com/docs/react/data/error-handling/ for more information.\n  */\n  errors?: ReadonlyArray<GraphQLError>;\n  /**\n  * The single Error object that is passed to onError and useQuery hooks, and is often thrown during manual `client.query` calls.\n  * This will contain both a NetworkError field and any GraphQLErrors.\n  * See https://www.apollographql.com/docs/react/data/error-handling/ for more information.\n  */\n  error?: ApolloError;\n  loading: boolean;\n  networkStatus: NetworkStatus;\n  // If result.data was read from the cache with missing fields,\n  // result.partial will be true. Otherwise, result.partial will be falsy\n  // (usually because the property is absent from the result object).\n  partial?: boolean;\n};\n\n// This is part of the public API, people write these functions in `updateQueries`.\nexport type MutationQueryReducer<T> = (\n  previousResult: Record<string, any>,\n  options: {\n    mutationResult: FetchResult<T>;\n    queryName: string | undefined;\n    queryVariables: Record<string, any>;\n  },\n) => Record<string, any>;\n\nexport type MutationQueryReducersMap<T = { [key: string]: any }> = {\n  [queryName: string]: MutationQueryReducer<T>;\n};\n\n// @deprecated Use MutationUpdaterFunction instead.\nexport type MutationUpdaterFn<T = { [key: string]: any }> = (\n  // The MutationUpdaterFn type is broken because it mistakenly uses the same\n  // type parameter T for both the cache and the mutationResult. Do not use this\n  // type unless you absolutely need it for backwards compatibility.\n  cache: ApolloCache<T>,\n  mutationResult: FetchResult<T>,\n) => void;\n\nexport type MutationUpdaterFunction<\n  TData,\n  TVariables,\n  TContext,\n  TCache extends ApolloCache<any>\n> = (\n  cache: TCache,\n  result: Omit<FetchResult<TData>, 'context'>,\n  options: {\n    context?: TContext,\n    variables?: TVariables,\n  },\n) => void;\nexport interface Resolvers {\n  [key: string]: {\n    [ field: string ]: Resolver;\n  };\n}\n","/* Core */\n\nimport { DEV } from '../utilities/globals';\n\nexport {\n  ApolloClient,\n  ApolloClientOptions,\n  DefaultOptions,\n  mergeOptions,\n} from './ApolloClient';\nexport {\n  ObservableQuery,\n  FetchMoreOptions,\n  UpdateQueryOptions,\n} from './ObservableQuery';\nexport {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n  SubscriptionOptions,\n  FetchPolicy,\n  WatchQueryFetchPolicy,\n  ErrorPolicy,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n} from './watchQueryOptions';\nexport { NetworkStatus } from './networkStatus';\nexport * from './types';\nexport {\n  Resolver,\n  FragmentMatcher,\n} from './LocalState';\nexport { isApolloError, ApolloError } from '../errors';\n\n/* Cache */\n\nexport {\n  // All the exports (types and values) from ../cache, minus cacheSlot,\n  // which we want to keep semi-private.\n  Cache,\n  ApolloCache,\n  Transaction,\n  DataProxy,\n  InMemoryCache,\n  InMemoryCacheConfig,\n  MissingFieldError,\n  defaultDataIdFromObject,\n  ReactiveVar,\n  makeVar,\n  TypePolicies,\n  TypePolicy,\n  FieldPolicy,\n  FieldReadFunction,\n  FieldMergeFunction,\n  FieldFunctionOptions,\n  PossibleTypesMap,\n} from '../cache';\n\nexport * from '../cache/inmemory/types';\n\n/* Link */\n\nexport * from '../link/core';\nexport * from '../link/http';\nexport {\n  fromError,\n  toPromise,\n  fromPromise,\n  ServerError,\n  throwServerError,\n} from '../link/utils';\n\n/* Utilities */\n\nexport {\n  Observable,\n  Observer,\n  ObservableSubscription,\n  Reference,\n  isReference,\n  makeReference,\n  StoreObject,\n} from '../utilities';\n\n/* Supporting */\n\n// The verbosity of invariant.{log,warn,error} can be controlled globally\n// (for anyone using the same ts-invariant package) by passing \"log\",\n// \"warn\", \"error\", or \"silent\" to setVerbosity (\"log\" is the default).\n// Note that all invariant.* logging is hidden in production.\nimport { setVerbosity } from \"ts-invariant\";\nexport { setVerbosity as setLogVerbosity }\nsetVerbosity(DEV ? \"log\" : \"silent\");\n\n// Note that importing `gql` by itself, then destructuring\n// additional properties separately before exporting, is intentional.\n// Due to the way the `graphql-tag` library is setup, certain bundlers\n// can't find the properties added to the exported `gql` function without\n// additional guidance (e.g. Rollup - see\n// https://rollupjs.org/guide/en/#error-name-is-not-exported-by-module).\n// Instead of having people that are using bundlers with `@apollo/client` add\n// extra bundler config to help `graphql-tag` exports be found (which would be\n// awkward since they aren't importing `graphql-tag` themselves), this\n// workaround of pulling the extra properties off the `gql` function,\n// then re-exporting them separately, helps keeps bundlers happy without any\n// additional config changes.\nexport {\n  gql,\n  resetCaches,\n  disableFragmentWarnings,\n  enableExperimentalFragmentVariables,\n  disableExperimentalFragmentVariables,\n} from 'graphql-tag';\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","export default function isString(value?: any): value is string {\n  return typeof value === 'string';\n}\n","export default function isObject(value?: any): boolean {\n  return ((value !== null) && (typeof value === 'object'));\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.print = print;\n\nvar _visitor = require(\"./visitor\");\n\nvar _blockString = require(\"./blockString\");\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, {\n    leave: printDocASTReducer\n  });\n} // TODO: provide better type coverage in future\n\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? (0, _blockString.printBlockString)(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: function SchemaDefinition(_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray, separator) {\n  return maybeArray ? maybeArray.filter(function (x) {\n    return x;\n  }).join(separator || '') : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return array && array.length !== 0 ? '{\\n' + indent(join(array, '\\n')) + '\\n}' : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\n\n\nfunction wrap(start, maybeString, end) {\n  return maybeString ? start + maybeString + (end || '') : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && '  ' + maybeString.replace(/\\n/g, '\\n  ');\n}\n\nfunction isMultiline(string) {\n  return string.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray && maybeArray.some(isMultiline);\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOperationAST = getOperationAST;\n\nvar _kinds = require(\"../language/kinds\");\n\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\nfunction getOperationAST(documentAST, operationName) {\n  var operation = null;\n\n  for (var _i2 = 0, _documentAST$definiti2 = documentAST.definitions; _i2 < _documentAST$definiti2.length; _i2++) {\n    var definition = _documentAST$definiti2[_i2];\n\n    if (definition.kind === _kinds.Kind.OPERATION_DEFINITION) {\n      if (!operationName) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n\n        operation = definition;\n      } else if (definition.name && definition.name.value === operationName) {\n        return definition;\n      }\n    }\n  }\n\n  return operation;\n}\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","const GRAPHQL_WS = 'graphql-ws';\n// NOTE: This protocol is deprecated and will be removed soon.\n/**\n * @deprecated\n */\nconst GRAPHQL_SUBSCRIPTIONS = 'graphql-subscriptions';\n\nexport {\n  GRAPHQL_WS,\n  GRAPHQL_SUBSCRIPTIONS,\n};\n","const MIN_WS_TIMEOUT = 1000;\nconst WS_TIMEOUT = 30000;\n\nexport {\n  MIN_WS_TIMEOUT,\n  WS_TIMEOUT,\n};\n","export default class MessageTypes {\n  public static GQL_CONNECTION_INIT = 'connection_init'; // Client -> Server\n  public static GQL_CONNECTION_ACK = 'connection_ack'; // Server -> Client\n  public static GQL_CONNECTION_ERROR = 'connection_error'; // Server -> Client\n\n  // NOTE: The keep alive message type does not follow the standard due to connection optimizations\n  public static GQL_CONNECTION_KEEP_ALIVE = 'ka'; // Server -> Client\n\n  public static GQL_CONNECTION_TERMINATE = 'connection_terminate'; // Client -> Server\n  public static GQL_START = 'start'; // Client -> Server\n  public static GQL_DATA = 'data'; // Server -> Client\n  public static GQL_ERROR = 'error'; // Server -> Client\n  public static GQL_COMPLETE = 'complete'; // Server -> Client\n  public static GQL_STOP = 'stop'; // Client -> Server\n\n  // NOTE: The following message types are deprecated and will be removed soon.\n  /**\n   * @deprecated\n   */\n  public static SUBSCRIPTION_START = 'subscription_start';\n  /**\n   * @deprecated\n   */\n  public static SUBSCRIPTION_DATA = 'subscription_data';\n  /**\n   * @deprecated\n   */\n  public static SUBSCRIPTION_SUCCESS = 'subscription_success';\n  /**\n   * @deprecated\n   */\n  public static SUBSCRIPTION_FAIL = 'subscription_fail';\n  /**\n   * @deprecated\n   */\n  public static SUBSCRIPTION_END = 'subscription_end';\n  /**\n   * @deprecated\n   */\n  public static INIT = 'init';\n  /**\n   * @deprecated\n   */\n  public static INIT_SUCCESS = 'init_success';\n  /**\n   * @deprecated\n   */\n  public static INIT_FAIL = 'init_fail';\n  /**\n   * @deprecated\n   */\n  public static KEEP_ALIVE = 'keepalive';\n\n  constructor() {\n    throw new Error('Static Class');\n  }\n}\n","declare let window: any;\nconst _global = typeof global !== 'undefined' ? global : (typeof window !== 'undefined' ? window : {});\nconst NativeWebSocket = _global.WebSocket || _global.MozWebSocket;\n\nimport * as Backoff from 'backo2';\nimport { default as EventEmitterType, EventEmitter, ListenerFn } from 'eventemitter3';\nimport isString from './utils/is-string';\nimport isObject from './utils/is-object';\nimport { ExecutionResult } from 'graphql/execution/execute';\nimport { print } from 'graphql/language/printer';\nimport { DocumentNode } from 'graphql/language/ast';\nimport { getOperationAST } from 'graphql/utilities/getOperationAST';\nimport $$observable from 'symbol-observable';\n\nimport { GRAPHQL_WS } from './protocol';\nimport { MIN_WS_TIMEOUT, WS_TIMEOUT } from './defaults';\nimport MessageTypes from './message-types';\n\nexport interface Observer<T> {\n  next?: (value: T) => void;\n  error?: (error: Error) => void;\n  complete?: () => void;\n}\n\nexport interface Observable<T> {\n  subscribe(observer: Observer<T>): {\n    unsubscribe: () => void;\n  };\n}\n\nexport interface OperationOptions {\n  query?: string | DocumentNode;\n  variables?: Object;\n  operationName?: string;\n  [key: string]: any;\n}\n\nexport type FormatedError = Error & {\n  originalError?: any;\n};\n\nexport interface Operation {\n  options: OperationOptions;\n  handler: (error: Error[], result?: any) => void;\n}\n\nexport interface Operations {\n  [id: string]: Operation;\n}\n\nexport interface Middleware {\n  applyMiddleware(options: OperationOptions, next: Function): void;\n}\n\nexport type ConnectionParams = {\n  [paramName: string]: any,\n};\n\nexport type ConnectionParamsOptions = ConnectionParams | Function | Promise<ConnectionParams>;\n\nexport interface ClientOptions {\n  connectionParams?: ConnectionParamsOptions;\n  minTimeout?: number;\n  timeout?: number;\n  reconnect?: boolean;\n  reconnectionAttempts?: number;\n  connectionCallback?: (error: Error[], result?: any) => void;\n  lazy?: boolean;\n  inactivityTimeout?: number;\n  wsOptionArguments?: any[];\n}\n\nexport class SubscriptionClient {\n  public client: any;\n  public operations: Operations;\n  private url: string;\n  private nextOperationId: number;\n  private connectionParams: Function;\n  private minWsTimeout: number;\n  private wsTimeout: number;\n  private unsentMessagesQueue: Array<any>; // queued messages while websocket is opening.\n  private reconnect: boolean;\n  private reconnecting: boolean;\n  private reconnectionAttempts: number;\n  private backoff: any;\n  private connectionCallback: any;\n  private eventEmitter: EventEmitterType;\n  private lazy: boolean;\n  private inactivityTimeout: number;\n  private inactivityTimeoutId: any;\n  private closedByUser: boolean;\n  private wsImpl: any;\n  private wsProtocols: string | string[];\n  private wasKeepAliveReceived: boolean;\n  private tryReconnectTimeoutId: any;\n  private checkConnectionIntervalId: any;\n  private maxConnectTimeoutId: any;\n  private middlewares: Middleware[];\n  private maxConnectTimeGenerator: any;\n  private wsOptionArguments: any[];\n\n  constructor(\n    url: string,\n    options?: ClientOptions,\n    webSocketImpl?: any,\n    webSocketProtocols?: string | string[],\n  ) {\n    const {\n      connectionCallback = undefined,\n      connectionParams = {},\n      minTimeout = MIN_WS_TIMEOUT,\n      timeout = WS_TIMEOUT,\n      reconnect = false,\n      reconnectionAttempts = Infinity,\n      lazy = false,\n      inactivityTimeout = 0,\n      wsOptionArguments = [],\n    } = (options || {});\n\n    this.wsImpl = webSocketImpl || NativeWebSocket;\n    if (!this.wsImpl) {\n      throw new Error('Unable to find native implementation, or alternative implementation for WebSocket!');\n    }\n\n    this.wsProtocols = webSocketProtocols || GRAPHQL_WS;\n    this.connectionCallback = connectionCallback;\n    this.url = url;\n    this.operations = {};\n    this.nextOperationId = 0;\n    this.minWsTimeout = minTimeout;\n    this.wsTimeout = timeout;\n    this.unsentMessagesQueue = [];\n    this.reconnect = reconnect;\n    this.reconnecting = false;\n    this.reconnectionAttempts = reconnectionAttempts;\n    this.lazy = !!lazy;\n    this.inactivityTimeout = inactivityTimeout;\n    this.closedByUser = false;\n    this.backoff = new Backoff({ jitter: 0.5 });\n    this.eventEmitter = new EventEmitter();\n    this.middlewares = [];\n    this.client = null;\n    this.maxConnectTimeGenerator = this.createMaxConnectTimeGenerator();\n    this.connectionParams = this.getConnectionParams(connectionParams);\n    this.wsOptionArguments = wsOptionArguments;\n\n    if (!this.lazy) {\n      this.connect();\n    }\n  }\n\n  public get status() {\n    if (this.client === null) {\n      return this.wsImpl.CLOSED;\n    }\n\n    return this.client.readyState;\n  }\n\n  public close(isForced = true, closedByUser = true) {\n    this.clearInactivityTimeout();\n    if (this.client !== null) {\n      this.closedByUser = closedByUser;\n\n      if (isForced) {\n        this.clearCheckConnectionInterval();\n        this.clearMaxConnectTimeout();\n        this.clearTryReconnectTimeout();\n        this.unsubscribeAll();\n        this.sendMessage(undefined, MessageTypes.GQL_CONNECTION_TERMINATE, null);\n      }\n\n      this.client.close();\n      this.client.onopen = null;\n      this.client.onclose = null;\n      this.client.onerror = null;\n      this.client.onmessage = null;\n      this.client = null;\n      this.eventEmitter.emit('disconnected');\n\n      if (!isForced) {\n        this.tryReconnect();\n      }\n    }\n  }\n\n  public request(request: OperationOptions): Observable<ExecutionResult> {\n    const getObserver = this.getObserver.bind(this);\n    const executeOperation = this.executeOperation.bind(this);\n    const unsubscribe = this.unsubscribe.bind(this);\n\n    let opId: string;\n\n    this.clearInactivityTimeout();\n\n    return {\n      [$$observable]() {\n        return this;\n      },\n      subscribe(\n        observerOrNext: ((Observer<ExecutionResult>) | ((v: ExecutionResult) => void)),\n        onError?: (error: Error) => void,\n        onComplete?: () => void,\n      ) {\n        const observer = getObserver(observerOrNext, onError, onComplete);\n\n        opId = executeOperation(request, (error: Error[], result: any) => {\n          if ( error === null && result === null ) {\n            if ( observer.complete ) {\n              observer.complete();\n            }\n          } else if (error) {\n            if ( observer.error ) {\n              observer.error(error[0]);\n            }\n          } else {\n            if ( observer.next ) {\n              observer.next(result);\n            }\n          }\n        });\n\n        return {\n          unsubscribe: () => {\n            if ( opId ) {\n              unsubscribe(opId);\n              opId = null;\n            }\n          },\n        };\n      },\n    };\n  }\n\n  public on(eventName: string, callback: ListenerFn, context?: any): Function {\n    const handler = this.eventEmitter.on(eventName, callback, context);\n\n    return () => {\n      handler.off(eventName, callback, context);\n    };\n  }\n\n  public onConnected(callback: ListenerFn, context?: any): Function {\n    return this.on('connected', callback, context);\n  }\n\n  public onConnecting(callback: ListenerFn, context?: any): Function {\n    return this.on('connecting', callback, context);\n  }\n\n  public onDisconnected(callback: ListenerFn, context?: any): Function {\n    return this.on('disconnected', callback, context);\n  }\n\n  public onReconnected(callback: ListenerFn, context?: any): Function {\n    return this.on('reconnected', callback, context);\n  }\n\n  public onReconnecting(callback: ListenerFn, context?: any): Function {\n    return this.on('reconnecting', callback, context);\n  }\n\n  public onError(callback: ListenerFn, context?: any): Function {\n    return this.on('error', callback, context);\n  }\n\n  public unsubscribeAll() {\n    Object.keys(this.operations).forEach( subId => {\n      this.unsubscribe(subId);\n    });\n  }\n\n  public applyMiddlewares(options: OperationOptions): Promise<OperationOptions> {\n    return new Promise((resolve, reject) => {\n      const queue = (funcs: Middleware[], scope: any) => {\n        const next = (error?: any) => {\n          if (error) {\n            reject(error);\n          } else {\n            if (funcs.length > 0) {\n              const f = funcs.shift();\n              if (f) {\n                f.applyMiddleware.apply(scope, [options, next]);\n              }\n            } else {\n              resolve(options);\n            }\n          }\n        };\n        next();\n      };\n\n      queue([...this.middlewares], this);\n    });\n  }\n\n  public use(middlewares: Middleware[]): SubscriptionClient {\n    middlewares.map((middleware) => {\n      if (typeof middleware.applyMiddleware === 'function') {\n        this.middlewares.push(middleware);\n      } else {\n        throw new Error('Middleware must implement the applyMiddleware function.');\n      }\n    });\n\n    return this;\n  }\n\n  private getConnectionParams(connectionParams: ConnectionParamsOptions): Function {\n    return (): Promise<ConnectionParams> => new Promise((resolve, reject) => {\n      if (typeof connectionParams === 'function') {\n        try {\n          return resolve(connectionParams.call(null));\n        } catch (error) {\n          return reject(error);\n        }\n      }\n\n      resolve(connectionParams);\n    });\n  }\n\n  private executeOperation(options: OperationOptions, handler: (error: Error[], result?: any) => void): string {\n    if (this.client === null) {\n      this.connect();\n    }\n\n    const opId = this.generateOperationId();\n    this.operations[opId] = { options: options, handler };\n\n    this.applyMiddlewares(options)\n      .then(processedOptions => {\n        this.checkOperationOptions(processedOptions, handler);\n        if (this.operations[opId]) {\n          this.operations[opId] = { options: processedOptions, handler };\n          this.sendMessage(opId, MessageTypes.GQL_START, processedOptions);\n        }\n      })\n      .catch(error => {\n        this.unsubscribe(opId);\n        handler(this.formatErrors(error));\n      });\n\n    return opId;\n  }\n\n  private getObserver<T>(\n    observerOrNext: ((Observer<T>) | ((v: T) => void)),\n    error?: (e: Error) => void,\n    complete?: () => void,\n  ) {\n    if ( typeof observerOrNext === 'function' ) {\n      return {\n        next: (v: T) => observerOrNext(v),\n        error: (e: Error) => error && error(e),\n        complete: () => complete && complete(),\n      };\n    }\n\n    return observerOrNext;\n  }\n\n  private createMaxConnectTimeGenerator() {\n    const minValue = this.minWsTimeout;\n    const maxValue = this.wsTimeout;\n\n    return new Backoff({\n      min: minValue,\n      max: maxValue,\n      factor: 1.2,\n    });\n  }\n\n  private clearCheckConnectionInterval() {\n    if (this.checkConnectionIntervalId) {\n      clearInterval(this.checkConnectionIntervalId);\n      this.checkConnectionIntervalId = null;\n    }\n  }\n\n  private clearMaxConnectTimeout() {\n    if (this.maxConnectTimeoutId) {\n      clearTimeout(this.maxConnectTimeoutId);\n      this.maxConnectTimeoutId = null;\n    }\n    }\n\n  private clearTryReconnectTimeout() {\n    if (this.tryReconnectTimeoutId) {\n      clearTimeout(this.tryReconnectTimeoutId);\n      this.tryReconnectTimeoutId = null;\n    }\n  }\n\n  private clearInactivityTimeout() {\n    if (this.inactivityTimeoutId) {\n      clearTimeout(this.inactivityTimeoutId);\n      this.inactivityTimeoutId = null;\n    }\n  }\n\n  private setInactivityTimeout() {\n    if (this.inactivityTimeout > 0 && Object.keys(this.operations).length === 0) {\n      this.inactivityTimeoutId = setTimeout(() => {\n        if (Object.keys(this.operations).length === 0) {\n          this.close();\n        }\n      }, this.inactivityTimeout);\n    }\n  }\n\n  private checkOperationOptions(options: OperationOptions, handler: (error: Error[], result?: any) => void) {\n    const { query, variables, operationName } = options;\n\n    if (!query) {\n      throw new Error('Must provide a query.');\n    }\n\n    if (!handler) {\n      throw new Error('Must provide an handler.');\n    }\n\n    if (\n      ( !isString(query) && !getOperationAST(query, operationName)) ||\n      ( operationName && !isString(operationName)) ||\n      ( variables && !isObject(variables))\n    ) {\n      throw new Error('Incorrect option types. query must be a string or a document,' +\n        '`operationName` must be a string, and `variables` must be an object.');\n    }\n  }\n\n  private buildMessage(id: string, type: string, payload: any) {\n    const payloadToReturn = payload && payload.query ?\n      {\n        ...payload,\n        query: typeof payload.query === 'string' ? payload.query : print(payload.query),\n      } :\n      payload;\n\n    return {\n      id,\n      type,\n      payload: payloadToReturn,\n    };\n  }\n\n  // ensure we have an array of errors\n  private formatErrors(errors: any): FormatedError[] {\n    if (Array.isArray(errors)) {\n      return errors;\n    }\n\n    // TODO  we should not pass ValidationError to callback in the future.\n    // ValidationError\n    if (errors && errors.errors) {\n      return this.formatErrors(errors.errors);\n    }\n\n    if (errors && errors.message) {\n      return [errors];\n    }\n\n    return [{\n      name: 'FormatedError',\n      message: 'Unknown error',\n      originalError: errors,\n    }];\n  }\n\n  private sendMessage(id: string, type: string, payload: any) {\n    this.sendMessageRaw(this.buildMessage(id, type, payload));\n  }\n\n  // send message, or queue it if connection is not open\n  private sendMessageRaw(message: Object) {\n    switch (this.status) {\n      case this.wsImpl.OPEN:\n        let serializedMessage: string = JSON.stringify(message);\n        try {\n          JSON.parse(serializedMessage);\n        } catch (e) {\n          this.eventEmitter.emit('error', new Error(`Message must be JSON-serializable. Got: ${message}`));\n        }\n\n        this.client.send(serializedMessage);\n        break;\n      case this.wsImpl.CONNECTING:\n        this.unsentMessagesQueue.push(message);\n\n        break;\n      default:\n        if (!this.reconnecting) {\n          this.eventEmitter.emit('error', new Error('A message was not sent because socket is not connected, is closing or ' +\n            'is already closed. Message was: ' + JSON.stringify(message)));\n        }\n    }\n  }\n\n  private generateOperationId(): string {\n    return String(++this.nextOperationId);\n  }\n\n  private tryReconnect() {\n    if (!this.reconnect || this.backoff.attempts >= this.reconnectionAttempts) {\n      return;\n    }\n\n    if (!this.reconnecting) {\n      Object.keys(this.operations).forEach((key) => {\n        this.unsentMessagesQueue.push(\n          this.buildMessage(key, MessageTypes.GQL_START, this.operations[key].options),\n        );\n      });\n      this.reconnecting = true;\n    }\n\n    this.clearTryReconnectTimeout();\n\n    const delay = this.backoff.duration();\n    this.tryReconnectTimeoutId = setTimeout(() => {\n      this.connect();\n    }, delay);\n  }\n\n  private flushUnsentMessagesQueue() {\n    this.unsentMessagesQueue.forEach((message) => {\n      this.sendMessageRaw(message);\n    });\n    this.unsentMessagesQueue = [];\n  }\n\n  private checkConnection() {\n    if (this.wasKeepAliveReceived) {\n      this.wasKeepAliveReceived = false;\n      return;\n    }\n\n    if (!this.reconnecting) {\n      this.close(false, true);\n    }\n  }\n\n  private checkMaxConnectTimeout() {\n    this.clearMaxConnectTimeout();\n\n    // Max timeout trying to connect\n    this.maxConnectTimeoutId = setTimeout(() => {\n      if (this.status !== this.wsImpl.OPEN) {\n        this.reconnecting = true;\n        this.close(false, true);\n      }\n    }, this.maxConnectTimeGenerator.duration());\n  }\n\n  private connect() {\n    this.client = new this.wsImpl(this.url, this.wsProtocols, ...this.wsOptionArguments);\n\n    this.checkMaxConnectTimeout();\n\n    this.client.onopen = async () => {\n      if (this.status === this.wsImpl.OPEN) {\n        this.clearMaxConnectTimeout();\n        this.closedByUser = false;\n        this.eventEmitter.emit(this.reconnecting ? 'reconnecting' : 'connecting');\n\n        try {\n          const connectionParams: ConnectionParams = await this.connectionParams();\n\n          // Send CONNECTION_INIT message, no need to wait for connection to success (reduce roundtrips)\n          this.sendMessage(undefined, MessageTypes.GQL_CONNECTION_INIT, connectionParams);\n          this.flushUnsentMessagesQueue();\n        } catch (error) {\n          this.sendMessage(undefined, MessageTypes.GQL_CONNECTION_ERROR, error);\n          this.flushUnsentMessagesQueue();\n        }\n      }\n    };\n\n    this.client.onclose = () => {\n      if (!this.closedByUser) {\n        this.close(false, false);\n      }\n    };\n\n    this.client.onerror = (err: Error) => {\n      // Capture and ignore errors to prevent unhandled exceptions, wait for\n      // onclose to fire before attempting a reconnect.\n      this.eventEmitter.emit('error', err);\n    };\n\n    this.client.onmessage = ({ data }: {data: any}) => {\n      this.processReceivedData(data);\n    };\n  }\n\n  private processReceivedData(receivedData: any) {\n    let parsedMessage: any;\n    let opId: string;\n\n    try {\n      parsedMessage = JSON.parse(receivedData);\n      opId = parsedMessage.id;\n    } catch (e) {\n      throw new Error(`Message must be JSON-parseable. Got: ${receivedData}`);\n    }\n\n    if (\n      [ MessageTypes.GQL_DATA,\n        MessageTypes.GQL_COMPLETE,\n        MessageTypes.GQL_ERROR,\n      ].indexOf(parsedMessage.type) !== -1 && !this.operations[opId]\n    ) {\n      this.unsubscribe(opId);\n\n      return;\n    }\n\n    switch (parsedMessage.type) {\n      case MessageTypes.GQL_CONNECTION_ERROR:\n        if (this.connectionCallback) {\n          this.connectionCallback(parsedMessage.payload);\n        }\n        break;\n\n      case MessageTypes.GQL_CONNECTION_ACK:\n        this.eventEmitter.emit(this.reconnecting ? 'reconnected' : 'connected', parsedMessage.payload);\n        this.reconnecting = false;\n        this.backoff.reset();\n        this.maxConnectTimeGenerator.reset();\n\n        if (this.connectionCallback) {\n          this.connectionCallback();\n        }\n        break;\n\n      case MessageTypes.GQL_COMPLETE:\n        const handler = this.operations[opId].handler;\n        delete this.operations[opId];\n        handler.call(this, null, null);\n        break;\n\n      case MessageTypes.GQL_ERROR:\n        this.operations[opId].handler(this.formatErrors(parsedMessage.payload), null);\n        delete this.operations[opId];\n        break;\n\n      case MessageTypes.GQL_DATA:\n        const parsedPayload = !parsedMessage.payload.errors ?\n          parsedMessage.payload : {...parsedMessage.payload, errors: this.formatErrors(parsedMessage.payload.errors)};\n        this.operations[opId].handler(null, parsedPayload);\n        break;\n\n      case MessageTypes.GQL_CONNECTION_KEEP_ALIVE:\n        const firstKA = typeof this.wasKeepAliveReceived === 'undefined';\n        this.wasKeepAliveReceived = true;\n\n        if (firstKA) {\n          this.checkConnection();\n        }\n\n        if (this.checkConnectionIntervalId) {\n          clearInterval(this.checkConnectionIntervalId);\n          this.checkConnection();\n        }\n        this.checkConnectionIntervalId = setInterval(this.checkConnection.bind(this), this.wsTimeout);\n        break;\n\n      default:\n        throw new Error('Invalid message type!');\n    }\n  }\n\n  private unsubscribe(opId: string) {\n    if (this.operations[opId]) {\n      delete this.operations[opId];\n      this.setInactivityTimeout();\n      this.sendMessage(opId, MessageTypes.GQL_STOP, undefined);\n    }\n  }\n}\n","import { SubscriptionClient, ClientOptions } from 'subscriptions-transport-ws';\n\nimport { ApolloLink, Operation, FetchResult } from '../core';\nimport { Observable } from '../../utilities';\n\nexport namespace WebSocketLink {\n  /**\n   * Configuration to use when constructing the subscription client (subscriptions-transport-ws).\n   */\n  export interface Configuration {\n    /**\n     * The endpoint to connect to.\n     */\n    uri: string;\n\n    /**\n     * Options to pass when constructing the subscription client.\n     */\n    options?: ClientOptions;\n\n    /**\n     * A custom WebSocket implementation to use.\n     */\n    webSocketImpl?: any;\n  }\n}\n\n// For backwards compatibility.\nexport import WebSocketParams = WebSocketLink.Configuration;\n\nexport class WebSocketLink extends ApolloLink {\n  private subscriptionClient: SubscriptionClient;\n\n  constructor(\n    paramsOrClient: WebSocketLink.Configuration | SubscriptionClient,\n  ) {\n    super();\n\n    if (paramsOrClient instanceof SubscriptionClient) {\n      this.subscriptionClient = paramsOrClient;\n    } else {\n      this.subscriptionClient = new SubscriptionClient(\n        paramsOrClient.uri,\n        paramsOrClient.options,\n        paramsOrClient.webSocketImpl,\n      );\n    }\n  }\n\n  public request(operation: Operation): Observable<FetchResult> | null {\n    return this.subscriptionClient.request(operation) as Observable<\n      FetchResult\n    >;\n  }\n}\n","import { ApolloLink, Operation, GraphQLRequest, NextLink } from '../core';\nimport { Observable, ObservableSubscription } from '../../utilities';\nimport { DefaultContext } from '../../core';\n\nexport type ContextSetter = (\n  operation: GraphQLRequest,\n  prevContext: DefaultContext,\n) => Promise<DefaultContext> | DefaultContext;\n\nexport function setContext(setter: ContextSetter): ApolloLink {\n  return new ApolloLink((operation: Operation, forward: NextLink) => {\n    const { ...request } = operation;\n\n    return new Observable(observer => {\n      let handle: ObservableSubscription;\n      let closed = false;\n      Promise.resolve(request)\n        .then(req => setter(req, operation.getContext()))\n        .then(operation.setContext)\n        .then(() => {\n          // if the observer is already closed, no need to subscribe.\n          if (closed) return;\n          handle = forward(operation).subscribe({\n            next: observer.next.bind(observer),\n            error: observer.error.bind(observer),\n            complete: observer.complete.bind(observer),\n          });\n        })\n        .catch(observer.error.bind(observer));\n\n      return () => {\n        closed = true;\n        if (handle) handle.unsubscribe();\n      };\n    });\n  });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deepCopy = exports.convertToPossibleTypes = exports.importQuery = void 0;\nconst core_1 = require(\"@rxdi/core\");\nfunction importQuery(search) {\n    let result;\n    const DOCUMENTS = core_1.Container.get('graphql-documents');\n    Object.keys(DOCUMENTS).filter((doc) => {\n        if (doc.indexOf(search) !== -1) {\n            result = DOCUMENTS[doc];\n        }\n    });\n    if (!result) {\n        console.error(`Missing query: ${search}`);\n        return search;\n    }\n    return result;\n}\nexports.importQuery = importQuery;\nconst convertToPossibleTypes = (introspectionQuery) => introspectionQuery.__schema.types.reduce((acc, curr) => (Object.assign(Object.assign({}, acc), { [curr.name]: curr.possibleTypes.map((type) => type.name) })), {});\nexports.convertToPossibleTypes = convertToPossibleTypes;\n/* Utility function helping us to get a new object using the apollo-store */\nconst deepCopy = (state) => JSON.parse(JSON.stringify(state));\nexports.deepCopy = deepCopy;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar GraphqlModule_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemoryCache = exports.GraphqlModule = void 0;\nconst core_1 = require(\"@rxdi/core\");\nconst cache_1 = require(\"@apollo/client/cache\");\nconst graphql_injection_1 = require(\"./graphql.injection\");\nconst core_2 = require(\"@apollo/client/core\");\nconst ws_1 = require(\"@apollo/client/link/ws\");\nconst subscriptions_transport_ws_1 = require(\"subscriptions-transport-ws\");\nconst utilities_1 = require(\"@apollo/client/utilities\");\nconst context_1 = require(\"@apollo/client/link/context\");\nlet GraphqlModule = GraphqlModule_1 = class GraphqlModule {\n    static forRoot({ uri, pubsub, refreshOnUnauthenticated, onRequest, cache, apolloRequestHandler, cancelPendingRequests, apolloClientOptions, } = {}, documents = {}) {\n        const headers = {};\n        const connections = {};\n        return {\n            module: GraphqlModule_1,\n            providers: [\n                {\n                    provide: graphql_injection_1.GraphqlDocuments,\n                    useValue: documents,\n                },\n                {\n                    provide: graphql_injection_1.ApolloClient,\n                    useFactory: () => new core_2.ApolloClient(Object.assign({ link: (0, core_2.concat)((0, core_2.from)([\n                            (0, context_1.setContext)((operation) => __awaiter(this, void 0, void 0, function* () {\n                                const method = onRequest || graphql_injection_1.noopHeaders;\n                                let headersMap = (yield method.call(operation)) || {};\n                                headersMap.forEach((v, k) => {\n                                    headers[k] = v;\n                                });\n                                return {\n                                    headers,\n                                };\n                            })),\n                            new core_2.ApolloLink(typeof apolloRequestHandler === 'function'\n                                ? apolloRequestHandler\n                                : (operation, forward) => {\n                                    /* Start cancel request */\n                                    if (cancelPendingRequests) {\n                                        return new core_2.Observable((observer) => {\n                                            const context = operation.getContext();\n                                            const connectionHandle = forward(operation).subscribe({\n                                                next: (...arg) => observer.next(...arg),\n                                                error: (...arg) => {\n                                                    cleanUp();\n                                                    observer.error(...arg);\n                                                },\n                                                complete: (...arg) => {\n                                                    cleanUp();\n                                                    observer.complete(...arg);\n                                                },\n                                            });\n                                            const cleanUp = () => {\n                                                connectionHandle === null || connectionHandle === void 0 ? void 0 : connectionHandle.unsubscribe();\n                                                delete connections[context.requestTrackerId];\n                                            };\n                                            if (context.requestTrackerId) {\n                                                const controller = new AbortController();\n                                                controller.signal.onabort = cleanUp;\n                                                operation.setContext(Object.assign(Object.assign({}, context), { fetchOptions: Object.assign({ signal: controller.signal }, context === null || context === void 0 ? void 0 : context.fetchOptions) }));\n                                                if (connections[context.requestTrackerId]) {\n                                                    // If a controller exists, that means this operation should be aborted.\n                                                    connections[context.requestTrackerId].abort();\n                                                }\n                                                connections[context.requestTrackerId] = controller;\n                                            }\n                                            return connectionHandle;\n                                        });\n                                    }\n                                    /* End cancel request */\n                                    return forward(operation);\n                                }),\n                        ]), (0, core_2.split)(({ query }) => {\n                            const { kind, operation } = (0, utilities_1.getMainDefinition)(query);\n                            return kind === 'OperationDefinition' && operation === 'subscription';\n                        }, (() => {\n                            const wsLink = new ws_1.WebSocketLink(new subscriptions_transport_ws_1.SubscriptionClient(pubsub, {\n                                lazy: true,\n                                connectionParams: () => ({\n                                    get authorization() {\n                                        return headers['authorization'];\n                                    },\n                                }),\n                                connectionCallback: (error) => {\n                                    console.error('[Subscription]: ', error);\n                                    if ((error === null || error === void 0 ? void 0 : error['message']) === 'Unauthorized') {\n                                        if (refreshOnUnauthenticated) {\n                                            location.reload();\n                                        }\n                                        wsLink['subscriptionClient'].close(false, false);\n                                    }\n                                },\n                                reconnect: true,\n                            }));\n                            return wsLink;\n                        })(), (0, core_2.createHttpLink)({ uri }))), cache: cache || new cache_1.InMemoryCache() }, apolloClientOptions)),\n                },\n            ],\n        };\n    }\n};\nGraphqlModule = GraphqlModule_1 = __decorate([\n    (0, core_1.Module)({})\n], GraphqlModule);\nexports.GraphqlModule = GraphqlModule;\n__exportStar(require(\"./graphql.injection\"), exports);\n__exportStar(require(\"./graphq.helpers\"), exports);\nvar cache_2 = require(\"@apollo/client/cache\");\nObject.defineProperty(exports, \"InMemoryCache\", { enumerable: true, get: function () { return cache_2.InMemoryCache; } });\n",null,null,null,null,"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nvar attr = (function (name) {\n  return {\n    get: function get(obj) {\n      return !obj[name] && typeof obj.get === 'function' ? obj.get(name) : obj[name];\n    },\n    mod: function mod(f) {\n      return function (obj) {\n        var _len,\n            params,\n            _key,\n            _arguments = arguments;\n        return function () {\n          for (_len = _arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            params[_key - 1] = _arguments[_key];\n          }\n          if (typeof obj.set === 'function') {\n            return obj.set(name, f(obj[name] || obj.get(name)));\n          } else if (Array.isArray(obj)) {\n            return obj.slice(0, name).concat(f.apply(void 0, [obj[name]].concat(params))).concat(obj.slice(name + 1));\n          } else {\n            return _objectSpread2(_objectSpread2({}, obj), {}, _defineProperty({}, name, f.apply(void 0, [obj[name]].concat(params))));\n          }\n        }();\n      };\n    },\n    traversal: false\n  };\n});\n\nvar keys = function keys(obj) {\n  return obj ? typeof obj.keys === 'function' ? obj.keys() : Object.keys(obj) : [];\n};\nvar setter = function setter(constructor) {\n  switch (constructor) {\n    case Map:\n      return function (obj, key, value) {\n        obj.set(key, value);\n        return obj;\n      };\n    case Set:\n      return function (obj, _, value) {\n        return obj.add(value);\n      };\n    case Object:\n      return function (obj, key, value) {\n        obj[key] = value;\n        return obj;\n      };\n  }\n};\nvar getter = function getter(constructor) {\n  switch (constructor) {\n    case Map:\n      return function (obj, key) {\n        return obj.get(key);\n      };\n    case Set:\n      return function (_, key) {\n        return key;\n      };\n    case Object:\n      return function (obj, key) {\n        return obj[key];\n      };\n  }\n};\nvar toFP = function toFP(_ref) {\n  var _native = _ref[\"native\"],\n      overrides = _ref.overrides;\n  return function (f) {\n    for (var _len = arguments.length, fixedArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      fixedArgs[_key - 1] = arguments[_key];\n    }\n    return function (coll) {\n      var fxn = into(f);\n      if (typeof coll === 'undefined' || coll === null) {\n        return coll;\n      }\n      if (typeof coll[_native] === 'function') {\n        return coll[_native].apply(coll, [fxn].concat(fixedArgs));\n      } else {\n        var Constructor = Object.getPrototypeOf(coll).constructor;\n        var override = overrides[Constructor];\n        if (override) {\n          return override(Constructor, getter(Constructor), setter(Constructor)).apply(void 0, [coll, fxn].concat(fixedArgs));\n        }\n      }\n    };\n  };\n};\nvar filter = function () {\n  var _overrides;\n  var iteratorFilter = function iteratorFilter(Constructor, get, set) {\n    return function (obj, pred) {\n      var acc = new Constructor();\n      var _iterator = _createForOfIteratorHelper(keys(obj)),\n          _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var key = _step.value;\n          var value = get(obj, key);\n          if (pred(value, key)) {\n            set(acc, key, value);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return acc;\n    };\n  };\n  return toFP({\n    \"native\": 'filter',\n    overrides: (_overrides = {}, _defineProperty(_overrides, Object, iteratorFilter), _defineProperty(_overrides, Map, iteratorFilter), _defineProperty(_overrides, Set, iteratorFilter), _overrides)\n  });\n}();\nvar map = function () {\n  var _overrides2;\n  var iteratorMap = function iteratorMap(Constructor, get, set) {\n    return function (obj, f) {\n      var acc = new Constructor();\n      var _iterator2 = _createForOfIteratorHelper(keys(obj)),\n          _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var key = _step2.value;\n          set(acc, key, f(get(obj, key), key));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return acc;\n    };\n  };\n  return toFP({\n    \"native\": 'map',\n    overrides: (_overrides2 = {}, _defineProperty(_overrides2, Object, iteratorMap), _defineProperty(_overrides2, Map, iteratorMap), _defineProperty(_overrides2, Set, iteratorMap), _defineProperty(_overrides2, Promise, function () {\n      return function (promise, f) {\n        return promise.then(f);\n      };\n    }), _overrides2)\n  });\n}();\nvar find = function () {\n  var _overrides3;\n  var iteratorFind = function iteratorFind(_, get, __) {\n    return function (obj, f) {\n      var result;\n      if (!obj) {\n        return result;\n      }\n      var _iterator3 = _createForOfIteratorHelper(keys(obj)),\n          _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var key = _step3.value;\n          var value = get(obj, key);\n          if (f(value, key)) {\n            return value;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    };\n  };\n  return toFP({\n    \"native\": 'find',\n    overrides: (_overrides3 = {}, _defineProperty(_overrides3, Object, iteratorFind), _defineProperty(_overrides3, Map, iteratorFind), _defineProperty(_overrides3, Set, iteratorFind), _overrides3)\n  });\n}();\nvar some = function () {\n  var _overrides4;\n  var iteratorSome = function iteratorSome(_, get, __) {\n    return function (obj, pred) {\n      var _iterator4 = _createForOfIteratorHelper(keys(obj)),\n          _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var key = _step4.value;\n          if (pred(get(obj, key), key)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return false;\n    };\n  };\n  return toFP({\n    \"native\": 'some',\n    overrides: (_overrides4 = {}, _defineProperty(_overrides4, Object, iteratorSome), _defineProperty(_overrides4, Map, iteratorSome), _defineProperty(_overrides4, Set, iteratorSome), _overrides4)\n  });\n}();\nvar reduce = function () {\n  var _overrides5;\n  var iteratorReduce = function iteratorReduce(Constructor, get, _) {\n    return function (obj, f, base) {\n      var acc = new Constructor();\n      var _iterator5 = _createForOfIteratorHelper(keys(obj)),\n          _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var key = _step5.value;\n          f(acc, get(obj, key), key);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      return base;\n    };\n  };\n  return toFP({\n    \"native\": 'reduce',\n    overrides: (_overrides5 = {}, _defineProperty(_overrides5, Object, iteratorReduce), _defineProperty(_overrides5, Map, iteratorReduce), _defineProperty(_overrides5, Set, iteratorReduce), _overrides5)\n  });\n}();\nvar every = function every(arr) {\n  var _iterator6 = _createForOfIteratorHelper(arr),\n      _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var elem = _step6.value;\n      if (!elem) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  return true;\n};\nvar cons = function cons(x) {\n  return function (xs) {\n    return [].concat(_toConsumableArray(xs), [x]);\n  };\n};\nvar unshift = function unshift(x) {\n  return function (xs) {\n    return [x].concat(_toConsumableArray(xs));\n  };\n};\nvar first = function first(xs) {\n  return xs[0];\n};\nvar rest = function rest(_ref2) {\n  var _ref3 = _toArray(_ref2);\n      _ref3[0];\n      var xs = _ref3.slice(1);\n  return xs;\n};\nvar push = cons;\nvar concat = function concat(xs) {\n  return function (ys) {\n    return [].concat(_toConsumableArray(ys), _toConsumableArray(xs));\n  };\n};\nvar append = concat;\nvar prepend = function prepend(ys) {\n  return function (xs) {\n    return [].concat(_toConsumableArray(ys), _toConsumableArray(xs));\n  };\n};\n\nvar compile = function compile(lens) {\n  return ['string', 'number'].includes(_typeof(lens)) ? attr(lens) : _objectSpread2({\n    traversal: false,\n    optional: false\n  }, lens);\n};\nvar compose = (function () {\n  for (var _len = arguments.length, lenses = new Array(_len), _key = 0; _key < _len; _key++) {\n    lenses[_key] = arguments[_key];\n  }\n  return lenses.length === 1 ? compile(lenses[0]) : {\n    get: function get(obj) {\n      return lenses.map(compile).reduce(function (_ref, lens) {\n        var traverser = _ref.traverser,\n            state = _ref.state,\n            shortCircuited = _ref.shortCircuited;\n        var nextState = shortCircuited ? null : traverser(lens.get)(state);\n        return {\n          state: nextState,\n          traverser: lens.traversal ? function (f) {\n            return map(traverser(f));\n          } : traverser,\n          shortCircuited: shortCircuited || lens.optional && (nextState === null || nextState === undefined)\n        };\n      }, {\n        state: obj,\n        traverser: function traverser(x) {\n          return x;\n        },\n        shortCircuited: false\n      }).state;\n    },\n    mod: function mod(f) {\n      return function (obj) {\n        var aux;\n        for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          params[_key2 - 1] = arguments[_key2];\n        }\n        return aux = function aux(object, lenses) {\n          var _lenses, first, rest;\n          return _lenses = _toArray(lenses), first = _lenses[0], rest = _lenses.slice(1), rest.length === 0 ? first.mod(f).apply(void 0, [object].concat(params)) : first.mod(function (obj) {\n            return aux(obj, rest);\n          }).apply(void 0, [object].concat(params));\n        }, aux(obj, lenses.map(compile));\n      };\n    }\n  };\n});\n\nvar get = function get() {\n  return compose.apply(void 0, arguments).get;\n};\n\nvar has = function has(pattern) {\n  return function (obj) {\n    return pattern && _typeof(pattern) === 'object' ? !!obj && every(Object.keys(pattern).map(function (key) {\n      return has(get(key)(pattern))(bindingGet(key)(obj));\n    })) : typeof pattern === 'function' ? pattern(obj) : pattern === obj;\n  };\n};\nvar greaterThan = function greaterThan(a) {\n  return function (b) {\n    return b > a;\n  };\n};\nvar lessThan = function lessThan(a) {\n  return function (b) {\n    return b < a;\n  };\n};\nvar greaterThanEq = function greaterThanEq(a) {\n  return function (b) {\n    return b >= a;\n  };\n};\nvar lessThanEq = function lessThanEq(a) {\n  return function (b) {\n    return b <= a;\n  };\n};\nvar toggle = function toggle(bool) {\n  return !bool;\n};\nvar returns = function returns(val) {\n  return function (f) {\n    return f() === val;\n  };\n};\nvar bindingGet = function bindingGet(key) {\n  return function (pattern) {\n    var v;\n    return v = get(key)(pattern), typeof v === 'function' ? v.bind(pattern) : v;\n  };\n};\nvar isObject = function isObject(x) {\n  return _typeof(x) === 'object' && !Array.isArray(x) && x !== null;\n};\nvar isValue = function isValue(x) {\n  return x !== null && x !== undefined;\n};\n\nvar into = function into(f) {\n  return typeof f === 'function' ? f : _typeof(f) === 'object' ? has(f) : get(f);\n};\n\nvar identity = function identity(a) {\n  return a;\n};\nvar flip = function flip(f) {\n  return function (a) {\n    return function (b) {\n      return f(b)(a);\n    };\n  };\n};\nvar always = function always(a) {\n  return function (b) {\n    return a;\n  };\n};\nvar not = function not(f) {\n  return function () {\n    return !into(f).apply(void 0, arguments);\n  };\n};\nvar and = function and() {\n  for (var _len = arguments.length, fs = new Array(_len), _key = 0; _key < _len; _key++) {\n    fs[_key] = arguments[_key];\n  }\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return fs.reduce(function (acc, f) {\n      return acc && f.apply(void 0, args);\n    }, true);\n  };\n};\nvar or = function or() {\n  for (var _len3 = arguments.length, fs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    fs[_key3] = arguments[_key3];\n  }\n  return function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return fs.reduce(function (acc, f) {\n      return acc || f.apply(void 0, args);\n    }, false);\n  };\n};\nvar curry = function curry(n) {\n  return function (f) {\n    return _curry(n, f);\n  };\n};\nfunction _curry(n, f) {\n  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  return function (arg) {\n    return n ? _curry(n, f, cons(arg)(args)) : f.apply(void 0, _toConsumableArray(args));\n  };\n}\n\nvar add = function add(a) {\n  return function (b) {\n    return a + b;\n  };\n};\nvar sub = function sub(a) {\n  return function (b) {\n    return b - a;\n  };\n};\nvar inc = function inc(num) {\n  return num + 1;\n};\nvar dec = function dec(num) {\n  return num - 1;\n};\n\nvar includes = function includes(snippet) {\n  return function (text) {\n    return text.includes(snippet);\n  };\n};\nvar includesi = function includesi(snippet) {\n  return function (text) {\n    return text.toLowerCase().includes(snippet.toLowerCase());\n  };\n};\n\nvar foldOf = function foldOf(f) {\n  return function (field) {\n    var getter = into(field);\n    return function (acc, curr) {\n      return f(acc, curr, getter);\n    };\n  };\n};\nvar maxOf = foldOf(function (acc, curr, getter) {\n  return getter(curr) > getter(acc) ? curr : acc;\n});\nvar minOf = foldOf(function (acc, curr, getter) {\n  return getter(curr) < getter(acc) ? curr : acc;\n});\nvar findOf = foldOf(function (acc, curr, getter) {\n  return getter(acc) ? acc : getter(curr) ? curr : null;\n});\nvar sumOf = foldOf(function (acc, curr, getter) {\n  return getter(curr) + (typeof acc === 'number' ? acc : getter(acc));\n});\nvar productOf = foldOf(function (acc, curr, getter) {\n  return getter(curr) * (typeof acc === 'number' ? acc : getter(acc));\n});\n\nvar mod = function mod() {\n  return compose.apply(void 0, arguments).mod;\n};\nvar set = function set() {\n  for (var _len = arguments.length, lenses = new Array(_len), _key = 0; _key < _len; _key++) {\n    lenses[_key] = arguments[_key];\n  }\n  return function (newValue) {\n    return compose.apply(void 0, lenses).mod(always(newValue));\n  };\n};\n\nvar matching = function matching(pred) {\n  var predFxn = into(pred);\n  return {\n    get: filter(predFxn),\n    mod: function mod(f) {\n      return map(function (n) {\n        return predFxn(n) ? f(n) : n;\n      });\n    },\n    traversal: true\n  };\n};\n\nvar all = function all() {\n  return {\n    get: identity,\n    mod: map,\n    traversal: true\n  };\n};\nvar all$1 = Object.assign(all, all());\n\nvar unless = (function (pred) {\n  return matching(not(pred));\n});\n\nvar updateAll = function updateAll() {\n  for (var _len = arguments.length, updaters = new Array(_len), _key = 0; _key < _len; _key++) {\n    updaters[_key] = arguments[_key];\n  }\n  return function (state) {\n    return updaters.reduce(function (currState, transformer) {\n      return transformer(currState);\n    }, state);\n  };\n};\n\nvar withOf = function withOf(f) {\n  f.of = f;\n  return f;\n};\nvar foldBy = function foldBy(reducer) {\n  return function (field) {\n    return compile({\n      get: reduce(reducer(field)),\n      mod: function mod(f) {\n        return function (obj) {\n          var matching = reduce(reducer(field))(obj);\n          return map(function (item) {\n            return item === matching ? f(item) : item;\n          })(obj);\n        };\n      }\n    });\n  };\n};\nvar findBy = withOf(foldBy(findOf));\nvar maxBy = withOf(foldBy(maxOf));\nvar minBy = withOf(foldBy(minOf));\n\nvar maybe = (function (name) {\n  var base = attr(name);\n  return compile({\n    get: function get(obj) {\n      return obj && base.get(obj);\n    },\n    mod: function mod(f) {\n      return function (obj) {\n        return obj && base.get(obj) ? base.mod(f)(obj) : obj;\n      };\n    },\n    optional: true\n  });\n});\n\nvar valueOr = function valueOr(def) {\n  return compile({\n    get: function get(val) {\n      return isValue(val) ? val : def;\n    },\n    mod: function mod(fn) {\n      return function (val) {\n        return isValue(val) ? fn(val) : fn(def);\n      };\n    }\n  });\n};\n\nvar fill = function fill(filling) {\n  return function (obj) {\n    var out = _objectSpread2({}, obj);\n    Object.entries(filling).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n      out[key] = isValue(out[key]) ? out[key] : value;\n      if (out.hasOwnProperty(key)) {\n        if (isObject(out[key]) && isObject(value)) {\n          out[key] = fill(value)(obj[key]);\n        }\n      }\n    });\n    return out;\n  };\n};\n\nexport { add, all$1 as all, always, and, append, compose, concat, cons, curry, dec, every, fill, filter, find, findBy, findOf, first, flip, foldBy, foldOf, get, greaterThan, greaterThanEq, has, identity, inc, includes, includesi, into, isObject, isValue, compile as lens, lessThan, lessThanEq, map, matching, maxBy, maxOf, maybe, minBy, minOf, mod, not, or, prepend, productOf, push, reduce, rest, returns, set, some, sub, sumOf, toggle, unless, unshift, updateAll, valueOr };\n",null,null,null,null,null,null,null,null,null,"import { Component, html, LitElement, property, query } from '@rxdi/lit-html';\n\n/**\n * @customElement sprite-part-selector\n */\n@Component({\n  selector: 'sprite-part-selector',\n  template(this: SpriteComponent) {\n    return html`\n      <template>\n        <svg id=\"A1\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <path\n            d=\"m25.81 7a.16.16 0 0 0-.14-.13l-4-.8-6.98 20.93a.29.29 0 0 1-.27.2h-.09a.27.27 0 0 1-.18-.34l6.85-20.69-2.16 1.08a.17.17 0 0 0-.1.1l-6.88 19.13a.19.19 0 0 0 .1.23l2.06 1h.08l4.74-.63a.19.19 0 0 0 .16-.14l1.18-4.2 2.44-.12 4.16-.23a.3.3 0 0 1 .29.2l.81 2.7a.29.29 0 0 1-.2.36h-.08a.3.3 0 0 1-.27-.21l-.7-2.47-1.35.03.62 2.54a.18.18 0 0 0 .15.14l1.67.33 1-.13 2.35-.29a.16.16 0 0 0 .13-.24zm.25 12a.3.3 0 0 1-.23.11h-4.83a.3.3 0 0 1-.24-.11.3.3 0 0 1 0-.26l2.5-7.86a.35.35 0 0 1 .28-.2.31.31 0 0 1 .27.21l2.33 7.85a.35.35 0 0 1-.14.26z\"\n            fill=\"#d12026\"\n          />\n          <path d=\"m22.88 13.91 1.26 4.67h1.31l-1.95-6.58z\" fill=\"#d12026\" />\n          <g fill=\"#232323\">\n            <path\n              d=\"m36.15 4-.7-.74v15a.29.29 0 0 1-.28.28.28.28 0 0 1-.28-.28v-15l-2.27.32h-.07a0 0 0 0 0 0 0 3.4 3.4 0 0 1-.24.7 4.56 4.56 0 0 1-1.26 1.72 7.53 7.53 0 0 1-2.05 1.45.42.42 0 0 0-.12.08v2.77a11.66 11.66 0 0 0 1.81-1.13 11.3 11.3 0 0 0 1.25-1v1.83 8.76l3.35.28.82-.55z\"\n            />\n            <path d=\"m31.27 9.16-.36.28a13.43 13.43 0 0 1-1.91 1.17l1.09.11.91-.42.23-.13z\" />\n          </g>\n        </svg>\n        <svg id=\"APPLEPAY\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <path\n            d=\"m12.9 10.67c-.41.49-1.07.87-1.72.81-.08-.66.24-1.35.62-1.78.41-.5 1.13-.85 1.71-.88.07.68-.2 1.35-.6 1.85m.59.94c-.95-.05-1.76.54-2.22.54s-1.15-.51-1.9-.5c-.98.01-1.89.57-2.39 1.45-1.03 1.76-.27 4.38.72 5.81.49.71 1.07 1.49 1.83 1.46.72-.03 1.01-.47 1.89-.47s1.13.47 1.9.46c.79-.01 1.29-.71 1.78-1.42.55-.81.78-1.59.79-1.63-.01-.01-1.53-.59-1.55-2.34-.01-1.46 1.2-2.16 1.25-2.2-.68-1.01-1.75-1.12-2.12-1.15m5.49-1.98v10.66h1.65v-3.64h2.29c2.09 0 3.56-1.44 3.56-3.51s-1.44-3.5-3.51-3.5h-4zm1.65 1.39h1.91c1.44 0 2.26.77 2.26 2.11s-.82 2.12-2.26 2.12h-1.9v-4.23zm8.87 9.35c1.04 0 2-.53 2.44-1.36h.03v1.28h1.53v-5.31c0-1.54-1.23-2.53-3.12-2.53-1.76 0-3.06 1-3.1 2.39h1.49c.12-.66.73-1.09 1.57-1.09 1.01 0 1.58.47 1.58 1.34v.59l-2.06.12c-1.92.12-2.96.9-2.96 2.27s1.07 2.3 2.61 2.3zm.44-1.26c-.88 0-1.44-.42-1.44-1.07s.54-1.06 1.57-1.12l1.84-.12v.6c0 1-.85 1.71-1.97 1.71zm5.61 4.08c1.61 0 2.37-.62 3.04-2.48l2.91-8.15h-1.68l-1.95 6.3h-.03l-1.95-6.3h-1.73l2.8 7.76-.15.47c-.25.8-.66 1.11-1.39 1.11-.13 0-.38-.01-.49-.03v1.28c.1.03.51.04.63.04z\"\n            fill=\"#010101\"\n          />\n        </svg>\n        <svg id=\"BANK_TRANSFER\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <path\n            d=\"m12.94 25.69v.91h22.16v-.91zm1.86-.91h18.48v-.91h-18.48zm9.4-19.38-10.31 8.3h20.3zm-8.49 9.22v8.3h2.77v-8.3zm4.63 0v8.3h2.77v-8.3zm4.59 0v8.3h2.77v-8.3zm4.63 0v8.3h2.77v-8.3z\"\n            fill=\"#48494a\"\n          />\n        </svg>\n        <svg id=\"BITPACE\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <path\n            d=\"m26.4 10.8h-2.49v-4.8c-1.36 0-2.6.53-3.51 1.4-.92.87-1.51 2.07-1.59 3.41-2.68.16-4.81 2.38-4.81 5.1h4.8v2.49c0 4.2 3.4 7.6 7.6 7.6s7.6-3.4 7.6-7.6-3.4-7.6-7.6-7.6zm0 10.09c-1.37 0-2.49-1.11-2.49-2.49v-2.49h2.49c1.37 0 2.49 1.11 2.49 2.49s-1.11 2.49-2.49 2.49z\"\n            fill=\"#36a535\"\n          />\n          <path d=\"m23.71 15.91-4.91 1.22v-1.22z\" fill=\"#328a31\" />\n        </svg>\n        <svg id=\"CASH\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <g fill=\"#323334\">\n            <path\n              d=\"m8.11 16.76a5.11 5.11 0 0 1 5.44-5.2 3.93 3.93 0 0 1 3.53 1.63l-1.78 1.42a2.1 2.1 0 0 0-1.91-1 2.8 2.8 0 0 0-2.8 3 1.9 1.9 0 0 0 2.12 1.95 2.72 2.72 0 0 0 2.12-1l1.45 1.44a4.58 4.58 0 0 1-3.8 1.61c-2.67-.03-4.37-1.61-4.37-3.85z\"\n            />\n            <path\n              d=\"m25 13.69-1.34 6.72h-2.22l.14-.63a2.8 2.8 0 0 1-1.95.74 2.86 2.86 0 0 1-2.84-3.06 3.72 3.72 0 0 1 3.65-3.88 2.29 2.29 0 0 1 2 .91l.16-.8zm-3 3.06a1.19 1.19 0 0 0-1.28-1.29 1.68 1.68 0 0 0-1.6 1.89 1.17 1.17 0 0 0 1.28 1.27 1.67 1.67 0 0 0 1.65-1.87z\"\n            />\n            <path\n              d=\"m24.9 19.86.85-1.65a4.58 4.58 0 0 0 2.33.62c.77 0 1.08-.18 1.08-.48 0-.77-3.48-.06-3.48-2.33 0-1.61 1.55-2.44 3.58-2.44a6 6 0 0 1 2.56.53l-.82 1.65a3.83 3.83 0 0 0-2-.51c-.77 0-1.08.24-1.08.51 0 .8 3.47.09 3.47 2.33 0 1.61-1.57 2.43-3.57 2.43a6 6 0 0 1-2.92-.66z\"\n            />\n            <path\n              d=\"m39.93 15.88a4 4 0 0 1-.08.81l-.75 3.72h-2.35l.69-3.5a1.8 1.8 0 0 0 .05-.44c0-.59-.29-.9-.93-.9-.8 0-1.36.49-1.57 1.52l-.67 3.32h-2.32l1.84-9.2h2.35l-.6 3a3.12 3.12 0 0 1 2-.67 2.18 2.18 0 0 1 2.34 2.34z\"\n            />\n          </g>\n        </svg>\n        <svg id=\"CASHPAY\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <g fill=\"#0a8c00\">\n            <path\n              d=\"m8.89 14.27a1.25 1.25 0 0 0-.89-.27 1.91 1.91 0 0 0-1 .26 2.39 2.39 0 0 0-.7.68 3.23 3.23 0 0 0-.4.93 3.85 3.85 0 0 0-.13 1 2.41 2.41 0 0 0 .09.67 1.71 1.71 0 0 0 .27.56 1.53 1.53 0 0 0 .48.39 1.65 1.65 0 0 0 .7.14 1.62 1.62 0 0 0 .58-.11 1.5 1.5 0 0 0 .48-.3 1.61 1.61 0 0 0 .35-.43 1.49 1.49 0 0 0 .19-.52h1.5a5.13 5.13 0 0 1-.54 1.22 3 3 0 0 1-.69.8 2.45 2.45 0 0 1-.86.45 3.77 3.77 0 0 1-1 .14 3.09 3.09 0 0 1-2.24-.77 3 3 0 0 1-.78-2.24 4.78 4.78 0 0 1 .25-1.57 4.2 4.2 0 0 1 .74-1.31 3.77 3.77 0 0 1 1.16-.99 3.56 3.56 0 0 1 1.55-.31 3.9 3.9 0 0 1 1.1.16 2.48 2.48 0 0 1 .87.49 2.2 2.2 0 0 1 .57.79 2.83 2.83 0 0 1 .19 1.09h-1.5a1.23 1.23 0 0 0-.34-.95z\"\n            />\n            <path\n              d=\"m11.85 15.45a2 2 0 0 1 .54-.5 2.27 2.27 0 0 1 .7-.27 4.28 4.28 0 0 1 .81-.08 5.62 5.62 0 0 1 .7.05 2.36 2.36 0 0 1 .67.18 1.5 1.5 0 0 1 .5.39 1.1 1.1 0 0 1 .19.68 4 4 0 0 1-.11.83l-.44 2a2.32 2.32 0 0 0-.05.33v.34a1.11 1.11 0 0 0 0 .29h-1.36v-.49a1.68 1.68 0 0 1-.68.46 2.34 2.34 0 0 1-.83.15 2.11 2.11 0 0 1-.7-.1 1.43 1.43 0 0 1-.5-.29 1 1 0 0 1-.29-.42 1.33 1.33 0 0 1-.09-.49 1.41 1.41 0 0 1 .49-1.14 2.49 2.49 0 0 1 1.39-.54l.83-.08a3.56 3.56 0 0 0 .58-.09.76.76 0 0 0 .35-.19.45.45 0 0 0 .12-.35.5.5 0 0 0-.09-.31.72.72 0 0 0-.21-.18 1.31 1.31 0 0 0-.28-.09 1.37 1.37 0 0 0-.28 0 1.19 1.19 0 0 0-.65.17.76.76 0 0 0-.35.55h-1.24a1.81 1.81 0 0 1 .28-.81zm2 2-.6.05a2.38 2.38 0 0 0-.37.06 1 1 0 0 0-.32.13.69.69 0 0 0-.22.23.74.74 0 0 0-.09.38.45.45 0 0 0 .23.41.9.9 0 0 0 .52.14 1.22 1.22 0 0 0 .53-.1 1.1 1.1 0 0 0 .59-.61 4 4 0 0 0 .15-.4l.13-.48a1.57 1.57 0 0 1-.52.23z\"\n            />\n            <path\n              d=\"m19.64 15.68a.76.76 0 0 0-.57-.17 1.34 1.34 0 0 0-.6.11.36.36 0 0 0-.23.37.34.34 0 0 0 .14.28 1.35 1.35 0 0 0 .48.22l.67.22a3.52 3.52 0 0 1 .52.2 1.65 1.65 0 0 1 .41.28 1.13 1.13 0 0 1 .27.4 1.25 1.25 0 0 1 .1.53 1.48 1.48 0 0 1-.2.78 1.79 1.79 0 0 1-.54.52 2.3 2.3 0 0 1-.76.28 4 4 0 0 1-.85.09 3.71 3.71 0 0 1-.73-.08 2.07 2.07 0 0 1-.67-.25 1.38 1.38 0 0 1-.49-.47 1.26 1.26 0 0 1-.19-.73v-.2h1.25v.17a.47.47 0 0 0 .08.29.78.78 0 0 0 .23.21 1.25 1.25 0 0 0 .31.12 1.39 1.39 0 0 0 .35 0 1.53 1.53 0 0 0 .3 0 .63.63 0 0 0 .28-.1.49.49 0 0 0 .2-.18.47.47 0 0 0 .08-.28.43.43 0 0 0-.14-.36 1.14 1.14 0 0 0-.35-.18l-1-.34a2.34 2.34 0 0 1-.45-.18 1.16 1.16 0 0 1-.34-.24 1 1 0 0 1-.21-.34 1.72 1.72 0 0 1-.07-.5 1.23 1.23 0 0 1 .21-.73 1.45 1.45 0 0 1 .53-.48 2.09 2.09 0 0 1 .71-.27 3.89 3.89 0 0 1 .74-.08 3.94 3.94 0 0 1 .77.07 1.63 1.63 0 0 1 .65.24 1.3 1.3 0 0 1 .45.48 1.53 1.53 0 0 1 .15.78h-1.3a.7.7 0 0 0-.19-.48z\"\n            />\n            <path\n              d=\"m24.09 12.85-.51 2.46a1.15 1.15 0 0 1 .22-.23 1.45 1.45 0 0 1 .34-.23 2.56 2.56 0 0 1 .47-.18 2.25 2.25 0 0 1 .6-.07c1 0 1.44.44 1.44 1.33a.72.72 0 0 1 0 .19 2 2 0 0 1 0 .24c0 .09 0 .17-.05.24s0 .13 0 .17l-.61 2.9h-1.43l.6-2.9c0-.07 0-.17.06-.3a2.13 2.13 0 0 0 0-.3.44.44 0 0 0-.21-.36.77.77 0 0 0-.44-.14 1.19 1.19 0 0 0-.54.12 1.35 1.35 0 0 0-.4.31 1.75 1.75 0 0 0-.28.44 2.91 2.91 0 0 0-.16.5l-.56 2.63h-1.31l1.41-6.82z\"\n            />\n            <path\n              d=\"m31.37 12.85a4.69 4.69 0 0 1 .95.1 2.14 2.14 0 0 1 .75.33 1.65 1.65 0 0 1 .49.61 2.41 2.41 0 0 1 .17.95 2.29 2.29 0 0 1-.21 1 2.16 2.16 0 0 1-.58.75 2.61 2.61 0 0 1-.85.47 3.05 3.05 0 0 1-1 .16h-1.86l-.52 2.45h-1.48l1.41-6.82zm-.37 3.21a1.34 1.34 0 0 0 .91-.29 1.15 1.15 0 0 0 .32-.9.89.89 0 0 0-.09-.43.67.67 0 0 0-.24-.26.92.92 0 0 0-.34-.12 1.58 1.58 0 0 0-.38 0h-1.28l-.42 2z\"\n            />\n            <path\n              d=\"m34.48 15.45a1.81 1.81 0 0 1 .52-.45 2.33 2.33 0 0 1 .71-.27 4.28 4.28 0 0 1 .81-.08 5.91 5.91 0 0 1 .7.05 2.29 2.29 0 0 1 .66.18 1.41 1.41 0 0 1 .5.39 1 1 0 0 1 .19.68 4 4 0 0 1-.1.83l-.44 2a1.39 1.39 0 0 0-.03.22v.34a1.18 1.18 0 0 0 .05.29h-1.39v-.49a1.61 1.61 0 0 1-.68.46 2.31 2.31 0 0 1-.83.15 2.15 2.15 0 0 1-.7-.1 1.53 1.53 0 0 1-.5-.29 1 1 0 0 1-.29-.41 1.16 1.16 0 0 1-.1-.49 1.41 1.41 0 0 1 .49-1.14 2.49 2.49 0 0 1 1.39-.54l.83-.08a3.7 3.7 0 0 0 .59-.09.89.89 0 0 0 .35-.19.49.49 0 0 0 .11-.35.5.5 0 0 0-.09-.31.53.53 0 0 0-.21-.18 1.31 1.31 0 0 0-.28-.09 1.37 1.37 0 0 0-.28 0 1.19 1.19 0 0 0-.65.17.76.76 0 0 0-.35.55h-1.27a1.81 1.81 0 0 1 .29-.76zm2 2-.59.05a2.2 2.2 0 0 0-.37.06 1 1 0 0 0-.32.13.63.63 0 0 0-.2.31.86.86 0 0 0-.08.38.45.45 0 0 0 .22.41.9.9 0 0 0 .52.14 1.19 1.19 0 0 0 .53-.1 1.16 1.16 0 0 0 .36-.25 1.41 1.41 0 0 0 .24-.36c0-.14.1-.27.14-.4l.13-.48a1.5 1.5 0 0 1-.56.15z\"\n            />\n            <path\n              d=\"m40.78 20.87a1.2 1.2 0 0 1-.4.32 1.47 1.47 0 0 1-.5.16 4.33 4.33 0 0 1-.66 0 2.11 2.11 0 0 1-.35 0h-.37l.23-1.13a1.24 1.24 0 0 1 .27 0h.28a1 1 0 0 0 .38-.07.84.84 0 0 0 .23-.18 1.16 1.16 0 0 0 .16-.21 1.76 1.76 0 0 1 .12-.2l-.87-4.89h1.39l.43 3.53 1.71-3.53h1.43l-3.14 5.62a2.48 2.48 0 0 1-.34.58z\"\n            />\n          </g>\n        </svg>\n        <svg id=\"CASHTERMINAL\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <g fill=\"#ec1e27\" fill-rule=\"evenodd\">\n            <path d=\"m14.32 19 5.22-3.34-.31-.53-5 3.23c-.05.23.09.35.09.64z\" />\n            <path d=\"m20.9 17.55-1.55-2.2h-.52l1.55 2.2z\" />\n            <path d=\"m20.67 18 4.33-4.59-.35-.41-4.27 4.52z\" />\n            <path d=\"m26.69 15.37 5.07-5.83-.52-.54-5 6z\" />\n            <path d=\"m26.84 14.84-2.19-1.84-.43.45 2.11 1.62z\" />\n            <path d=\"m29 10.05 2.33-.77-.26-.39-2.2.78z\" />\n            <path d=\"m31.5 11.61.26-1.94v-.13l-.39-.26-.26 2.2z\" />\n            <path d=\"m18.05 8c.13-.13.39-.26.39-.39v16.79l-.39-.26z\" />\n            <path d=\"m23 6.05h.38v20h-.38z\" />\n            <path d=\"m28 6.82c.13.13.38.13.38.26v18.1l-.38.15z\" />\n            <path d=\"m14.82 12 18.4-.07.19.46h-18.72c0-.27 0-.39.13-.39z\" />\n            <path d=\"m14.05 16.9h20v.39h-20z\" />\n            <path d=\"m15.86 22h16.28l-.27.38h-15.78z\" />\n            <path d=\"m20 6.82h8v.39h-8.86a4.8 4.8 0 0 0 .86-.39z\" />\n          </g>\n          <circle cx=\"24\" cy=\"16\" fill=\"none\" r=\"10.08\" stroke=\"#ec1e27\" />\n        </svg>\n        <svg id=\"EASYPAY\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <path\n            d=\"m34.91 6.36a1.26 1.26 0 0 0-.24-.7 1.43 1.43 0 0 0-1.27-.57h-18.85a1.37 1.37 0 0 0-1.45 1.45v9.81a1.64 1.64 0 0 0 0 .23.38.38 0 0 0 .26.05h16.14a.46.46 0 0 0 .26 0s0 0 0 0h3.52s0 0 0 0a.33.33 0 0 0 .17 0h1.26a.39.39 0 0 0 .18 0v-10.27z\"\n            fill=\"#e41f38\"\n          />\n          <path\n            d=\"m33.27 16.57h1.64v8.89a1.31 1.31 0 0 1-.85 1.34 1.12 1.12 0 0 1-.44.09h-19.23a1.29 1.29 0 0 1-1.28-1.28q0-4.47 0-8.95a.29.29 0 0 1 0-.09h16.64a.16.16 0 0 1 .06.18c0 .15.07.19.21.19h2a1.58 1.58 0 0 0 .61-.08 1.44 1.44 0 0 0 .41-.21.27.27 0 0 1 .23-.08z\"\n            fill=\"#065faa\"\n          />\n          <g fill=\"#fff\">\n            <path\n              d=\"m14.36 12c0-.58 0-1.15 0-1.72a1.39 1.39 0 0 1 1.36-1.4h3.29c.11 0 .15 0 .14.14s0 .46 0 .68 0 .18-.18.18h-2.86c-.33 0-.49.09-.55.32a1.05 1.05 0 0 0 0 .31v.82s0 .19.19.19h2.51c.15 0 .2 0 .19.19s0 .38 0 .57 0 .25-.24.25h-2.48c-.17 0-.21.05-.21.22s0 .58 0 .88.19.56.58.56h2.82c.19 0 .24.05.23.23a3.88 3.88 0 0 0 0 .59c0 .15 0 .18-.18.18h-2.33-1a1.4 1.4 0 0 1-1.29-1.3c0-.61 0-1.22 0-1.83z\"\n            />\n            <path\n              d=\"m33.27 16.57a1.73 1.73 0 0 1-1.27.43c-.66 0-1.33 0-2 0-.16 0-.22-.05-.2-.21a1.62 1.62 0 0 0 0-.22c0-.51 0-.51.55-.51h1.65c.46 0 .62-.16.62-.61s0-.29-.29-.3h-1.46a1.41 1.41 0 0 1-1.21-.89 1.79 1.79 0 0 1-.13-.68c0-.92 0-1.83 0-2.75 0-.15 0-.2.19-.19h.72c.13 0 .17 0 .17.17v2.8.22a.38.38 0 0 0 .36.38c.52.06 1 0 1.56 0 .07 0 .09 0 .09-.11v-3.3c0-.15 0-.2.19-.19h.72c.13 0 .18 0 .18.18v3.71 1.1a1.45 1.45 0 0 1-.44.97z\"\n            />\n            <path\n              d=\"m24.2 13.29v1.3s-.13.53-.51.55c-.85 0-1.71 0-2.56 0h-.29a1.36 1.36 0 0 1-1.27-1.21 1.38 1.38 0 0 1 1.06-1.55 2.58 2.58 0 0 1 .48 0h1.89c.12 0 .16 0 .16-.16 0-.46-.16-.64-.63-.64h-1.89c-.14 0-.2 0-.19-.19s0-.39 0-.59 0-.14.13-.14h2.35a1.38 1.38 0 0 1 1.26 1.27v1.38z\"\n            />\n            <path\n              d=\"m27.24 10.63h1.31c.12 0 .18 0 .17.16a5.81 5.81 0 0 0 0 .59c0 .14 0 .17-.18.17h-2a2.31 2.31 0 0 0-.37 0 .4.4 0 0 0-.36.44.37.37 0 0 0 .35.4h.35a12.67 12.67 0 0 1 1.38 0 1 1 0 0 1 1.07 1 1.49 1.49 0 0 1-.41 1.37.92.92 0 0 1-.62.28c-.95 0-1.9 0-2.85 0-.11 0-.14 0-.13-.14s0-.42 0-.62 0-.17.17-.17h2a2.74 2.74 0 0 0 .5 0c.22 0 .28-.13.29-.35a.39.39 0 0 0-.27-.43 1.54 1.54 0 0 0-.37 0c-.47 0-.94 0-1.4 0a1.18 1.18 0 0 1-1.06-.93 1.37 1.37 0 0 1 .58-1.62 1.26 1.26 0 0 1 .74-.16z\"\n            />\n            <path\n              d=\"m14.63 20.33v-2.94c0-.1 0-.18.14-.18h3.82a1.39 1.39 0 0 1 1.41 1.41 9.09 9.09 0 0 1 0 1.38 1.38 1.38 0 0 1-1.3 1.15c-.87 0-1.74 0-2.62 0-.15 0-.2 0-.2.2v1.94c0 .14 0 .18-.18.18a7.3 7.3 0 0 0-.81 0c-.17 0-.2-.06-.19-.21z\"\n            />\n            <path\n              d=\"m29.12 21.56v2.44a1.38 1.38 0 0 1-1.39 1.32h-2.31c-.15 0-.21 0-.2-.19s0-.29 0-.43.08-.31.31-.31h1.89a.62.62 0 0 0 .64-.87c0-.09-.09-.06-.14-.06-.5 0-1 0-1.51 0a1.49 1.49 0 0 1-1.41-1.37c0-1 0-2 0-3 0-.1 0-.14.13-.13h.77c.13 0 .16.06.16.18v2.76c0 .54.14.68.68.68h1.16c.14 0 .18 0 .18-.18 0-1.08 0-2.16 0-3.24 0-.17.05-.21.2-.2a5.14 5.14 0 0 0 .68 0c.14 0 .19 0 .19.18v2.44z\"\n            />\n            <path\n              d=\"m22.35 23.47h-1.35a1.39 1.39 0 0 1 0-2.78h2.06c.15 0 .22 0 .21-.2 0-.44-.17-.61-.62-.61h-1.9c-.15 0-.2 0-.19-.19s0-.41 0-.61 0-.14.14-.13h2.43a1.37 1.37 0 0 1 1.15 1.05 3.29 3.29 0 0 1 0 .54v2.33c0 .42-.18.56-.6.56z\"\n            />\n          </g>\n          <path\n            d=\"m22.06 13.28h.94c.14 0 .18 0 .17.17s0 .43 0 .64 0 .14-.13.14h-1.86a.56.56 0 0 1-.42-.16.46.46 0 0 1-.09-.51.43.43 0 0 1 .44-.28z\"\n            fill=\"#e41f38\"\n          />\n          <path\n            d=\"m17.13 18.21h1.11a.46.46 0 0 1 .53.53v.91a.44.44 0 0 1-.49.51h-2.35c-.1 0-.13 0-.13-.13 0-.57 0-1.15 0-1.72 0-.11.06-.12.15-.12z\"\n            fill=\"#095faa\"\n          />\n          <path\n            d=\"m22.19 21.61h.89s.19 0 .18.18 0 .43 0 .64 0 .13-.13.13c-.61 0-1.23 0-1.85 0-.36 0-.54-.18-.53-.48a.43.43 0 0 1 .47-.45h1z\"\n            fill=\"#095faa\"\n          />\n        </svg>\n        <svg id=\"EPAY\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <path\n            d=\"m25.77 18.16c.24-1.45.49-2.91.72-4.37 0-.28.13-.38.43-.37h1.45c.18 0 .27 0 .21.23-.67 2.46-1.31 4.92-2 7.36a2.45 2.45 0 0 1-2.58 1.83c-.35 0-.62 0-.65-.27a5.93 5.93 0 0 1-.07-1c0-.37.2-.46.54-.41.64.11 1-.45.77-1.1-.63-2.11-1.2-4.25-1.81-6.37-.07-.25 0-.29.21-.28h1.6c.21 0 .29.07.32.28.24 1.42.49 2.84.74 4.26 0 .06 0 .13.06.2z\"\n            fill=\"#055388\"\n          />\n          <path\n            d=\"m30.77 19.23v.93s-.06.24-.24.24h-1.53c-.14 0-.22 0-.22-.19q0-1 0-1.92c0-.16.06-.2.21-.2h1.6c.16 0 .22.05.21.21v.94z\"\n            fill=\"#035389\"\n          />\n          <path\n            d=\"m44.25 13.51c-.2-.24-.65-.24-1-.25a1.29 1.29 0 0 0-.8.22c-.16.14 0 .46-.06.69l-.06.08a1.82 1.82 0 0 0-1-.94 1.86 1.86 0 0 0-2.45 1.45 7.89 7.89 0 0 0-.22 2.11 5.44 5.44 0 0 0 .44 2.39 1.57 1.57 0 0 0 1.47.94 1.73 1.73 0 0 0 1.73-.91 4.22 4.22 0 0 1-.18 1.71c-.2.44-1 .55-1.25.13s-.43-.34-.72-.33-.76 0-1.13 0-.27.07-.24.27a1.66 1.66 0 0 0 1.09 1.4 4.11 4.11 0 0 0 2 .25c1.79-.18 2.47-.95 2.47-2.73v-5.46c-.04-.35.08-.81-.09-1.02zm-2.06 4.57c-.09.42-.32.63-.68.63s-.58-.18-.66-.6a6.75 6.75 0 0 1 0-2.65c.09-.45.33-.64.7-.63s.55.19.66.67a.8.8 0 0 1 0 .21v.61a7.41 7.41 0 0 1-.02 1.76z\"\n            fill=\"#055388\"\n          />\n          <path\n            d=\"m37.4 14.36a1.59 1.59 0 0 0-1.6-1.13 1.67 1.67 0 0 0-1.6.83.34.34 0 0 1-.07-.25c0-.78 0-1.57 0-2.35 0-.25-.07-.31-.3-.3-.49 0-1 0-1.46 0-.26 0-.35.06-.35.34v2.82 5.72c0 .29.08.37.37.36h.94c.69 0 .69 0 .73-.67a1.56 1.56 0 0 0 1.08.83 1.81 1.81 0 0 0 2.2-1.2 8.15 8.15 0 0 0 .06-5zm-1.82 3.92c-.1.47-.34.73-.7.75a.57.57 0 0 1-.6-.37 2.6 2.6 0 0 1-.18-.92 8.57 8.57 0 0 1 .1-2.37c.11-.45.31-.62.67-.62s.61.22.7.65a7 7 0 0 1 .09 1.44 8.69 8.69 0 0 1-.08 1.44z\"\n            fill=\"#035389\"\n          />\n          <path\n            d=\"m13.61 11.16h-3c-.29 0-.39.07-.39.38v4.23 4.27c0 .28.08.35.37.36h1.52c.24 0 .28-.07.28-.29 0-.75 0-1.49 0-2.24 0-.35 0-.69.13-.89s.61-.17 1-.2h.11a3.3 3.3 0 0 0 1.8-.56 2.68 2.68 0 0 0 .91-2.33 2.5 2.5 0 0 0-2.73-2.73zm.39 3.56a1 1 0 0 1-1 .47c-.56 0-.56 0-.56-.54v-.65c0-.33 0-.67 0-1 0-.14 0-.23.2-.23.47 0 1-.05 1.28.42a1.59 1.59 0 0 1 .08 1.53z\"\n            fill=\"#035388\"\n          />\n          <path\n            d=\"m22.07 19c0-1.29 0-2.58 0-3.87a1.69 1.69 0 0 0-1.48-1.8 5.72 5.72 0 0 0-1.8 0 1.94 1.94 0 0 0-1.92 2c0 .24 0 .3.26.29h1.31c.22 0 .29-.06.3-.28a.63.63 0 0 1 .52-.65c.45-.09.75.06.86.43.14.52 0 .84-.49 1s-1 .26-1.51.39a1.74 1.74 0 0 0-1.33 1.19 3.12 3.12 0 0 0-.1 1.18 1.72 1.72 0 0 0 2.31 1.61 1.87 1.87 0 0 0 1.18-.86c0 .15 0 .23.06.32.08.34.14.47.48.45h1.58a3.31 3.31 0 0 1-.23-1.4zm-2-.54a.75.75 0 0 1-.8.68c-.35 0-.55-.2-.63-.65a1 1 0 0 1 .66-1.19l.17-.06c.65-.26.65-.26.66.44.01.24.01.5-.03.76z\"\n            fill=\"#035388\"\n          />\n          <path\n            d=\"m9.08 17.23c.17 0 .23-.05.23-.23a12.42 12.42 0 0 0-.11-1.72 2.14 2.14 0 0 0-1.67-1.95 4.84 4.84 0 0 0-1.37-.09 2.33 2.33 0 0 0-2.31 1.88 7.77 7.77 0 0 0 0 3.65 2.14 2.14 0 0 0 1.87 1.72 5.28 5.28 0 0 0 1.28.05 2.25 2.25 0 0 0 2.27-2.29c0-.2 0-.25-.23-.24h-.99a1.48 1.48 0 0 0-.67 0c-.16.1-.07.4-.14.61a0 0 0 0 0 0 0 .69.69 0 0 1-.67.61.72.72 0 0 1-.7-.62 6.21 6.21 0 0 1-.08-1.22c0-.19.06-.25.25-.24h1.49 1.55zm-2.55-1.23h-.15c-.66 0-.66 0-.58-.68s.34-.87.82-.85a.55.55 0 0 1 .55.4 1.68 1.68 0 0 1 .07.24c.2.89.19.89-.71.89z\"\n            fill=\"#015388\"\n          />\n        </svg>\n        <svg id=\"FASTPAY\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <path\n            d=\"m38.73 15.9c.17 5.63-6.73 11.29-14.82 11.29s-14.64-5.07-14.64-11.29c0-5.62 6.6-11.3 14.64-11.3s14.6 5.06 14.82 11.3z\"\n            fill=\"#fff\"\n          />\n          <path\n            d=\"m15.89 12.45c.28 0 .52.11.49.3s0 .72-.54.71h-1.14c-.33 0-.47.08-.54.44-.16.91-.19.91.92.91.72 0 .81-.05.62.55s-.24.42-.56.39c-1.52-.11-1.25-.08-1.54 1.41 0 .2-.06.4-.1.6-.1.5-.1.52-.59.46s-.56-.15-.47-.59c.31-1.47.52-3 .76-4.46.15-.99 2.31-.74 2.69-.72z\"\n            fill=\"#284493\"\n          />\n          <path\n            d=\"m34.3 17c.39-.87.76-1.56 1-2.28s.54-.85 1.21-.62a56.25 56.25 0 0 1-2.57 5 1.69 1.69 0 0 1-1.79.81c-.16 0-.43 0-.39-.25s.08-.54.46-.56c1.2-.11 1.51-.57 1.28-1.79-.19-.94-.38-1.88-.55-2.83 0-.24-.11-.39.16-.44.68-.14.66-.23.74.29.15.88.29 1.72.45 2.67z\"\n            fill=\"#e21c21\"\n          />\n          <path\n            d=\"m22.65 14.2c0-.07.07-.16.15-.16.72 0 .64 0 .76-.88 0-.18.74-.67.87-.56s.16.24.13.63c0 .65-.24.87.49.86.3 0 .34 0 .3.23s0 .43-.33.43c-.74 0-.74 0-.91 1-.07.4-.15.8-.21 1.21s.08.56.42.29.41-.09.58.18 0 .49-.22.63a1.42 1.42 0 0 1-1.52.09c-.5-.33-.37-.82-.28-1.3s.17-.9.25-1.34c.13-.67.12-.77-.33-.79-.11 0-.19-.05-.19-.22a.92.92 0 0 1 .04-.3z\"\n            fill=\"#284493\"\n          />\n          <path\n            d=\"m22.52 14.25-.12.3c-.09.28-.18.52-.56.32s-.59-.22-.76.1.17.47.33.67.4.43.57.65a1.2 1.2 0 0 1-.11 1.71 1.27 1.27 0 0 1-.67.29 1.82 1.82 0 0 1-1.62-.46.23.23 0 0 1 0-.29c.2-.27.38-.5.8-.15a.57.57 0 0 0 .41.12.54.54 0 0 0 .37-.23c.2-.29-.08-.5-.25-.7s-.4-.42-.57-.67a1.21 1.21 0 0 1 .07-1.71 1.15 1.15 0 0 1 .7-.31 1.75 1.75 0 0 1 1.41.36z\"\n            fill=\"#284493\"\n          />\n          <path\n            d=\"m19.23 14a2.55 2.55 0 0 0-2.56.52 3.14 3.14 0 0 0-.86 2.9 1 1 0 0 0 1.19.88 1.07 1.07 0 0 0 .48-.2 5.25 5.25 0 0 0 .53-.43c-.06.4.05.52.39.55a1.13 1.13 0 0 0 .75-.27.16.16 0 0 0 .07-.09.14.14 0 0 0 0-.11.34.34 0 0 0-.12-.12 19.19 19.19 0 0 1 .47-3.1c.02-.33-.04-.47-.34-.53zm-.87 1.36a3.86 3.86 0 0 1-.74 1.64c-.14.16-.31.36-.56.28s-.26-.37-.26-.71a2 2 0 0 1 .94-1.77.6.6 0 0 1 .58 0c.16.1.07.38 0 .56z\"\n            fill=\"#284493\"\n          />\n          <path\n            d=\"m28.19 12.61c-.52-.08-1.06 0-1.59-.06s-.46.12-.52.45c-.25 1.55-.48 3.08-.77 4.6-.09.47-.11.5.39.55s.48.08.52-.4c0-.23 0-.46.07-.69.19-1.1.3-1.09 1.15-1.06a1.85 1.85 0 0 0 2-1.7 1.27 1.27 0 0 0 0-.2 1.36 1.36 0 0 0-1.24-1.48zm-1.07 2.67c-.23 0-.42 0-.4-.35 0-1.15.24-1.58.84-1.57s.93.15.93.8-.49 1.12-1.37 1.12z\"\n            fill=\"#e21c22\"\n          />\n          <path\n            d=\"m32.27 14a2.55 2.55 0 0 0-3.09 1.86 2.32 2.32 0 0 0-.07.46c-.14.88.06 1.59.57 1.81.71.29 1.18-.13 1.62-.73.12.33-.18.72.37.74s.52-.24.57-.6c.14-1 .27-2 .47-2.9.07-.43-.08-.55-.44-.64zm-.52 1a4.13 4.13 0 0 1-.88 2.11.52.52 0 0 1-.58.23c-.25-.08-.28-.33-.29-.55a2.49 2.49 0 0 1 .68-1.79 1.07 1.07 0 0 1 .66-.26c.23 0 .47 0 .4.35z\"\n            fill=\"#e21c22\"\n          />\n          <g fill=\"#2e478f\">\n            <path\n              d=\"m34.92 9.74c-2.01-1.74-5.62-3.82-11.45-3.62-3.34.12-8 .89-11.12 3.92a8.28 8.28 0 0 0-2.35 3.63h.13a6 6 0 0 1 2.39-2.67c3.21-2.23 8-2.73 11.42-2.75 3.11 0 7.56.43 11 2.69a8.68 8.68 0 0 1 2.84 2.75l.12-.05a12 12 0 0 0-2.98-3.9z\"\n            />\n            <path\n              d=\"m35.63 8.83c-2-2.24-5.64-4.9-12-4.83-6.1.07-9.63 2.72-11.44 4.92a13.22 13.22 0 0 0-2.58 4.85h.13a10 10 0 0 1 2.53-4.06c3.34-3.34 8.12-4.05 11.55-4.05 6.23 0 9.81 2.21 11.71 4.06a12 12 0 0 1 2.69 4h.13a13.39 13.39 0 0 0-2.72-4.89z\"\n            />\n            <path\n              d=\"m13.08 22.26a15.6 15.6 0 0 0 10.67 3.63h.79c3.34-.11 8-.88 11.11-3.91a8.25 8.25 0 0 0 2.35-3.64h-.14a6.1 6.1 0 0 1-2.38 2.66c-3.21 2.24-8 2.72-11.41 2.75-3.12 0-7.57-.43-11-2.7a9 9 0 0 1-2.84-2.76l-.12.05a11.44 11.44 0 0 0 2.97 3.92z\"\n            />\n            <path\n              d=\"m38.26 18.21a10 10 0 0 1-2.53 4.06c-3.34 3.36-8.12 4.05-11.56 4.05-6.24 0-9.81-2.21-11.73-4.06a11.53 11.53 0 0 1-2.67-4.05h-.13a13.39 13.39 0 0 0 2.76 4.92c1.91 2.25 5.52 4.87 11.74 4.87h.25c6.08-.07 9.57-2.71 11.42-4.92a13.22 13.22 0 0 0 2.58-4.85z\"\n            />\n          </g>\n        </svg>\n        <svg id=\"GOOGLEPAY\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <g fill=\"#5f6368\">\n            <path\n              d=\"m22.91 15.8v4.65h-1.5v-11.5h3.9c.95 0 1.85.35 2.55 1 .7.6 1.05 1.5 1.05 2.45s-.35 1.8-1.05 2.45-1.55 1-2.55 1zm0-5.45v4h2.5c.55 0 1.1-.2 1.45-.6.8-.75.8-2 .05-2.75l-.05-.05c-.4-.4-.9-.65-1.45-.6z\"\n            />\n            <path\n              d=\"m32.35 12.35c1.1 0 1.95.3 2.6.9s.95 1.4.95 2.4v4.8h-1.4v-1.1h-.05c-.6.9-1.45 1.35-2.45 1.35-.85 0-1.6-.25-2.2-.75-.55-.5-.9-1.2-.9-1.95 0-.8.3-1.45.9-1.95s1.45-.7 2.45-.7c.9 0 1.6.15 2.15.5v-.35c0-.5-.2-1-.6-1.3-.4-.35-.9-.55-1.45-.55-.85 0-1.5.35-1.95 1.05l-1.3-.8c.8-1.05 1.85-1.55 3.25-1.55zm-1.9 5.7c0 .4.2.75.5.95.35.25.75.4 1.15.4.6 0 1.2-.25 1.65-.7.5-.45.75-1 .75-1.6-.45-.35-1.1-.55-1.95-.55-.6 0-1.1.15-1.5.45-.4.25-.6.6-.6 1.05z\"\n            />\n            <path d=\"m44 12.6-4.95 11.35h-1.5l1.85-3.95-3.25-7.35h1.6l2.35 5.65h.05l2.3-5.65h1.55z\" />\n          </g>\n          <path\n            d=\"m16.96 14.8c0-.45-.05-.9-.1-1.35h-6.25v2.55h3.55c-.15.8-.6 1.55-1.3 2v1.65h2.15c1.25-1.15 1.95-2.85 1.95-4.85z\"\n            fill=\"#4285f4\"\n          />\n          <path\n            d=\"m10.61 21.25c1.8 0 3.3-.6 4.4-1.6l-2.15-1.65c-.6.4-1.35.65-2.25.65-1.7 0-3.2-1.15-3.7-2.75h-2.2v1.7c1.15 2.25 3.4 3.65 5.9 3.65z\"\n            fill=\"#34a853\"\n          />\n          <path d=\"m6.91 15.9c-.3-.8-.3-1.7 0-2.55v-1.7h-2.2c-.95 1.85-.95 4.05 0 5.95z\" fill=\"#fbbc04\" />\n          <path\n            d=\"m10.61 10.65c.95 0 1.85.35 2.55 1l1.9-1.9c-1.2-1.1-2.8-1.75-4.4-1.7-2.5 0-4.8 1.4-5.9 3.65l2.2 1.7c.45-1.6 1.95-2.75 3.65-2.75z\"\n            fill=\"#ea4335\"\n          />\n        </svg>\n        <svg id=\"MASTER_CARD\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <path d=\"m18.9 7.66h10.21v16.68h-10.21z\" fill=\"#f16223\" />\n          <path\n            d=\"m20 16a10.57 10.57 0 0 1 4-8.34 10.61 10.61 0 1 0 0 16.68 10.57 10.57 0 0 1-4-8.34z\"\n            fill=\"#e81f28\"\n          />\n          <g fill=\"#f69e1f\">\n            <path\n              d=\"m40.44 22.57h-.07v-.41h.1l.13.29.12-.29h.1v.41h-.07v-.31l-.11.27h-.08l-.12-.27zm-.3 0h-.06v-.34h-.14v-.07h.35v.07h-.15z\"\n            />\n            <path\n              d=\"m41.16 16a10.61 10.61 0 0 1-17.16 8.34 10.61 10.61 0 0 0 1.78-14.89 10.4 10.4 0 0 0-1.78-1.79 10.61 10.61 0 0 1 17.16 8.34z\"\n            />\n          </g>\n        </svg>\n        <svg id=\"NETELLER\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <path\n            d=\"m41.43 16.59c-.31.18-.66.26-1.01.23h-.45l.34-1.84h.32c.29-.02.58.05.84.18.21.14.34.38.32.64 0 .3-.14.59-.39.77l.02.02zm-26.77 2.31h-3.47l.22-1.2h2.18l.25-1.35h-2.15l.21-1.19h3.47l-.71 3.75zm28.64-4.78c-.69-.39-1.48-.57-2.27-.52h-2.66l-.98 5.3h-3.47l.22-1.2h2.1l.25-1.35h-2.09l.22-1.2h2.17l.29-1.54h-4.42l-.93 5.03h-1.61l.94-5.04h-2.29l-.94 5.03h-1.54l.92-5.03h-2.29l-.99 5.3h-3.5l.22-1.2h2.1l.25-1.34h-2.1l.22-1.2h2.18l.29-1.54h-13.65l-.77 4.2-1.54-4.2h-2.37l-1.28 6.84h2.27l.77-4.32 1.5 4.32h8.13l.98-5.32h1.27l-.99 5.3h21.39l.62-3.35 1 3.35h2.27l-1.04-2.74.24-.05c.48-.08.91-.34 1.22-.71.3-.4.45-.89.43-1.38.03-.58-.25-1.14-.73-1.46v.02z\"\n            fill=\"#48494a\"\n          />\n        </svg>\n        <svg id=\"PAYSAFECARD\" viewBox=\"0 0 48 32\">\n          <g transform=\"translate(0 .009)\">\n            <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n            <path\n              d=\"m7.57 21.65c0-.25-.13-.38-.35-.39h-1.21c-.24 0-.44.18-.45.42v.07 2.23c-.02.25.16.46.41.48h.08 1.11c.11 0 .22-.05.29-.13.08-.06.12-.16.12-.26zm-3.56-.32c-.03-.45.1-.9.37-1.27.13-.13.29-.24.47-.31.18-.08.37-.13.56-.13h2.22c.98 0 1.48.56 1.5 1.64v3.35c-.04.79-.67 1.42-1.46 1.46h-2.1v2.42h-1.56v-7.17m7.93 2.79c0 .09.05.18.13.22.08.07.18.1.28.1h1.19c.27 0 .41-.11.42-.32v-.45c0-.25-.14-.37-.43-.37h-1.19c-.11 0-.23.02-.32.08-.07.1-.1.22-.08.35v.4zm2.03-2.52c0-.24-.13-.36-.42-.35h-3.13v-1.63h3.53c.76-.1 1.46.44 1.56 1.2.01.11.02.22 0 .33v3.42c0 .39-.13.78-.39 1.07s-.63.45-1.02.44h-2.13c-1.04 0-1.57-.49-1.58-1.46v-1.32c-.1-.75.42-1.43 1.17-1.53.11-.02.23-.02.34 0h2.07zm5.91 5.26c.12 0 .23-.05.32-.14.08-.06.12-.16.13-.26v-.39h-1.99c-.21 0-.42-.03-.62-.1-.19-.08-.36-.19-.49-.34-.15-.16-.26-.34-.34-.54-.08-.21-.11-.43-.11-.66v-4.82h1.56v4.31c0 .35.14.52.42.52h1.1c.13 0 .25-.04.34-.13.09-.07.13-.17.13-.27v-4.42h1.54v7.12c.02.46-.12.9-.39 1.27-.26.32-.65.5-1.07.49h-3.63v-1.64zm3.21-2.42h2.77c.25 0 .39-.12.39-.31v-.14s-.01-.09-.04-.14c-.06-.12-.14-.19-.23-.19h-1.38c-.39 0-.77-.16-1.05-.43-.28-.23-.45-.58-.46-.94v-1.22c-.07-.73.46-1.39 1.2-1.46.11-.01.21 0 .32 0h3.22v1.64h-2.72c-.32 0-.48.1-.48.3v.16c0 .21.16.31.49.31h1.37c.36 0 .7.16.94.43.26.27.4.63.41 1v1.19c-.03.38-.19.73-.45 1-.12.14-.26.26-.43.34-.2.06-.41.09-.61.08h-3.25v-1.64m7.41-.32c0 .09.05.18.13.22.08.07.18.11.28.1h1.2c.27 0 .41-.11.42-.32v-.45c0-.25-.14-.37-.43-.37h-1.18c-.11 0-.23.02-.32.08-.07.1-.1.22-.08.35v.4zm2.02-2.52c0-.24-.13-.36-.42-.35h-3.13v-1.62h3.53c.76-.1 1.46.44 1.56 1.2.01.11.02.22 0 .33v3.42c0 .39-.13.78-.39 1.07s-.63.45-1.02.44h-2.14c-1.04 0-1.57-.49-1.58-1.46v-1.32c-.1-.75.42-1.43 1.17-1.53.11-.02.23-.02.34 0h2.07v-.17m2.81-2.92c0-.41.17-.8.48-1.06.33-.28.76-.43 1.19-.42h.99v1.58h-.6c-.24-.03-.47.14-.5.38v.1.35h1.1v1.64h-1.1v4.83h-1.56zm7.08 2.89v-.04c0-.08-.03-.16-.1-.21-.08-.06-.17-.08-.27-.08h-1.08c-.12 0-.25.04-.34.12-.1.06-.16.18-.16.3v.66zm-1.93 2.32v.1c0 .11.03.22.1.31.03.09.11.14.2.14h3.2v1.64h-3.41c-.24 0-.49-.02-.72-.08-.19-.07-.36-.17-.5-.31-.16-.15-.28-.33-.35-.53-.07-.24-.11-.5-.1-.75v-3.27c-.1-.75.44-1.42 1.18-1.51.11-.01.21-.01.32 0h2.1c.97.01 1.46.54 1.47 1.57v1.29l-3.51 1.42\"\n              fill=\"#0581ba\"\n            />\n            <g fill=\"#e3001b\">\n              <path\n                d=\"m20.05 7.12c.16-.06.33-.11.49-.14.44-1.33 1.72-2.21 3.12-2.13 1.4-.08 2.68.8 3.12 2.13.42.05.82.21 1.16.47 0-.22 0-.45-.03-.67-.19-1.84-2.03-3.28-4.26-3.28s-4.18 1.54-4.27 3.45c-.01.17-.02.35 0 .52.21-.15.44-.27.68-.35\"\n              />\n              <path\n                d=\"m26.12 7.53h-5.2c-.27 0-.53.06-.77.16-.24.09-.45.22-.64.39-.35.45-.53 1.01-.5 1.58v3.79c-.03.57.14 1.13.5 1.58.19.16.4.3.64.39.24.1.51.16.77.16h5.21c1.01.12 1.93-.6 2.05-1.61.02-.15.02-.3 0-.45v-3.95c.13-1-.58-1.92-1.58-2.05-.15-.02-.31-.02-.46 0\"\n              />\n            </g>\n          </g>\n        </svg>\n        <svg id=\"PHYRE\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <rect fill=\"#5b98d1\" height=\"9\" rx=\"4.32\" width=\"9\" x=\"14.89\" y=\"11.5\" />\n          <path\n            d=\"m21.2 15.84c.09-.08.7-.63.66-1.45-.04-.73-.58-1.2-.77-1.35-.4-.3-.86-.4-3.22-.36-.58 0-1.07.02-1.44.03-.02.66-.03 1.34-.03 2.03 0 .63 0 1.25.01 1.85.75-.22 1.75-.44 2.95-.48.94-.03 1.75.05 2.41.17s-.26-.21-.58-.45zm-1.29-.33h-2.17v-1.78h2.09c.44.09.76.48.75.91 0 .4-.28.76-.67.88z\"\n            fill=\"#fff\"\n          />\n          <path\n            d=\"m16.41 18.03v1.27c.76-.46 1.77-.98 3.01-1.39 1.03-.34 2.06-.53 2.85-.63-.04-.21-.1-.46-.28-.62-.8.03-1.7.14-2.79.4-1.11.27-2.05.63-2.78.98z\"\n            fill=\"#fff\"\n          />\n          <path\n            d=\"m19.19 19.31c.45 0 .9-.01 1.35-.02.23-.05.54-.15.88-.35.52-.31.81-.71.96-.94-.07.01-.13.02-.2.03-.36.06-.79.16-1.25.32-.75.28-1.33.64-1.74.95z\"\n            fill=\"#fff\"\n          />\n          <path d=\"m12.43 17.13.24-.14v-5.23l-.23-.22v5.6\" fill=\"#231f20\" />\n          <path\n            d=\"m11.17 13.59s0 0 0 0 0 0 0 .01 0 0-.01 0c0 0 0 0-.01 0 0 0 0 0-.01 0 0 0 0 0-.01 0 0 0 0 0-.01 0 0 0 0 0-.01 0 0 0 0 0-.01 0 0 0 0 0-.01 0 0 0 0 0-.01 0 0 0 0 0-.01 0 0 0 0 0-.01 0 0 0 0 0-.01 0 0 0 0 0-.02.01 0 0 0 0-.01 0 0 0-.01 0-.02.01 0 0 0 0-.02 0 0 0-.01 0-.02.01s-.01 0-.02.01-.01 0-.02.01-.01 0-.02.01c0 0-.01 0-.02.01 0 0-.01 0-.02.01s-.01 0-.02.01c-.01 0-.02.01-.04.02 0 0-.01 0-.02 0 0 0-.01 0-.02.01s-.01 0-.02.01c0 0-.01 0-.02.01s-.01 0-.02.01-.01 0-.02.01-.01 0-.02.01-.01 0-.02.01-.01 0-.02.01-.01 0-.02.01c0 0-.01 0-.02.01 0 0-.02 0-.02.01s-.02 0-.02.01-.02 0-.02.01-.02 0-.02 0-.02 0-.03.01h-.02s-.02 0-.03.01c0 0-.02 0-.03 0 0 0-.02 0-.03 0 0 0-.02 0-.03 0 0 0 0 0-.01 0l.38.05s.4-.16.6-.31v-.35s0 0-.01.01\"\n            fill=\"#302d2e\"\n          />\n          <path\n            d=\"m10.12 13.04v1.11s.01 0 .02 0 .02 0 .03-.01.02 0 .03-.01c.01 0 .02 0 .03-.01 0 0 .02 0 .03-.01.01 0 .02 0 .03-.01 0 0 .02 0 .03-.01.01 0 .02 0 .04-.01 0 0 .02 0 .02-.01.01 0 .02-.01.04-.02h.02c.01 0 .03-.01.04-.02h.02c.01 0 .03-.01.04-.02h.01c.01 0 .03-.01.04-.02.01 0 .03-.02.04-.02.36-.21.54-.41.54-.42l.04-.04v.48 3.11s1.16.09 1.16.09v-3.47s0-2.18 0-2.18l-.96.14c-.17.84-1.19 1.34-1.32 1.4\"\n            fill=\"#423f3f\"\n          />\n          <path d=\"m7.9 15.28.53 1.93h.5s-.78-2.84-.78-2.84z\" fill=\"#8d0f14\" />\n          <path\n            d=\"m8.4 17.26-1.09.02.55-1.99.3-1.08.84 3.04h-.59zm2.65 2.49-2.09-7.03-1.66-.3-.81 2.39-1.93 5.7 1.93-.23.46-1.68 1.83-.11.55-.03v.02s.39 1.39.39 1.39l1.34-.13\"\n            fill=\"#e81c24\"\n          />\n          <path d=\"m6.6 12.76-2.6 7.43.51.3 1.96-5.77.78-2.29-.64.33\" fill=\"#c1171d\" />\n          <path d=\"m8.83 18.53.36 1.29.48.05-.37-1.36-.46.03\" fill=\"#8d0f14\" />\n          <path d=\"m27.14 14.91c-.22-.32-.41-.67-.62-1.05.12.54.28 1.04.55 1.52.01-.16.04-.31.06-.46z\" fill=\"#14cba8\" />\n          <path\n            d=\"m31.94 14.53c0 .28-.06.55-.17.8-.32.8-1.11 1.36-2.03 1.36-.13 0-.24-.01-.36-.03v.06h-.02c-.03.12-.04.23-.05.35h.01v.23c.99.64 2.4.71 3.43.12 1.09-.63 1.59-1.66 1.61-2.76 0-.55-.13-1.11-.42-1.62-.04-.05-.06-.12-.1-.17-1.21-1.7-3.78-1.85-5.26-.26 1.57-.8 3.41.14 3.37 1.92z\"\n            fill=\"#14cba8\"\n          />\n          <path\n            d=\"m31.61 14.14c-.32.06-.63.19-.94.36-.78.45-1.31 1.18-1.53 1.99h-.01c-.06.22-.1.44-.12.65h.01v.23c.01.54.16 1.08.44 1.58.48.8 1.21 1.32 2.03 1.54-1.5-.08-2.94-.9-3.75-2.3-.82-1.43-.77-3.1-.09-4.43.77-1.53 2.85-1.72 3.71-.27.13.2.22.41.24.64z\"\n            fill=\"#14cba8\"\n          />\n          <path\n            d=\"m38.5 20.13s-.12.2-.12.2c0 .01-.03.02-.04 0l-.12-.19s-.04-.04-.06-.04h-.13l.23.34s.07.05.12.05c.04 0 .09-.01.12-.05l.23-.34h-.13s-.05.01-.07.04z\"\n            fill=\"#010101\"\n          />\n          <path\n            d=\"m39.48 17.55h1.5c1.67 0 3.03-1.36 3.02-3.03 0-1.67-1.35-3.03-3.02-3.03s-3.03 1.36-3.02 3.03v3.93c.24-.55.81-.9 1.53-.9zm.48-3.07c0-.15.03-.29.08-.43.24-.57.89-.84 1.46-.6s.84.89.6 1.46c-.17.42-.5.68-.96.68h-1.19s0 0 0-1.11z\"\n            fill=\"#1338f6\"\n          />\n          <g fill=\"#010101\">\n            <path d=\"m38.73 20.14v.34h.1s.06-.03.06-.06v-.32h-.12s-.04.02-.04.04z\" />\n            <path\n              d=\"m39.8 18.9v-1.22h-.33c-.8 0-1.4.47-1.51 1.16-.02.15 0 .3.06.44.21.47.76.67 1.23.46.33-.15.54-.48.54-.84z\"\n            />\n            <path\n              d=\"m41.76 18.48c-.24-.44-.8-.61-1.24-.37s-.61.8-.37 1.24.8.61 1.24.37c.02 0 .03.02.04.03.12.11.31.11.43 0v-.84-.08c-.01-.12-.05-.25-.11-.36zm-.81.85c-.23 0-.41-.18-.41-.41s.18-.41.41-.41.41.18.41.41-.18.41-.41.41z\"\n            />\n            <path\n              d=\"m40.58 20.35s-.08.05-.13.05c-.09 0-.16-.05-.16-.11s.07-.11.16-.11c.05 0 .09.01.13.05 0 0 .02.01.04.01h.12c-.03-.09-.15-.16-.29-.16-.16 0-.3.09-.3.21s.13.21.3.21c.14 0 .26-.07.29-.17h-.12s-.03 0-.04.02z\"\n            />\n            <path\n              d=\"m42.1 20.14s-.06-.06-.1-.05c-.04 0-.08.02-.1.05l-.08.18s-.01.01-.02 0l-.08-.18s-.06-.06-.1-.05c-.04 0-.07.01-.09.04l-.17.35h.12s.05-.02.06-.04l.09-.18s0 0 0 0l.08.18s.02.03.03.04h.01s0 0 .01 0h.09s0 0 .01 0h.01s.02-.02.03-.04l.09-.18s0 0 0 0l.08.18s.04.04.06.04h.12l-.11-.21-.07-.13z\"\n            />\n            <path\n              d=\"m43.84 18.12s-.08-.03-.12-.03c-.12 0-.22.08-.26.19l-.41.84c-.02.05-.08.08-.13.06-.03 0-.05-.03-.06-.06l-.4-.86c-.05-.14-.21-.21-.35-.16s-.21.21-.16.35c0 .01.01.03.02.04.15.28.59 1.13.59 1.13.03.06.07.11.12.14l-.09.2c-.09.19-.01.41.17.5.05.02.11.04.16.04l.4-.8s.01-.02.01-.04c0-.01.02-.02.02-.04l.59-1.15c.07-.13.01-.29-.12-.36z\"\n            />\n            <path\n              d=\"m41.08 20.08c-.16 0-.3.09-.3.21s.13.21.3.21.3-.09.3-.21-.13-.21-.3-.21zm0 .32c-.09 0-.16-.05-.16-.11s.07-.11.16-.11.16.05.16.11-.07.11-.16.11z\"\n            />\n            <path\n              d=\"m39.48 20.09s-.06.02-.08.04l-.12.19s0 0 0 0c-.01 0-.04 0-.04 0l-.12-.19s-.04-.04-.07-.04h-.13l.23.34s.07.05.12.05c.04 0 .09-.01.12-.05l.23-.34h-.12z\"\n            />\n            <path\n              d=\"m39.82 20.09s-.09 0-.12.04l-.23.35h.13s.05-.01.06-.04l.12-.19s.03-.02.04 0l.12.19s.04.04.07.04h.13l-.23-.34s-.07-.05-.12-.05z\"\n            />\n          </g>\n        </svg>\n        <svg id=\"SKRILL\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <path\n            d=\"m34.29 11.27 2.9-.52v11h-2.9zm4.24 0v10.51h2.91v-11zm-8.37 10.51h2.91v-8.08h-2.91zm-19.16-6.92c-.37 0-1.21-.08-1.21-.84 0-.91 1.22-.91 1.67-.91a10 10 0 0 1 2.6.45l.77.29v-2.48h-.07a10.46 10.46 0 0 0-3.8-.59c-3.27 0-4.42 1.87-4.42 3.5 0 .92.4 3.12 4.15 3.37.32 0 1.15.07 1.15.86 0 .64-.69 1-1.84 1a9.3 9.3 0 0 1-3.26-.62v2.56a15.66 15.66 0 0 0 3.92.43c3.19 0 4.61-1.78 4.61-3.56 0-2-1.62-3.3-4.31-3.48zm17.53-1.27c-2.67.09-4 1.28-4 3.64v4.53h2.87v-3.68c0-1.41.19-2 1.89-2.08v-2.36a3.94 3.94 0 0 0-.77-.05zm-7.87.11a9.53 9.53 0 0 1-1.66 2.8v-5.75l-3 .59v10.44h3v-3.23a11.41 11.41 0 0 1 1.28 3.23h3.59a22.66 22.66 0 0 0-1.87-4.16 12.72 12.72 0 0 0 2.11-3.92zm11-.76a1.42 1.42 0 1 0-1.43-1.41 1.42 1.42 0 0 0 1.43 1.41z\"\n            fill=\"#852165\"\n          />\n        </svg>\n        <svg id=\"STATIA_DE_PLATA\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <path\n            d=\"m30.71 15a9.53 9.53 0 0 1-1.89 4.47c-1.69 2.37-3.54 4.62-5.4 6.86-.18.23-.42.21-.63 0q-1.72-2.16-3.38-4.33c-.92-1.19-1.84-2.37-2.64-3.65a7.69 7.69 0 0 1-1.27-4.23 7.64 7.64 0 0 1 10.78-7h.11c0 .14-.05.24-.09.35a5 5 0 0 0-.43 2 5.1 5.1 0 0 0 .82 2.83 5.22 5.22 0 0 0 3.8 2.43.29.29 0 0 1 .22.27z\"\n            fill=\"#e3432d\"\n          />\n          <path\n            d=\"m30.71 15a5.41 5.41 0 0 1-2.14-.67 5.35 5.35 0 0 1-2.21-7 .26.26 0 0 0 0-.08 5.23 5.23 0 0 1 3.93-2.86 5.34 5.34 0 0 1 1.9 10.51 6.36 6.36 0 0 1-1.48.1z\"\n            fill=\"#f9c532\"\n          />\n          <path\n            d=\"m23.25 27.71a7.59 7.59 0 0 1-2-.2 1.66 1.66 0 0 1-.31-.12c-.17-.1-.17-.21 0-.32a1.22 1.22 0 0 1 .36-.14l.44-.08a.7.7 0 0 1 .73.17 1.12 1.12 0 0 0 1.53-.12.31.31 0 0 1 .28-.1 5.67 5.67 0 0 1 .84.16.9.9 0 0 1 .28.13c.14.09.14.19 0 .29a1.89 1.89 0 0 1-.66.21 4.34 4.34 0 0 1-.52.07 6.87 6.87 0 0 1-.97.05z\"\n            fill=\"#d13d2e\"\n          />\n          <path\n            d=\"m23.13 20.67a6.55 6.55 0 0 1-6.44-5.47v-.18a.3.3 0 1 1 .59-.09c0 .22.07.45.13.67a5.94 5.94 0 0 0 11.59-.52c0-.25.18-.38.36-.35s.26.2.22.44a6.51 6.51 0 0 1-5.74 5.49z\"\n            fill=\"#fff\"\n          />\n          <path\n            d=\"m23.12 7.62a6.11 6.11 0 0 1 2.46.46l.13.05a.31.31 0 0 1 .18.41.29.29 0 0 1-.41.13 6.59 6.59 0 0 0-1.22-.37 5.94 5.94 0 0 0-7 5v.27a.29.29 0 0 1-.32.3.28.28 0 0 1-.26-.34 5.72 5.72 0 0 1 .6-2.18 6.49 6.49 0 0 1 4.94-3.66 2.2 2.2 0 0 1 .36 0z\"\n            fill=\"#fff\"\n          />\n          <path\n            d=\"m26.58 9.66a4.59 4.59 0 0 1 3.9-4.57 5 5 0 0 1 1.34 0c.14 0 .28.07.25.26s-.17.17-.31.15a3.93 3.93 0 0 0-2.76.5 4 4 0 0 0-2 3.9 4 4 0 0 0 2.67 3.59 4.17 4.17 0 0 0 3.18-7.71.44.44 0 0 1-.15-.08.19.19 0 0 1 .12-.35.51.51 0 0 1 .21.06 4.58 4.58 0 1 1-6.4 5 4 4 0 0 1-.05-.75z\"\n            fill=\"#fff\"\n          />\n          <path\n            d=\"m31.53 6.7h.84c.13 0 .26 0 .26.18s-.13.17-.26.17h-1.55a1.1 1.1 0 0 0-1.07.75 1.1 1.1 0 0 0 1 1.44 5.35 5.35 0 0 1 1 0 1.47 1.47 0 0 1 1.25 1.58 1.46 1.46 0 0 1-1.38 1.36c-.55 0-1.11 0-1.66 0-.14 0-.28 0-.27-.19s.14-.16.27-.16h1.55a1.07 1.07 0 0 0 1-.7 1 1 0 0 0-.2-1.15 1.13 1.13 0 0 0-.85-.37 4.71 4.71 0 0 1-1.06 0 1.45 1.45 0 0 1 .35-2.86z\"\n            fill=\"#fff\"\n          />\n          <path\n            d=\"m30.88 11.52h-.63c-.12 0-.22 0-.22-.17s.09-.19.21-.19h1.2a.43.43 0 0 0 .46-.46.44.44 0 0 0-.47-.43h-.54c-.12 0-.2-.06-.2-.18a.16.16 0 0 1 .16-.18 2 2 0 0 1 .94.07.81.81 0 0 1-.29 1.55z\"\n            fill=\"#fffffb\"\n          />\n          <path\n            d=\"m31.41 7.35h.59c.12 0 .22 0 .22.18s-.1.17-.23.17h-1.07c-.34 0-.56.2-.55.48s.22.43.55.43h.44c.13 0 .22.05.23.18s-.1.18-.22.18h-.6a.77.77 0 0 1-.77-.78.78.78 0 0 1 .69-.83h.71z\"\n            fill=\"#fff\"\n          />\n          <path\n            d=\"m31 10.9h-.43a.17.17 0 0 1-.19-.18c0-.14.08-.19.21-.19h.81c.13 0 .22.05.22.18s-.09.19-.21.19z\"\n            fill=\"#fffdf8\"\n          />\n          <path\n            d=\"m31.3 8.34h-.41c-.12 0-.21-.06-.21-.2s.09-.17.2-.17h.85a.19.19 0 0 1 .2.18c0 .12-.08.18-.19.18z\"\n            fill=\"#fffcf4\"\n          />\n          <path d=\"m22.63 12.53.06.37c0 .07 0 .1-.08.1s-.08 0-.07-.1l.06-.38z\" fill=\"#e24530\" />\n          <g fill=\"#fff\">\n            <path d=\"m23.59 14.15.13-.49h.25l-.2.49z\" />\n            <path\n              d=\"m20 12.84a.91.91 0 0 0 .19.13.37.37 0 0 0 .15 0 .13.13 0 0 0 .1 0 .11.11 0 0 0 0-.08c0-.05 0-.11-.12-.19a1.43 1.43 0 0 1-.28-.32.51.51 0 0 1 .19-.69.55.55 0 0 1 .28-.07h.19a.68.68 0 0 1 .2.07v.46l-.16-.1a.33.33 0 0 0-.14 0h-.09a.11.11 0 0 0 0 .08s0 .1.12.16a1.14 1.14 0 0 1 .28.3.61.61 0 0 1-.09.69.56.56 0 0 1-.42.16h-.21a.75.75 0 0 1-.2-.1z\"\n            />\n            <path d=\"m21.84 13.43h-.49v-1.31h-.29v-.47h1.06v.47h-.28z\" />\n            <path d=\"m23 11.65h-.55l-.45 1.78h.47v-.26h.28v.26h.48zm-.37 1.16.09-.66.1.66z\" />\n            <path d=\"m24.03 13.43h-.48v-1.31h-.29v-.47h1.06v.47h-.26z\" />\n            <path d=\"m24.46 11.65h.48v1.78h-.48z\" />\n            <path d=\"m26 11.65h-.55l-.45 1.78h.47v-.26h.29v.26h.47zm-.37 1.16.09-.66.1.66z\" />\n            <path\n              d=\"m20.11 15.54a1.74 1.74 0 0 0-.05-.39.69.69 0 0 0-.15-.28.59.59 0 0 0-.24-.17 1.37 1.37 0 0 0-.4 0h-.36v1.78h.47a.66.66 0 0 0 .54-.22 1.07 1.07 0 0 0 .19-.72zm-.54.34a.18.18 0 0 1-.16.1v-.91a.18.18 0 0 1 .16.1 1.11 1.11 0 0 1 0 .36 1 1 0 0 1 0 .35z\"\n            />\n            <path d=\"m20.26 16.42v-1.77h.84v.42h-.37v.23h.33v.42h-.33v.25h.37v.45z\" />\n            <path\n              d=\"m22.89 14.8a.72.72 0 0 0-.49-.15h-.51v1.77h.48v-.59h.1a.57.57 0 0 0 .42-.15.56.56 0 0 0 .16-.42.63.63 0 0 0-.16-.46zm-.36.57a.3.3 0 0 1-.16.05v-.42a.24.24 0 0 1 .14.05.17.17 0 0 1 0 .15.17.17 0 0 1 .02.17z\"\n            />\n            <path d=\"m23.17 16.42v-1.77h.47v1.34h.35v.42z\" />\n            <path d=\"m24.94 14.64h-.55l-.39 1.78h.47v-.26h.29v.26h.47zm-.37 1.16.09-.66.1.66z\" />\n            <path d=\"m26.01 16.42h-.49v-1.35h-.29v-.42h1.07v.42h-.29z\" />\n            <path d=\"m27.14 14.65h-.54l-.39 1.77h.48v-.26h.31v.26h.47zm-.37 1.15.09-.66.1.66z\" />\n            <path\n              d=\"m26.49 14.23.06-.18a.57.57 0 0 0 .16.15.3.3 0 0 0 .34 0 .57.57 0 0 0 .16-.15l.06.18a.58.58 0 0 1-.18.2.35.35 0 0 1-.43 0 .58.58 0 0 1-.18-.2z\"\n            />\n          </g>\n        </svg>\n        <svg id=\"TWISTPLAY\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <path\n            d=\"m19.21 14a1 1 0 0 0 .67-.26 1 1 0 0 0 0-1.38 1 1 0 0 0-1.36 0 .94.94 0 0 0-.28.69.9.9 0 0 0 .28.69 1 1 0 0 0 .69.26zm-10.67 4.66-.12.12a1.1 1.1 0 0 1-.21.14l-.28.08a.61.61 0 0 1-.33.06c-.46 0-.7-.29-.7-.85v-2.6h1.71v-1.23h-1.69v-.86a1 1 0 0 0-.11-.52 1.07 1.07 0 0 0-.25-.31.93.93 0 0 0-.36-.14 2.34 2.34 0 0 0-.38 0h-.38-.19v1.78h-.61v1.25h.61v2.66a2.36 2.36 0 0 0 0 .53 2.11 2.11 0 0 0 .12.51 1.46 1.46 0 0 0 .58.76 2.14 2.14 0 0 0 1.18.29 4.39 4.39 0 0 0 .72-.07 3.73 3.73 0 0 0 .56-.2 1.93 1.93 0 0 0 .36-.28.58.58 0 0 0 .13-.31.86.86 0 0 0-.1-.38 4.39 4.39 0 0 0-.27-.47zm8.25-4.3a.91.91 0 0 0-.7.28 2.32 2.32 0 0 0-.38.83l-.79 2.75-1.05-3.22a1.31 1.31 0 0 0-.34-.5 1 1 0 0 0-.55-.16 2.34 2.34 0 0 0-.38 0l-.44.1.58 1.87-.81 2-1.1-3.3a1 1 0 0 0-.4-.54 1.22 1.22 0 0 0-.64-.16 1.84 1.84 0 0 0-.41 0l-.46.12 1.93 5.17a.86.86 0 0 0 1.12.5.85.85 0 0 0 .49-.46l.91-2.14.76 2.1a.88.88 0 0 0 .82.56h.05a.87.87 0 0 0 .82-.59l1.77-5.15-.38-.11a3 3 0 0 0-.42 0zm3.46 1.07a.82.82 0 0 0-.36-.8 1.53 1.53 0 0 0-.89-.21h-.43a1.17 1.17 0 0 0-.26 0v2.12l.76.65.07.08-.31.32a2.56 2.56 0 0 0-.67 1.64.91.91 0 0 0 .34.83 2.06 2.06 0 0 0 .91.21h.41a1 1 0 0 0 .25 0v-2.12l-.75-.65-.1-.07.32-.32a2.64 2.64 0 0 0 .7-1.63zm4.41 1.57a2.08 2.08 0 0 0-.65-.32c-.24-.07-.48-.14-.73-.19-.59-.12-.89-.33-.89-.6a.65.65 0 0 1 .08-.28.49.49 0 0 1 .19-.16.9.9 0 0 1 .27-.07h.28a1.84 1.84 0 0 1 .47.06 2.27 2.27 0 0 1 .46.16l.41.2c.13.07.19.13.29.19.09-.16.18-.32.25-.48a.83.83 0 0 0 .12-.44c0-.23-.2-.43-.56-.58a2.52 2.52 0 0 0-.65-.18 4.26 4.26 0 0 0-.87-.07 4 4 0 0 0-.9.11 2.57 2.57 0 0 0-.75.35 1.71 1.71 0 0 0-.52.55 1.52 1.52 0 0 0-.19.75 1.62 1.62 0 0 0 .15.76 1.36 1.36 0 0 0 .41.51 1.94 1.94 0 0 0 .58.32 3.2 3.2 0 0 0 .69.19 3 3 0 0 1 .81.26.6.6 0 0 1 .17.83.61.61 0 0 1-.2.19 1 1 0 0 1-.29.1h-.33a2 2 0 0 1-.49-.06 2.51 2.51 0 0 1-.46-.16 2.69 2.69 0 0 1-.38-.19 1.35 1.35 0 0 1-.27-.2c-.1.16-.19.32-.28.48a.82.82 0 0 0-.12.43.47.47 0 0 0 .21.38 2.08 2.08 0 0 0 .38.22 4.31 4.31 0 0 0 .61.19 4 4 0 0 0 .92.07 3.43 3.43 0 0 0 1-.14 2.07 2.07 0 0 0 .76-.37 1.91 1.91 0 0 0 .73-1.53 1.57 1.57 0 0 0-.18-.8 1.76 1.76 0 0 0-.47-.51zm6.26-2.19a2.27 2.27 0 0 0-.75-.51 3 3 0 0 0-.88-.16 2.22 2.22 0 0 0-1.07.25 2.4 2.4 0 0 0-.62.48.7.7 0 0 0-.36-.46 1.53 1.53 0 0 0-.7-.13h-.41-.15v8.58h1.66v-3.1a.69.69 0 0 0 .11.13 1.87 1.87 0 0 0 .29.2 2 2 0 0 0 .46.18 2.16 2.16 0 0 0 .62.09 3.17 3.17 0 0 0 .86-.15 1.77 1.77 0 0 0 .79-.52 2.9 2.9 0 0 0 .58-1 5 5 0 0 0 .22-1.59 4.45 4.45 0 0 0-.19-1.41 2.14 2.14 0 0 0-.48-.92zm-1.35 3.75a1 1 0 0 1-.92.49 1.53 1.53 0 0 1-.59-.13 1.41 1.41 0 0 1-.35-.23v-2.6a.61.61 0 0 1 .2-.44 1.11 1.11 0 0 1 .73-.2 1.58 1.58 0 0 1 .6.13 1.06 1.06 0 0 1 .37.36 2 2 0 0 1 .21.57 3.26 3.26 0 0 1 .06.7 2.77 2.77 0 0 1-.31 1.38zm7.72-2.14a4.27 4.27 0 0 0-.12-1 1.66 1.66 0 0 0-.42-.71 1.68 1.68 0 0 0-.76-.42 4.34 4.34 0 0 0-1.14-.13 4.78 4.78 0 0 0-.92.09 3.44 3.44 0 0 0-.76.21 1.84 1.84 0 0 0-.52.31.45.45 0 0 0-.19.33.93.93 0 0 0 .1.38 1.75 1.75 0 0 0 .29.47 7.49 7.49 0 0 1 .81-.38 2.59 2.59 0 0 1 1-.18 1.33 1.33 0 0 1 .82.21.83.83 0 0 1 .25.67v.21h-.56a8 8 0 0 0-1 .12 3.25 3.25 0 0 0-1 .32 2 2 0 0 0-.76.62 1.57 1.57 0 0 0-.29 1 1.82 1.82 0 0 0 .17.86 1.47 1.47 0 0 0 .45.57 1.5 1.5 0 0 0 .6.31 2.91 2.91 0 0 0 1.75-.12 2.2 2.2 0 0 0 .71-.49.72.72 0 0 0 .29.5 1.14 1.14 0 0 0 .67.17 2.11 2.11 0 0 0 .82-.17 2.79 2.79 0 0 1-.29-1.42v-2.3zm-1.59 2.2a.4.4 0 0 1-.09.21 1.18 1.18 0 0 1-.62.38 1.74 1.74 0 0 1-.45.06.76.76 0 0 1-.86-.64.67.67 0 0 1 0-.2.79.79 0 0 1 .15-.51 1.18 1.18 0 0 1 .38-.32 1.93 1.93 0 0 1 .53-.17c.2 0 .41-.07.61-.09h.35zm7.3-4.28a1.39 1.39 0 0 0-.41 0 1.16 1.16 0 0 0-.49.09 1.09 1.09 0 0 0-.33.27 1.11 1.11 0 0 0-.22.38c-.06.16-.12.31-.17.47l-.91 3.38-1.11-3.83a1 1 0 0 0-.38-.57 1.1 1.1 0 0 0-.61-.19 2.72 2.72 0 0 0-.49 0 2.16 2.16 0 0 0-.44.1l1.89 5.73s.63 1.47-.49 1.55a1.08 1.08 0 0 1-.47-.07 1.49 1.49 0 0 1-.36-.17c-.09.15-.17.31-.25.47a.85.85 0 0 0-.09.38.57.57 0 0 0 .36.56 2.38 2.38 0 0 0 .92.16 2.28 2.28 0 0 0 1.57-.5 2.71 2.71 0 0 0 .82-1.3l2-6.78a1.71 1.71 0 0 0-.38-.13z\"\n            fill=\"#5269b0\"\n          />\n        </svg>\n        <svg id=\"VISA\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <path\n            d=\"m26.17 20.75a7.23 7.23 0 0 1-2.6-.49l.43-2a5.06 5.06 0 0 0 2.38.6h.06c.72 0 1.43-.3 1.43-.91 0-.39-.32-.7-1.24-1.15s-2.09-1.18-2.09-2.51c0-1.8 1.65-3.06 4-3.06a6.31 6.31 0 0 1 2.24.41l-.42 2a4.53 4.53 0 0 0-1.92-.43 3.31 3.31 0 0 0-.44 0c-.69.09-1 .45-1 .77s.5.65 1.13 1c1 .52 2.23 1.17 2.22 2.7v-.08c0 1.92-1.64 3.16-4.17 3.16zm6.63-.08h-2.52l3.59-8.57a1.07 1.07 0 0 1 1-.68h2l1.94 9.25h-2.22l-.29-1.38h-3l-.49 1.38zm2.38-6.75-1.26 3.47h2zm-13.32 6.72h-2.4l2-9.25h2.4zm-5.25 0h-2.61l-1.91-7.39a1 1 0 0 0-.57-.81 9.76 9.76 0 0 0-2.36-.78l.06-.27h4.07a1.13 1.13 0 0 1 1.11.94l1 5.35 2.49-6.29h2.6z\"\n            fill=\"#2a2c6b\"\n          />\n        </svg>\n        <svg id=\"VOUCHER\" viewBox=\"0 0 48 32\">\n          <rect fill=\"none\" height=\"32\" rx=\"4\" width=\"48\" />\n          <g fill=\"#323334\">\n            <path\n              d=\"m13.37 7.93a.36.36 0 0 0 .36-.36v-1.84h1.84a.37.37 0 0 0 0-.73h-2.2a.36.36 0 0 0-.37.37v2.2a.36.36 0 0 0 .37.36z\"\n            />\n            <path d=\"m34.63 5h-2.2a.37.37 0 0 0 0 .73h1.84v1.84a.37.37 0 0 0 .73 0v-2.2a.36.36 0 0 0-.37-.37z\" />\n            <path d=\"m15.57 26.27h-1.84v-1.84a.37.37 0 0 0-.73 0v2.2a.36.36 0 0 0 .37.37h2.2a.37.37 0 0 0 0-.73z\" />\n            <path\n              d=\"m34.63 24.07a.36.36 0 0 0-.36.36v1.84h-1.84a.37.37 0 0 0 0 .73h2.2a.36.36 0 0 0 .37-.37v-2.2a.36.36 0 0 0-.37-.36z\"\n            />\n            <path\n              d=\"m19.76 11.41v-4.23a.35.35 0 0 0-.35-.36h-4.23a.36.36 0 0 0-.36.36v4.23a.35.35 0 0 0 .36.35h4.23a.34.34 0 0 0 .35-.35zm-.7-.35h-3.53v-3.53h3.53z\"\n            />\n            <path\n              d=\"m16.59 10.35h1.41a.35.35 0 0 0 .35-.35v-1.41a.35.35 0 0 0-.35-.35h-1.41a.34.34 0 0 0-.35.35v1.41a.34.34 0 0 0 .35.35zm.35-1.41h.7v.7h-.7z\"\n            />\n            <path\n              d=\"m33.18 7.18a.36.36 0 0 0-.36-.36h-4.23a.35.35 0 0 0-.35.36v4.23a.34.34 0 0 0 .35.35h4.23a.34.34 0 0 0 .35-.35zm-.71 3.88h-3.53v-3.53h3.53z\"\n            />\n            <path\n              d=\"m30 10.35h1.41a.34.34 0 0 0 .35-.35v-1.41a.34.34 0 0 0-.35-.35h-1.41a.34.34 0 0 0-.35.35v1.41a.35.35 0 0 0 .35.35zm.35-1.41h.71v.7h-.71z\"\n            />\n            <path\n              d=\"m19.41 20.24h-4.23a.35.35 0 0 0-.36.35v4.23a.35.35 0 0 0 .36.35h4.23a.34.34 0 0 0 .35-.35v-4.23a.34.34 0 0 0-.35-.35zm-.35 4.23h-3.53v-3.53h3.53z\"\n            />\n            <path\n              d=\"m16.59 23.76h1.41a.35.35 0 0 0 .35-.35v-1.41a.35.35 0 0 0-.35-.35h-1.41a.34.34 0 0 0-.35.35v1.41a.34.34 0 0 0 .35.35zm.35-1.41h.7v.71h-.7z\"\n            />\n            <path\n              d=\"m22.24 8.59a.35.35 0 0 0 .35-.35v-1.06a.36.36 0 0 0-.35-.36h-1.42a.36.36 0 0 0 0 .71h1.06v.7a.35.35 0 0 0 .35.36z\"\n            />\n            <path\n              d=\"m21.88 11.41h1.77a.35.35 0 0 0 0-.7h-1.41v-1.06a.35.35 0 0 0-.36-.35h-.7v-.71a.35.35 0 0 0-.35-.35.34.34 0 0 0-.35.35v1.06a.35.35 0 0 0 .35.35h.7v1.06a.35.35 0 0 0 .35.35z\"\n            />\n            <path d=\"m24.35 6.82h-.7a.36.36 0 0 0 0 .71h.7a.36.36 0 0 0 .36-.35.36.36 0 0 0-.36-.36z\" />\n            <path\n              d=\"m26.82 6.82h-1.06a.36.36 0 0 0-.35.36v1.05h-1.06a.36.36 0 0 0 0 .71h1.41a.36.36 0 0 0 .36-.35v-1.06h.7a.36.36 0 0 0 0-.71z\"\n            />\n            <path\n              d=\"m25.06 9.65a.34.34 0 0 0-.35.35v1.06a.35.35 0 0 0 .35.35.35.35 0 0 0 .35-.35v-1.06a.35.35 0 0 0-.35-.35z\"\n            />\n            <path d=\"m26.82 8.59v1.06h-.35a.35.35 0 0 0 0 .7h.7a.36.36 0 0 0 .36-.35v-1.41a.36.36 0 0 0-.71 0z\" />\n            <path d=\"m22.94 9.65a.35.35 0 0 0 .35.35h.36a.36.36 0 0 0 0-.71h-.36a.36.36 0 0 0-.35.36z\" />\n            <path\n              d=\"m32.12 22.35a.35.35 0 0 0 .35-.35.35.35 0 0 0-.35-.35h-1.41v-.71h.7a.35.35 0 0 0 .35-.35v-2.11a.35.35 0 1 0-.7 0v1.76h-3.18v-2.82a.36.36 0 0 0-.35-.36h-1.06v-.35a.35.35 0 0 0-.35-.35h-1.77v-1.76a.35.35 0 0 0-.35-.36.36.36 0 0 0-.35.36v.4h-.65v-1.82a.36.36 0 1 0-.71 0v2.11a.36.36 0 0 0 .35.36h1.06v1a.36.36 0 0 0 .35.36h1.77v.35a.35.35 0 0 0 .35.35h1.06v.7h-.7a.36.36 0 1 0 0 .71h.7v5.29a.35.35 0 0 0 .35.35.34.34 0 0 0 .35-.35v-.7h.71v.7a.35.35 0 1 0 .7 0v-.7h.66v1.06a.35.35 0 0 0 .35.35.35.35 0 0 0 .35-.35v-2.42zm-4.24-1.41h2.12v2.12h-2.12z\"\n            />\n            <path\n              d=\"m22.24 24.47v-1.06a.36.36 0 0 0-.36-.35h-.35v-1.41h2.12a.35.35 0 0 0 .35-.35v-1.42a.35.35 0 0 0-.35-.35h-.35v-1.06a.35.35 0 0 0-.35-.35h-.71v-1.42a.35.35 0 0 0-.35-.35.35.35 0 0 0-.35.35v1.42h-.71a.35.35 0 0 0-.35.35v1.41a.36.36 0 0 0 .71 0v-1.06h1.41v.71h-.35a.35.35 0 0 0-.36.35v1.06h-.7a.34.34 0 0 0-.35.35v1.76a.36.36 0 0 0 0 .71h.7v.7h-.7a.36.36 0 0 0 0 .71h1.41a.36.36 0 0 0 0-.71zm.35-4.23h.7v.7h-.7z\"\n            />\n            <path\n              d=\"m26.12 22.35h-1.41a.36.36 0 0 0-.36.35v1.77h-.7a.35.35 0 0 0-.35.35.35.35 0 0 0 .35.35h1.76a.35.35 0 0 0 .36-.35.36.36 0 0 0-.36-.35h-.35v-1.41h.71v.35a.35.35 0 0 0 .35.35.35.35 0 0 0 .35-.35v-.71a.35.35 0 0 0-.35-.35z\"\n            />\n            <path d=\"m23.65 23.41v-.7a.36.36 0 0 0-.71 0v.7a.36.36 0 0 0 .71 0z\" />\n            <path\n              d=\"m26.12 20.24h-1.06a.34.34 0 0 0-.35.35.35.35 0 0 0 .35.35h1.06a.35.35 0 0 0 .35-.35.35.35 0 0 0-.35-.35z\"\n            />\n            <path\n              d=\"m25.06 19.53a.35.35 0 0 0 .35-.35v-1.06a.36.36 0 0 0-.35-.36h-1.06a.36.36 0 0 0 0 .71h.7v.7a.36.36 0 0 0 .35.36z\"\n            />\n            <path\n              d=\"m33.17 17.06a.34.34 0 0 0-.35-.35.35.35 0 0 0-.35.35v1.06a.35.35 0 0 0 .35.35.35.35 0 0 0 .35-.35z\"\n            />\n            <path\n              d=\"m32.82 19.18a.35.35 0 0 0-.35.35v1.41a.35.35 0 0 0 .35.35.35.35 0 0 0 .35-.35v-1.41a.34.34 0 0 0-.35-.35z\"\n            />\n            <path\n              d=\"m28.94 19.53h1.06a.35.35 0 0 0 .35-.35.35.35 0 0 0-.35-.35h-.71v-.71a.35.35 0 0 0-.35-.35.35.35 0 0 0-.35.35v1.06a.35.35 0 0 0 .35.35z\"\n            />\n            <path\n              d=\"m18 14.24a.36.36 0 0 0-.35-.36h-.71v-1.06a.35.35 0 0 0-.35-.35h-1.41a.36.36 0 0 0-.36.35.35.35 0 0 0 .36.35h1.05v1.06a.36.36 0 0 0 .36.36h1.05a.36.36 0 0 0 .36-.35z\"\n            />\n            <path\n              d=\"m18.7 13.18h1.77a.36.36 0 0 0 .35-.36v-1.76a.35.35 0 0 0-.7 0v1.41h-1.42a.35.35 0 0 0-.35.35.35.35 0 0 0 .35.35z\"\n            />\n            <path d=\"m14.82 14.94v1.41a.36.36 0 0 0 .71 0v-1.41a.35.35 0 0 0-.35-.35.35.35 0 0 0-.36.35z\" />\n            <path d=\"m16.59 15.29a.36.36 0 0 0 0 .71h.7a.36.36 0 0 0 0-.71z\" />\n            <path\n              d=\"m20.82 16.71v-.71h.36a.35.35 0 0 0 0-.7h-.36v-1.07a.35.35 0 0 0-.35-.35h-1.41a.36.36 0 0 0 0 .71h1.06v.7h-1.41a.36.36 0 0 0-.36.35v1.06h-.35a.35.35 0 0 0-.35.35v1.77h-.65v-1.06a.35.35 0 0 0-.36-.35h-1.46a.35.35 0 0 0-.36.35.36.36 0 0 0 .36.35h1.05v.7h-1.05a.36.36 0 1 0 0 .71h4.23a.36.36 0 0 0 0-.71h-1.06v-1.41h.71v.35a.35.35 0 0 0 .35.36.35.35 0 0 0 .35-.35v-.7a.35.35 0 0 0-.35-.35h-.35v-.71h1.06v.71a.35.35 0 0 0 .35.35.35.35 0 0 0 .35-.35z\"\n            />\n            <path d=\"m24.35 12.82h.71a.35.35 0 0 0 0-.7h-.71a.35.35 0 1 0 0 .7z\" />\n            <path\n              d=\"m25.76 14.23h.71a.35.35 0 0 0 .35-.35.35.35 0 0 0-.35-.35h-.71a.35.35 0 0 0-.35.35.35.35 0 0 0 .35.35z\"\n            />\n            <path\n              d=\"m28.24 13.18v1.41a.35.35 0 0 0 .35.35h.7a.35.35 0 0 0 .35-.35.34.34 0 0 0-.35-.35h-.35v-1.06h1.41a.36.36 0 0 0 0-.71h-2.47v-.35a.35.35 0 0 0-.35-.35h-.71v-.7a.35.35 0 0 0-.35-.36.36.36 0 0 0-.35.36v1a.36.36 0 0 0 .35.36h.71v.35a.35.35 0 0 0 .35.35z\"\n            />\n            <path d=\"m25.41 15.65h1.77a.36.36 0 0 0 0-.71h-1.77a.36.36 0 0 0 0 .71z\" />\n            <path\n              d=\"m33.18 12.82a.36.36 0 0 0-.36-.35h-1.05a.36.36 0 0 0-.36.35.35.35 0 0 0 .36.35h.7v.71h-1.06a.35.35 0 1 0 0 .7h1.06v.71h-1.41a.34.34 0 0 0-.35.35.35.35 0 0 0 .35.35h1.76a.35.35 0 0 0 .35-.35z\"\n            />\n            <path\n              d=\"m28.23 16.35h.36v.35a.34.34 0 0 0 .35.35.35.35 0 0 0 .35-.35v-.7a.35.35 0 0 0-.35-.35h-.71a.35.35 0 0 0-.35.35.35.35 0 0 0 .35.35z\"\n            />\n            <path\n              d=\"m30.7 17.76v-.35h.71a.35.35 0 0 0 .35-.35.35.35 0 0 0-.35-.35h-1.06a.35.35 0 0 0-.35.35v.7a.36.36 0 0 0 .35.36.35.35 0 0 0 .35-.36z\"\n            />\n            <path d=\"m32.12 24.82v-1.06h.7a.35.35 0 1 0 0-.7h-1.06a.35.35 0 0 0-.35.35v1.41a.36.36 0 0 0 .71 0z\" />\n            <circle cx=\"28.94\" cy=\"22\" r=\".35\" />\n          </g>\n        </svg>\n      </template>\n\n      &nbsp;\n    `;\n  },\n})\nexport class SpriteComponent extends LitElement {\n  @query('template')\n  private template: HTMLTemplateElement;\n\n  @property({ type: String })\n  key: string;\n\n  OnUpdateFirst() {\n    const currentIcon = this.template.content.getElementById(this.key);\n    this.shadowRoot.appendChild(currentIcon);\n  }\n}\n","export * from './sprite.component';\n",null,"/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { ModifierOptions } from './types';\n\n/*  */\nexport abstract class Attribute<T = Record<string, unknown>> {\n  public static options: ModifierOptions;\n  public element?: HTMLElement;\n  public value?: string;\n  public selector?: string;\n  public parent?: HTMLElement;\n  public observer?: MutationObserver;\n  setStyles(keys: T) {\n    return (div: HTMLElement | Element | HTMLDivElement) => {\n      for (const [key, value] of Object.entries(keys)) {\n        div['style'][key] = value;\n      }\n    };\n  }\n  OnInit(): void {\n    /* */\n  }\n  OnDestroy(): void {\n    /* */\n  }\n  OnUpdate(_oldValue: string, _newValue: string) {\n    /* */\n  }\n  OnUpdateAttribute(_name: string, _value: string) {\n    /* */\n  }\n\n  OnChange(_records: MutationRecord[]): void {\n    /* */\n  }\n}\n","export const noop = function () {\n  /*  */\n};\n\nexport const observe = (target: unknown, memberName: string) => {\n  const prototype = target.constructor.prototype;\n  const OnInit = prototype.OnInit || noop;\n  const OnDestroy = prototype.OnDestroy || noop;\n  const OnUpdateAttribute = prototype.OnUpdateAttribute || noop;\n\n  let observer: MutationObserver;\n  prototype.OnInit = function () {\n    const element = this.element ?? this;\n    if (observer) {\n      observer.disconnect();\n    }\n    observer = new MutationObserver(() => {\n      OnUpdateAttribute.call(\n        this,\n        memberName,\n        element.getAttribute(memberName)\n      );\n      target[memberName] = element.getAttribute(memberName);\n    });\n    observer.observe(element, {\n      attributeFilter: [memberName],\n      attributes: true,\n    });\n    return OnInit.call(this);\n  };\n  prototype.OnDestroy = function () {\n    observer.disconnect();\n    return OnDestroy.call(this);\n  };\n};\n","import { Attribute } from './attribute';\nimport { observe } from './helpers';\nimport { Constructor } from './types';\n\nexport class CustomAttributeRegistry {\n  private _attrMap: Map<string, Constructor<Attribute>> = new Map();\n  private _elementMap: Map<HTMLElement, Map<string, Attribute>> = new Map();\n  private observer: MutationObserver;\n\n  constructor(private parent: HTMLElement) {\n    if (!parent) {\n      throw new Error('Must be given a parent element');\n    }\n    this.observe();\n  }\n\n  define(attrName: string, Constructor: Constructor<Attribute>) {\n    this._attrMap.set(attrName.toLowerCase(), Constructor);\n    this.upgradeAttribute(attrName);\n  }\n\n  get(element: HTMLElement, attrName: string) {\n    const map = this._elementMap.get(element);\n    if (!map) return;\n    return map.get(attrName.toLowerCase());\n  }\n\n  private getConstructor(attrName: string) {\n    return this._attrMap.get(attrName.toLowerCase());\n  }\n\n  private observe() {\n    this.observer = new MutationObserver((mutations) => {\n      for (const mutation of mutations) {\n        if (mutation.type === 'attributes') {\n          const attr = this.getConstructor(mutation.attributeName);\n          if (attr) {\n            this.found(\n              mutation.attributeName,\n              mutation.target as never,\n              mutation.oldValue\n            );\n          }\n        } else {\n          for (const node of mutation.removedNodes) {\n            this.downgrade(node as never);\n          }\n          for (const node of mutation.addedNodes) {\n            this.upgradeElement(node as never);\n          }\n        }\n      }\n    });\n    this.observer.observe(this.parent?.['shadowRoot'] ?? this.parent, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeOldValue: true,\n    });\n  }\n\n  unsubscribe() {\n    this.observer?.disconnect();\n    const values = [...this._elementMap.values()];\n    for (const elModifiers of values) {\n      const modifiers = [...elModifiers.values()];\n      for (const modifier of modifiers) {\n        modifier.OnDestroy();\n        if (modifier.observer) {\n          modifier.observer.disconnect();\n        }\n      }\n      elModifiers.clear();\n    }\n    this._elementMap.clear();\n  }\n\n  private upgradeAttribute(attrName: string, doc?: HTMLElement) {\n    const parent = doc || this.parent;\n\n    const matches = parent.querySelectorAll('[' + attrName + ']');\n\n    for (const match of [...matches]) {\n      this.found(attrName, match as never);\n    }\n  }\n\n  private upgradeElement(element: HTMLElement) {\n    if (element.nodeType !== 1) {\n      return;\n    }\n    for (const attr of element.attributes) {\n      if (this.getConstructor(attr.name)) {\n        this.found(attr.name, element);\n      }\n    }\n    for (const [attr] of this._attrMap) {\n      this.upgradeAttribute(attr, element);\n    }\n  }\n\n  private downgrade(element: HTMLElement) {\n    const map = this._elementMap.get(element);\n    if (!map) {\n      return;\n    }\n    for (const [, instance] of map) {\n      if (instance.OnDestroy) {\n        instance.OnDestroy();\n      }\n    }\n    this._elementMap.delete(element);\n  }\n\n  private found(attributeName: string, el: HTMLElement, oldVal?: string) {\n    let map = this._elementMap.get(el);\n    if (!map) {\n      map = new Map();\n      this._elementMap.set(el, map);\n    }\n\n    let modifier = map.get(attributeName);\n    const attribute = el.getAttribute(attributeName);\n\n    if (!modifier) {\n      const Modifier = this.getConstructor(attributeName);\n      modifier = new Modifier();\n      if (Modifier.options?.observedAttributes?.length) {\n        for (const observedAttribute of Modifier.options.observedAttributes) {\n          observe(modifier, observedAttribute);\n        }\n      }\n      modifier.element = el;\n      modifier.selector = attributeName;\n\n      modifier.value = attribute || modifier.value;\n      modifier.parent = this.parent;\n\n      if (modifier.OnInit) {\n        modifier.OnInit();\n      }\n      if (Modifier.options.observe) {\n        modifier.observer = new MutationObserver((records) =>\n          modifier.OnChange(records)\n        );\n        modifier.observer.observe(modifier.element, Modifier.options.observe);\n      }\n      map.set(attributeName, modifier);\n      return;\n    }\n\n    if (attribute == null && !!modifier.value) {\n      modifier.value = attribute;\n      if (modifier.OnDestroy) {\n        modifier.OnDestroy();\n      }\n      if (modifier.observer) {\n        modifier.observer.disconnect();\n      }\n      map.delete(attributeName);\n      return;\n    }\n    if (attribute !== modifier.value) {\n      modifier.value = attribute;\n      if (modifier.OnUpdate) {\n        modifier.OnUpdate(oldVal, attribute);\n      }\n      return;\n    }\n  }\n}\n","import { noop, observe } from '../helpers';\nimport { InputOptions, ModifierOptions } from '../types';\n\n/**\n * Decorator @Input\n * Used to get attribute from element\n */\nexport const Input =\n  (options?: InputOptions) => (target, memberName: string) => {\n    const OnInit = target.OnInit || noop;\n    Object.defineProperty(target, 'OnInit', {\n      value() {\n        let originalValue = this[memberName];\n\n        const element = this.element ?? this;\n        Object.defineProperty(this, memberName, {\n          get: function () {\n            originalValue = element.getAttribute(memberName.toLowerCase());\n            return originalValue;\n          },\n          set(value) {\n            element.setAttribute(memberName.toLowerCase(), value);\n            originalValue = value;\n          },\n          configurable: true,\n        });\n        return OnInit.call(this);\n      },\n      configurable: true,\n    });\n\n    if (options?.observe) {\n      observe(target, memberName);\n    }\n  };\n\n/**\n * Decorator @Modifier\n * Accepts parameter options with selector and registry\n */\nexport const Modifier = (options: ModifierOptions) => {\n  return (target) => {\n    target['options'] = options;\n  };\n};\n\n/**\n * Decorator @CustomAttribute\n * Accepts parameter options with selector and registry\n */\nexport const CustomAttribute = Modifier;\n/**\n * Decorator @Directive\n * Accepts parameter options with selector and registry\n */\nexport const Directive = Modifier;\n","import { Attribute } from './attribute';\n\n/**\n * Media query Attribute\n * for performance reasons it is key value pair\n */\nexport const MediaMatchers = new Map([\n  ['screen and (max-width: 599px)', 'xs'],\n  ['screen and (min-width: 600px) and (max-width: 959px)', 'sm'],\n  ['screen and (min-width: 960px) and (max-width: 1279px)', 'md'],\n  ['screen and (min-width: 1280px) and (max-width: 1919px)', 'lg'],\n  ['screen and (min-width: 1920px) and (max-width: 5000px)', 'xl'],\n  ['screen and (max-width: 959px)', 'lt-md'],\n  ['screen and (max-width: 1279px)', 'lt-lg'],\n  ['screen and (max-width: 1919px)', 'lt-xl'],\n  ['screen and (min-width: 600px)', 'gt-xs'],\n  ['screen and (min-width: 960px)', 'gt-sm'],\n  ['screen and (min-width: 1280px)', 'gt-md'],\n  ['screen and (min-width: 1920px)', 'gt-lg'],\n]);\n\nexport type MediaEvent = MediaQueryList | MediaQueryListEvent;\nexport type MediaQueryEvent = [MediaEvent, Attr];\n\nexport interface OnUpdateMediaQuery {\n  OnEnterMediaQuery(tuple: MediaQueryEvent): void;\n  OnExitMediaQuery(tuple: MediaQueryEvent): void;\n}\n\nexport const Breakpoints = [...MediaMatchers.values()];\n\nexport const createFiltersFromSelector = (selector: string) => [\n  ...Breakpoints.map((breakpoint) => `${selector}.${breakpoint}`),\n  selector,\n];\n\nexport abstract class MediaQueryAttribute<T>\n  extends Attribute<T>\n  implements OnUpdateMediaQuery\n{\n  private matchers: Map<MediaQueryList, MediaQueryList> = new Map();\n  private cachedAttributes: Map<string, Attr> = new Map();\n\n  listener = (event: MediaQueryList | MediaQueryListEvent) => {\n    const key = `${this.selector.toLowerCase()}.${MediaMatchers.get(\n      event.media\n    )}`;\n    const attribute = this.cachedAttributes.get(key);\n\n    if (event.matches && attribute) {\n      return this.OnEnterMediaQuery([event, attribute]);\n    }\n    return this.OnExitMediaQuery([event, attribute]);\n  };\n\n  OnInit() {\n    if (this.OnEnterMediaQuery || this.OnExitMediaQuery) {\n      for (const query of MediaMatchers.keys()) {\n        const matcher = window.matchMedia(query);\n\n        const attr = Object.values(this.element.attributes).find(\n          (v) =>\n            v.name ===\n            `${this.selector.toLowerCase()}.${MediaMatchers.get(query)}`\n        );\n\n        if (attr) {\n          this.cachedAttributes.set(attr.name, attr);\n          matcher.addEventListener('change', this.listener);\n        }\n\n        if (attr && matcher.matches) {\n          this.listener(matcher);\n        }\n        this.matchers.set(matcher, matcher);\n      }\n    }\n  }\n\n  OnDestroy() {\n    for (const matcher of this.matchers.values()) {\n      matcher.removeEventListener('change', this.listener);\n    }\n    this.cachedAttributes.clear();\n    this.matchers.clear();\n  }\n\n  abstract OnEnterMediaQuery(tuple: MediaQueryEvent): void;\n  abstract OnExitMediaQuery(tuple: MediaQueryEvent): void;\n}\n","import { Attribute, Modifier } from '@rhtml/custom-attributes';\ninterface Styles {\n  display: string;\n}\n@Modifier({\n  selector: 'ngIf',\n})\nexport class IfOperator extends Attribute<Styles> {\n  OnInit() {\n    this.modify();\n  }\n\n  OnDestroy() {\n    this.element.style.display = null;\n  }\n\n  OnUpdate() {\n    this.modify();\n  }\n\n  private modify() {\n    if (this.value === 'true') {\n      this.setStyles({ display: null })(this.element);\n    } else {\n      this.setStyles({ display: 'none' })(this.element);\n    }\n  }\n}\n","import {\n  Attribute,\n  CustomAttributeRegistry,\n  Modifier,\n} from '@rhtml/custom-attributes';\n\n@Modifier({\n  selector: 'angular-layout-registry',\n  registry(this) {\n    return new CustomAttributeRegistry(this);\n  },\n})\nexport class Registry extends Attribute {}\n","import { IfOperator } from './if';\nimport { Registry } from './registry';\n\nexport const AngularLayout = [Registry, IfOperator];\n","import {\n  MediaQueryAttribute,\n  MediaQueryEvent,\n  Modifier,\n} from '@rhtml/custom-attributes';\n\ninterface Styles {\n  flex: string;\n  boxSizing: string;\n  maxWidth: string;\n}\n\n@Modifier({\n  selector: 'fxFlex',\n})\nexport class Flex extends MediaQueryAttribute<Styles> {\n  private prevValue: string;\n\n  OnInit() {\n    this.modify();\n    super.OnInit();\n  }\n\n  OnDestroy() {\n    this.clean();\n    super.OnDestroy();\n  }\n\n  OnUpdate() {\n    this.modify();\n  }\n\n  OnEnterMediaQuery([, attribute]: MediaQueryEvent) {\n    this.prevValue = this.value;\n    this.value = attribute.value ?? this.value;\n    this.modify();\n  }\n\n  OnExitMediaQuery() {\n    this.value = this.prevValue ?? this.value;\n    this.modify();\n  }\n\n  private clean() {\n    this.setStyles({\n      boxSizing: null,\n      maxWidth: null,\n      flex: null,\n    })(this.element);\n  }\n\n  private modify() {\n    this.setStyles({\n      boxSizing: 'border-box',\n      maxWidth: this.value || null,\n      flex: '1 1 100%',\n    })(this.element);\n  }\n}\n","import {\n  MediaQueryAttribute,\n  MediaQueryEvent,\n  Modifier,\n} from '@rhtml/custom-attributes';\n\ninterface Styles {\n  alignSelf: string;\n}\n\n@Modifier({\n  selector: 'fxFlexAlign',\n})\nexport class FlexAlign extends MediaQueryAttribute<Styles> {\n  private prevValue: string;\n\n  OnInit() {\n    this.modify();\n    super.OnInit();\n  }\n\n  OnDestroy() {\n    this.clean();\n    super.OnDestroy();\n  }\n\n  OnUpdate() {\n    this.modify();\n  }\n\n  OnEnterMediaQuery([, attribute]: MediaQueryEvent) {\n    this.prevValue = this.value;\n    this.value = attribute.value ?? this.value;\n    this.modify();\n  }\n\n  OnExitMediaQuery() {\n    this.value = this.prevValue ?? this.value;\n    this.modify();\n  }\n\n  private clean() {\n    this.setStyles({ alignSelf: null })(this.element);\n  }\n\n  private modify() {\n    this.setStyles({ alignSelf: this.value || null })(this.element);\n  }\n}\n","import { Attribute, Modifier } from '@rhtml/custom-attributes';\n\ninterface Styles {\n  margin: string;\n  width: string;\n  height: string;\n  minWidth: string;\n  minHeight: string;\n}\n\n@Modifier({\n  selector: 'fxFlexFill',\n})\nexport class FlexFill extends Attribute<Styles> {\n  value = '100%';\n\n  OnInit() {\n    this.modify();\n  }\n\n  OnDestroy() {\n    this.clean();\n  }\n\n  OnUpdate() {\n    this.modify();\n  }\n\n  private clean() {\n    this.setStyles({\n      height: null,\n      margin: null,\n      minHeight: null,\n      minWidth: null,\n      width: null,\n    })(this.element);\n  }\n\n  private modify() {\n    this.setStyles({\n      margin: '0',\n      height: this.value,\n      minHeight: this.value,\n      minWidth: this.value,\n      width: this.value,\n    })(this.element);\n  }\n}\n","import { Attribute, Modifier } from '@rhtml/custom-attributes';\n\ninterface Styles {\n  marginLeft: string;\n}\n\n@Modifier({\n  selector: 'fxFlexOffset',\n})\nexport class FlexOffset extends Attribute<Styles> {\n  OnInit() {\n    this.modify();\n  }\n\n  OnDestroy() {\n    this.clean();\n  }\n\n  OnUpdate() {\n    this.modify();\n  }\n\n  private clean() {\n    this.setStyles({\n      marginLeft: null,\n    })(this.element);\n  }\n\n  private modify() {\n    this.setStyles({\n      marginLeft: this.value || null,\n    })(this.element);\n  }\n}\n","import { Attribute, Modifier } from '@rhtml/custom-attributes';\n\ninterface Styles {\n  order: string;\n}\n\n@Modifier({\n  selector: 'fxFlexOrder',\n})\nexport class FlexOrder extends Attribute<Styles> {\n  OnInit() {\n    this.modify();\n  }\n\n  OnDestroy() {\n    this.clean();\n  }\n\n  OnUpdate() {\n    this.modify();\n  }\n\n  private clean() {\n    this.setStyles({\n      order: null,\n    })(this.element);\n  }\n\n  private modify() {\n    this.setStyles({\n      order: this.value || null,\n    })(this.element);\n  }\n}\n","import {\n  MediaQueryAttribute,\n  MediaQueryEvent,\n  Modifier,\n} from '@rhtml/custom-attributes';\n\ninterface Styles {\n  flexFlow: string;\n  boxSizing: string;\n  display: string;\n}\n\n@Modifier({\n  selector: 'fxLayout',\n})\nexport class Layout extends MediaQueryAttribute<Styles> {\n  value = 'row';\n  private prevValue: string;\n\n  OnInit() {\n    this.modify();\n    super.OnInit();\n  }\n\n  OnDestroy() {\n    this.clean();\n    super.OnDestroy();\n  }\n\n  OnUpdate() {\n    this.modify();\n  }\n\n  OnEnterMediaQuery([, attribute]: MediaQueryEvent) {\n    this.prevValue = this.value;\n    this.value = attribute.value ?? this.value;\n    this.modify();\n  }\n\n  OnExitMediaQuery() {\n    this.value = this.prevValue ?? this.value;\n    this.modify();\n  }\n\n  private clean() {\n    this.setStyles({\n      boxSizing: null,\n      flexFlow: null,\n      display: null,\n    })(this.element);\n  }\n\n  private modify() {\n    if (!this.value) {\n      return;\n    }\n    this.element.setAttribute(this.selector, this.value);\n    const splitted = this.value.split(' ');\n    const [mainAxis, crossAxis] = splitted;\n    this.setStyles({\n      boxSizing: 'flex',\n      flexFlow: splitted.length > 1 ? `${mainAxis} ${crossAxis}` : mainAxis,\n      display: 'flex',\n    })(this.element);\n  }\n}\n","import {\n  MediaQueryAttribute,\n  MediaQueryEvent,\n  Modifier,\n} from '@rhtml/custom-attributes';\n\ninterface Styles {\n  placeContent: string;\n  alignItems: string;\n  display: string;\n}\n\n@Modifier({\n  selector: 'fxLayoutAlign',\n})\nexport class LayoutAlign extends MediaQueryAttribute<Styles> {\n  private prevValue: string;\n\n  OnInit() {\n    this.modify();\n    super.OnInit();\n  }\n\n  OnDestroy() {\n    this.clean();\n    super.OnDestroy();\n  }\n\n  OnUpdate() {\n    this.modify();\n  }\n\n  OnEnterMediaQuery([, attribute]: MediaQueryEvent) {\n    this.prevValue = this.value;\n    this.value = attribute.value ?? this.value;\n    this.modify();\n  }\n\n  OnExitMediaQuery() {\n    this.value = this.prevValue ?? this.value;\n    this.modify();\n  }\n\n  private clean() {\n    this.setStyles({\n      alignItems: null,\n      placeContent: null,\n      display: null,\n    })(this.element);\n  }\n\n  private modify() {\n    const [mainAxis, crossAxis] = this.value.split(' ');\n    this.setStyles({\n      alignItems: crossAxis ? crossAxis : mainAxis,\n      placeContent: crossAxis\n        ? `${crossAxis} ${mainAxis}`\n        : `${mainAxis} ${mainAxis}`,\n      display: 'flex',\n    })(this.element);\n  }\n}\n","import {\n  createFiltersFromSelector,\n  MediaQueryAttribute,\n  MediaQueryEvent,\n  Modifier,\n} from '@rhtml/custom-attributes';\n\ninterface Styles {\n  margin: string;\n  flex?: string;\n}\n\n@Modifier({\n  selector: 'fxLayoutGap',\n  observe: {\n    childList: true,\n    subtree: true,\n    attributes: true,\n    attributeFilter: createFiltersFromSelector('fxlayout'),\n  },\n})\nexport class LayoutGap extends MediaQueryAttribute<Styles> {\n  private prevValue: string;\n\n  OnInit() {\n    this.modify();\n    super.OnInit();\n  }\n\n  OnDestroy() {\n    this.clean();\n    super.OnDestroy();\n  }\n\n  OnUpdate() {\n    this.modify();\n  }\n\n  OnChange() {\n    this.modify();\n  }\n\n  OnEnterMediaQuery([, attribute]: MediaQueryEvent) {\n    this.prevValue = this.value;\n    this.value = attribute.value ?? this.value;\n    this.modify();\n  }\n\n  OnExitMediaQuery() {\n    this.value = this.prevValue ?? this.value;\n    this.modify();\n  }\n\n  private clean() {\n    const divs = [...this.element.children] as HTMLElement[];\n    for (const div of divs) {\n      this.setStyles({\n        flex: null,\n        margin: null,\n      })(div);\n    }\n  }\n\n  private modify() {\n    const layout = this.element.getAttribute('fxlayout');\n    const isRow = layout === 'row';\n    const isColumn = layout === 'column';\n    let margin: (string | number)[] = [this.value];\n    if (isRow) {\n      margin = [0, this.value, 0, 0];\n    }\n    if (isColumn) {\n      margin = [0, 0, this.value, 0];\n    }\n    const divs = this.element.children;\n    for (const div of divs) {\n      this.setStyles({\n        flex: '1 1 25%',\n        margin: margin.join(' '),\n      })(div);\n    }\n    const lastElement = this.element.children[this.element.children.length - 1];\n    if (lastElement && isRow) {\n      this.setStyles({\n        margin: null,\n      })(lastElement);\n    }\n  }\n}\n","import {\n  Attribute,\n  CustomAttributeRegistry,\n  Modifier,\n} from '@rhtml/custom-attributes';\n\n@Modifier({\n  selector: 'flex-layout-registry',\n  registry(this) {\n    return new CustomAttributeRegistry(this);\n  },\n})\nexport class Registry extends Attribute {}\n","import { Flex } from './flex';\nimport { FlexAlign } from './flex-align';\nimport { FlexFill } from './flex-fill';\nimport { FlexOffset } from './flex-offset';\nimport { FlexOrder } from './flex-order';\nimport { Layout } from './layout';\nimport { LayoutAlign } from './layout-align';\nimport { LayoutGap } from './layout-gap';\nimport { Registry } from './registry';\n\nexport * from './layout';\n\nexport const FlexLayout = [\n  Registry,\n  Layout,\n  LayoutAlign,\n  LayoutGap,\n  FlexFill,\n  Flex,\n  FlexAlign,\n  FlexOffset,\n  FlexOrder,\n];\n","export const Animations = `\n@charset \"UTF-8\";\n\n/*!\n * animate.css -https://daneden.github.io/animate.css/\n * Version - 3.7.2\n * Licensed under the MIT license - http://opensource.org/licenses/MIT\n *\n * Copyright (c) 2019 Daniel Eden\n */\n\n@-webkit-keyframes bounce {\n\t0%,\n\t20%,\n\t53%,\n\t80%,\n\tto {\n\t\t-webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n\t\tanimation-timing-function: cubic-bezier(.215, .61, .355, 1);\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n\t40%,\n\t43% {\n\t\t-webkit-animation-timing-function: cubic-bezier(.755, .05, .855, .06);\n\t\tanimation-timing-function: cubic-bezier(.755, .05, .855, .06);\n\t\t-webkit-transform: translate3d(0, -30px, 0);\n\t\ttransform: translate3d(0, -30px, 0)\n\t}\n\t70% {\n\t\t-webkit-animation-timing-function: cubic-bezier(.755, .05, .855, .06);\n\t\tanimation-timing-function: cubic-bezier(.755, .05, .855, .06);\n\t\t-webkit-transform: translate3d(0, -15px, 0);\n\t\ttransform: translate3d(0, -15px, 0)\n\t}\n\t90% {\n\t\t-webkit-transform: translate3d(0, -4px, 0);\n\t\ttransform: translate3d(0, -4px, 0)\n\t}\n}\n\n@keyframes bounce {\n\t0%,\n\t20%,\n\t53%,\n\t80%,\n\tto {\n\t\t-webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n\t\tanimation-timing-function: cubic-bezier(.215, .61, .355, 1);\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n\t40%,\n\t43% {\n\t\t-webkit-animation-timing-function: cubic-bezier(.755, .05, .855, .06);\n\t\tanimation-timing-function: cubic-bezier(.755, .05, .855, .06);\n\t\t-webkit-transform: translate3d(0, -30px, 0);\n\t\ttransform: translate3d(0, -30px, 0)\n\t}\n\t70% {\n\t\t-webkit-animation-timing-function: cubic-bezier(.755, .05, .855, .06);\n\t\tanimation-timing-function: cubic-bezier(.755, .05, .855, .06);\n\t\t-webkit-transform: translate3d(0, -15px, 0);\n\t\ttransform: translate3d(0, -15px, 0)\n\t}\n\t90% {\n\t\t-webkit-transform: translate3d(0, -4px, 0);\n\t\ttransform: translate3d(0, -4px, 0)\n\t}\n}\n\n.bounce {\n\t-webkit-animation-name: bounce;\n\tanimation-name: bounce;\n\t-webkit-transform-origin: center bottom;\n\ttransform-origin: center bottom\n}\n\n@-webkit-keyframes flash {\n\t0%,\n\t50%,\n\tto {\n\t\topacity: 1\n\t}\n\t25%,\n\t75% {\n\t\topacity: 0\n\t}\n}\n\n@keyframes flash {\n\t0%,\n\t50%,\n\tto {\n\t\topacity: 1\n\t}\n\t25%,\n\t75% {\n\t\topacity: 0\n\t}\n}\n\n.flash {\n\t-webkit-animation-name: flash;\n\tanimation-name: flash\n}\n\n@-webkit-keyframes pulse {\n\t0% {\n\t\t-webkit-transform: scaleX(1);\n\t\ttransform: scaleX(1)\n\t}\n\t50% {\n\t\t-webkit-transform: scale3d(1.05, 1.05, 1.05);\n\t\ttransform: scale3d(1.05, 1.05, 1.05)\n\t}\n\tto {\n\t\t-webkit-transform: scaleX(1);\n\t\ttransform: scaleX(1)\n\t}\n}\n\n@keyframes pulse {\n\t0% {\n\t\t-webkit-transform: scaleX(1);\n\t\ttransform: scaleX(1)\n\t}\n\t50% {\n\t\t-webkit-transform: scale3d(1.05, 1.05, 1.05);\n\t\ttransform: scale3d(1.05, 1.05, 1.05)\n\t}\n\tto {\n\t\t-webkit-transform: scaleX(1);\n\t\ttransform: scaleX(1)\n\t}\n}\n\n.pulse {\n\t-webkit-animation-name: pulse;\n\tanimation-name: pulse\n}\n\n@-webkit-keyframes rubberBand {\n\t0% {\n\t\t-webkit-transform: scaleX(1);\n\t\ttransform: scaleX(1)\n\t}\n\t30% {\n\t\t-webkit-transform: scale3d(1.25, .75, 1);\n\t\ttransform: scale3d(1.25, .75, 1)\n\t}\n\t40% {\n\t\t-webkit-transform: scale3d(.75, 1.25, 1);\n\t\ttransform: scale3d(.75, 1.25, 1)\n\t}\n\t50% {\n\t\t-webkit-transform: scale3d(1.15, .85, 1);\n\t\ttransform: scale3d(1.15, .85, 1)\n\t}\n\t65% {\n\t\t-webkit-transform: scale3d(.95, 1.05, 1);\n\t\ttransform: scale3d(.95, 1.05, 1)\n\t}\n\t75% {\n\t\t-webkit-transform: scale3d(1.05, .95, 1);\n\t\ttransform: scale3d(1.05, .95, 1)\n\t}\n\tto {\n\t\t-webkit-transform: scaleX(1);\n\t\ttransform: scaleX(1)\n\t}\n}\n\n@keyframes rubberBand {\n\t0% {\n\t\t-webkit-transform: scaleX(1);\n\t\ttransform: scaleX(1)\n\t}\n\t30% {\n\t\t-webkit-transform: scale3d(1.25, .75, 1);\n\t\ttransform: scale3d(1.25, .75, 1)\n\t}\n\t40% {\n\t\t-webkit-transform: scale3d(.75, 1.25, 1);\n\t\ttransform: scale3d(.75, 1.25, 1)\n\t}\n\t50% {\n\t\t-webkit-transform: scale3d(1.15, .85, 1);\n\t\ttransform: scale3d(1.15, .85, 1)\n\t}\n\t65% {\n\t\t-webkit-transform: scale3d(.95, 1.05, 1);\n\t\ttransform: scale3d(.95, 1.05, 1)\n\t}\n\t75% {\n\t\t-webkit-transform: scale3d(1.05, .95, 1);\n\t\ttransform: scale3d(1.05, .95, 1)\n\t}\n\tto {\n\t\t-webkit-transform: scaleX(1);\n\t\ttransform: scaleX(1)\n\t}\n}\n\n.rubberBand {\n\t-webkit-animation-name: rubberBand;\n\tanimation-name: rubberBand\n}\n\n@-webkit-keyframes shake {\n\t0%,\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n\t10%,\n\t30%,\n\t50%,\n\t70%,\n\t90% {\n\t\t-webkit-transform: translate3d(-10px, 0, 0);\n\t\ttransform: translate3d(-10px, 0, 0)\n\t}\n\t20%,\n\t40%,\n\t60%,\n\t80% {\n\t\t-webkit-transform: translate3d(10px, 0, 0);\n\t\ttransform: translate3d(10px, 0, 0)\n\t}\n}\n\n@keyframes shake {\n\t0%,\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n\t10%,\n\t30%,\n\t50%,\n\t70%,\n\t90% {\n\t\t-webkit-transform: translate3d(-10px, 0, 0);\n\t\ttransform: translate3d(-10px, 0, 0)\n\t}\n\t20%,\n\t40%,\n\t60%,\n\t80% {\n\t\t-webkit-transform: translate3d(10px, 0, 0);\n\t\ttransform: translate3d(10px, 0, 0)\n\t}\n}\n\n.shake {\n\t-webkit-animation-name: shake;\n\tanimation-name: shake\n}\n\n@-webkit-keyframes headShake {\n\t0% {\n\t\t-webkit-transform: translateX(0);\n\t\ttransform: translateX(0)\n\t}\n\t6.5% {\n\t\t-webkit-transform: translateX(-6px) rotateY(-9deg);\n\t\ttransform: translateX(-6px) rotateY(-9deg)\n\t}\n\t18.5% {\n\t\t-webkit-transform: translateX(5px) rotateY(7deg);\n\t\ttransform: translateX(5px) rotateY(7deg)\n\t}\n\t31.5% {\n\t\t-webkit-transform: translateX(-3px) rotateY(-5deg);\n\t\ttransform: translateX(-3px) rotateY(-5deg)\n\t}\n\t43.5% {\n\t\t-webkit-transform: translateX(2px) rotateY(3deg);\n\t\ttransform: translateX(2px) rotateY(3deg)\n\t}\n\t50% {\n\t\t-webkit-transform: translateX(0);\n\t\ttransform: translateX(0)\n\t}\n}\n\n@keyframes headShake {\n\t0% {\n\t\t-webkit-transform: translateX(0);\n\t\ttransform: translateX(0)\n\t}\n\t6.5% {\n\t\t-webkit-transform: translateX(-6px) rotateY(-9deg);\n\t\ttransform: translateX(-6px) rotateY(-9deg)\n\t}\n\t18.5% {\n\t\t-webkit-transform: translateX(5px) rotateY(7deg);\n\t\ttransform: translateX(5px) rotateY(7deg)\n\t}\n\t31.5% {\n\t\t-webkit-transform: translateX(-3px) rotateY(-5deg);\n\t\ttransform: translateX(-3px) rotateY(-5deg)\n\t}\n\t43.5% {\n\t\t-webkit-transform: translateX(2px) rotateY(3deg);\n\t\ttransform: translateX(2px) rotateY(3deg)\n\t}\n\t50% {\n\t\t-webkit-transform: translateX(0);\n\t\ttransform: translateX(0)\n\t}\n}\n\n.headShake {\n\t-webkit-animation-timing-function: ease-in-out;\n\tanimation-timing-function: ease-in-out;\n\t-webkit-animation-name: headShake;\n\tanimation-name: headShake\n}\n\n@-webkit-keyframes swing {\n\t20% {\n\t\t-webkit-transform: rotate(15deg);\n\t\ttransform: rotate(15deg)\n\t}\n\t40% {\n\t\t-webkit-transform: rotate(-10deg);\n\t\ttransform: rotate(-10deg)\n\t}\n\t60% {\n\t\t-webkit-transform: rotate(5deg);\n\t\ttransform: rotate(5deg)\n\t}\n\t80% {\n\t\t-webkit-transform: rotate(-5deg);\n\t\ttransform: rotate(-5deg)\n\t}\n\tto {\n\t\t-webkit-transform: rotate(0deg);\n\t\ttransform: rotate(0deg)\n\t}\n}\n\n@keyframes swing {\n\t20% {\n\t\t-webkit-transform: rotate(15deg);\n\t\ttransform: rotate(15deg)\n\t}\n\t40% {\n\t\t-webkit-transform: rotate(-10deg);\n\t\ttransform: rotate(-10deg)\n\t}\n\t60% {\n\t\t-webkit-transform: rotate(5deg);\n\t\ttransform: rotate(5deg)\n\t}\n\t80% {\n\t\t-webkit-transform: rotate(-5deg);\n\t\ttransform: rotate(-5deg)\n\t}\n\tto {\n\t\t-webkit-transform: rotate(0deg);\n\t\ttransform: rotate(0deg)\n\t}\n}\n\n.swing {\n\t-webkit-transform-origin: top center;\n\ttransform-origin: top center;\n\t-webkit-animation-name: swing;\n\tanimation-name: swing\n}\n\n@-webkit-keyframes tada {\n\t0% {\n\t\t-webkit-transform: scaleX(1);\n\t\ttransform: scaleX(1)\n\t}\n\t10%,\n\t20% {\n\t\t-webkit-transform: scale3d(.9, .9, .9) rotate(-3deg);\n\t\ttransform: scale3d(.9, .9, .9) rotate(-3deg)\n\t}\n\t30%,\n\t50%,\n\t70%,\n\t90% {\n\t\t-webkit-transform: scale3d(1.1, 1.1, 1.1) rotate(3deg);\n\t\ttransform: scale3d(1.1, 1.1, 1.1) rotate(3deg)\n\t}\n\t40%,\n\t60%,\n\t80% {\n\t\t-webkit-transform: scale3d(1.1, 1.1, 1.1) rotate(-3deg);\n\t\ttransform: scale3d(1.1, 1.1, 1.1) rotate(-3deg)\n\t}\n\tto {\n\t\t-webkit-transform: scaleX(1);\n\t\ttransform: scaleX(1)\n\t}\n}\n\n@keyframes tada {\n\t0% {\n\t\t-webkit-transform: scaleX(1);\n\t\ttransform: scaleX(1)\n\t}\n\t10%,\n\t20% {\n\t\t-webkit-transform: scale3d(.9, .9, .9) rotate(-3deg);\n\t\ttransform: scale3d(.9, .9, .9) rotate(-3deg)\n\t}\n\t30%,\n\t50%,\n\t70%,\n\t90% {\n\t\t-webkit-transform: scale3d(1.1, 1.1, 1.1) rotate(3deg);\n\t\ttransform: scale3d(1.1, 1.1, 1.1) rotate(3deg)\n\t}\n\t40%,\n\t60%,\n\t80% {\n\t\t-webkit-transform: scale3d(1.1, 1.1, 1.1) rotate(-3deg);\n\t\ttransform: scale3d(1.1, 1.1, 1.1) rotate(-3deg)\n\t}\n\tto {\n\t\t-webkit-transform: scaleX(1);\n\t\ttransform: scaleX(1)\n\t}\n}\n\n.tada {\n\t-webkit-animation-name: tada;\n\tanimation-name: tada\n}\n\n@-webkit-keyframes wobble {\n\t0% {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n\t15% {\n\t\t-webkit-transform: translate3d(-25%, 0, 0) rotate(-5deg);\n\t\ttransform: translate3d(-25%, 0, 0) rotate(-5deg)\n\t}\n\t30% {\n\t\t-webkit-transform: translate3d(20%, 0, 0) rotate(3deg);\n\t\ttransform: translate3d(20%, 0, 0) rotate(3deg)\n\t}\n\t45% {\n\t\t-webkit-transform: translate3d(-15%, 0, 0) rotate(-3deg);\n\t\ttransform: translate3d(-15%, 0, 0) rotate(-3deg)\n\t}\n\t60% {\n\t\t-webkit-transform: translate3d(10%, 0, 0) rotate(2deg);\n\t\ttransform: translate3d(10%, 0, 0) rotate(2deg)\n\t}\n\t75% {\n\t\t-webkit-transform: translate3d(-5%, 0, 0) rotate(-1deg);\n\t\ttransform: translate3d(-5%, 0, 0) rotate(-1deg)\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes wobble {\n\t0% {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n\t15% {\n\t\t-webkit-transform: translate3d(-25%, 0, 0) rotate(-5deg);\n\t\ttransform: translate3d(-25%, 0, 0) rotate(-5deg)\n\t}\n\t30% {\n\t\t-webkit-transform: translate3d(20%, 0, 0) rotate(3deg);\n\t\ttransform: translate3d(20%, 0, 0) rotate(3deg)\n\t}\n\t45% {\n\t\t-webkit-transform: translate3d(-15%, 0, 0) rotate(-3deg);\n\t\ttransform: translate3d(-15%, 0, 0) rotate(-3deg)\n\t}\n\t60% {\n\t\t-webkit-transform: translate3d(10%, 0, 0) rotate(2deg);\n\t\ttransform: translate3d(10%, 0, 0) rotate(2deg)\n\t}\n\t75% {\n\t\t-webkit-transform: translate3d(-5%, 0, 0) rotate(-1deg);\n\t\ttransform: translate3d(-5%, 0, 0) rotate(-1deg)\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.wobble {\n\t-webkit-animation-name: wobble;\n\tanimation-name: wobble\n}\n\n@-webkit-keyframes jello {\n\t0%,\n\t11.1%,\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n\t22.2% {\n\t\t-webkit-transform: skewX(-12.5deg) skewY(-12.5deg);\n\t\ttransform: skewX(-12.5deg) skewY(-12.5deg)\n\t}\n\t33.3% {\n\t\t-webkit-transform: skewX(6.25deg) skewY(6.25deg);\n\t\ttransform: skewX(6.25deg) skewY(6.25deg)\n\t}\n\t44.4% {\n\t\t-webkit-transform: skewX(-3.125deg) skewY(-3.125deg);\n\t\ttransform: skewX(-3.125deg) skewY(-3.125deg)\n\t}\n\t55.5% {\n\t\t-webkit-transform: skewX(1.5625deg) skewY(1.5625deg);\n\t\ttransform: skewX(1.5625deg) skewY(1.5625deg)\n\t}\n\t66.6% {\n\t\t-webkit-transform: skewX(-.78125deg) skewY(-.78125deg);\n\t\ttransform: skewX(-.78125deg) skewY(-.78125deg)\n\t}\n\t77.7% {\n\t\t-webkit-transform: skewX(.390625deg) skewY(.390625deg);\n\t\ttransform: skewX(.390625deg) skewY(.390625deg)\n\t}\n\t88.8% {\n\t\t-webkit-transform: skewX(-.1953125deg) skewY(-.1953125deg);\n\t\ttransform: skewX(-.1953125deg) skewY(-.1953125deg)\n\t}\n}\n\n@keyframes jello {\n\t0%,\n\t11.1%,\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n\t22.2% {\n\t\t-webkit-transform: skewX(-12.5deg) skewY(-12.5deg);\n\t\ttransform: skewX(-12.5deg) skewY(-12.5deg)\n\t}\n\t33.3% {\n\t\t-webkit-transform: skewX(6.25deg) skewY(6.25deg);\n\t\ttransform: skewX(6.25deg) skewY(6.25deg)\n\t}\n\t44.4% {\n\t\t-webkit-transform: skewX(-3.125deg) skewY(-3.125deg);\n\t\ttransform: skewX(-3.125deg) skewY(-3.125deg)\n\t}\n\t55.5% {\n\t\t-webkit-transform: skewX(1.5625deg) skewY(1.5625deg);\n\t\ttransform: skewX(1.5625deg) skewY(1.5625deg)\n\t}\n\t66.6% {\n\t\t-webkit-transform: skewX(-.78125deg) skewY(-.78125deg);\n\t\ttransform: skewX(-.78125deg) skewY(-.78125deg)\n\t}\n\t77.7% {\n\t\t-webkit-transform: skewX(.390625deg) skewY(.390625deg);\n\t\ttransform: skewX(.390625deg) skewY(.390625deg)\n\t}\n\t88.8% {\n\t\t-webkit-transform: skewX(-.1953125deg) skewY(-.1953125deg);\n\t\ttransform: skewX(-.1953125deg) skewY(-.1953125deg)\n\t}\n}\n\n.jello {\n\t-webkit-animation-name: jello;\n\tanimation-name: jello;\n\t-webkit-transform-origin: center;\n\ttransform-origin: center\n}\n\n@-webkit-keyframes heartBeat {\n\t0% {\n\t\t-webkit-transform: scale(1);\n\t\ttransform: scale(1)\n\t}\n\t14% {\n\t\t-webkit-transform: scale(1.3);\n\t\ttransform: scale(1.3)\n\t}\n\t28% {\n\t\t-webkit-transform: scale(1);\n\t\ttransform: scale(1)\n\t}\n\t42% {\n\t\t-webkit-transform: scale(1.3);\n\t\ttransform: scale(1.3)\n\t}\n\t70% {\n\t\t-webkit-transform: scale(1);\n\t\ttransform: scale(1)\n\t}\n}\n\n@keyframes heartBeat {\n\t0% {\n\t\t-webkit-transform: scale(1);\n\t\ttransform: scale(1)\n\t}\n\t14% {\n\t\t-webkit-transform: scale(1.3);\n\t\ttransform: scale(1.3)\n\t}\n\t28% {\n\t\t-webkit-transform: scale(1);\n\t\ttransform: scale(1)\n\t}\n\t42% {\n\t\t-webkit-transform: scale(1.3);\n\t\ttransform: scale(1.3)\n\t}\n\t70% {\n\t\t-webkit-transform: scale(1);\n\t\ttransform: scale(1)\n\t}\n}\n\n.heartBeat {\n\t-webkit-animation-name: heartBeat;\n\tanimation-name: heartBeat;\n\t-webkit-animation-duration: 1.3s;\n\tanimation-duration: 1.3s;\n\t-webkit-animation-timing-function: ease-in-out;\n\tanimation-timing-function: ease-in-out\n}\n\n@-webkit-keyframes bounceIn {\n\t0%,\n\t20%,\n\t40%,\n\t60%,\n\t80%,\n\tto {\n\t\t-webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n\t\tanimation-timing-function: cubic-bezier(.215, .61, .355, 1)\n\t}\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.3, .3, .3);\n\t\ttransform: scale3d(.3, .3, .3)\n\t}\n\t20% {\n\t\t-webkit-transform: scale3d(1.1, 1.1, 1.1);\n\t\ttransform: scale3d(1.1, 1.1, 1.1)\n\t}\n\t40% {\n\t\t-webkit-transform: scale3d(.9, .9, .9);\n\t\ttransform: scale3d(.9, .9, .9)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(1.03, 1.03, 1.03);\n\t\ttransform: scale3d(1.03, 1.03, 1.03)\n\t}\n\t80% {\n\t\t-webkit-transform: scale3d(.97, .97, .97);\n\t\ttransform: scale3d(.97, .97, .97)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: scaleX(1);\n\t\ttransform: scaleX(1)\n\t}\n}\n\n@keyframes bounceIn {\n\t0%,\n\t20%,\n\t40%,\n\t60%,\n\t80%,\n\tto {\n\t\t-webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n\t\tanimation-timing-function: cubic-bezier(.215, .61, .355, 1)\n\t}\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.3, .3, .3);\n\t\ttransform: scale3d(.3, .3, .3)\n\t}\n\t20% {\n\t\t-webkit-transform: scale3d(1.1, 1.1, 1.1);\n\t\ttransform: scale3d(1.1, 1.1, 1.1)\n\t}\n\t40% {\n\t\t-webkit-transform: scale3d(.9, .9, .9);\n\t\ttransform: scale3d(.9, .9, .9)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(1.03, 1.03, 1.03);\n\t\ttransform: scale3d(1.03, 1.03, 1.03)\n\t}\n\t80% {\n\t\t-webkit-transform: scale3d(.97, .97, .97);\n\t\ttransform: scale3d(.97, .97, .97)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: scaleX(1);\n\t\ttransform: scaleX(1)\n\t}\n}\n\n.bounceIn {\n\t-webkit-animation-duration: .75s;\n\tanimation-duration: .75s;\n\t-webkit-animation-name: bounceIn;\n\tanimation-name: bounceIn\n}\n\n@-webkit-keyframes bounceInDown {\n\t0%,\n\t60%,\n\t75%,\n\t90%,\n\tto {\n\t\t-webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n\t\tanimation-timing-function: cubic-bezier(.215, .61, .355, 1)\n\t}\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, -3000px, 0);\n\t\ttransform: translate3d(0, -3000px, 0)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: translate3d(0, 25px, 0);\n\t\ttransform: translate3d(0, 25px, 0)\n\t}\n\t75% {\n\t\t-webkit-transform: translate3d(0, -10px, 0);\n\t\ttransform: translate3d(0, -10px, 0)\n\t}\n\t90% {\n\t\t-webkit-transform: translate3d(0, 5px, 0);\n\t\ttransform: translate3d(0, 5px, 0)\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes bounceInDown {\n\t0%,\n\t60%,\n\t75%,\n\t90%,\n\tto {\n\t\t-webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n\t\tanimation-timing-function: cubic-bezier(.215, .61, .355, 1)\n\t}\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, -3000px, 0);\n\t\ttransform: translate3d(0, -3000px, 0)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: translate3d(0, 25px, 0);\n\t\ttransform: translate3d(0, 25px, 0)\n\t}\n\t75% {\n\t\t-webkit-transform: translate3d(0, -10px, 0);\n\t\ttransform: translate3d(0, -10px, 0)\n\t}\n\t90% {\n\t\t-webkit-transform: translate3d(0, 5px, 0);\n\t\ttransform: translate3d(0, 5px, 0)\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.bounceInDown {\n\t-webkit-animation-name: bounceInDown;\n\tanimation-name: bounceInDown\n}\n\n@-webkit-keyframes bounceInLeft {\n\t0%,\n\t60%,\n\t75%,\n\t90%,\n\tto {\n\t\t-webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n\t\tanimation-timing-function: cubic-bezier(.215, .61, .355, 1)\n\t}\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(-3000px, 0, 0);\n\t\ttransform: translate3d(-3000px, 0, 0)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: translate3d(25px, 0, 0);\n\t\ttransform: translate3d(25px, 0, 0)\n\t}\n\t75% {\n\t\t-webkit-transform: translate3d(-10px, 0, 0);\n\t\ttransform: translate3d(-10px, 0, 0)\n\t}\n\t90% {\n\t\t-webkit-transform: translate3d(5px, 0, 0);\n\t\ttransform: translate3d(5px, 0, 0)\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes bounceInLeft {\n\t0%,\n\t60%,\n\t75%,\n\t90%,\n\tto {\n\t\t-webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n\t\tanimation-timing-function: cubic-bezier(.215, .61, .355, 1)\n\t}\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(-3000px, 0, 0);\n\t\ttransform: translate3d(-3000px, 0, 0)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: translate3d(25px, 0, 0);\n\t\ttransform: translate3d(25px, 0, 0)\n\t}\n\t75% {\n\t\t-webkit-transform: translate3d(-10px, 0, 0);\n\t\ttransform: translate3d(-10px, 0, 0)\n\t}\n\t90% {\n\t\t-webkit-transform: translate3d(5px, 0, 0);\n\t\ttransform: translate3d(5px, 0, 0)\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.bounceInLeft {\n\t-webkit-animation-name: bounceInLeft;\n\tanimation-name: bounceInLeft\n}\n\n@-webkit-keyframes bounceInRight {\n\t0%,\n\t60%,\n\t75%,\n\t90%,\n\tto {\n\t\t-webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n\t\tanimation-timing-function: cubic-bezier(.215, .61, .355, 1)\n\t}\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(3000px, 0, 0);\n\t\ttransform: translate3d(3000px, 0, 0)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: translate3d(-25px, 0, 0);\n\t\ttransform: translate3d(-25px, 0, 0)\n\t}\n\t75% {\n\t\t-webkit-transform: translate3d(10px, 0, 0);\n\t\ttransform: translate3d(10px, 0, 0)\n\t}\n\t90% {\n\t\t-webkit-transform: translate3d(-5px, 0, 0);\n\t\ttransform: translate3d(-5px, 0, 0)\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes bounceInRight {\n\t0%,\n\t60%,\n\t75%,\n\t90%,\n\tto {\n\t\t-webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n\t\tanimation-timing-function: cubic-bezier(.215, .61, .355, 1)\n\t}\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(3000px, 0, 0);\n\t\ttransform: translate3d(3000px, 0, 0)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: translate3d(-25px, 0, 0);\n\t\ttransform: translate3d(-25px, 0, 0)\n\t}\n\t75% {\n\t\t-webkit-transform: translate3d(10px, 0, 0);\n\t\ttransform: translate3d(10px, 0, 0)\n\t}\n\t90% {\n\t\t-webkit-transform: translate3d(-5px, 0, 0);\n\t\ttransform: translate3d(-5px, 0, 0)\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.bounceInRight {\n\t-webkit-animation-name: bounceInRight;\n\tanimation-name: bounceInRight\n}\n\n@-webkit-keyframes bounceInUp {\n\t0%,\n\t60%,\n\t75%,\n\t90%,\n\tto {\n\t\t-webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n\t\tanimation-timing-function: cubic-bezier(.215, .61, .355, 1)\n\t}\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, 3000px, 0);\n\t\ttransform: translate3d(0, 3000px, 0)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: translate3d(0, -20px, 0);\n\t\ttransform: translate3d(0, -20px, 0)\n\t}\n\t75% {\n\t\t-webkit-transform: translate3d(0, 10px, 0);\n\t\ttransform: translate3d(0, 10px, 0)\n\t}\n\t90% {\n\t\t-webkit-transform: translate3d(0, -5px, 0);\n\t\ttransform: translate3d(0, -5px, 0)\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes bounceInUp {\n\t0%,\n\t60%,\n\t75%,\n\t90%,\n\tto {\n\t\t-webkit-animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n\t\tanimation-timing-function: cubic-bezier(.215, .61, .355, 1)\n\t}\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, 3000px, 0);\n\t\ttransform: translate3d(0, 3000px, 0)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: translate3d(0, -20px, 0);\n\t\ttransform: translate3d(0, -20px, 0)\n\t}\n\t75% {\n\t\t-webkit-transform: translate3d(0, 10px, 0);\n\t\ttransform: translate3d(0, 10px, 0)\n\t}\n\t90% {\n\t\t-webkit-transform: translate3d(0, -5px, 0);\n\t\ttransform: translate3d(0, -5px, 0)\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.bounceInUp {\n\t-webkit-animation-name: bounceInUp;\n\tanimation-name: bounceInUp\n}\n\n@-webkit-keyframes bounceOut {\n\t20% {\n\t\t-webkit-transform: scale3d(.9, .9, .9);\n\t\ttransform: scale3d(.9, .9, .9)\n\t}\n\t50%,\n\t55% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(1.1, 1.1, 1.1);\n\t\ttransform: scale3d(1.1, 1.1, 1.1)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.3, .3, .3);\n\t\ttransform: scale3d(.3, .3, .3)\n\t}\n}\n\n@keyframes bounceOut {\n\t20% {\n\t\t-webkit-transform: scale3d(.9, .9, .9);\n\t\ttransform: scale3d(.9, .9, .9)\n\t}\n\t50%,\n\t55% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(1.1, 1.1, 1.1);\n\t\ttransform: scale3d(1.1, 1.1, 1.1)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.3, .3, .3);\n\t\ttransform: scale3d(.3, .3, .3)\n\t}\n}\n\n.bounceOut {\n\t-webkit-animation-duration: .75s;\n\tanimation-duration: .75s;\n\t-webkit-animation-name: bounceOut;\n\tanimation-name: bounceOut\n}\n\n@-webkit-keyframes bounceOutDown {\n\t20% {\n\t\t-webkit-transform: translate3d(0, 10px, 0);\n\t\ttransform: translate3d(0, 10px, 0)\n\t}\n\t40%,\n\t45% {\n\t\topacity: 1;\n\t\t-webkit-transform: translate3d(0, -20px, 0);\n\t\ttransform: translate3d(0, -20px, 0)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, 2000px, 0);\n\t\ttransform: translate3d(0, 2000px, 0)\n\t}\n}\n\n@keyframes bounceOutDown {\n\t20% {\n\t\t-webkit-transform: translate3d(0, 10px, 0);\n\t\ttransform: translate3d(0, 10px, 0)\n\t}\n\t40%,\n\t45% {\n\t\topacity: 1;\n\t\t-webkit-transform: translate3d(0, -20px, 0);\n\t\ttransform: translate3d(0, -20px, 0)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, 2000px, 0);\n\t\ttransform: translate3d(0, 2000px, 0)\n\t}\n}\n\n.bounceOutDown {\n\t-webkit-animation-name: bounceOutDown;\n\tanimation-name: bounceOutDown\n}\n\n@-webkit-keyframes bounceOutLeft {\n\t20% {\n\t\topacity: 1;\n\t\t-webkit-transform: translate3d(20px, 0, 0);\n\t\ttransform: translate3d(20px, 0, 0)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(-2000px, 0, 0);\n\t\ttransform: translate3d(-2000px, 0, 0)\n\t}\n}\n\n@keyframes bounceOutLeft {\n\t20% {\n\t\topacity: 1;\n\t\t-webkit-transform: translate3d(20px, 0, 0);\n\t\ttransform: translate3d(20px, 0, 0)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(-2000px, 0, 0);\n\t\ttransform: translate3d(-2000px, 0, 0)\n\t}\n}\n\n.bounceOutLeft {\n\t-webkit-animation-name: bounceOutLeft;\n\tanimation-name: bounceOutLeft\n}\n\n@-webkit-keyframes bounceOutRight {\n\t20% {\n\t\topacity: 1;\n\t\t-webkit-transform: translate3d(-20px, 0, 0);\n\t\ttransform: translate3d(-20px, 0, 0)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(2000px, 0, 0);\n\t\ttransform: translate3d(2000px, 0, 0)\n\t}\n}\n\n@keyframes bounceOutRight {\n\t20% {\n\t\topacity: 1;\n\t\t-webkit-transform: translate3d(-20px, 0, 0);\n\t\ttransform: translate3d(-20px, 0, 0)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(2000px, 0, 0);\n\t\ttransform: translate3d(2000px, 0, 0)\n\t}\n}\n\n.bounceOutRight {\n\t-webkit-animation-name: bounceOutRight;\n\tanimation-name: bounceOutRight\n}\n\n@-webkit-keyframes bounceOutUp {\n\t20% {\n\t\t-webkit-transform: translate3d(0, -10px, 0);\n\t\ttransform: translate3d(0, -10px, 0)\n\t}\n\t40%,\n\t45% {\n\t\topacity: 1;\n\t\t-webkit-transform: translate3d(0, 20px, 0);\n\t\ttransform: translate3d(0, 20px, 0)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, -2000px, 0);\n\t\ttransform: translate3d(0, -2000px, 0)\n\t}\n}\n\n@keyframes bounceOutUp {\n\t20% {\n\t\t-webkit-transform: translate3d(0, -10px, 0);\n\t\ttransform: translate3d(0, -10px, 0)\n\t}\n\t40%,\n\t45% {\n\t\topacity: 1;\n\t\t-webkit-transform: translate3d(0, 20px, 0);\n\t\ttransform: translate3d(0, 20px, 0)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, -2000px, 0);\n\t\ttransform: translate3d(0, -2000px, 0)\n\t}\n}\n\n.bounceOutUp {\n\t-webkit-animation-name: bounceOutUp;\n\tanimation-name: bounceOutUp\n}\n\n@-webkit-keyframes fadeIn {\n\t0% {\n\t\topacity: 0\n\t}\n\tto {\n\t\topacity: 1\n\t}\n}\n\n@keyframes fadeIn {\n\t0% {\n\t\topacity: 0\n\t}\n\tto {\n\t\topacity: 1\n\t}\n}\n\n.fadeIn {\n\t-webkit-animation-name: fadeIn;\n\tanimation-name: fadeIn\n}\n\n@-webkit-keyframes fadeInDown {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, -100%, 0);\n\t\ttransform: translate3d(0, -100%, 0)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes fadeInDown {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, -100%, 0);\n\t\ttransform: translate3d(0, -100%, 0)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.fadeInDown {\n\t-webkit-animation-name: fadeInDown;\n\tanimation-name: fadeInDown\n}\n\n@-webkit-keyframes fadeInDownBig {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, -2000px, 0);\n\t\ttransform: translate3d(0, -2000px, 0)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes fadeInDownBig {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, -2000px, 0);\n\t\ttransform: translate3d(0, -2000px, 0)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.fadeInDownBig {\n\t-webkit-animation-name: fadeInDownBig;\n\tanimation-name: fadeInDownBig\n}\n\n@-webkit-keyframes fadeInLeft {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(-100%, 0, 0);\n\t\ttransform: translate3d(-100%, 0, 0)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes fadeInLeft {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(-100%, 0, 0);\n\t\ttransform: translate3d(-100%, 0, 0)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.fadeInLeft {\n\t-webkit-animation-name: fadeInLeft;\n\tanimation-name: fadeInLeft\n}\n\n@-webkit-keyframes fadeInLeftBig {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(-2000px, 0, 0);\n\t\ttransform: translate3d(-2000px, 0, 0)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes fadeInLeftBig {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(-2000px, 0, 0);\n\t\ttransform: translate3d(-2000px, 0, 0)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.fadeInLeftBig {\n\t-webkit-animation-name: fadeInLeftBig;\n\tanimation-name: fadeInLeftBig\n}\n\n@-webkit-keyframes fadeInRight {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(100%, 0, 0);\n\t\ttransform: translate3d(100%, 0, 0)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes fadeInRight {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(100%, 0, 0);\n\t\ttransform: translate3d(100%, 0, 0)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.fadeInRight {\n\t-webkit-animation-name: fadeInRight;\n\tanimation-name: fadeInRight\n}\n\n@-webkit-keyframes fadeInRightBig {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(2000px, 0, 0);\n\t\ttransform: translate3d(2000px, 0, 0)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes fadeInRightBig {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(2000px, 0, 0);\n\t\ttransform: translate3d(2000px, 0, 0)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.fadeInRightBig {\n\t-webkit-animation-name: fadeInRightBig;\n\tanimation-name: fadeInRightBig\n}\n\n@-webkit-keyframes fadeInUp {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, 100%, 0);\n\t\ttransform: translate3d(0, 100%, 0)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes fadeInUp {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, 100%, 0);\n\t\ttransform: translate3d(0, 100%, 0)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.fadeInUp {\n\t-webkit-animation-name: fadeInUp;\n\tanimation-name: fadeInUp\n}\n\n@-webkit-keyframes fadeInUpBig {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, 2000px, 0);\n\t\ttransform: translate3d(0, 2000px, 0)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes fadeInUpBig {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, 2000px, 0);\n\t\ttransform: translate3d(0, 2000px, 0)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.fadeInUpBig {\n\t-webkit-animation-name: fadeInUpBig;\n\tanimation-name: fadeInUpBig\n}\n\n@-webkit-keyframes fadeOut {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0\n\t}\n}\n\n@keyframes fadeOut {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0\n\t}\n}\n\n.fadeOut {\n\t-webkit-animation-name: fadeOut;\n\tanimation-name: fadeOut\n}\n\n@-webkit-keyframes fadeOutDown {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, 100%, 0);\n\t\ttransform: translate3d(0, 100%, 0)\n\t}\n}\n\n@keyframes fadeOutDown {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, 100%, 0);\n\t\ttransform: translate3d(0, 100%, 0)\n\t}\n}\n\n.fadeOutDown {\n\t-webkit-animation-name: fadeOutDown;\n\tanimation-name: fadeOutDown\n}\n\n@-webkit-keyframes fadeOutDownBig {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, 2000px, 0);\n\t\ttransform: translate3d(0, 2000px, 0)\n\t}\n}\n\n@keyframes fadeOutDownBig {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, 2000px, 0);\n\t\ttransform: translate3d(0, 2000px, 0)\n\t}\n}\n\n.fadeOutDownBig {\n\t-webkit-animation-name: fadeOutDownBig;\n\tanimation-name: fadeOutDownBig\n}\n\n@-webkit-keyframes fadeOutLeft {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(-100%, 0, 0);\n\t\ttransform: translate3d(-100%, 0, 0)\n\t}\n}\n\n@keyframes fadeOutLeft {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(-100%, 0, 0);\n\t\ttransform: translate3d(-100%, 0, 0)\n\t}\n}\n\n.fadeOutLeft {\n\t-webkit-animation-name: fadeOutLeft;\n\tanimation-name: fadeOutLeft\n}\n\n@-webkit-keyframes fadeOutLeftBig {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(-2000px, 0, 0);\n\t\ttransform: translate3d(-2000px, 0, 0)\n\t}\n}\n\n@keyframes fadeOutLeftBig {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(-2000px, 0, 0);\n\t\ttransform: translate3d(-2000px, 0, 0)\n\t}\n}\n\n.fadeOutLeftBig {\n\t-webkit-animation-name: fadeOutLeftBig;\n\tanimation-name: fadeOutLeftBig\n}\n\n@-webkit-keyframes fadeOutRight {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(100%, 0, 0);\n\t\ttransform: translate3d(100%, 0, 0)\n\t}\n}\n\n@keyframes fadeOutRight {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(100%, 0, 0);\n\t\ttransform: translate3d(100%, 0, 0)\n\t}\n}\n\n.fadeOutRight {\n\t-webkit-animation-name: fadeOutRight;\n\tanimation-name: fadeOutRight\n}\n\n@-webkit-keyframes fadeOutRightBig {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(2000px, 0, 0);\n\t\ttransform: translate3d(2000px, 0, 0)\n\t}\n}\n\n@keyframes fadeOutRightBig {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(2000px, 0, 0);\n\t\ttransform: translate3d(2000px, 0, 0)\n\t}\n}\n\n.fadeOutRightBig {\n\t-webkit-animation-name: fadeOutRightBig;\n\tanimation-name: fadeOutRightBig\n}\n\n@-webkit-keyframes fadeOutUp {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, -100%, 0);\n\t\ttransform: translate3d(0, -100%, 0)\n\t}\n}\n\n@keyframes fadeOutUp {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, -100%, 0);\n\t\ttransform: translate3d(0, -100%, 0)\n\t}\n}\n\n.fadeOutUp {\n\t-webkit-animation-name: fadeOutUp;\n\tanimation-name: fadeOutUp\n}\n\n@-webkit-keyframes fadeOutUpBig {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, -2000px, 0);\n\t\ttransform: translate3d(0, -2000px, 0)\n\t}\n}\n\n@keyframes fadeOutUpBig {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(0, -2000px, 0);\n\t\ttransform: translate3d(0, -2000px, 0)\n\t}\n}\n\n.fadeOutUpBig {\n\t-webkit-animation-name: fadeOutUpBig;\n\tanimation-name: fadeOutUpBig\n}\n\n@-webkit-keyframes flip {\n\t0% {\n\t\t-webkit-transform: perspective(400px) scaleX(1) translateZ(0) rotateY(-1turn);\n\t\ttransform: perspective(400px) scaleX(1) translateZ(0) rotateY(-1turn);\n\t\t-webkit-animation-timing-function: ease-out;\n\t\tanimation-timing-function: ease-out\n\t}\n\t40% {\n\t\t-webkit-transform: perspective(400px) scaleX(1) translateZ(150px) rotateY(-190deg);\n\t\ttransform: perspective(400px) scaleX(1) translateZ(150px) rotateY(-190deg);\n\t\t-webkit-animation-timing-function: ease-out;\n\t\tanimation-timing-function: ease-out\n\t}\n\t50% {\n\t\t-webkit-transform: perspective(400px) scaleX(1) translateZ(150px) rotateY(-170deg);\n\t\ttransform: perspective(400px) scaleX(1) translateZ(150px) rotateY(-170deg);\n\t\t-webkit-animation-timing-function: ease-in;\n\t\tanimation-timing-function: ease-in\n\t}\n\t80% {\n\t\t-webkit-transform: perspective(400px) scale3d(.95, .95, .95) translateZ(0) rotateY(0deg);\n\t\ttransform: perspective(400px) scale3d(.95, .95, .95) translateZ(0) rotateY(0deg);\n\t\t-webkit-animation-timing-function: ease-in;\n\t\tanimation-timing-function: ease-in\n\t}\n\tto {\n\t\t-webkit-transform: perspective(400px) scaleX(1) translateZ(0) rotateY(0deg);\n\t\ttransform: perspective(400px) scaleX(1) translateZ(0) rotateY(0deg);\n\t\t-webkit-animation-timing-function: ease-in;\n\t\tanimation-timing-function: ease-in\n\t}\n}\n\n@keyframes flip {\n\t0% {\n\t\t-webkit-transform: perspective(400px) scaleX(1) translateZ(0) rotateY(-1turn);\n\t\ttransform: perspective(400px) scaleX(1) translateZ(0) rotateY(-1turn);\n\t\t-webkit-animation-timing-function: ease-out;\n\t\tanimation-timing-function: ease-out\n\t}\n\t40% {\n\t\t-webkit-transform: perspective(400px) scaleX(1) translateZ(150px) rotateY(-190deg);\n\t\ttransform: perspective(400px) scaleX(1) translateZ(150px) rotateY(-190deg);\n\t\t-webkit-animation-timing-function: ease-out;\n\t\tanimation-timing-function: ease-out\n\t}\n\t50% {\n\t\t-webkit-transform: perspective(400px) scaleX(1) translateZ(150px) rotateY(-170deg);\n\t\ttransform: perspective(400px) scaleX(1) translateZ(150px) rotateY(-170deg);\n\t\t-webkit-animation-timing-function: ease-in;\n\t\tanimation-timing-function: ease-in\n\t}\n\t80% {\n\t\t-webkit-transform: perspective(400px) scale3d(.95, .95, .95) translateZ(0) rotateY(0deg);\n\t\ttransform: perspective(400px) scale3d(.95, .95, .95) translateZ(0) rotateY(0deg);\n\t\t-webkit-animation-timing-function: ease-in;\n\t\tanimation-timing-function: ease-in\n\t}\n\tto {\n\t\t-webkit-transform: perspective(400px) scaleX(1) translateZ(0) rotateY(0deg);\n\t\ttransform: perspective(400px) scaleX(1) translateZ(0) rotateY(0deg);\n\t\t-webkit-animation-timing-function: ease-in;\n\t\tanimation-timing-function: ease-in\n\t}\n}\n\n.animated.flip {\n\t-webkit-backface-visibility: visible;\n\tbackface-visibility: visible;\n\t-webkit-animation-name: flip;\n\tanimation-name: flip\n}\n\n@-webkit-keyframes flipInX {\n\t0% {\n\t\t-webkit-transform: perspective(400px) rotateX(90deg);\n\t\ttransform: perspective(400px) rotateX(90deg);\n\t\t-webkit-animation-timing-function: ease-in;\n\t\tanimation-timing-function: ease-in;\n\t\topacity: 0\n\t}\n\t40% {\n\t\t-webkit-transform: perspective(400px) rotateX(-20deg);\n\t\ttransform: perspective(400px) rotateX(-20deg);\n\t\t-webkit-animation-timing-function: ease-in;\n\t\tanimation-timing-function: ease-in\n\t}\n\t60% {\n\t\t-webkit-transform: perspective(400px) rotateX(10deg);\n\t\ttransform: perspective(400px) rotateX(10deg);\n\t\topacity: 1\n\t}\n\t80% {\n\t\t-webkit-transform: perspective(400px) rotateX(-5deg);\n\t\ttransform: perspective(400px) rotateX(-5deg)\n\t}\n\tto {\n\t\t-webkit-transform: perspective(400px);\n\t\ttransform: perspective(400px)\n\t}\n}\n\n@keyframes flipInX {\n\t0% {\n\t\t-webkit-transform: perspective(400px) rotateX(90deg);\n\t\ttransform: perspective(400px) rotateX(90deg);\n\t\t-webkit-animation-timing-function: ease-in;\n\t\tanimation-timing-function: ease-in;\n\t\topacity: 0\n\t}\n\t40% {\n\t\t-webkit-transform: perspective(400px) rotateX(-20deg);\n\t\ttransform: perspective(400px) rotateX(-20deg);\n\t\t-webkit-animation-timing-function: ease-in;\n\t\tanimation-timing-function: ease-in\n\t}\n\t60% {\n\t\t-webkit-transform: perspective(400px) rotateX(10deg);\n\t\ttransform: perspective(400px) rotateX(10deg);\n\t\topacity: 1\n\t}\n\t80% {\n\t\t-webkit-transform: perspective(400px) rotateX(-5deg);\n\t\ttransform: perspective(400px) rotateX(-5deg)\n\t}\n\tto {\n\t\t-webkit-transform: perspective(400px);\n\t\ttransform: perspective(400px)\n\t}\n}\n\n.flipInX {\n\t-webkit-backface-visibility: visible!important;\n\tbackface-visibility: visible!important;\n\t-webkit-animation-name: flipInX;\n\tanimation-name: flipInX\n}\n\n@-webkit-keyframes flipInY {\n\t0% {\n\t\t-webkit-transform: perspective(400px) rotateY(90deg);\n\t\ttransform: perspective(400px) rotateY(90deg);\n\t\t-webkit-animation-timing-function: ease-in;\n\t\tanimation-timing-function: ease-in;\n\t\topacity: 0\n\t}\n\t40% {\n\t\t-webkit-transform: perspective(400px) rotateY(-20deg);\n\t\ttransform: perspective(400px) rotateY(-20deg);\n\t\t-webkit-animation-timing-function: ease-in;\n\t\tanimation-timing-function: ease-in\n\t}\n\t60% {\n\t\t-webkit-transform: perspective(400px) rotateY(10deg);\n\t\ttransform: perspective(400px) rotateY(10deg);\n\t\topacity: 1\n\t}\n\t80% {\n\t\t-webkit-transform: perspective(400px) rotateY(-5deg);\n\t\ttransform: perspective(400px) rotateY(-5deg)\n\t}\n\tto {\n\t\t-webkit-transform: perspective(400px);\n\t\ttransform: perspective(400px)\n\t}\n}\n\n@keyframes flipInY {\n\t0% {\n\t\t-webkit-transform: perspective(400px) rotateY(90deg);\n\t\ttransform: perspective(400px) rotateY(90deg);\n\t\t-webkit-animation-timing-function: ease-in;\n\t\tanimation-timing-function: ease-in;\n\t\topacity: 0\n\t}\n\t40% {\n\t\t-webkit-transform: perspective(400px) rotateY(-20deg);\n\t\ttransform: perspective(400px) rotateY(-20deg);\n\t\t-webkit-animation-timing-function: ease-in;\n\t\tanimation-timing-function: ease-in\n\t}\n\t60% {\n\t\t-webkit-transform: perspective(400px) rotateY(10deg);\n\t\ttransform: perspective(400px) rotateY(10deg);\n\t\topacity: 1\n\t}\n\t80% {\n\t\t-webkit-transform: perspective(400px) rotateY(-5deg);\n\t\ttransform: perspective(400px) rotateY(-5deg)\n\t}\n\tto {\n\t\t-webkit-transform: perspective(400px);\n\t\ttransform: perspective(400px)\n\t}\n}\n\n.flipInY {\n\t-webkit-backface-visibility: visible!important;\n\tbackface-visibility: visible!important;\n\t-webkit-animation-name: flipInY;\n\tanimation-name: flipInY\n}\n\n@-webkit-keyframes flipOutX {\n\t0% {\n\t\t-webkit-transform: perspective(400px);\n\t\ttransform: perspective(400px)\n\t}\n\t30% {\n\t\t-webkit-transform: perspective(400px) rotateX(-20deg);\n\t\ttransform: perspective(400px) rotateX(-20deg);\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform: perspective(400px) rotateX(90deg);\n\t\ttransform: perspective(400px) rotateX(90deg);\n\t\topacity: 0\n\t}\n}\n\n@keyframes flipOutX {\n\t0% {\n\t\t-webkit-transform: perspective(400px);\n\t\ttransform: perspective(400px)\n\t}\n\t30% {\n\t\t-webkit-transform: perspective(400px) rotateX(-20deg);\n\t\ttransform: perspective(400px) rotateX(-20deg);\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform: perspective(400px) rotateX(90deg);\n\t\ttransform: perspective(400px) rotateX(90deg);\n\t\topacity: 0\n\t}\n}\n\n.flipOutX {\n\t-webkit-animation-duration: .75s;\n\tanimation-duration: .75s;\n\t-webkit-animation-name: flipOutX;\n\tanimation-name: flipOutX;\n\t-webkit-backface-visibility: visible!important;\n\tbackface-visibility: visible!important\n}\n\n@-webkit-keyframes flipOutY {\n\t0% {\n\t\t-webkit-transform: perspective(400px);\n\t\ttransform: perspective(400px)\n\t}\n\t30% {\n\t\t-webkit-transform: perspective(400px) rotateY(-15deg);\n\t\ttransform: perspective(400px) rotateY(-15deg);\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform: perspective(400px) rotateY(90deg);\n\t\ttransform: perspective(400px) rotateY(90deg);\n\t\topacity: 0\n\t}\n}\n\n@keyframes flipOutY {\n\t0% {\n\t\t-webkit-transform: perspective(400px);\n\t\ttransform: perspective(400px)\n\t}\n\t30% {\n\t\t-webkit-transform: perspective(400px) rotateY(-15deg);\n\t\ttransform: perspective(400px) rotateY(-15deg);\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform: perspective(400px) rotateY(90deg);\n\t\ttransform: perspective(400px) rotateY(90deg);\n\t\topacity: 0\n\t}\n}\n\n.flipOutY {\n\t-webkit-animation-duration: .75s;\n\tanimation-duration: .75s;\n\t-webkit-backface-visibility: visible!important;\n\tbackface-visibility: visible!important;\n\t-webkit-animation-name: flipOutY;\n\tanimation-name: flipOutY\n}\n\n@-webkit-keyframes lightSpeedIn {\n\t0% {\n\t\t-webkit-transform: translate3d(100%, 0, 0) skewX(-30deg);\n\t\ttransform: translate3d(100%, 0, 0) skewX(-30deg);\n\t\topacity: 0\n\t}\n\t60% {\n\t\t-webkit-transform: skewX(20deg);\n\t\ttransform: skewX(20deg);\n\t\topacity: 1\n\t}\n\t80% {\n\t\t-webkit-transform: skewX(-5deg);\n\t\ttransform: skewX(-5deg)\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes lightSpeedIn {\n\t0% {\n\t\t-webkit-transform: translate3d(100%, 0, 0) skewX(-30deg);\n\t\ttransform: translate3d(100%, 0, 0) skewX(-30deg);\n\t\topacity: 0\n\t}\n\t60% {\n\t\t-webkit-transform: skewX(20deg);\n\t\ttransform: skewX(20deg);\n\t\topacity: 1\n\t}\n\t80% {\n\t\t-webkit-transform: skewX(-5deg);\n\t\ttransform: skewX(-5deg)\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.lightSpeedIn {\n\t-webkit-animation-name: lightSpeedIn;\n\tanimation-name: lightSpeedIn;\n\t-webkit-animation-timing-function: ease-out;\n\tanimation-timing-function: ease-out\n}\n\n@-webkit-keyframes lightSpeedOut {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform: translate3d(100%, 0, 0) skewX(30deg);\n\t\ttransform: translate3d(100%, 0, 0) skewX(30deg);\n\t\topacity: 0\n\t}\n}\n\n@keyframes lightSpeedOut {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform: translate3d(100%, 0, 0) skewX(30deg);\n\t\ttransform: translate3d(100%, 0, 0) skewX(30deg);\n\t\topacity: 0\n\t}\n}\n\n.lightSpeedOut {\n\t-webkit-animation-name: lightSpeedOut;\n\tanimation-name: lightSpeedOut;\n\t-webkit-animation-timing-function: ease-in;\n\tanimation-timing-function: ease-in\n}\n\n@-webkit-keyframes rotateIn {\n\t0% {\n\t\t-webkit-transform-origin: center;\n\t\ttransform-origin: center;\n\t\t-webkit-transform: rotate(-200deg);\n\t\ttransform: rotate(-200deg);\n\t\topacity: 0\n\t}\n\tto {\n\t\t-webkit-transform-origin: center;\n\t\ttransform-origin: center;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0);\n\t\topacity: 1\n\t}\n}\n\n@keyframes rotateIn {\n\t0% {\n\t\t-webkit-transform-origin: center;\n\t\ttransform-origin: center;\n\t\t-webkit-transform: rotate(-200deg);\n\t\ttransform: rotate(-200deg);\n\t\topacity: 0\n\t}\n\tto {\n\t\t-webkit-transform-origin: center;\n\t\ttransform-origin: center;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0);\n\t\topacity: 1\n\t}\n}\n\n.rotateIn {\n\t-webkit-animation-name: rotateIn;\n\tanimation-name: rotateIn\n}\n\n@-webkit-keyframes rotateInDownLeft {\n\t0% {\n\t\t-webkit-transform-origin: left bottom;\n\t\ttransform-origin: left bottom;\n\t\t-webkit-transform: rotate(-45deg);\n\t\ttransform: rotate(-45deg);\n\t\topacity: 0\n\t}\n\tto {\n\t\t-webkit-transform-origin: left bottom;\n\t\ttransform-origin: left bottom;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0);\n\t\topacity: 1\n\t}\n}\n\n@keyframes rotateInDownLeft {\n\t0% {\n\t\t-webkit-transform-origin: left bottom;\n\t\ttransform-origin: left bottom;\n\t\t-webkit-transform: rotate(-45deg);\n\t\ttransform: rotate(-45deg);\n\t\topacity: 0\n\t}\n\tto {\n\t\t-webkit-transform-origin: left bottom;\n\t\ttransform-origin: left bottom;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0);\n\t\topacity: 1\n\t}\n}\n\n.rotateInDownLeft {\n\t-webkit-animation-name: rotateInDownLeft;\n\tanimation-name: rotateInDownLeft\n}\n\n@-webkit-keyframes rotateInDownRight {\n\t0% {\n\t\t-webkit-transform-origin: right bottom;\n\t\ttransform-origin: right bottom;\n\t\t-webkit-transform: rotate(45deg);\n\t\ttransform: rotate(45deg);\n\t\topacity: 0\n\t}\n\tto {\n\t\t-webkit-transform-origin: right bottom;\n\t\ttransform-origin: right bottom;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0);\n\t\topacity: 1\n\t}\n}\n\n@keyframes rotateInDownRight {\n\t0% {\n\t\t-webkit-transform-origin: right bottom;\n\t\ttransform-origin: right bottom;\n\t\t-webkit-transform: rotate(45deg);\n\t\ttransform: rotate(45deg);\n\t\topacity: 0\n\t}\n\tto {\n\t\t-webkit-transform-origin: right bottom;\n\t\ttransform-origin: right bottom;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0);\n\t\topacity: 1\n\t}\n}\n\n.rotateInDownRight {\n\t-webkit-animation-name: rotateInDownRight;\n\tanimation-name: rotateInDownRight\n}\n\n@-webkit-keyframes rotateInUpLeft {\n\t0% {\n\t\t-webkit-transform-origin: left bottom;\n\t\ttransform-origin: left bottom;\n\t\t-webkit-transform: rotate(45deg);\n\t\ttransform: rotate(45deg);\n\t\topacity: 0\n\t}\n\tto {\n\t\t-webkit-transform-origin: left bottom;\n\t\ttransform-origin: left bottom;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0);\n\t\topacity: 1\n\t}\n}\n\n@keyframes rotateInUpLeft {\n\t0% {\n\t\t-webkit-transform-origin: left bottom;\n\t\ttransform-origin: left bottom;\n\t\t-webkit-transform: rotate(45deg);\n\t\ttransform: rotate(45deg);\n\t\topacity: 0\n\t}\n\tto {\n\t\t-webkit-transform-origin: left bottom;\n\t\ttransform-origin: left bottom;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0);\n\t\topacity: 1\n\t}\n}\n\n.rotateInUpLeft {\n\t-webkit-animation-name: rotateInUpLeft;\n\tanimation-name: rotateInUpLeft\n}\n\n@-webkit-keyframes rotateInUpRight {\n\t0% {\n\t\t-webkit-transform-origin: right bottom;\n\t\ttransform-origin: right bottom;\n\t\t-webkit-transform: rotate(-90deg);\n\t\ttransform: rotate(-90deg);\n\t\topacity: 0\n\t}\n\tto {\n\t\t-webkit-transform-origin: right bottom;\n\t\ttransform-origin: right bottom;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0);\n\t\topacity: 1\n\t}\n}\n\n@keyframes rotateInUpRight {\n\t0% {\n\t\t-webkit-transform-origin: right bottom;\n\t\ttransform-origin: right bottom;\n\t\t-webkit-transform: rotate(-90deg);\n\t\ttransform: rotate(-90deg);\n\t\topacity: 0\n\t}\n\tto {\n\t\t-webkit-transform-origin: right bottom;\n\t\ttransform-origin: right bottom;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0);\n\t\topacity: 1\n\t}\n}\n\n.rotateInUpRight {\n\t-webkit-animation-name: rotateInUpRight;\n\tanimation-name: rotateInUpRight\n}\n\n@-webkit-keyframes rotateOut {\n\t0% {\n\t\t-webkit-transform-origin: center;\n\t\ttransform-origin: center;\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform-origin: center;\n\t\ttransform-origin: center;\n\t\t-webkit-transform: rotate(200deg);\n\t\ttransform: rotate(200deg);\n\t\topacity: 0\n\t}\n}\n\n@keyframes rotateOut {\n\t0% {\n\t\t-webkit-transform-origin: center;\n\t\ttransform-origin: center;\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform-origin: center;\n\t\ttransform-origin: center;\n\t\t-webkit-transform: rotate(200deg);\n\t\ttransform: rotate(200deg);\n\t\topacity: 0\n\t}\n}\n\n.rotateOut {\n\t-webkit-animation-name: rotateOut;\n\tanimation-name: rotateOut\n}\n\n@-webkit-keyframes rotateOutDownLeft {\n\t0% {\n\t\t-webkit-transform-origin: left bottom;\n\t\ttransform-origin: left bottom;\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform-origin: left bottom;\n\t\ttransform-origin: left bottom;\n\t\t-webkit-transform: rotate(45deg);\n\t\ttransform: rotate(45deg);\n\t\topacity: 0\n\t}\n}\n\n@keyframes rotateOutDownLeft {\n\t0% {\n\t\t-webkit-transform-origin: left bottom;\n\t\ttransform-origin: left bottom;\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform-origin: left bottom;\n\t\ttransform-origin: left bottom;\n\t\t-webkit-transform: rotate(45deg);\n\t\ttransform: rotate(45deg);\n\t\topacity: 0\n\t}\n}\n\n.rotateOutDownLeft {\n\t-webkit-animation-name: rotateOutDownLeft;\n\tanimation-name: rotateOutDownLeft\n}\n\n@-webkit-keyframes rotateOutDownRight {\n\t0% {\n\t\t-webkit-transform-origin: right bottom;\n\t\ttransform-origin: right bottom;\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform-origin: right bottom;\n\t\ttransform-origin: right bottom;\n\t\t-webkit-transform: rotate(-45deg);\n\t\ttransform: rotate(-45deg);\n\t\topacity: 0\n\t}\n}\n\n@keyframes rotateOutDownRight {\n\t0% {\n\t\t-webkit-transform-origin: right bottom;\n\t\ttransform-origin: right bottom;\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform-origin: right bottom;\n\t\ttransform-origin: right bottom;\n\t\t-webkit-transform: rotate(-45deg);\n\t\ttransform: rotate(-45deg);\n\t\topacity: 0\n\t}\n}\n\n.rotateOutDownRight {\n\t-webkit-animation-name: rotateOutDownRight;\n\tanimation-name: rotateOutDownRight\n}\n\n@-webkit-keyframes rotateOutUpLeft {\n\t0% {\n\t\t-webkit-transform-origin: left bottom;\n\t\ttransform-origin: left bottom;\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform-origin: left bottom;\n\t\ttransform-origin: left bottom;\n\t\t-webkit-transform: rotate(-45deg);\n\t\ttransform: rotate(-45deg);\n\t\topacity: 0\n\t}\n}\n\n@keyframes rotateOutUpLeft {\n\t0% {\n\t\t-webkit-transform-origin: left bottom;\n\t\ttransform-origin: left bottom;\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform-origin: left bottom;\n\t\ttransform-origin: left bottom;\n\t\t-webkit-transform: rotate(-45deg);\n\t\ttransform: rotate(-45deg);\n\t\topacity: 0\n\t}\n}\n\n.rotateOutUpLeft {\n\t-webkit-animation-name: rotateOutUpLeft;\n\tanimation-name: rotateOutUpLeft\n}\n\n@-webkit-keyframes rotateOutUpRight {\n\t0% {\n\t\t-webkit-transform-origin: right bottom;\n\t\ttransform-origin: right bottom;\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform-origin: right bottom;\n\t\ttransform-origin: right bottom;\n\t\t-webkit-transform: rotate(90deg);\n\t\ttransform: rotate(90deg);\n\t\topacity: 0\n\t}\n}\n\n@keyframes rotateOutUpRight {\n\t0% {\n\t\t-webkit-transform-origin: right bottom;\n\t\ttransform-origin: right bottom;\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform-origin: right bottom;\n\t\ttransform-origin: right bottom;\n\t\t-webkit-transform: rotate(90deg);\n\t\ttransform: rotate(90deg);\n\t\topacity: 0\n\t}\n}\n\n.rotateOutUpRight {\n\t-webkit-animation-name: rotateOutUpRight;\n\tanimation-name: rotateOutUpRight\n}\n\n@-webkit-keyframes hinge {\n\t0% {\n\t\t-webkit-transform-origin: top left;\n\t\ttransform-origin: top left;\n\t\t-webkit-animation-timing-function: ease-in-out;\n\t\tanimation-timing-function: ease-in-out\n\t}\n\t20%,\n\t60% {\n\t\t-webkit-transform: rotate(80deg);\n\t\ttransform: rotate(80deg);\n\t\t-webkit-transform-origin: top left;\n\t\ttransform-origin: top left;\n\t\t-webkit-animation-timing-function: ease-in-out;\n\t\tanimation-timing-function: ease-in-out\n\t}\n\t40%,\n\t80% {\n\t\t-webkit-transform: rotate(60deg);\n\t\ttransform: rotate(60deg);\n\t\t-webkit-transform-origin: top left;\n\t\ttransform-origin: top left;\n\t\t-webkit-animation-timing-function: ease-in-out;\n\t\tanimation-timing-function: ease-in-out;\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform: translate3d(0, 700px, 0);\n\t\ttransform: translate3d(0, 700px, 0);\n\t\topacity: 0\n\t}\n}\n\n@keyframes hinge {\n\t0% {\n\t\t-webkit-transform-origin: top left;\n\t\ttransform-origin: top left;\n\t\t-webkit-animation-timing-function: ease-in-out;\n\t\tanimation-timing-function: ease-in-out\n\t}\n\t20%,\n\t60% {\n\t\t-webkit-transform: rotate(80deg);\n\t\ttransform: rotate(80deg);\n\t\t-webkit-transform-origin: top left;\n\t\ttransform-origin: top left;\n\t\t-webkit-animation-timing-function: ease-in-out;\n\t\tanimation-timing-function: ease-in-out\n\t}\n\t40%,\n\t80% {\n\t\t-webkit-transform: rotate(60deg);\n\t\ttransform: rotate(60deg);\n\t\t-webkit-transform-origin: top left;\n\t\ttransform-origin: top left;\n\t\t-webkit-animation-timing-function: ease-in-out;\n\t\tanimation-timing-function: ease-in-out;\n\t\topacity: 1\n\t}\n\tto {\n\t\t-webkit-transform: translate3d(0, 700px, 0);\n\t\ttransform: translate3d(0, 700px, 0);\n\t\topacity: 0\n\t}\n}\n\n.hinge {\n\t-webkit-animation-duration: 2s;\n\tanimation-duration: 2s;\n\t-webkit-animation-name: hinge;\n\tanimation-name: hinge\n}\n\n@-webkit-keyframes jackInTheBox {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: scale(.1) rotate(30deg);\n\t\ttransform: scale(.1) rotate(30deg);\n\t\t-webkit-transform-origin: center bottom;\n\t\ttransform-origin: center bottom\n\t}\n\t50% {\n\t\t-webkit-transform: rotate(-10deg);\n\t\ttransform: rotate(-10deg)\n\t}\n\t70% {\n\t\t-webkit-transform: rotate(3deg);\n\t\ttransform: rotate(3deg)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: scale(1);\n\t\ttransform: scale(1)\n\t}\n}\n\n@keyframes jackInTheBox {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: scale(.1) rotate(30deg);\n\t\ttransform: scale(.1) rotate(30deg);\n\t\t-webkit-transform-origin: center bottom;\n\t\ttransform-origin: center bottom\n\t}\n\t50% {\n\t\t-webkit-transform: rotate(-10deg);\n\t\ttransform: rotate(-10deg)\n\t}\n\t70% {\n\t\t-webkit-transform: rotate(3deg);\n\t\ttransform: rotate(3deg)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: scale(1);\n\t\ttransform: scale(1)\n\t}\n}\n\n.jackInTheBox {\n\t-webkit-animation-name: jackInTheBox;\n\tanimation-name: jackInTheBox\n}\n\n@-webkit-keyframes rollIn {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(-100%, 0, 0) rotate(-120deg);\n\t\ttransform: translate3d(-100%, 0, 0) rotate(-120deg)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes rollIn {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(-100%, 0, 0) rotate(-120deg);\n\t\ttransform: translate3d(-100%, 0, 0) rotate(-120deg)\n\t}\n\tto {\n\t\topacity: 1;\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.rollIn {\n\t-webkit-animation-name: rollIn;\n\tanimation-name: rollIn\n}\n\n@-webkit-keyframes rollOut {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(100%, 0, 0) rotate(120deg);\n\t\ttransform: translate3d(100%, 0, 0) rotate(120deg)\n\t}\n}\n\n@keyframes rollOut {\n\t0% {\n\t\topacity: 1\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: translate3d(100%, 0, 0) rotate(120deg);\n\t\ttransform: translate3d(100%, 0, 0) rotate(120deg)\n\t}\n}\n\n.rollOut {\n\t-webkit-animation-name: rollOut;\n\tanimation-name: rollOut\n}\n\n@-webkit-keyframes zoomIn {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.3, .3, .3);\n\t\ttransform: scale3d(.3, .3, .3)\n\t}\n\t50% {\n\t\topacity: 1\n\t}\n}\n\n@keyframes zoomIn {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.3, .3, .3);\n\t\ttransform: scale3d(.3, .3, .3)\n\t}\n\t50% {\n\t\topacity: 1\n\t}\n}\n\n.zoomIn {\n\t-webkit-animation-name: zoomIn;\n\tanimation-name: zoomIn\n}\n\n@-webkit-keyframes zoomInDown {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);\n\t\ttransform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n\t\tanimation-timing-function: cubic-bezier(.55, .055, .675, .19)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);\n\t\ttransform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n\t\tanimation-timing-function: cubic-bezier(.175, .885, .32, 1)\n\t}\n}\n\n@keyframes zoomInDown {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);\n\t\ttransform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n\t\tanimation-timing-function: cubic-bezier(.55, .055, .675, .19)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);\n\t\ttransform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n\t\tanimation-timing-function: cubic-bezier(.175, .885, .32, 1)\n\t}\n}\n\n.zoomInDown {\n\t-webkit-animation-name: zoomInDown;\n\tanimation-name: zoomInDown\n}\n\n@-webkit-keyframes zoomInLeft {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.1, .1, .1) translate3d(-1000px, 0, 0);\n\t\ttransform: scale3d(.1, .1, .1) translate3d(-1000px, 0, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n\t\tanimation-timing-function: cubic-bezier(.55, .055, .675, .19)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(.475, .475, .475) translate3d(10px, 0, 0);\n\t\ttransform: scale3d(.475, .475, .475) translate3d(10px, 0, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n\t\tanimation-timing-function: cubic-bezier(.175, .885, .32, 1)\n\t}\n}\n\n@keyframes zoomInLeft {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.1, .1, .1) translate3d(-1000px, 0, 0);\n\t\ttransform: scale3d(.1, .1, .1) translate3d(-1000px, 0, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n\t\tanimation-timing-function: cubic-bezier(.55, .055, .675, .19)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(.475, .475, .475) translate3d(10px, 0, 0);\n\t\ttransform: scale3d(.475, .475, .475) translate3d(10px, 0, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n\t\tanimation-timing-function: cubic-bezier(.175, .885, .32, 1)\n\t}\n}\n\n.zoomInLeft {\n\t-webkit-animation-name: zoomInLeft;\n\tanimation-name: zoomInLeft\n}\n\n@-webkit-keyframes zoomInRight {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);\n\t\ttransform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n\t\tanimation-timing-function: cubic-bezier(.55, .055, .675, .19)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);\n\t\ttransform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n\t\tanimation-timing-function: cubic-bezier(.175, .885, .32, 1)\n\t}\n}\n\n@keyframes zoomInRight {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);\n\t\ttransform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n\t\tanimation-timing-function: cubic-bezier(.55, .055, .675, .19)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);\n\t\ttransform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n\t\tanimation-timing-function: cubic-bezier(.175, .885, .32, 1)\n\t}\n}\n\n.zoomInRight {\n\t-webkit-animation-name: zoomInRight;\n\tanimation-name: zoomInRight\n}\n\n@-webkit-keyframes zoomInUp {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);\n\t\ttransform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n\t\tanimation-timing-function: cubic-bezier(.55, .055, .675, .19)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);\n\t\ttransform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n\t\tanimation-timing-function: cubic-bezier(.175, .885, .32, 1)\n\t}\n}\n\n@keyframes zoomInUp {\n\t0% {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);\n\t\ttransform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n\t\tanimation-timing-function: cubic-bezier(.55, .055, .675, .19)\n\t}\n\t60% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);\n\t\ttransform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n\t\tanimation-timing-function: cubic-bezier(.175, .885, .32, 1)\n\t}\n}\n\n.zoomInUp {\n\t-webkit-animation-name: zoomInUp;\n\tanimation-name: zoomInUp\n}\n\n@-webkit-keyframes zoomOut {\n\t0% {\n\t\topacity: 1\n\t}\n\t50% {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.3, .3, .3);\n\t\ttransform: scale3d(.3, .3, .3)\n\t}\n\tto {\n\t\topacity: 0\n\t}\n}\n\n@keyframes zoomOut {\n\t0% {\n\t\topacity: 1\n\t}\n\t50% {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.3, .3, .3);\n\t\ttransform: scale3d(.3, .3, .3)\n\t}\n\tto {\n\t\topacity: 0\n\t}\n}\n\n.zoomOut {\n\t-webkit-animation-name: zoomOut;\n\tanimation-name: zoomOut\n}\n\n@-webkit-keyframes zoomOutDown {\n\t40% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);\n\t\ttransform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n\t\tanimation-timing-function: cubic-bezier(.55, .055, .675, .19)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.1, .1, .1) translate3d(0, 2000px, 0);\n\t\ttransform: scale3d(.1, .1, .1) translate3d(0, 2000px, 0);\n\t\t-webkit-transform-origin: center bottom;\n\t\ttransform-origin: center bottom;\n\t\t-webkit-animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n\t\tanimation-timing-function: cubic-bezier(.175, .885, .32, 1)\n\t}\n}\n\n@keyframes zoomOutDown {\n\t40% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);\n\t\ttransform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n\t\tanimation-timing-function: cubic-bezier(.55, .055, .675, .19)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.1, .1, .1) translate3d(0, 2000px, 0);\n\t\ttransform: scale3d(.1, .1, .1) translate3d(0, 2000px, 0);\n\t\t-webkit-transform-origin: center bottom;\n\t\ttransform-origin: center bottom;\n\t\t-webkit-animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n\t\tanimation-timing-function: cubic-bezier(.175, .885, .32, 1)\n\t}\n}\n\n.zoomOutDown {\n\t-webkit-animation-name: zoomOutDown;\n\tanimation-name: zoomOutDown\n}\n\n@-webkit-keyframes zoomOutLeft {\n\t40% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(.475, .475, .475) translate3d(42px, 0, 0);\n\t\ttransform: scale3d(.475, .475, .475) translate3d(42px, 0, 0)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: scale(.1) translate3d(-2000px, 0, 0);\n\t\ttransform: scale(.1) translate3d(-2000px, 0, 0);\n\t\t-webkit-transform-origin: left center;\n\t\ttransform-origin: left center\n\t}\n}\n\n@keyframes zoomOutLeft {\n\t40% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(.475, .475, .475) translate3d(42px, 0, 0);\n\t\ttransform: scale3d(.475, .475, .475) translate3d(42px, 0, 0)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: scale(.1) translate3d(-2000px, 0, 0);\n\t\ttransform: scale(.1) translate3d(-2000px, 0, 0);\n\t\t-webkit-transform-origin: left center;\n\t\ttransform-origin: left center\n\t}\n}\n\n.zoomOutLeft {\n\t-webkit-animation-name: zoomOutLeft;\n\tanimation-name: zoomOutLeft\n}\n\n@-webkit-keyframes zoomOutRight {\n\t40% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(.475, .475, .475) translate3d(-42px, 0, 0);\n\t\ttransform: scale3d(.475, .475, .475) translate3d(-42px, 0, 0)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: scale(.1) translate3d(2000px, 0, 0);\n\t\ttransform: scale(.1) translate3d(2000px, 0, 0);\n\t\t-webkit-transform-origin: right center;\n\t\ttransform-origin: right center\n\t}\n}\n\n@keyframes zoomOutRight {\n\t40% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(.475, .475, .475) translate3d(-42px, 0, 0);\n\t\ttransform: scale3d(.475, .475, .475) translate3d(-42px, 0, 0)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: scale(.1) translate3d(2000px, 0, 0);\n\t\ttransform: scale(.1) translate3d(2000px, 0, 0);\n\t\t-webkit-transform-origin: right center;\n\t\ttransform-origin: right center\n\t}\n}\n\n.zoomOutRight {\n\t-webkit-animation-name: zoomOutRight;\n\tanimation-name: zoomOutRight\n}\n\n@-webkit-keyframes zoomOutUp {\n\t40% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);\n\t\ttransform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n\t\tanimation-timing-function: cubic-bezier(.55, .055, .675, .19)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.1, .1, .1) translate3d(0, -2000px, 0);\n\t\ttransform: scale3d(.1, .1, .1) translate3d(0, -2000px, 0);\n\t\t-webkit-transform-origin: center bottom;\n\t\ttransform-origin: center bottom;\n\t\t-webkit-animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n\t\tanimation-timing-function: cubic-bezier(.175, .885, .32, 1)\n\t}\n}\n\n@keyframes zoomOutUp {\n\t40% {\n\t\topacity: 1;\n\t\t-webkit-transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);\n\t\ttransform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);\n\t\t-webkit-animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n\t\tanimation-timing-function: cubic-bezier(.55, .055, .675, .19)\n\t}\n\tto {\n\t\topacity: 0;\n\t\t-webkit-transform: scale3d(.1, .1, .1) translate3d(0, -2000px, 0);\n\t\ttransform: scale3d(.1, .1, .1) translate3d(0, -2000px, 0);\n\t\t-webkit-transform-origin: center bottom;\n\t\ttransform-origin: center bottom;\n\t\t-webkit-animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n\t\tanimation-timing-function: cubic-bezier(.175, .885, .32, 1)\n\t}\n}\n\n.zoomOutUp {\n\t-webkit-animation-name: zoomOutUp;\n\tanimation-name: zoomOutUp\n}\n\n@-webkit-keyframes slideInDown {\n\t0% {\n\t\t-webkit-transform: translate3d(0, -100%, 0);\n\t\ttransform: translate3d(0, -100%, 0);\n\t\tvisibility: visible\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes slideInDown {\n\t0% {\n\t\t-webkit-transform: translate3d(0, -100%, 0);\n\t\ttransform: translate3d(0, -100%, 0);\n\t\tvisibility: visible\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.slideInDown {\n\t-webkit-animation-name: slideInDown;\n\tanimation-name: slideInDown\n}\n\n@-webkit-keyframes slideInLeft {\n\t0% {\n\t\t-webkit-transform: translate3d(-100%, 0, 0);\n\t\ttransform: translate3d(-100%, 0, 0);\n\t\tvisibility: visible\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes slideInLeft {\n\t0% {\n\t\t-webkit-transform: translate3d(-100%, 0, 0);\n\t\ttransform: translate3d(-100%, 0, 0);\n\t\tvisibility: visible\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.slideInLeft {\n\t-webkit-animation-name: slideInLeft;\n\tanimation-name: slideInLeft\n}\n\n@-webkit-keyframes slideInRight {\n\t0% {\n\t\t-webkit-transform: translate3d(100%, 0, 0);\n\t\ttransform: translate3d(100%, 0, 0);\n\t\tvisibility: visible\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes slideInRight {\n\t0% {\n\t\t-webkit-transform: translate3d(100%, 0, 0);\n\t\ttransform: translate3d(100%, 0, 0);\n\t\tvisibility: visible\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.slideInRight {\n\t-webkit-animation-name: slideInRight;\n\tanimation-name: slideInRight\n}\n\n@-webkit-keyframes slideInUp {\n\t0% {\n\t\t-webkit-transform: translate3d(0, 100%, 0);\n\t\ttransform: translate3d(0, 100%, 0);\n\t\tvisibility: visible\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n@keyframes slideInUp {\n\t0% {\n\t\t-webkit-transform: translate3d(0, 100%, 0);\n\t\ttransform: translate3d(0, 100%, 0);\n\t\tvisibility: visible\n\t}\n\tto {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n}\n\n.slideInUp {\n\t-webkit-animation-name: slideInUp;\n\tanimation-name: slideInUp\n}\n\n@-webkit-keyframes slideOutDown {\n\t0% {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n\tto {\n\t\tvisibility: hidden;\n\t\t-webkit-transform: translate3d(0, 100%, 0);\n\t\ttransform: translate3d(0, 100%, 0)\n\t}\n}\n\n@keyframes slideOutDown {\n\t0% {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n\tto {\n\t\tvisibility: hidden;\n\t\t-webkit-transform: translate3d(0, 100%, 0);\n\t\ttransform: translate3d(0, 100%, 0)\n\t}\n}\n\n.slideOutDown {\n\t-webkit-animation-name: slideOutDown;\n\tanimation-name: slideOutDown\n}\n\n@-webkit-keyframes slideOutLeft {\n\t0% {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n\tto {\n\t\tvisibility: hidden;\n\t\t-webkit-transform: translate3d(-100%, 0, 0);\n\t\ttransform: translate3d(-100%, 0, 0)\n\t}\n}\n\n@keyframes slideOutLeft {\n\t0% {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n\tto {\n\t\tvisibility: hidden;\n\t\t-webkit-transform: translate3d(-100%, 0, 0);\n\t\ttransform: translate3d(-100%, 0, 0)\n\t}\n}\n\n.slideOutLeft {\n\t-webkit-animation-name: slideOutLeft;\n\tanimation-name: slideOutLeft\n}\n\n@-webkit-keyframes slideOutRight {\n\t0% {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n\tto {\n\t\tvisibility: hidden;\n\t\t-webkit-transform: translate3d(100%, 0, 0);\n\t\ttransform: translate3d(100%, 0, 0)\n\t}\n}\n\n@keyframes slideOutRight {\n\t0% {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n\tto {\n\t\tvisibility: hidden;\n\t\t-webkit-transform: translate3d(100%, 0, 0);\n\t\ttransform: translate3d(100%, 0, 0)\n\t}\n}\n\n.slideOutRight {\n\t-webkit-animation-name: slideOutRight;\n\tanimation-name: slideOutRight\n}\n\n@-webkit-keyframes slideOutUp {\n\t0% {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n\tto {\n\t\tvisibility: hidden;\n\t\t-webkit-transform: translate3d(0, -100%, 0);\n\t\ttransform: translate3d(0, -100%, 0)\n\t}\n}\n\n@keyframes slideOutUp {\n\t0% {\n\t\t-webkit-transform: translateZ(0);\n\t\ttransform: translateZ(0)\n\t}\n\tto {\n\t\tvisibility: hidden;\n\t\t-webkit-transform: translate3d(0, -100%, 0);\n\t\ttransform: translate3d(0, -100%, 0)\n\t}\n}\n\n.slideOutUp {\n\t-webkit-animation-name: slideOutUp;\n\tanimation-name: slideOutUp\n}\n\n.animated {\n\t-webkit-animation-duration: 1s;\n\tanimation-duration: 1s;\n\t-webkit-animation-fill-mode: both;\n\tanimation-fill-mode: both\n}\n\n.animated.infinite {\n\t-webkit-animation-iteration-count: infinite;\n\tanimation-iteration-count: infinite\n}\n\n.animated.delay-1s {\n\t-webkit-animation-delay: 1s;\n\tanimation-delay: 1s\n}\n\n.animated.delay-2s {\n\t-webkit-animation-delay: 2s;\n\tanimation-delay: 2s\n}\n\n.animated.delay-3s {\n\t-webkit-animation-delay: 3s;\n\tanimation-delay: 3s\n}\n\n.animated.delay-4s {\n\t-webkit-animation-delay: 4s;\n\tanimation-delay: 4s\n}\n\n.animated.delay-5s {\n\t-webkit-animation-delay: 5s;\n\tanimation-delay: 5s\n}\n\n.animated.duration-0 {\n\t-webkit-animation-duration: 0ms;\n\tanimation-duration: 0ms\n}\n.animated.duration-100 {\n\t-webkit-animation-duration: 100ms;\n\tanimation-duration: 100ms\n}\n.animated.duration-200 {\n\t-webkit-animation-duration: 200ms;\n\tanimation-duration: 200ms\n}\n.animated.duration-300 {\n\t-webkit-animation-duration: 300ms;\n\tanimation-duration: 300ms\n}\n.animated.duration-400 {\n\t-webkit-animation-duration: 400ms;\n\tanimation-duration: 400ms\n}\n.animated.duration-500 {\n\t-webkit-animation-duration: 500ms;\n\tanimation-duration: 500ms\n}\n\n.animated.duration-600 {\n\t-webkit-animation-duration: 600ms;\n\tanimation-duration: 600ms\n}\n\n.animated.duration-700 {\n\t-webkit-animation-duration: 700ms;\n\tanimation-duration: 700ms\n}\n\n.animated.duration-800 {\n\t-webkit-animation-duration: 800ms;\n\tanimation-duration: 800ms\n}\n\n.animated.duration-1000 {\n\t-webkit-animation-duration: 1s;\n\tanimation-duration: 1s;\n}\n\n.animated.duration-2000 {\n\t-webkit-animation-duration: 2s;\n\tanimation-duration: 2s;\n}\n\n\n.animated.duration-3000 {\n\t-webkit-animation-duration: 3s;\n\tanimation-duration: 3s;\n}\n\n.animated.duration-4000 {\n\t-webkit-animation-duration: 4s;\n\tanimation-duration: 4s;\n}\n\n.animated.duration-5000 {\n\t-webkit-animation-duration: 5s;\n\tanimation-duration: 5s;\n}\n\n\n.animated.stop {\n\t-webkit-animation-duration: 0s;\n\tanimation-duration: 0s\n}\n\n.animated.slow {\n\t-webkit-animation-duration: 2s;\n\tanimation-duration: 2s\n}\n\n.animated.slower {\n\t-webkit-animation-duration: 3s;\n\tanimation-duration: 3s\n}\n/*\n@media (prefers-reduced-motion:reduce),\n(print) {\n\t.animated {\n\t\t-webkit-animation-duration: 1ms!important;\n\t\tanimation-duration: 1ms!important;\n\t\t-webkit-transition-duration: 1ms!important;\n\t\ttransition-duration: 1ms!important;\n\t\t-webkit-animation-iteration-count: 1!important;\n\t\tanimation-iteration-count: 1!important\n\t}\n} */\n`;\n","import {\n  Attribute,\n  CustomAttributeRegistry,\n  Input,\n  Modifier,\n} from '@rhtml/custom-attributes';\n\nimport { Animations } from './animate.css';\nimport { AnimationsType } from './interfaces';\n\ninterface Styles {\n  animationDelay: string;\n}\n\n@Modifier({\n  selector: 'animated',\n  registry(this: HTMLElement) {\n    return new CustomAttributeRegistry(this);\n  },\n})\nexport class Animation extends Attribute<Styles> {\n  @Input({ observe: true })\n  delay: string;\n\n  value: AnimationsType;\n\n  OnInit() {\n    this.pushStylesToParent();\n    this.modify();\n  }\n\n  OnDestroy() {\n    this.element.classList.remove('animated', this.value);\n    this.setStyles({ animationDelay: null })(this.element);\n  }\n\n  OnUpdate() {\n    this.modify();\n  }\n\n  OnUpdateAttribute() {\n    this.modify();\n  }\n\n  private modify() {\n    this.element.classList.add('animated', this.value);\n    this.setStyles({ animationDelay: this.delay })(this.element);\n  }\n\n  private pushStylesToParent() {\n    const style = document.createElement('style');\n    style.innerHTML = Animations;\n    const root = this.parent.shadowRoot ?? this.parent;\n    root.prepend(style);\n  }\n}\n","export * from './animate.css';\nexport * from './animation';\nexport * from './interfaces';\n","import { ApiService } from '@core/api/api.service';\nimport { Component, DefineDependencies } from '@rhtml/component';\nimport { FlexLayout } from '@rhtml/modifiers';\nimport { Container } from '@rxdi/core';\nimport { CardModel } from '@rxdi/credit-card-form';\nimport { css, html, LitElement, property } from '@rxdi/lit-html';\nimport { map } from 'rxjs/operators';\n\n/**\n * @customElement winbet-payment-widget\n */\n@Component({\n  Settings: {\n    selector: 'winbet-payment-widget',\n    modifiers: [...FlexLayout],\n    styles: [\n      css`\n        .container {\n          padding: 10px;\n          background-color: #323334;\n          grid-template-columns: repeat(5, 1fr);\n        }\n\n        .provider {\n          margin-bottom: 5px;\n          margin-right: 5px;\n          border-radius: 3px;\n          width: 150px;\n          height: 150px;\n          color: #e9ecef;\n          fill: #e9ecef;\n          border: 1px solid #575859;\n          background-color: #48494a;\n        }\n\n        .provider:hover {\n          background-color: rgba(255, 255, 255, 0.2);\n          cursor: pointer;\n          user-select: none;\n        }\n\n        sprite-part-selector {\n          background-color: #c1c2c3;\n          width: 70px;\n          height: 46px;\n        }\n\n        p {\n          margin-bottom: 0;\n          color: white;\n        }\n\n        button {\n          margin: 10px;\n          cursor: pointer;\n          width: 150px;\n          height: 50px;\n        }\n      `,\n    ],\n  },\n  Providers: DefineDependencies(ApiService)(Container),\n  State(this: AppComponent, [api]) {\n    return api.getProviders().pipe(map((providers) => ({ providers, selectedProvider: null })));\n  },\n  Render: () =>\n    function (this, state, setState) {\n      const { providers, selectedProvider } = state;\n      return html`\n        <div class=\"container\" fxLayout=\"row wrap\" fxLayoutAlign=\"center\">\n          ${selectedProvider\n            ? html`\n                <div style=\"width: 420px; background: white; padding: 30px;border-radius: 10px;\">\n                  <rx-button\n                    palette=\"primary\"\n                    style=\"margin-bottom: 20px;\"\n                    fxLayoutAlign=\"center\"\n                    @click=${() => setState({ ...state, selectedProvider: null })}\n                    >BACK</rx-button\n                  >\n                  <credit-card-form\n                    @submit=${(e: CustomEvent<CardModel>) => {\n                      console.log(e.detail);\n                    }}\n                  ></credit-card-form>\n                </div>\n              `\n            : html`\n                ${providers.map(\n                  ([key, provider]) =>\n                    html`\n                      <div\n                        @click=${() => setState({ providers, selectedProvider: provider })}\n                        class=\"provider\"\n                        fxLayoutAlign=\"center\"\n                      >\n                        <div fxLayout=\"column\" fxLayoutAlign=\"center\">\n                          <sprite-part-selector .key=${key} fxLayoutAlign=\"center\"></sprite-part-selector>\n                          <p>${provider.title}</p>\n                        </div>\n                      </div>\n                    `\n                )}\n              `}\n        </div>\n      `;\n    },\n})\nexport class AppComponent extends LitElement {\n  @property({ type: String })\n  apiKey: string;\n}\n","import { CoreModule } from '@core/core.module';\nimport { Module } from '@rxdi/core';\nimport { CreditCardComponent } from '@rxdi/credit-card-form';\nimport { ReactiveUiModule } from '@rxdi/ui-kit';\nimport { ButtonComponent } from '@rxdi/ui-kit/button';\nimport { SpriteComponent } from '@shared/sprite';\n\nimport { AppComponent } from './app.component';\n\n@Module({\n  imports: [CoreModule, ReactiveUiModule.forRoot()],\n  components: [SpriteComponent, CreditCardComponent, ButtonComponent],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Bootstrap } from '@rxdi/core';\n\nimport { AppModule } from './app/app.module';\n\nwindow.addEventListener('load', () => {\n  Bootstrap(AppModule, {\n    init: false,\n  }).subscribe(\n    () => console.log('App Started!'),\n    (err) => console.error(err)\n  );\n});\n\nif (module['hot']) {\n  module['hot'].dispose(() => (document.body.innerHTML = ''));\n}\n"]}